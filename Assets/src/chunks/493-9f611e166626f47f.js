(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[493], {
    2803: function(e, t, O) {
        "use strict";
        O.d(t, {
            oC: function() {
                return Of
            },
            VY: function() {
                return Oc
            },
            ZA: function() {
                return Ou
            },
            ck: function() {
                return Od
            },
            wU: function() {
                return OQ
            },
            __: function() {
                return Op
            },
            Uv: function() {
                return Ol
            },
            Ee: function() {
                return Oh
            },
            Rk: function() {
                return Om
            },
            fC: function() {
                return Oo
            },
            Z0: function() {
                return O$
            },
            Tr: function() {
                return Og
            },
            tu: function() {
                return OS
            },
            fF: function() {
                return OP
            },
            xz: function() {
                return Os
            }
        });
        var n = O(3728)
          , r = O(5526)
          , i = O(5674)
          , a = O(3440)
          , o = O(6301)
          , s = O(3477)
          , l = O(8737)
          , c = O(4444);
        function u(e) {
            let t = e + "CollectionProvider"
              , [O,n] = (0,
            o.b)(t)
              , [i,s] = O(t, {
                collectionRef: {
                    current: null
                },
                itemMap: new Map
            })
              , l = e=>{
                let {scope: t, children: O} = e
                  , n = r.useRef(null)
                  , a = r.useRef(new Map).current;
                return r.createElement(i, {
                    scope: t,
                    itemMap: a,
                    collectionRef: n
                }, O)
            }
              , u = e + "CollectionSlot"
              , p = r.forwardRef((e,t)=>{
                let {scope: O, children: n} = e
                  , i = s(u, O)
                  , o = (0,
                a.e)(t, i.collectionRef);
                return r.createElement(c.g7, {
                    ref: o
                }, n)
            }
            )
              , d = e + "CollectionItemSlot"
              , f = "data-radix-collection-item"
              , h = r.forwardRef((e,t)=>{
                let {scope: O, children: n, ...i} = e
                  , o = r.useRef(null)
                  , l = (0,
                a.e)(t, o)
                  , u = s(d, O);
                return r.useEffect(()=>(u.itemMap.set(o, {
                    ref: o,
                    ...i
                }),
                ()=>void u.itemMap.delete(o))),
                r.createElement(c.g7, {
                    [f]: "",
                    ref: l
                }, n)
            }
            );
            return [{
                Provider: l,
                Slot: p,
                ItemSlot: h
            }, function(t) {
                let O = s(e + "CollectionConsumer", t)
                  , n = r.useCallback(()=>{
                    let e = O.collectionRef.current;
                    if (!e)
                        return [];
                    let t = Array.from(e.querySelectorAll(`[${f}]`))
                      , n = Array.from(O.itemMap.values())
                      , r = n.sort((e,O)=>t.indexOf(e.ref.current) - t.indexOf(O.ref.current));
                    return r
                }
                , [O.collectionRef, O.itemMap]);
                return n
            }
            , n]
        }
        let p = (0,
        r.createContext)(void 0);
        function d(e) {
            let t = (0,
            r.useContext)(p);
            return e || t || "ltr"
        }
        var f = O(8919)
          , h = O(1505)
          , m = O(2939)
          , Q = O(366);
        function $(e) {
            return e.split("-")[0]
        }
        function g(e) {
            return e.split("-")[1]
        }
        function P(e) {
            return ["top", "bottom"].includes($(e)) ? "x" : "y"
        }
        function S(e) {
            return "y" === e ? "height" : "width"
        }
        function b(e, t, O) {
            let n, {reference: r, floating: i} = e, a = r.x + r.width / 2 - i.width / 2, o = r.y + r.height / 2 - i.height / 2, s = P(t), l = S(s), c = r[l] / 2 - i[l] / 2, u = "x" === s;
            switch ($(t)) {
            case "top":
                n = {
                    x: a,
                    y: r.y - i.height
                };
                break;
            case "bottom":
                n = {
                    x: a,
                    y: r.y + r.height
                };
                break;
            case "right":
                n = {
                    x: r.x + r.width,
                    y: o
                };
                break;
            case "left":
                n = {
                    x: r.x - i.width,
                    y: o
                };
                break;
            default:
                n = {
                    x: r.x,
                    y: r.y
                }
            }
            switch (g(t)) {
            case "start":
                n[s] -= c * (O && u ? -1 : 1);
                break;
            case "end":
                n[s] += c * (O && u ? -1 : 1)
            }
            return n
        }
        let y = async(e,t,O)=>{
            let {placement: n="bottom", strategy: r="absolute", middleware: i=[], platform: a} = O
              , o = await (null == a.isRTL ? void 0 : a.isRTL(t))
              , s = await a.getElementRects({
                reference: e,
                floating: t,
                strategy: r
            })
              , {x: l, y: c} = b(s, n, o)
              , u = n
              , p = {}
              , d = 0;
            for (let O = 0; O < i.length; O++) {
                let {name: f, fn: h} = i[O]
                  , {x: m, y: Q, data: $, reset: g} = await h({
                    x: l,
                    y: c,
                    initialPlacement: n,
                    placement: u,
                    strategy: r,
                    middlewareData: p,
                    rects: s,
                    platform: a,
                    elements: {
                        reference: e,
                        floating: t
                    }
                });
                l = null != m ? m : l,
                c = null != Q ? Q : c,
                p = {
                    ...p,
                    [f]: {
                        ...p[f],
                        ...$
                    }
                },
                g && d <= 50 && (d++,
                "object" == typeof g && (g.placement && (u = g.placement),
                g.rects && (s = !0 === g.rects ? await a.getElementRects({
                    reference: e,
                    floating: t,
                    strategy: r
                }) : g.rects),
                {x: l, y: c} = b(s, u, o)),
                O = -1)
            }
            return {
                x: l,
                y: c,
                placement: u,
                strategy: r,
                middlewareData: p
            }
        }
        ;
        function x(e) {
            return "number" != typeof e ? {
                top: 0,
                right: 0,
                bottom: 0,
                left: 0,
                ...e
            } : {
                top: e,
                right: e,
                bottom: e,
                left: e
            }
        }
        function X(e) {
            return {
                ...e,
                top: e.y,
                left: e.x,
                right: e.x + e.width,
                bottom: e.y + e.height
            }
        }
        async function v(e, t) {
            var O;
            void 0 === t && (t = {});
            let {x: n, y: r, platform: i, rects: a, elements: o, strategy: s} = e
              , {boundary: l="clippingAncestors", rootBoundary: c="viewport", elementContext: u="floating", altBoundary: p=!1, padding: d=0} = t
              , f = x(d)
              , h = o[p ? "floating" === u ? "reference" : "floating" : u]
              , m = X(await i.getClippingRect({
                element: null == (O = await (null == i.isElement ? void 0 : i.isElement(h))) || O ? h : h.contextElement || await (null == i.getDocumentElement ? void 0 : i.getDocumentElement(o.floating)),
                boundary: l,
                rootBoundary: c,
                strategy: s
            }))
              , Q = X(i.convertOffsetParentRelativeRectToViewportRelativeRect ? await i.convertOffsetParentRelativeRectToViewportRelativeRect({
                rect: "floating" === u ? {
                    ...a.floating,
                    x: n,
                    y: r
                } : a.reference,
                offsetParent: await (null == i.getOffsetParent ? void 0 : i.getOffsetParent(o.floating)),
                strategy: s
            }) : a[u]);
            return {
                top: m.top - Q.top + f.top,
                bottom: Q.bottom - m.bottom + f.bottom,
                left: m.left - Q.left + f.left,
                right: Q.right - m.right + f.right
            }
        }
        let k = Math.min
          , w = Math.max
          , T = e=>({
            name: "arrow",
            options: e,
            async fn(t) {
                let {element: O, padding: n=0} = null != e ? e : {}
                  , {x: r, y: i, placement: a, rects: o, platform: s} = t;
                if (null == O)
                    return {};
                let l = x(n)
                  , c = {
                    x: r,
                    y: i
                }
                  , u = P(a)
                  , p = g(a)
                  , d = S(u)
                  , f = await s.getDimensions(O)
                  , h = "y" === u ? "top" : "left"
                  , m = "y" === u ? "bottom" : "right"
                  , Q = o.reference[d] + o.reference[u] - c[u] - o.floating[d]
                  , $ = c[u] - o.reference[u]
                  , b = await (null == s.getOffsetParent ? void 0 : s.getOffsetParent(O))
                  , y = b ? "y" === u ? b.clientHeight || 0 : b.clientWidth || 0 : 0;
                0 === y && (y = o.floating[d]);
                let X = l[h]
                  , v = y - f[d] - l[m]
                  , T = y / 2 - f[d] / 2 + (Q / 2 - $ / 2)
                  , _ = w(X, k(T, v))
                  , W = ("start" === p ? l[h] : l[m]) > 0 && T !== _ && o.reference[d] <= o.floating[d];
                return {
                    [u]: c[u] - (W ? T < X ? X - T : v - T : 0),
                    data: {
                        [u]: _,
                        centerOffset: T - _
                    }
                }
            }
        })
          , _ = {
            left: "right",
            right: "left",
            bottom: "top",
            top: "bottom"
        };
        function W(e) {
            return e.replace(/left|right|bottom|top/g, e=>_[e])
        }
        let Z = {
            start: "end",
            end: "start"
        };
        function z(e) {
            return e.replace(/start|end/g, e=>Z[e])
        }
        let q = ["top", "right", "bottom", "left"];
        function Y(e, t) {
            return {
                top: e.top - t.height,
                right: e.right - t.width,
                bottom: e.bottom - t.height,
                left: e.left - t.width
            }
        }
        function R(e) {
            return q.some(t=>e[t] >= 0)
        }
        q.reduce((e,t)=>e.concat(t, t + "-start", t + "-end"), []);
        let U = function(e) {
            let {strategy: t="referenceHidden", ...O} = void 0 === e ? {} : e;
            return {
                name: "hide",
                async fn(e) {
                    let {rects: n} = e;
                    switch (t) {
                    case "referenceHidden":
                        {
                            let t = Y(await v(e, {
                                ...O,
                                elementContext: "reference"
                            }), n.reference);
                            return {
                                data: {
                                    referenceHiddenOffsets: t,
                                    referenceHidden: R(t)
                                }
                            }
                        }
                    case "escaped":
                        {
                            let t = Y(await v(e, {
                                ...O,
                                altBoundary: !0
                            }), n.floating);
                            return {
                                data: {
                                    escapedOffsets: t,
                                    escaped: R(t)
                                }
                            }
                        }
                    default:
                        return {}
                    }
                }
            }
        };
        function V(e) {
            return "x" === e ? "y" : "x"
        }
        function E(e) {
            return e && e.document && e.location && e.alert && e.setInterval
        }
        function j(e) {
            if (null == e)
                return window;
            if (!E(e)) {
                let t = e.ownerDocument;
                return t && t.defaultView || window
            }
            return e
        }
        function G(e) {
            return j(e).getComputedStyle(e)
        }
        function C(e) {
            return E(e) ? "" : e ? (e.nodeName || "").toLowerCase() : ""
        }
        function A() {
            let e = navigator.userAgentData;
            return null != e && e.brands ? e.brands.map(e=>e.brand + "/" + e.version).join(" ") : navigator.userAgent
        }
        function I(e) {
            return e instanceof j(e).HTMLElement
        }
        function J(e) {
            return e instanceof j(e).Element
        }
        function N(e) {
            return "undefined" != typeof ShadowRoot && (e instanceof j(e).ShadowRoot || e instanceof ShadowRoot)
        }
        function D(e) {
            let {overflow: t, overflowX: O, overflowY: n} = G(e);
            return /auto|scroll|overlay|hidden/.test(t + n + O)
        }
        function L(e) {
            let t = /firefox/i.test(A())
              , O = G(e);
            return "none" !== O.transform || "none" !== O.perspective || "paint" === O.contain || ["transform", "perspective"].includes(O.willChange) || t && "filter" === O.willChange || t && !!O.filter && "none" !== O.filter
        }
        function F() {
            return !/^((?!chrome|android).)*safari/i.test(A())
        }
        let M = Math.min
          , B = Math.max
          , H = Math.round;
        function K(e, t, O) {
            var n, r, i, a;
            void 0 === t && (t = !1),
            void 0 === O && (O = !1);
            let o = e.getBoundingClientRect()
              , s = 1
              , l = 1;
            t && I(e) && (s = e.offsetWidth > 0 && H(o.width) / e.offsetWidth || 1,
            l = e.offsetHeight > 0 && H(o.height) / e.offsetHeight || 1);
            let c = J(e) ? j(e) : window
              , u = !F() && O
              , p = (o.left + (u && null != (n = null == (r = c.visualViewport) ? void 0 : r.offsetLeft) ? n : 0)) / s
              , d = (o.top + (u && null != (i = null == (a = c.visualViewport) ? void 0 : a.offsetTop) ? i : 0)) / l
              , f = o.width / s
              , h = o.height / l;
            return {
                width: f,
                height: h,
                top: d,
                right: p + f,
                bottom: d + h,
                left: p,
                x: p,
                y: d
            }
        }
        function ee(e) {
            return ((e instanceof j(e).Node ? e.ownerDocument : e.document) || window.document).documentElement
        }
        function et(e) {
            return J(e) ? {
                scrollLeft: e.scrollLeft,
                scrollTop: e.scrollTop
            } : {
                scrollLeft: e.pageXOffset,
                scrollTop: e.pageYOffset
            }
        }
        function eO(e) {
            return K(ee(e)).left + et(e).scrollLeft
        }
        function en(e) {
            return "html" === C(e) ? e : e.assignedSlot || e.parentNode || (N(e) ? e.host : null) || ee(e)
        }
        function er(e) {
            return I(e) && "fixed" !== getComputedStyle(e).position ? e.offsetParent : null
        }
        function ei(e) {
            let t = j(e)
              , O = er(e);
            for (; O && ["table", "td", "th"].includes(C(O)) && "static" === getComputedStyle(O).position; )
                O = er(O);
            return O && ("html" === C(O) || "body" === C(O) && "static" === getComputedStyle(O).position && !L(O)) ? t : O || function(e) {
                let t = en(e);
                for (N(t) && (t = t.host); I(t) && !["html", "body"].includes(C(t)); ) {
                    if (L(t))
                        return t;
                    t = t.parentNode
                }
                return null
            }(e) || t
        }
        function ea(e) {
            if (I(e))
                return {
                    width: e.offsetWidth,
                    height: e.offsetHeight
                };
            let t = K(e);
            return {
                width: t.width,
                height: t.height
            }
        }
        function eo(e, t) {
            var O;
            void 0 === t && (t = []);
            let n = function e(t) {
                let O = en(t);
                return ["html", "body", "#document"].includes(C(O)) ? t.ownerDocument.body : I(O) && D(O) ? O : e(O)
            }(e)
              , r = n === (null == (O = e.ownerDocument) ? void 0 : O.body)
              , i = j(n)
              , a = r ? [i].concat(i.visualViewport || [], D(n) ? n : []) : n
              , o = t.concat(a);
            return r ? o : o.concat(eo(a))
        }
        function es(e, t, O) {
            return "viewport" === t ? X(function(e, t) {
                let O = j(e)
                  , n = ee(e)
                  , r = O.visualViewport
                  , i = n.clientWidth
                  , a = n.clientHeight
                  , o = 0
                  , s = 0;
                if (r) {
                    i = r.width,
                    a = r.height;
                    let e = F();
                    (e || !e && "fixed" === t) && (o = r.offsetLeft,
                    s = r.offsetTop)
                }
                return {
                    width: i,
                    height: a,
                    x: o,
                    y: s
                }
            }(e, O)) : J(t) ? function(e, t) {
                let O = K(e, !1, "fixed" === t)
                  , n = O.top + e.clientTop
                  , r = O.left + e.clientLeft;
                return {
                    top: n,
                    left: r,
                    x: r,
                    y: n,
                    right: r + e.clientWidth,
                    bottom: n + e.clientHeight,
                    width: e.clientWidth,
                    height: e.clientHeight
                }
            }(t, O) : X(function(e) {
                var t;
                let O = ee(e)
                  , n = et(e)
                  , r = null == (t = e.ownerDocument) ? void 0 : t.body
                  , i = B(O.scrollWidth, O.clientWidth, r ? r.scrollWidth : 0, r ? r.clientWidth : 0)
                  , a = B(O.scrollHeight, O.clientHeight, r ? r.scrollHeight : 0, r ? r.clientHeight : 0)
                  , o = -n.scrollLeft + eO(e)
                  , s = -n.scrollTop;
                return "rtl" === G(r || O).direction && (o += B(O.clientWidth, r ? r.clientWidth : 0) - i),
                {
                    width: i,
                    height: a,
                    x: o,
                    y: s
                }
            }(ee(e)))
        }
        let el = {
            getClippingRect: function(e) {
                let {element: t, boundary: O, rootBoundary: n, strategy: r} = e
                  , i = [..."clippingAncestors" === O ? function(e) {
                    let t = eo(e)
                      , O = ["absolute", "fixed"].includes(G(e).position) && I(e) ? ei(e) : e;
                    return J(O) ? t.filter(e=>J(e) && function(e, t) {
                        let O = null == t.getRootNode ? void 0 : t.getRootNode();
                        if (e.contains(t))
                            return !0;
                        if (O && N(O)) {
                            let O = t;
                            do {
                                if (O && e === O)
                                    return !0;
                                O = O.parentNode || O.host
                            } while (O)
                        }
                        return !1
                    }(e, O) && "body" !== C(e)) : []
                }(t) : [].concat(O), n]
                  , a = i[0]
                  , o = i.reduce((e,O)=>{
                    let n = es(t, O, r);
                    return e.top = B(n.top, e.top),
                    e.right = M(n.right, e.right),
                    e.bottom = M(n.bottom, e.bottom),
                    e.left = B(n.left, e.left),
                    e
                }
                , es(t, a, r));
                return {
                    width: o.right - o.left,
                    height: o.bottom - o.top,
                    x: o.left,
                    y: o.top
                }
            },
            convertOffsetParentRelativeRectToViewportRelativeRect: function(e) {
                let {rect: t, offsetParent: O, strategy: n} = e
                  , r = I(O)
                  , i = ee(O);
                if (O === i)
                    return t;
                let a = {
                    scrollLeft: 0,
                    scrollTop: 0
                }
                  , o = {
                    x: 0,
                    y: 0
                };
                if ((r || !r && "fixed" !== n) && (("body" !== C(O) || D(i)) && (a = et(O)),
                I(O))) {
                    let e = K(O, !0);
                    o.x = e.x + O.clientLeft,
                    o.y = e.y + O.clientTop
                }
                return {
                    ...t,
                    x: t.x - a.scrollLeft + o.x,
                    y: t.y - a.scrollTop + o.y
                }
            },
            isElement: J,
            getDimensions: ea,
            getOffsetParent: ei,
            getDocumentElement: ee,
            getElementRects: e=>{
                let {reference: t, floating: O, strategy: n} = e;
                return {
                    reference: function(e, t, O) {
                        let n = I(t)
                          , r = ee(t)
                          , i = K(e, n && function(e) {
                            let t = K(e);
                            return H(t.width) !== e.offsetWidth || H(t.height) !== e.offsetHeight
                        }(t), "fixed" === O)
                          , a = {
                            scrollLeft: 0,
                            scrollTop: 0
                        }
                          , o = {
                            x: 0,
                            y: 0
                        };
                        if (n || !n && "fixed" !== O) {
                            if (("body" !== C(t) || D(r)) && (a = et(t)),
                            I(t)) {
                                let e = K(t, !0);
                                o.x = e.x + t.clientLeft,
                                o.y = e.y + t.clientTop
                            } else
                                r && (o.x = eO(r))
                        }
                        return {
                            x: i.left + a.scrollLeft - o.x,
                            y: i.top + a.scrollTop - o.y,
                            width: i.width,
                            height: i.height
                        }
                    }(t, ei(O), n),
                    floating: {
                        ...ea(O),
                        x: 0,
                        y: 0
                    }
                }
            }
            ,
            getClientRects: e=>Array.from(e.getClientRects()),
            isRTL: e=>"rtl" === G(e).direction
        };
        function ec(e, t, O, n) {
            void 0 === n && (n = {});
            let {ancestorScroll: r=!0, ancestorResize: i=!0, elementResize: a=!0, animationFrame: o=!1} = n
              , s = r && !o
              , l = i && !o
              , c = s || l ? [...J(e) ? eo(e) : [], ...eo(t)] : [];
            c.forEach(e=>{
                s && e.addEventListener("scroll", O, {
                    passive: !0
                }),
                l && e.addEventListener("resize", O)
            }
            );
            let u, p = null;
            if (a) {
                let n = !0;
                p = new ResizeObserver(()=>{
                    n || O(),
                    n = !1
                }
                ),
                J(e) && !o && p.observe(e),
                p.observe(t)
            }
            let d = o ? K(e) : null;
            return o && function t() {
                let n = K(e);
                d && (n.x !== d.x || n.y !== d.y || n.width !== d.width || n.height !== d.height) && O(),
                d = n,
                u = requestAnimationFrame(t)
            }(),
            O(),
            ()=>{
                var e;
                c.forEach(e=>{
                    s && e.removeEventListener("scroll", O),
                    l && e.removeEventListener("resize", O)
                }
                ),
                null == (e = p) || e.disconnect(),
                p = null,
                o && cancelAnimationFrame(u)
            }
        }
        let eu = (e,t,O)=>y(e, t, {
            platform: el,
            ...O
        });
        var ep = O(2591)
          , ed = "undefined" != typeof document ? r.useLayoutEffect : r.useEffect;
        let ef = e=>{
            let {element: t, padding: O} = e;
            return {
                name: "arrow",
                options: e,
                fn(e) {
                    if (Object.prototype.hasOwnProperty.call(t, "current")) {
                        if (null != t.current)
                            return T({
                                element: t.current,
                                padding: O
                            }).fn(e)
                    } else if (t)
                        return T({
                            element: t,
                            padding: O
                        }).fn(e);
                    return {}
                }
            }
        }
          , eh = (0,
        r.forwardRef)((e,t)=>{
            let {children: O, width: i=10, height: a=5, ...o} = e;
            return (0,
            r.createElement)(l.WV.svg, (0,
            n.Z)({}, o, {
                ref: t,
                width: i,
                height: a,
                viewBox: "0 0 30 10",
                preserveAspectRatio: "none"
            }), e.asChild ? O : (0,
            r.createElement)("polygon", {
                points: "0,0 30,0 15,10"
            }))
        }
        );
        var em = O(797)
          , eQ = O(493);
        let e$ = "Popper"
          , [eg,eP] = (0,
        o.b)(e$)
          , [eS,eb] = eg(e$)
          , ey = e=>{
            let {__scopePopper: t, children: O} = e
              , [n,i] = (0,
            r.useState)(null);
            return (0,
            r.createElement)(eS, {
                scope: t,
                anchor: n,
                onAnchorChange: i
            }, O)
        }
          , ex = (0,
        r.forwardRef)((e,t)=>{
            let {__scopePopper: O, virtualRef: i, ...o} = e
              , s = eb("PopperAnchor", O)
              , c = (0,
            r.useRef)(null)
              , u = (0,
            a.e)(t, c);
            return (0,
            r.useEffect)(()=>{
                s.onAnchorChange((null == i ? void 0 : i.current) || c.current)
            }
            ),
            i ? null : (0,
            r.createElement)(l.WV.div, (0,
            n.Z)({}, o, {
                ref: u
            }))
        }
        )
          , eX = "PopperContent"
          , [ev,ek] = eg(eX)
          , [ew,eT] = eg(eX, {
            hasParent: !1,
            positionUpdateFns: new Set
        })
          , e_ = (0,
        r.forwardRef)((e,t)=>{
            var O, n, i, o, s, c, u, p, d, f, h, m, Q;
            let {__scopePopper: b, side: y="bottom", sideOffset: x=0, align: X="center", alignOffset: T=0, arrowPadding: _=0, collisionBoundary: Z=[], collisionPadding: q=0, sticky: Y="partial", hideWhenDetached: R=!1, avoidCollisions: E=!0, onPlaced: j, ...G} = e
              , C = eb(eX, b)
              , [A,I] = (0,
            r.useState)(null)
              , J = (0,
            a.e)(t, e=>I(e))
              , [N,D] = (0,
            r.useState)(null)
              , L = function(e) {
                let[t,O] = (0,
                r.useState)(void 0);
                return (0,
                eQ.b)(()=>{
                    if (e) {
                        O({
                            width: e.offsetWidth,
                            height: e.offsetHeight
                        });
                        let t = new ResizeObserver(t=>{
                            let n, r;
                            if (!Array.isArray(t) || !t.length)
                                return;
                            let i = t[0];
                            if ("borderBoxSize"in i) {
                                let e = i.borderBoxSize
                                  , t = Array.isArray(e) ? e[0] : e;
                                n = t.inlineSize,
                                r = t.blockSize
                            } else
                                n = e.offsetWidth,
                                r = e.offsetHeight;
                            O({
                                width: n,
                                height: r
                            })
                        }
                        );
                        return t.observe(e, {
                            box: "border-box"
                        }),
                        ()=>t.unobserve(e)
                    }
                    O(void 0)
                }
                , [e]),
                t
            }(N)
              , F = null !== (O = null == L ? void 0 : L.width) && void 0 !== O ? O : 0
              , M = null !== (n = null == L ? void 0 : L.height) && void 0 !== n ? n : 0
              , B = "number" == typeof q ? q : {
                top: 0,
                right: 0,
                bottom: 0,
                left: 0,
                ...q
            }
              , H = Array.isArray(Z) ? Z : [Z]
              , K = H.length > 0
              , ee = {
                padding: B,
                boundary: H.filter(eq),
                altBoundary: K
            }
              , {reference: et, floating: eO, strategy: en, x: er, y: ei, placement: ea, middlewareData: eo, update: es} = function(e) {
                let {middleware: t, placement: O="bottom", strategy: n="absolute", whileElementsMounted: i} = void 0 === e ? {} : e
                  , a = r.useRef(null)
                  , o = r.useRef(null)
                  , s = function(e) {
                    let t = r.useRef(e);
                    return ed(()=>{
                        t.current = e
                    }
                    ),
                    t
                }(i)
                  , l = r.useRef(null)
                  , [c,u] = r.useState({
                    x: null,
                    y: null,
                    strategy: n,
                    placement: O,
                    middlewareData: {}
                })
                  , [p,d] = r.useState(t);
                !function e(t, O) {
                    let n, r, i;
                    if (t === O)
                        return !0;
                    if (typeof t != typeof O)
                        return !1;
                    if ("function" == typeof t && t.toString() === O.toString())
                        return !0;
                    if (t && O && "object" == typeof t) {
                        if (Array.isArray(t)) {
                            if ((n = t.length) != O.length)
                                return !1;
                            for (r = n; 0 != r--; )
                                if (!e(t[r], O[r]))
                                    return !1;
                            return !0
                        }
                        if ((n = (i = Object.keys(t)).length) !== Object.keys(O).length)
                            return !1;
                        for (r = n; 0 != r--; )
                            if (!Object.prototype.hasOwnProperty.call(O, i[r]))
                                return !1;
                        for (r = n; 0 != r--; ) {
                            let n = i[r];
                            if (("_owner" !== n || !t.$$typeof) && !e(t[n], O[n]))
                                return !1
                        }
                        return !0
                    }
                    return t != t && O != O
                }(null == p ? void 0 : p.map(e=>{
                    let {options: t} = e;
                    return t
                }
                ), null == t ? void 0 : t.map(e=>{
                    let {options: t} = e;
                    return t
                }
                )) && d(t);
                let f = r.useCallback(()=>{
                    a.current && o.current && eu(a.current, o.current, {
                        middleware: p,
                        placement: O,
                        strategy: n
                    }).then(e=>{
                        h.current && ep.flushSync(()=>{
                            u(e)
                        }
                        )
                    }
                    )
                }
                , [p, O, n]);
                ed(()=>{
                    h.current && f()
                }
                , [f]);
                let h = r.useRef(!1);
                ed(()=>(h.current = !0,
                ()=>{
                    h.current = !1
                }
                ), []);
                let m = r.useCallback(()=>{
                    if ("function" == typeof l.current && (l.current(),
                    l.current = null),
                    a.current && o.current) {
                        if (s.current) {
                            let e = s.current(a.current, o.current, f);
                            l.current = e
                        } else
                            f()
                    }
                }
                , [f, s])
                  , Q = r.useCallback(e=>{
                    a.current = e,
                    m()
                }
                , [m])
                  , $ = r.useCallback(e=>{
                    o.current = e,
                    m()
                }
                , [m])
                  , g = r.useMemo(()=>({
                    reference: a,
                    floating: o
                }), []);
                return r.useMemo(()=>({
                    ...c,
                    update: f,
                    refs: g,
                    reference: Q,
                    floating: $
                }), [c, f, g, Q, $])
            }({
                strategy: "fixed",
                placement: y + ("center" !== X ? "-" + X : ""),
                whileElementsMounted: ec,
                middleware: [eY(), {
                    name: "offset",
                    options: d = {
                        mainAxis: x + M,
                        alignmentAxis: T
                    },
                    async fn(e) {
                        let {x: t, y: O} = e
                          , n = await async function(e, t) {
                            let {placement: O, platform: n, elements: r} = e
                              , i = await (null == n.isRTL ? void 0 : n.isRTL(r.floating))
                              , a = $(O)
                              , o = g(O)
                              , s = "x" === P(O)
                              , l = ["left", "top"].includes(a) ? -1 : 1
                              , c = i && s ? -1 : 1
                              , u = "function" == typeof t ? t(e) : t
                              , {mainAxis: p, crossAxis: d, alignmentAxis: f} = "number" == typeof u ? {
                                mainAxis: u,
                                crossAxis: 0,
                                alignmentAxis: null
                            } : {
                                mainAxis: 0,
                                crossAxis: 0,
                                alignmentAxis: null,
                                ...u
                            };
                            return o && "number" == typeof f && (d = "end" === o ? -1 * f : f),
                            s ? {
                                x: d * c,
                                y: p * l
                            } : {
                                x: p * l,
                                y: d * c
                            }
                        }(e, d);
                        return {
                            x: t + n.x,
                            y: O + n.y,
                            data: n
                        }
                    }
                }, E ? {
                    name: "shift",
                    options: h = {
                        mainAxis: !0,
                        crossAxis: !1,
                        limiter: "partial" === Y ? (void 0 === f && (f = {}),
                        {
                            options: f,
                            fn(e) {
                                let {x: t, y: O, placement: n, rects: r, middlewareData: i} = e
                                  , {offset: a=0, mainAxis: o=!0, crossAxis: s=!0} = f
                                  , l = {
                                    x: t,
                                    y: O
                                }
                                  , c = P(n)
                                  , u = V(c)
                                  , p = l[c]
                                  , d = l[u]
                                  , h = "function" == typeof a ? a({
                                    ...r,
                                    placement: n
                                }) : a
                                  , m = "number" == typeof h ? {
                                    mainAxis: h,
                                    crossAxis: 0
                                } : {
                                    mainAxis: 0,
                                    crossAxis: 0,
                                    ...h
                                };
                                if (o) {
                                    let e = "y" === c ? "height" : "width"
                                      , t = r.reference[c] - r.floating[e] + m.mainAxis
                                      , O = r.reference[c] + r.reference[e] - m.mainAxis;
                                    p < t ? p = t : p > O && (p = O)
                                }
                                if (s) {
                                    var Q, g, S, b;
                                    let e = "y" === c ? "width" : "height"
                                      , t = ["top", "left"].includes($(n))
                                      , O = r.reference[u] - r.floating[e] + (t && null != (Q = null == (g = i.offset) ? void 0 : g[u]) ? Q : 0) + (t ? 0 : m.crossAxis)
                                      , a = r.reference[u] + r.reference[e] + (t ? 0 : null != (S = null == (b = i.offset) ? void 0 : b[u]) ? S : 0) - (t ? m.crossAxis : 0);
                                    d < O ? d = O : d > a && (d = a)
                                }
                                return {
                                    [c]: p,
                                    [u]: d
                                }
                            }
                        }) : void 0,
                        ...ee
                    },
                    async fn(e) {
                        let {x: t, y: O, placement: n} = e
                          , {mainAxis: r=!0, crossAxis: i=!1, limiter: a={
                            fn: e=>{
                                let {x: t, y: O} = e;
                                return {
                                    x: t,
                                    y: O
                                }
                            }
                        }, ...o} = h
                          , s = {
                            x: t,
                            y: O
                        }
                          , l = await v(e, o)
                          , c = P($(n))
                          , u = V(c)
                          , p = s[c]
                          , d = s[u];
                        r && (p = w(p + l["y" === c ? "top" : "left"], k(p, p - l["y" === c ? "bottom" : "right"]))),
                        i && (d = w(d + l["y" === u ? "top" : "left"], k(d, d - l["y" === u ? "bottom" : "right"])));
                        let f = a.fn({
                            ...e,
                            [c]: p,
                            [u]: d
                        });
                        return {
                            ...f,
                            data: {
                                x: f.x - t,
                                y: f.y - O
                            }
                        }
                    }
                } : void 0, N ? ef({
                    element: N,
                    padding: _
                }) : void 0, E ? {
                    name: "flip",
                    options: m = {
                        ...ee
                    },
                    async fn(e) {
                        var t, O, n, r;
                        let {placement: i, middlewareData: a, rects: o, initialPlacement: s, platform: l, elements: c} = e
                          , {mainAxis: u=!0, crossAxis: p=!0, fallbackPlacements: d, fallbackStrategy: f="bestFit", flipAlignment: h=!0, ...Q} = m
                          , b = $(i)
                          , y = d || (b !== s && h ? function(e) {
                            let t = W(e);
                            return [z(e), t, z(t)]
                        }(s) : [W(s)])
                          , x = [s, ...y]
                          , X = await v(e, Q)
                          , k = []
                          , w = (null == (t = a.flip) ? void 0 : t.overflows) || [];
                        if (u && k.push(X[b]),
                        p) {
                            let {main: e, cross: t} = function(e, t, O) {
                                void 0 === O && (O = !1);
                                let n = g(e)
                                  , r = P(e)
                                  , i = S(r)
                                  , a = "x" === r ? n === (O ? "end" : "start") ? "right" : "left" : "start" === n ? "bottom" : "top";
                                return t.reference[i] > t.floating[i] && (a = W(a)),
                                {
                                    main: a,
                                    cross: W(a)
                                }
                            }(i, o, await (null == l.isRTL ? void 0 : l.isRTL(c.floating)));
                            k.push(X[e], X[t])
                        }
                        if (w = [...w, {
                            placement: i,
                            overflows: k
                        }],
                        !k.every(e=>e <= 0)) {
                            let e = (null != (O = null == (n = a.flip) ? void 0 : n.index) ? O : 0) + 1
                              , t = x[e];
                            if (t)
                                return {
                                    data: {
                                        index: e,
                                        overflows: w
                                    },
                                    reset: {
                                        placement: t
                                    }
                                };
                            let o = "bottom";
                            switch (f) {
                            case "bestFit":
                                {
                                    let e = null == (r = w.map(e=>[e, e.overflows.filter(e=>e > 0).reduce((e,t)=>e + t, 0)]).sort((e,t)=>e[1] - t[1])[0]) ? void 0 : r[0].placement;
                                    e && (o = e);
                                    break
                                }
                            case "initialPlacement":
                                o = s
                            }
                            if (i !== o)
                                return {
                                    reset: {
                                        placement: o
                                    }
                                }
                        }
                        return {}
                    }
                } : void 0, {
                    name: "size",
                    options: Q = {
                        ...ee,
                        apply: ({elements: e, availableWidth: t, availableHeight: O})=>{
                            e.floating.style.setProperty("--radix-popper-available-width", `${t}px`),
                            e.floating.style.setProperty("--radix-popper-available-height", `${O}px`)
                        }
                    },
                    async fn(e) {
                        let t, O;
                        let {placement: n, rects: r, platform: i, elements: a} = e
                          , {apply: o, ...s} = Q
                          , l = await v(e, s)
                          , c = $(n)
                          , u = g(n);
                        "top" === c || "bottom" === c ? (t = c,
                        O = u === (await (null == i.isRTL ? void 0 : i.isRTL(a.floating)) ? "start" : "end") ? "left" : "right") : (O = c,
                        t = "end" === u ? "top" : "bottom");
                        let p = w(l.left, 0)
                          , d = w(l.right, 0)
                          , f = w(l.top, 0)
                          , h = w(l.bottom, 0)
                          , m = {
                            availableHeight: r.floating.height - (["left", "right"].includes(n) ? 2 * (0 !== f || 0 !== h ? f + h : w(l.top, l.bottom)) : l[t]),
                            availableWidth: r.floating.width - (["top", "bottom"].includes(n) ? 2 * (0 !== p || 0 !== d ? p + d : w(l.left, l.right)) : l[O])
                        }
                          , P = await i.getDimensions(a.floating);
                        null == o || o({
                            ...e,
                            ...m
                        });
                        let S = await i.getDimensions(a.floating);
                        return P.width !== S.width || P.height !== S.height ? {
                            reset: {
                                rects: !0
                            }
                        } : {}
                    }
                }, eR({
                    arrowWidth: F,
                    arrowHeight: M
                }), R ? U({
                    strategy: "referenceHidden"
                }) : void 0].filter(ez)
            });
            (0,
            eQ.b)(()=>{
                et(C.anchor)
            }
            , [et, C.anchor]);
            let el = null !== er && null !== ei
              , [eh,e$] = eU(ea)
              , eg = (0,
            em.W)(j);
            (0,
            eQ.b)(()=>{
                el && (null == eg || eg())
            }
            , [el, eg]);
            let eP = null === (i = eo.arrow) || void 0 === i ? void 0 : i.x
              , eS = null === (o = eo.arrow) || void 0 === o ? void 0 : o.y
              , ey = (null === (s = eo.arrow) || void 0 === s ? void 0 : s.centerOffset) !== 0
              , [ex,ek] = (0,
            r.useState)();
            (0,
            eQ.b)(()=>{
                A && ek(window.getComputedStyle(A).zIndex)
            }
            , [A]);
            let {hasParent: e_, positionUpdateFns: eW} = eT(eX, b)
              , eZ = !e_;
            (0,
            r.useLayoutEffect)(()=>{
                if (!eZ)
                    return eW.add(es),
                    ()=>{
                        eW.delete(es)
                    }
            }
            , [eZ, eW, es]),
            (0,
            eQ.b)(()=>{
                eZ && el && Array.from(eW).reverse().forEach(e=>requestAnimationFrame(e))
            }
            , [eZ, el, eW]);
            let eV = {
                "data-side": eh,
                "data-align": e$,
                ...G,
                ref: J,
                style: {
                    ...G.style,
                    animation: el ? void 0 : "none",
                    opacity: null !== (c = eo.hide) && void 0 !== c && c.referenceHidden ? 0 : void 0
                }
            };
            return (0,
            r.createElement)("div", {
                ref: eO,
                "data-radix-popper-content-wrapper": "",
                style: {
                    position: en,
                    left: 0,
                    top: 0,
                    transform: el ? `translate3d(${Math.round(er)}px, ${Math.round(ei)}px, 0)` : "translate3d(0, -200%, 0)",
                    minWidth: "max-content",
                    zIndex: ex,
                    "--radix-popper-transform-origin": [null === (u = eo.transformOrigin) || void 0 === u ? void 0 : u.x, null === (p = eo.transformOrigin) || void 0 === p ? void 0 : p.y].join(" ")
                },
                dir: e.dir
            }, (0,
            r.createElement)(ev, {
                scope: b,
                placedSide: eh,
                onArrowChange: D,
                arrowX: eP,
                arrowY: eS,
                shouldHideArrow: ey
            }, eZ ? (0,
            r.createElement)(ew, {
                scope: b,
                hasParent: !0,
                positionUpdateFns: eW
            }, (0,
            r.createElement)(l.WV.div, eV)) : (0,
            r.createElement)(l.WV.div, eV)))
        }
        )
          , eW = {
            top: "bottom",
            right: "left",
            bottom: "top",
            left: "right"
        }
          , eZ = (0,
        r.forwardRef)(function(e, t) {
            let {__scopePopper: O, ...i} = e
              , a = ek("PopperArrow", O)
              , o = eW[a.placedSide];
            return (0,
            r.createElement)("span", {
                ref: a.onArrowChange,
                style: {
                    position: "absolute",
                    left: a.arrowX,
                    top: a.arrowY,
                    [o]: 0,
                    transformOrigin: {
                        top: "",
                        right: "0 0",
                        bottom: "center 0",
                        left: "100% 0"
                    }[a.placedSide],
                    transform: {
                        top: "translateY(100%)",
                        right: "translateY(50%) rotate(90deg) translateX(-50%)",
                        bottom: "rotate(180deg)",
                        left: "translateY(50%) rotate(-90deg) translateX(50%)"
                    }[a.placedSide],
                    visibility: a.shouldHideArrow ? "hidden" : void 0
                }
            }, (0,
            r.createElement)(eh, (0,
            n.Z)({}, i, {
                ref: t,
                style: {
                    ...i.style,
                    display: "block"
                }
            })))
        });
        function ez(e) {
            return void 0 !== e
        }
        function eq(e) {
            return null !== e
        }
        let eY = ()=>({
            name: "anchorCssProperties",
            fn(e) {
                let {rects: t, elements: O} = e
                  , {width: n, height: r} = t.reference;
                return O.floating.style.setProperty("--radix-popper-anchor-width", `${n}px`),
                O.floating.style.setProperty("--radix-popper-anchor-height", `${r}px`),
                {}
            }
        })
          , eR = e=>({
            name: "transformOrigin",
            options: e,
            fn(t) {
                var O, n, r, i, a;
                let {placement: o, rects: s, middlewareData: l} = t
                  , c = (null === (O = l.arrow) || void 0 === O ? void 0 : O.centerOffset) !== 0
                  , u = c ? 0 : e.arrowWidth
                  , p = c ? 0 : e.arrowHeight
                  , [d,f] = eU(o)
                  , h = {
                    start: "0%",
                    center: "50%",
                    end: "100%"
                }[f]
                  , m = (null !== (n = null === (r = l.arrow) || void 0 === r ? void 0 : r.x) && void 0 !== n ? n : 0) + u / 2
                  , Q = (null !== (i = null === (a = l.arrow) || void 0 === a ? void 0 : a.y) && void 0 !== i ? i : 0) + p / 2
                  , $ = ""
                  , g = "";
                return "bottom" === d ? ($ = c ? h : `${m}px`,
                g = `${-p}px`) : "top" === d ? ($ = c ? h : `${m}px`,
                g = `${s.floating.height + p}px`) : "right" === d ? ($ = `${-p}px`,
                g = c ? h : `${Q}px`) : "left" === d && ($ = `${s.floating.width + p}px`,
                g = c ? h : `${Q}px`),
                {
                    data: {
                        x: $,
                        y: g
                    }
                }
            }
        });
        function eU(e) {
            let[t,O="center"] = e.split("-");
            return [t, O]
        }
        var eV = O(9859)
          , eE = O(3619);
        let ej = "rovingFocusGroup.onEntryFocus"
          , eG = {
            bubbles: !1,
            cancelable: !0
        }
          , eC = "RovingFocusGroup"
          , [eA,eI,eJ] = u(eC)
          , [eN,eD] = (0,
        o.b)(eC, [eJ])
          , [eL,eF] = eN(eC)
          , eM = (0,
        r.forwardRef)((e,t)=>(0,
        r.createElement)(eA.Provider, {
            scope: e.__scopeRovingFocusGroup
        }, (0,
        r.createElement)(eA.Slot, {
            scope: e.__scopeRovingFocusGroup
        }, (0,
        r.createElement)(eB, (0,
        n.Z)({}, e, {
            ref: t
        })))))
          , eB = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeRovingFocusGroup: O, orientation: o, loop: c=!1, dir: u, currentTabStopId: p, defaultCurrentTabStopId: f, onCurrentTabStopIdChange: h, onEntryFocus: m, ...Q} = e
              , $ = (0,
            r.useRef)(null)
              , g = (0,
            a.e)(t, $)
              , P = d(u)
              , [S=null,b] = (0,
            s.T)({
                prop: p,
                defaultProp: f,
                onChange: h
            })
              , [y,x] = (0,
            r.useState)(!1)
              , X = (0,
            em.W)(m)
              , v = eI(O)
              , k = (0,
            r.useRef)(!1)
              , [w,T] = (0,
            r.useState)(0);
            return (0,
            r.useEffect)(()=>{
                let e = $.current;
                if (e)
                    return e.addEventListener(ej, X),
                    ()=>e.removeEventListener(ej, X)
            }
            , [X]),
            (0,
            r.createElement)(eL, {
                scope: O,
                orientation: o,
                dir: P,
                loop: c,
                currentTabStopId: S,
                onItemFocus: (0,
                r.useCallback)(e=>b(e), [b]),
                onItemShiftTab: (0,
                r.useCallback)(()=>x(!0), []),
                onFocusableItemAdd: (0,
                r.useCallback)(()=>T(e=>e + 1), []),
                onFocusableItemRemove: (0,
                r.useCallback)(()=>T(e=>e - 1), [])
            }, (0,
            r.createElement)(l.WV.div, (0,
            n.Z)({
                tabIndex: y || 0 === w ? -1 : 0,
                "data-orientation": o
            }, Q, {
                ref: g,
                style: {
                    outline: "none",
                    ...e.style
                },
                onMouseDown: (0,
                i.M)(e.onMouseDown, ()=>{
                    k.current = !0
                }
                ),
                onFocus: (0,
                i.M)(e.onFocus, e=>{
                    let t = !k.current;
                    if (e.target === e.currentTarget && t && !y) {
                        let t = new CustomEvent(ej,eG);
                        if (e.currentTarget.dispatchEvent(t),
                        !t.defaultPrevented) {
                            let e = v().filter(e=>e.focusable)
                              , t = e.find(e=>e.active)
                              , O = e.find(e=>e.id === S)
                              , n = [t, O, ...e].filter(Boolean)
                              , r = n.map(e=>e.ref.current);
                            e1(r)
                        }
                    }
                    k.current = !1
                }
                ),
                onBlur: (0,
                i.M)(e.onBlur, ()=>x(!1))
            })))
        }
        )
          , eH = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeRovingFocusGroup: O, focusable: a=!0, active: o=!1, tabStopId: s, ...c} = e
              , u = (0,
            Q.M)()
              , p = s || u
              , d = eF("RovingFocusGroupItem", O)
              , f = d.currentTabStopId === p
              , h = eI(O)
              , {onFocusableItemAdd: m, onFocusableItemRemove: $} = d;
            return (0,
            r.useEffect)(()=>{
                if (a)
                    return m(),
                    ()=>$()
            }
            , [a, m, $]),
            (0,
            r.createElement)(eA.ItemSlot, {
                scope: O,
                id: p,
                focusable: a,
                active: o
            }, (0,
            r.createElement)(l.WV.span, (0,
            n.Z)({
                tabIndex: f ? 0 : -1,
                "data-orientation": d.orientation
            }, c, {
                ref: t,
                onMouseDown: (0,
                i.M)(e.onMouseDown, e=>{
                    a ? d.onItemFocus(p) : e.preventDefault()
                }
                ),
                onFocus: (0,
                i.M)(e.onFocus, ()=>d.onItemFocus(p)),
                onKeyDown: (0,
                i.M)(e.onKeyDown, e=>{
                    if ("Tab" === e.key && e.shiftKey) {
                        d.onItemShiftTab();
                        return
                    }
                    if (e.target !== e.currentTarget)
                        return;
                    let t = function(e, t, O) {
                        var n;
                        let r = (n = e.key,
                        "rtl" !== O ? n : "ArrowLeft" === n ? "ArrowRight" : "ArrowRight" === n ? "ArrowLeft" : n);
                        if (!("vertical" === t && ["ArrowLeft", "ArrowRight"].includes(r)) && !("horizontal" === t && ["ArrowUp", "ArrowDown"].includes(r)))
                            return eK[r]
                    }(e, d.orientation, d.dir);
                    if (void 0 !== t) {
                        e.preventDefault();
                        let r = h().filter(e=>e.focusable)
                          , i = r.map(e=>e.ref.current);
                        if ("last" === t)
                            i.reverse();
                        else if ("prev" === t || "next" === t) {
                            var O, n;
                            "prev" === t && i.reverse();
                            let r = i.indexOf(e.currentTarget);
                            i = d.loop ? (O = i,
                            n = r + 1,
                            O.map((e,t)=>O[(n + t) % O.length])) : i.slice(r + 1)
                        }
                        setTimeout(()=>e1(i))
                    }
                }
                )
            })))
        }
        )
          , eK = {
            ArrowLeft: "prev",
            ArrowUp: "prev",
            ArrowRight: "next",
            ArrowDown: "next",
            PageUp: "first",
            Home: "first",
            PageDown: "last",
            End: "last"
        };
        function e1(e) {
            let t = document.activeElement;
            for (let O of e)
                if (O === t || (O.focus(),
                document.activeElement !== t))
                    return
        }
        var e0 = O(6530)
          , e5 = O(7285);
        let e2 = ["Enter", " "]
          , e9 = ["ArrowUp", "PageDown", "End"]
          , e4 = ["ArrowDown", "PageUp", "Home", ...e9]
          , e6 = {
            ltr: [...e2, "ArrowRight"],
            rtl: [...e2, "ArrowLeft"]
        }
          , e7 = {
            ltr: ["ArrowLeft"],
            rtl: ["ArrowRight"]
        }
          , e3 = "Menu"
          , [e8,te,tt] = u(e3)
          , [tO,tn] = (0,
        o.b)(e3, [tt, eP, eD])
          , tr = eP()
          , ti = eD()
          , [ta,to] = tO(e3)
          , [ts,tl] = tO(e3)
          , tc = e=>{
            let {__scopeMenu: t, open: O=!1, children: n, dir: i, onOpenChange: a, modal: o=!0} = e
              , s = tr(t)
              , [l,c] = (0,
            r.useState)(null)
              , u = (0,
            r.useRef)(!1)
              , p = (0,
            em.W)(a)
              , f = d(i);
            return (0,
            r.useEffect)(()=>{
                let e = ()=>{
                    u.current = !0,
                    document.addEventListener("pointerdown", t, {
                        capture: !0,
                        once: !0
                    }),
                    document.addEventListener("pointermove", t, {
                        capture: !0,
                        once: !0
                    })
                }
                  , t = ()=>u.current = !1;
                return document.addEventListener("keydown", e, {
                    capture: !0
                }),
                ()=>{
                    document.removeEventListener("keydown", e, {
                        capture: !0
                    }),
                    document.removeEventListener("pointerdown", t, {
                        capture: !0
                    }),
                    document.removeEventListener("pointermove", t, {
                        capture: !0
                    })
                }
            }
            , []),
            (0,
            r.createElement)(ey, s, (0,
            r.createElement)(ta, {
                scope: t,
                open: O,
                onOpenChange: p,
                content: l,
                onContentChange: c
            }, (0,
            r.createElement)(ts, {
                scope: t,
                onClose: (0,
                r.useCallback)(()=>p(!1), [p]),
                isUsingKeyboardRef: u,
                dir: f,
                modal: o
            }, n)))
        }
          , tu = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeMenu: O, ...i} = e
              , a = tr(O);
            return (0,
            r.createElement)(ex, (0,
            n.Z)({}, a, i, {
                ref: t
            }))
        }
        )
          , tp = "MenuPortal"
          , [td,tf] = tO(tp, {
            forceMount: void 0
        })
          , th = e=>{
            let {__scopeMenu: t, forceMount: O, children: n, container: i} = e
              , a = to(tp, t);
            return (0,
            r.createElement)(td, {
                scope: t,
                forceMount: O
            }, (0,
            r.createElement)(eE.z, {
                present: O || a.open
            }, (0,
            r.createElement)(eV.h, {
                asChild: !0,
                container: i
            }, n)))
        }
          , tm = "MenuContent"
          , [tQ,t$] = tO(tm)
          , tg = (0,
        r.forwardRef)((e,t)=>{
            let O = tf(tm, e.__scopeMenu)
              , {forceMount: i=O.forceMount, ...a} = e
              , o = to(tm, e.__scopeMenu)
              , s = tl(tm, e.__scopeMenu);
            return (0,
            r.createElement)(e8.Provider, {
                scope: e.__scopeMenu
            }, (0,
            r.createElement)(eE.z, {
                present: i || o.open
            }, (0,
            r.createElement)(e8.Slot, {
                scope: e.__scopeMenu
            }, s.modal ? (0,
            r.createElement)(tP, (0,
            n.Z)({}, a, {
                ref: t
            })) : (0,
            r.createElement)(tS, (0,
            n.Z)({}, a, {
                ref: t
            })))))
        }
        )
          , tP = (0,
        r.forwardRef)((e,t)=>{
            let O = to(tm, e.__scopeMenu)
              , o = (0,
            r.useRef)(null)
              , s = (0,
            a.e)(t, o);
            return (0,
            r.useEffect)(()=>{
                let e = o.current;
                if (e)
                    return (0,
                    e0.Ry)(e)
            }
            , []),
            (0,
            r.createElement)(tb, (0,
            n.Z)({}, e, {
                ref: s,
                trapFocus: O.open,
                disableOutsidePointerEvents: O.open,
                disableOutsideScroll: !0,
                onFocusOutside: (0,
                i.M)(e.onFocusOutside, e=>e.preventDefault(), {
                    checkForDefaultPrevented: !1
                }),
                onDismiss: ()=>O.onOpenChange(!1)
            }))
        }
        )
          , tS = (0,
        r.forwardRef)((e,t)=>{
            let O = to(tm, e.__scopeMenu);
            return (0,
            r.createElement)(tb, (0,
            n.Z)({}, e, {
                ref: t,
                trapFocus: !1,
                disableOutsidePointerEvents: !1,
                disableOutsideScroll: !1,
                onDismiss: ()=>O.onOpenChange(!1)
            }))
        }
        )
          , tb = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeMenu: O, loop: o=!1, trapFocus: s, onOpenAutoFocus: l, onCloseAutoFocus: u, disableOutsidePointerEvents: p, onEntryFocus: d, onEscapeKeyDown: Q, onPointerDownOutside: $, onFocusOutside: g, onInteractOutside: P, onDismiss: S, disableOutsideScroll: b, ...y} = e
              , x = to(tm, O)
              , X = tl(tm, O)
              , v = tr(O)
              , k = ti(O)
              , w = te(O)
              , [T,_] = (0,
            r.useState)(null)
              , W = (0,
            r.useRef)(null)
              , Z = (0,
            a.e)(t, W, x.onContentChange)
              , z = (0,
            r.useRef)(0)
              , q = (0,
            r.useRef)("")
              , Y = (0,
            r.useRef)(0)
              , R = (0,
            r.useRef)(null)
              , U = (0,
            r.useRef)("right")
              , V = (0,
            r.useRef)(0)
              , E = b ? e5.Z : r.Fragment
              , j = b ? {
                as: c.g7,
                allowPinchZoom: !0
            } : void 0
              , G = e=>{
                var t, O;
                let n = q.current + e
                  , r = w().filter(e=>!e.disabled)
                  , i = document.activeElement
                  , a = null === (t = r.find(e=>e.ref.current === i)) || void 0 === t ? void 0 : t.textValue
                  , o = r.map(e=>e.textValue)
                  , s = function(e, t, O) {
                    var n;
                    let r = t.length > 1 && Array.from(t).every(e=>e === t[0])
                      , i = r ? t[0] : t
                      , a = O ? e.indexOf(O) : -1
                      , o = (n = Math.max(a, 0),
                    e.map((t,O)=>e[(n + O) % e.length]))
                      , s = 1 === i.length;
                    s && (o = o.filter(e=>e !== O));
                    let l = o.find(e=>e.toLowerCase().startsWith(i.toLowerCase()));
                    return l !== O ? l : void 0
                }(o, n, a)
                  , l = null === (O = r.find(e=>e.textValue === s)) || void 0 === O ? void 0 : O.ref.current;
                !function e(t) {
                    q.current = t,
                    window.clearTimeout(z.current),
                    "" !== t && (z.current = window.setTimeout(()=>e(""), 1e3))
                }(n),
                l && setTimeout(()=>l.focus())
            }
            ;
            (0,
            r.useEffect)(()=>()=>window.clearTimeout(z.current), []),
            (0,
            h.EW)();
            let C = (0,
            r.useCallback)(e=>{
                var t, O;
                let n = U.current === (null === (t = R.current) || void 0 === t ? void 0 : t.side);
                return n && function(e, t) {
                    if (!t)
                        return !1;
                    let O = {
                        x: e.clientX,
                        y: e.clientY
                    };
                    return function(e, t) {
                        let {x: O, y: n} = e
                          , r = !1;
                        for (let e = 0, i = t.length - 1; e < t.length; i = e++) {
                            let a = t[e].x
                              , o = t[e].y
                              , s = t[i].x
                              , l = t[i].y
                              , c = o > n != l > n && O < (s - a) * (n - o) / (l - o) + a;
                            c && (r = !r)
                        }
                        return r
                    }(O, t)
                }(e, null === (O = R.current) || void 0 === O ? void 0 : O.area)
            }
            , []);
            return (0,
            r.createElement)(tQ, {
                scope: O,
                searchRef: q,
                onItemEnter: (0,
                r.useCallback)(e=>{
                    C(e) && e.preventDefault()
                }
                , [C]),
                onItemLeave: (0,
                r.useCallback)(e=>{
                    var t;
                    C(e) || (null === (t = W.current) || void 0 === t || t.focus(),
                    _(null))
                }
                , [C]),
                onTriggerLeave: (0,
                r.useCallback)(e=>{
                    C(e) && e.preventDefault()
                }
                , [C]),
                pointerGraceTimerRef: Y,
                onPointerGraceIntentChange: (0,
                r.useCallback)(e=>{
                    R.current = e
                }
                , [])
            }, (0,
            r.createElement)(E, j, (0,
            r.createElement)(m.M, {
                asChild: !0,
                trapped: s,
                onMountAutoFocus: (0,
                i.M)(l, e=>{
                    var t;
                    e.preventDefault(),
                    null === (t = W.current) || void 0 === t || t.focus()
                }
                ),
                onUnmountAutoFocus: u
            }, (0,
            r.createElement)(f.XB, {
                asChild: !0,
                disableOutsidePointerEvents: p,
                onEscapeKeyDown: Q,
                onPointerDownOutside: $,
                onFocusOutside: g,
                onInteractOutside: P,
                onDismiss: S
            }, (0,
            r.createElement)(eM, (0,
            n.Z)({
                asChild: !0
            }, k, {
                dir: X.dir,
                orientation: "vertical",
                loop: o,
                currentTabStopId: T,
                onCurrentTabStopIdChange: _,
                onEntryFocus: (0,
                i.M)(d, e=>{
                    X.isUsingKeyboardRef.current || e.preventDefault()
                }
                )
            }), (0,
            r.createElement)(e_, (0,
            n.Z)({
                role: "menu",
                "aria-orientation": "vertical",
                "data-state": tN(x.open),
                "data-radix-menu-content": "",
                dir: X.dir
            }, v, y, {
                ref: Z,
                style: {
                    outline: "none",
                    ...y.style
                },
                onKeyDown: (0,
                i.M)(y.onKeyDown, e=>{
                    let t = e.target
                      , O = t.closest("[data-radix-menu-content]") === e.currentTarget
                      , n = e.ctrlKey || e.altKey || e.metaKey
                      , r = 1 === e.key.length;
                    O && ("Tab" === e.key && e.preventDefault(),
                    !n && r && G(e.key));
                    let i = W.current;
                    if (e.target !== i || !e4.includes(e.key))
                        return;
                    e.preventDefault();
                    let a = w().filter(e=>!e.disabled)
                      , o = a.map(e=>e.ref.current);
                    e9.includes(e.key) && o.reverse(),
                    function(e) {
                        let t = document.activeElement;
                        for (let O of e)
                            if (O === t || (O.focus(),
                            document.activeElement !== t))
                                return
                    }(o)
                }
                ),
                onBlur: (0,
                i.M)(e.onBlur, e=>{
                    e.currentTarget.contains(e.target) || (window.clearTimeout(z.current),
                    q.current = "")
                }
                ),
                onPointerMove: (0,
                i.M)(e.onPointerMove, tF(e=>{
                    let t = e.target
                      , O = V.current !== e.clientX;
                    if (e.currentTarget.contains(t) && O) {
                        let t = e.clientX > V.current ? "right" : "left";
                        U.current = t,
                        V.current = e.clientX
                    }
                }
                ))
            })))))))
        }
        )
          , ty = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeMenu: O, ...i} = e;
            return (0,
            r.createElement)(l.WV.div, (0,
            n.Z)({
                role: "group"
            }, i, {
                ref: t
            }))
        }
        )
          , tx = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeMenu: O, ...i} = e;
            return (0,
            r.createElement)(l.WV.div, (0,
            n.Z)({}, i, {
                ref: t
            }))
        }
        )
          , tX = "MenuItem"
          , tv = "menu.itemSelect"
          , tk = (0,
        r.forwardRef)((e,t)=>{
            let {disabled: O=!1, onSelect: o, ...s} = e
              , c = (0,
            r.useRef)(null)
              , u = tl(tX, e.__scopeMenu)
              , p = t$(tX, e.__scopeMenu)
              , d = (0,
            a.e)(t, c)
              , f = (0,
            r.useRef)(!1)
              , h = ()=>{
                let e = c.current;
                if (!O && e) {
                    let t = new CustomEvent(tv,{
                        bubbles: !0,
                        cancelable: !0
                    });
                    e.addEventListener(tv, e=>null == o ? void 0 : o(e), {
                        once: !0
                    }),
                    (0,
                    l.jH)(e, t),
                    t.defaultPrevented ? f.current = !1 : u.onClose()
                }
            }
            ;
            return (0,
            r.createElement)(tw, (0,
            n.Z)({}, s, {
                ref: d,
                disabled: O,
                onClick: (0,
                i.M)(e.onClick, h),
                onPointerDown: t=>{
                    var O;
                    null === (O = e.onPointerDown) || void 0 === O || O.call(e, t),
                    f.current = !0
                }
                ,
                onPointerUp: (0,
                i.M)(e.onPointerUp, e=>{
                    var t;
                    f.current || null === (t = e.currentTarget) || void 0 === t || t.click()
                }
                ),
                onKeyDown: (0,
                i.M)(e.onKeyDown, e=>{
                    let t = "" !== p.searchRef.current;
                    !O && (!t || " " !== e.key) && e2.includes(e.key) && (e.currentTarget.click(),
                    e.preventDefault())
                }
                )
            }))
        }
        )
          , tw = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeMenu: O, disabled: o=!1, textValue: s, ...c} = e
              , u = t$(tX, O)
              , p = ti(O)
              , d = (0,
            r.useRef)(null)
              , f = (0,
            a.e)(t, d)
              , [h,m] = (0,
            r.useState)(!1)
              , [Q,$] = (0,
            r.useState)("");
            return (0,
            r.useEffect)(()=>{
                let e = d.current;
                if (e) {
                    var t;
                    $((null !== (t = e.textContent) && void 0 !== t ? t : "").trim())
                }
            }
            , [c.children]),
            (0,
            r.createElement)(e8.ItemSlot, {
                scope: O,
                disabled: o,
                textValue: null != s ? s : Q
            }, (0,
            r.createElement)(eH, (0,
            n.Z)({
                asChild: !0
            }, p, {
                focusable: !o
            }), (0,
            r.createElement)(l.WV.div, (0,
            n.Z)({
                role: "menuitem",
                "data-highlighted": h ? "" : void 0,
                "aria-disabled": o || void 0,
                "data-disabled": o ? "" : void 0
            }, c, {
                ref: f,
                onPointerMove: (0,
                i.M)(e.onPointerMove, tF(e=>{
                    if (o)
                        u.onItemLeave(e);
                    else if (u.onItemEnter(e),
                    !e.defaultPrevented) {
                        let t = e.currentTarget;
                        t.focus()
                    }
                }
                )),
                onPointerLeave: (0,
                i.M)(e.onPointerLeave, tF(e=>u.onItemLeave(e))),
                onFocus: (0,
                i.M)(e.onFocus, ()=>m(!0)),
                onBlur: (0,
                i.M)(e.onBlur, ()=>m(!1))
            }))))
        }
        )
          , tT = (0,
        r.forwardRef)((e,t)=>{
            let {checked: O=!1, onCheckedChange: a, ...o} = e;
            return (0,
            r.createElement)(tY, {
                scope: e.__scopeMenu,
                checked: O
            }, (0,
            r.createElement)(tk, (0,
            n.Z)({
                role: "menuitemcheckbox",
                "aria-checked": tD(O) ? "mixed" : O
            }, o, {
                ref: t,
                "data-state": tL(O),
                onSelect: (0,
                i.M)(o.onSelect, ()=>null == a ? void 0 : a(!!tD(O) || !O), {
                    checkForDefaultPrevented: !1
                })
            })))
        }
        )
          , [t_,tW] = tO("MenuRadioGroup", {
            value: void 0,
            onValueChange: ()=>{}
        })
          , tZ = (0,
        r.forwardRef)((e,t)=>{
            let {value: O, onValueChange: i, ...a} = e
              , o = (0,
            em.W)(i);
            return (0,
            r.createElement)(t_, {
                scope: e.__scopeMenu,
                value: O,
                onValueChange: o
            }, (0,
            r.createElement)(ty, (0,
            n.Z)({}, a, {
                ref: t
            })))
        }
        )
          , tz = (0,
        r.forwardRef)((e,t)=>{
            let {value: O, ...a} = e
              , o = tW("MenuRadioItem", e.__scopeMenu)
              , s = O === o.value;
            return (0,
            r.createElement)(tY, {
                scope: e.__scopeMenu,
                checked: s
            }, (0,
            r.createElement)(tk, (0,
            n.Z)({
                role: "menuitemradio",
                "aria-checked": s
            }, a, {
                ref: t,
                "data-state": tL(s),
                onSelect: (0,
                i.M)(a.onSelect, ()=>{
                    var e;
                    return null === (e = o.onValueChange) || void 0 === e ? void 0 : e.call(o, O)
                }
                , {
                    checkForDefaultPrevented: !1
                })
            })))
        }
        )
          , tq = "MenuItemIndicator"
          , [tY,tR] = tO(tq, {
            checked: !1
        })
          , tU = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeMenu: O, forceMount: i, ...a} = e
              , o = tR(tq, O);
            return (0,
            r.createElement)(eE.z, {
                present: i || tD(o.checked) || !0 === o.checked
            }, (0,
            r.createElement)(l.WV.span, (0,
            n.Z)({}, a, {
                ref: t,
                "data-state": tL(o.checked)
            })))
        }
        )
          , tV = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeMenu: O, ...i} = e;
            return (0,
            r.createElement)(l.WV.div, (0,
            n.Z)({
                role: "separator",
                "aria-orientation": "horizontal"
            }, i, {
                ref: t
            }))
        }
        )
          , tE = ((e,t)=>{
            let {__scopeMenu: O, ...i} = e
              , a = tr(O);
            return (0,
            r.createElement)(eZ, (0,
            n.Z)({}, a, i, {
                ref: t
            }))
        }
        ,
        "MenuSub")
          , [tj,tG] = tO(tE)
          , tC = e=>{
            let {__scopeMenu: t, children: O, open: n=!1, onOpenChange: i} = e
              , a = to(tE, t)
              , o = tr(t)
              , [s,l] = (0,
            r.useState)(null)
              , [c,u] = (0,
            r.useState)(null)
              , p = (0,
            em.W)(i);
            return (0,
            r.useEffect)(()=>(!1 === a.open && p(!1),
            ()=>p(!1)), [a.open, p]),
            (0,
            r.createElement)(ey, o, (0,
            r.createElement)(ta, {
                scope: t,
                open: n,
                onOpenChange: p,
                content: c,
                onContentChange: u
            }, (0,
            r.createElement)(tj, {
                scope: t,
                contentId: (0,
                Q.M)(),
                triggerId: (0,
                Q.M)(),
                trigger: s,
                onTriggerChange: l
            }, O)))
        }
          , tA = "MenuSubTrigger"
          , tI = (0,
        r.forwardRef)((e,t)=>{
            let O = to(tA, e.__scopeMenu)
              , o = tl(tA, e.__scopeMenu)
              , s = tG(tA, e.__scopeMenu)
              , l = t$(tA, e.__scopeMenu)
              , c = (0,
            r.useRef)(null)
              , {pointerGraceTimerRef: u, onPointerGraceIntentChange: p} = l
              , d = {
                __scopeMenu: e.__scopeMenu
            }
              , f = (0,
            r.useCallback)(()=>{
                c.current && window.clearTimeout(c.current),
                c.current = null
            }
            , []);
            return (0,
            r.useEffect)(()=>f, [f]),
            (0,
            r.useEffect)(()=>{
                let e = u.current;
                return ()=>{
                    window.clearTimeout(e),
                    p(null)
                }
            }
            , [u, p]),
            (0,
            r.createElement)(tu, (0,
            n.Z)({
                asChild: !0
            }, d), (0,
            r.createElement)(tw, (0,
            n.Z)({
                id: s.triggerId,
                "aria-haspopup": "menu",
                "aria-expanded": O.open,
                "aria-controls": s.contentId,
                "data-state": tN(O.open)
            }, e, {
                ref: (0,
                a.F)(t, s.onTriggerChange),
                onClick: t=>{
                    var n;
                    null === (n = e.onClick) || void 0 === n || n.call(e, t),
                    e.disabled || t.defaultPrevented || (t.currentTarget.focus(),
                    O.open || O.onOpenChange(!0))
                }
                ,
                onPointerMove: (0,
                i.M)(e.onPointerMove, tF(t=>{
                    l.onItemEnter(t),
                    t.defaultPrevented || e.disabled || O.open || c.current || (l.onPointerGraceIntentChange(null),
                    c.current = window.setTimeout(()=>{
                        O.onOpenChange(!0),
                        f()
                    }
                    , 100))
                }
                )),
                onPointerLeave: (0,
                i.M)(e.onPointerLeave, tF(e=>{
                    var t, n;
                    f();
                    let r = null === (t = O.content) || void 0 === t ? void 0 : t.getBoundingClientRect();
                    if (r) {
                        let t = null === (n = O.content) || void 0 === n ? void 0 : n.dataset.side
                          , i = "right" === t
                          , a = r[i ? "left" : "right"]
                          , o = r[i ? "right" : "left"];
                        l.onPointerGraceIntentChange({
                            area: [{
                                x: e.clientX + (i ? -5 : 5),
                                y: e.clientY
                            }, {
                                x: a,
                                y: r.top
                            }, {
                                x: o,
                                y: r.top
                            }, {
                                x: o,
                                y: r.bottom
                            }, {
                                x: a,
                                y: r.bottom
                            }],
                            side: t
                        }),
                        window.clearTimeout(u.current),
                        u.current = window.setTimeout(()=>l.onPointerGraceIntentChange(null), 300)
                    } else {
                        if (l.onTriggerLeave(e),
                        e.defaultPrevented)
                            return;
                        l.onPointerGraceIntentChange(null)
                    }
                }
                )),
                onKeyDown: (0,
                i.M)(e.onKeyDown, t=>{
                    let n = "" !== l.searchRef.current;
                    if (!e.disabled && (!n || " " !== t.key) && e6[o.dir].includes(t.key)) {
                        var r;
                        O.onOpenChange(!0),
                        null === (r = O.content) || void 0 === r || r.focus(),
                        t.preventDefault()
                    }
                }
                )
            })))
        }
        )
          , tJ = (0,
        r.forwardRef)((e,t)=>{
            let O = tf(tm, e.__scopeMenu)
              , {forceMount: o=O.forceMount, ...s} = e
              , l = to(tm, e.__scopeMenu)
              , c = tl(tm, e.__scopeMenu)
              , u = tG("MenuSubContent", e.__scopeMenu)
              , p = (0,
            r.useRef)(null)
              , d = (0,
            a.e)(t, p);
            return (0,
            r.createElement)(e8.Provider, {
                scope: e.__scopeMenu
            }, (0,
            r.createElement)(eE.z, {
                present: o || l.open
            }, (0,
            r.createElement)(e8.Slot, {
                scope: e.__scopeMenu
            }, (0,
            r.createElement)(tb, (0,
            n.Z)({
                id: u.contentId,
                "aria-labelledby": u.triggerId
            }, s, {
                ref: d,
                align: "start",
                side: "rtl" === c.dir ? "left" : "right",
                disableOutsidePointerEvents: !1,
                disableOutsideScroll: !1,
                trapFocus: !1,
                onOpenAutoFocus: e=>{
                    var t;
                    c.isUsingKeyboardRef.current && (null === (t = p.current) || void 0 === t || t.focus()),
                    e.preventDefault()
                }
                ,
                onCloseAutoFocus: e=>e.preventDefault(),
                onFocusOutside: (0,
                i.M)(e.onFocusOutside, e=>{
                    e.target !== u.trigger && l.onOpenChange(!1)
                }
                ),
                onEscapeKeyDown: (0,
                i.M)(e.onEscapeKeyDown, e=>{
                    c.onClose(),
                    e.preventDefault()
                }
                ),
                onKeyDown: (0,
                i.M)(e.onKeyDown, e=>{
                    let t = e.currentTarget.contains(e.target)
                      , O = e7[c.dir].includes(e.key);
                    if (t && O) {
                        var n;
                        l.onOpenChange(!1),
                        null === (n = u.trigger) || void 0 === n || n.focus(),
                        e.preventDefault()
                    }
                }
                )
            })))))
        }
        );
        function tN(e) {
            return e ? "open" : "closed"
        }
        function tD(e) {
            return "indeterminate" === e
        }
        function tL(e) {
            return tD(e) ? "indeterminate" : e ? "checked" : "unchecked"
        }
        function tF(e) {
            return t=>"mouse" === t.pointerType ? e(t) : void 0
        }
        let tM = "DropdownMenu"
          , [tB,tH] = (0,
        o.b)(tM, [tn])
          , tK = tn()
          , [t1,t0] = tB(tM)
          , t5 = e=>{
            let {__scopeDropdownMenu: t, children: O, dir: i, open: a, defaultOpen: o, onOpenChange: l, modal: c=!0} = e
              , u = tK(t)
              , p = (0,
            r.useRef)(null)
              , [d=!1,f] = (0,
            s.T)({
                prop: a,
                defaultProp: o,
                onChange: l
            });
            return (0,
            r.createElement)(t1, {
                scope: t,
                triggerId: (0,
                Q.M)(),
                triggerRef: p,
                contentId: (0,
                Q.M)(),
                open: d,
                onOpenChange: f,
                onOpenToggle: (0,
                r.useCallback)(()=>f(e=>!e), [f]),
                modal: c
            }, (0,
            r.createElement)(tc, (0,
            n.Z)({}, u, {
                open: d,
                onOpenChange: f,
                dir: i,
                modal: c
            }), O))
        }
          , t2 = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeDropdownMenu: O, disabled: o=!1, ...s} = e
              , c = t0("DropdownMenuTrigger", O)
              , u = tK(O);
            return (0,
            r.createElement)(tu, (0,
            n.Z)({
                asChild: !0
            }, u), (0,
            r.createElement)(l.WV.button, (0,
            n.Z)({
                type: "button",
                id: c.triggerId,
                "aria-haspopup": "menu",
                "aria-expanded": c.open,
                "aria-controls": c.open ? c.contentId : void 0,
                "data-state": c.open ? "open" : "closed",
                "data-disabled": o ? "" : void 0,
                disabled: o
            }, s, {
                ref: (0,
                a.F)(t, c.triggerRef),
                onPointerDown: (0,
                i.M)(e.onPointerDown, e=>{
                    o || 0 !== e.button || !1 !== e.ctrlKey || (c.onOpenToggle(),
                    c.open || e.preventDefault())
                }
                ),
                onKeyDown: (0,
                i.M)(e.onKeyDown, e=>{
                    !o && (["Enter", " "].includes(e.key) && c.onOpenToggle(),
                    "ArrowDown" === e.key && c.onOpenChange(!0),
                    ["Enter", " ", "ArrowDown"].includes(e.key) && e.preventDefault())
                }
                )
            })))
        }
        )
          , t9 = e=>{
            let {__scopeDropdownMenu: t, ...O} = e
              , i = tK(t);
            return (0,
            r.createElement)(th, (0,
            n.Z)({}, i, O))
        }
          , t4 = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeDropdownMenu: O, ...a} = e
              , o = t0("DropdownMenuContent", O)
              , s = tK(O)
              , l = (0,
            r.useRef)(!1);
            return (0,
            r.createElement)(tg, (0,
            n.Z)({
                id: o.contentId,
                "aria-labelledby": o.triggerId
            }, s, a, {
                ref: t,
                onCloseAutoFocus: (0,
                i.M)(e.onCloseAutoFocus, e=>{
                    var t;
                    l.current || null === (t = o.triggerRef.current) || void 0 === t || t.focus(),
                    l.current = !1,
                    e.preventDefault()
                }
                ),
                onInteractOutside: (0,
                i.M)(e.onInteractOutside, e=>{
                    let t = e.detail.originalEvent
                      , O = 0 === t.button && !0 === t.ctrlKey
                      , n = 2 === t.button || O;
                    (!o.modal || n) && (l.current = !0)
                }
                ),
                style: {
                    ...e.style,
                    "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
                    "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
                    "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
                    "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
                    "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
                }
            }))
        }
        )
          , t6 = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeDropdownMenu: O, ...i} = e
              , a = tK(O);
            return (0,
            r.createElement)(ty, (0,
            n.Z)({}, a, i, {
                ref: t
            }))
        }
        )
          , t7 = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeDropdownMenu: O, ...i} = e
              , a = tK(O);
            return (0,
            r.createElement)(tx, (0,
            n.Z)({}, a, i, {
                ref: t
            }))
        }
        )
          , t3 = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeDropdownMenu: O, ...i} = e
              , a = tK(O);
            return (0,
            r.createElement)(tk, (0,
            n.Z)({}, a, i, {
                ref: t
            }))
        }
        )
          , t8 = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeDropdownMenu: O, ...i} = e
              , a = tK(O);
            return (0,
            r.createElement)(tT, (0,
            n.Z)({}, a, i, {
                ref: t
            }))
        }
        )
          , Oe = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeDropdownMenu: O, ...i} = e
              , a = tK(O);
            return (0,
            r.createElement)(tZ, (0,
            n.Z)({}, a, i, {
                ref: t
            }))
        }
        )
          , Ot = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeDropdownMenu: O, ...i} = e
              , a = tK(O);
            return (0,
            r.createElement)(tz, (0,
            n.Z)({}, a, i, {
                ref: t
            }))
        }
        )
          , OO = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeDropdownMenu: O, ...i} = e
              , a = tK(O);
            return (0,
            r.createElement)(tU, (0,
            n.Z)({}, a, i, {
                ref: t
            }))
        }
        )
          , On = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeDropdownMenu: O, ...i} = e
              , a = tK(O);
            return (0,
            r.createElement)(tV, (0,
            n.Z)({}, a, i, {
                ref: t
            }))
        }
        )
          , Or = e=>{
            let {__scopeDropdownMenu: t, children: O, open: i, onOpenChange: a, defaultOpen: o} = e
              , l = tK(t)
              , [c=!1,u] = (0,
            s.T)({
                prop: i,
                defaultProp: o,
                onChange: a
            });
            return (0,
            r.createElement)(tC, (0,
            n.Z)({}, l, {
                open: c,
                onOpenChange: u
            }), O)
        }
          , Oi = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeDropdownMenu: O, ...i} = e
              , a = tK(O);
            return (0,
            r.createElement)(tI, (0,
            n.Z)({}, a, i, {
                ref: t
            }))
        }
        )
          , Oa = (0,
        r.forwardRef)((e,t)=>{
            let {__scopeDropdownMenu: O, ...i} = e
              , a = tK(O);
            return (0,
            r.createElement)(tJ, (0,
            n.Z)({}, a, i, {
                ref: t,
                style: {
                    ...e.style,
                    "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
                    "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
                    "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
                    "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
                    "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
                }
            }))
        }
        )
          , Oo = t5
          , Os = t2
          , Ol = t9
          , Oc = t4
          , Ou = t6
          , Op = t7
          , Od = t3
          , Of = t8
          , Oh = Oe
          , Om = Ot
          , OQ = OO
          , O$ = On
          , Og = Or
          , OP = Oi
          , OS = Oa
    },
    2582: function(e, t, O) {
        "use strict";
        let n;
        O.d(t, {
            RI: function() {
                return th
            }
        });
        var r = O(168);
        function i(e) {
            return new r.ri(r.il.define(e))
        }
        function a(e) {
            return Promise.resolve().then(O.bind(O, 2140)).then(t=>t.sql({
                dialect: t[e]
            }))
        }
        let o = [r.c6.of({
            name: "C",
            extensions: ["c", "h", "ino"],
            load: ()=>Promise.resolve().then(O.bind(O, 3379)).then(e=>e.cpp())
        }), r.c6.of({
            name: "C++",
            alias: ["cpp"],
            extensions: ["cpp", "c++", "cc", "cxx", "hpp", "h++", "hh", "hxx"],
            load: ()=>Promise.resolve().then(O.bind(O, 3379)).then(e=>e.cpp())
        }), r.c6.of({
            name: "CQL",
            alias: ["cassandra"],
            extensions: ["cql"],
            load: ()=>a("Cassandra")
        }), r.c6.of({
            name: "CSS",
            extensions: ["css"],
            load: ()=>Promise.resolve().then(O.bind(O, 8662)).then(e=>e.css())
        }), r.c6.of({
            name: "HTML",
            alias: ["xhtml"],
            extensions: ["html", "htm", "handlebars", "hbs"],
            load: ()=>Promise.resolve().then(O.bind(O, 1303)).then(e=>e.html())
        }), r.c6.of({
            name: "Java",
            extensions: ["java"],
            load: ()=>Promise.resolve().then(O.bind(O, 1952)).then(e=>e.java())
        }), r.c6.of({
            name: "JavaScript",
            alias: ["ecmascript", "js", "node"],
            extensions: ["js", "mjs", "cjs"],
            load: ()=>Promise.resolve().then(O.bind(O, 4695)).then(e=>e.javascript())
        }), r.c6.of({
            name: "JSON",
            alias: ["json5"],
            extensions: ["json", "map"],
            load: ()=>Promise.resolve().then(O.bind(O, 3068)).then(e=>e.json())
        }), r.c6.of({
            name: "JSX",
            extensions: ["jsx"],
            load: ()=>Promise.resolve().then(O.bind(O, 4695)).then(e=>e.javascript({
                jsx: !0
            }))
        }), r.c6.of({
            name: "MariaDB SQL",
            load: ()=>a("MariaSQL")
        }), r.c6.of({
            name: "Markdown",
            extensions: ["md", "markdown", "mkd"],
            load: ()=>Promise.resolve().then(O.bind(O, 8195)).then(e=>e.markdown())
        }), r.c6.of({
            name: "MS SQL",
            load: ()=>a("MSSQL")
        }), r.c6.of({
            name: "MySQL",
            load: ()=>a("MySQL")
        }), r.c6.of({
            name: "PHP",
            extensions: ["php", "php3", "php4", "php5", "php7", "phtml"],
            load: ()=>Promise.resolve().then(O.bind(O, 9379)).then(e=>e.php())
        }), r.c6.of({
            name: "PLSQL",
            extensions: ["pls"],
            load: ()=>a("PLSQL")
        }), r.c6.of({
            name: "PostgreSQL",
            load: ()=>a("PostgreSQL")
        }), r.c6.of({
            name: "Python",
            extensions: ["BUILD", "bzl", "py", "pyw"],
            filename: /^(BUCK|BUILD)$/,
            load: ()=>Promise.resolve().then(O.bind(O, 4246)).then(e=>e.python())
        }), r.c6.of({
            name: "Rust",
            extensions: ["rs"],
            load: ()=>Promise.resolve().then(O.bind(O, 473)).then(e=>e.rust())
        }), r.c6.of({
            name: "Sass",
            extensions: ["sass"],
            load: ()=>O.e(6977).then(O.bind(O, 6977)).then(e=>e.sass({
                indented: !0
            }))
        }), r.c6.of({
            name: "SCSS",
            extensions: ["scss"],
            load: ()=>O.e(6977).then(O.bind(O, 6977)).then(e=>e.sass())
        }), r.c6.of({
            name: "SQL",
            extensions: ["sql"],
            load: ()=>a("StandardSQL")
        }), r.c6.of({
            name: "SQLite",
            load: ()=>a("SQLite")
        }), r.c6.of({
            name: "TSX",
            extensions: ["tsx"],
            load: ()=>Promise.resolve().then(O.bind(O, 4695)).then(e=>e.javascript({
                jsx: !0,
                typescript: !0
            }))
        }), r.c6.of({
            name: "TypeScript",
            alias: ["ts"],
            extensions: ["ts"],
            load: ()=>Promise.resolve().then(O.bind(O, 4695)).then(e=>e.javascript({
                typescript: !0
            }))
        }), r.c6.of({
            name: "WebAssembly",
            extensions: ["wat", "wast"],
            load: ()=>Promise.resolve().then(O.bind(O, 658)).then(e=>e.wast())
        }), r.c6.of({
            name: "XML",
            alias: ["rss", "wsdl", "xsd"],
            extensions: ["xml", "xsl", "xsd", "svg"],
            load: ()=>Promise.resolve().then(O.bind(O, 6456)).then(e=>e.xml())
        }), r.c6.of({
            name: "APL",
            extensions: ["dyalog", "apl"],
            load: ()=>Promise.resolve().then(O.bind(O, 725)).then(e=>i(e.apl))
        }), r.c6.of({
            name: "PGP",
            alias: ["asciiarmor"],
            extensions: ["asc", "pgp", "sig"],
            load: ()=>Promise.resolve().then(O.bind(O, 9439)).then(e=>i(e.asciiArmor))
        }), r.c6.of({
            name: "ASN.1",
            extensions: ["asn", "asn1"],
            load: ()=>O.e(5098).then(O.bind(O, 5098)).then(e=>i(e.asn1({})))
        }), r.c6.of({
            name: "Asterisk",
            filename: /^extensions\.conf$/i,
            load: ()=>Promise.resolve().then(O.bind(O, 5027)).then(e=>i(e.asterisk))
        }), r.c6.of({
            name: "Brainfuck",
            extensions: ["b", "bf"],
            load: ()=>Promise.resolve().then(O.bind(O, 4676)).then(e=>i(e.brainfuck))
        }), r.c6.of({
            name: "Cobol",
            extensions: ["cob", "cpy"],
            load: ()=>Promise.resolve().then(O.bind(O, 3702)).then(e=>i(e.cobol))
        }), r.c6.of({
            name: "C#",
            alias: ["csharp", "cs"],
            extensions: ["cs"],
            load: ()=>Promise.resolve().then(O.bind(O, 3957)).then(e=>i(e.csharp))
        }), r.c6.of({
            name: "Clojure",
            extensions: ["clj", "cljc", "cljx"],
            load: ()=>Promise.resolve().then(O.bind(O, 6260)).then(e=>i(e.clojure))
        }), r.c6.of({
            name: "ClojureScript",
            extensions: ["cljs"],
            load: ()=>Promise.resolve().then(O.bind(O, 6260)).then(e=>i(e.clojure))
        }), r.c6.of({
            name: "Closure Stylesheets (GSS)",
            extensions: ["gss"],
            load: ()=>Promise.resolve().then(O.bind(O, 6581)).then(e=>i(e.gss))
        }), r.c6.of({
            name: "CMake",
            extensions: ["cmake", "cmake.in"],
            filename: /^CMakeLists\.txt$/,
            load: ()=>Promise.resolve().then(O.bind(O, 7422)).then(e=>i(e.cmake))
        }), r.c6.of({
            name: "CoffeeScript",
            alias: ["coffee", "coffee-script"],
            extensions: ["coffee"],
            load: ()=>Promise.resolve().then(O.bind(O, 3196)).then(e=>i(e.coffeeScript))
        }), r.c6.of({
            name: "Common Lisp",
            alias: ["lisp"],
            extensions: ["cl", "lisp", "el"],
            load: ()=>Promise.resolve().then(O.bind(O, 3478)).then(e=>i(e.commonLisp))
        }), r.c6.of({
            name: "Cypher",
            extensions: ["cyp", "cypher"],
            load: ()=>Promise.resolve().then(O.bind(O, 3225)).then(e=>i(e.cypher))
        }), r.c6.of({
            name: "Cython",
            extensions: ["pyx", "pxd", "pxi"],
            load: ()=>O.e(3998).then(O.bind(O, 3998)).then(e=>i(e.cython))
        }), r.c6.of({
            name: "Crystal",
            extensions: ["cr"],
            load: ()=>Promise.resolve().then(O.bind(O, 2059)).then(e=>i(e.crystal))
        }), r.c6.of({
            name: "D",
            extensions: ["d"],
            load: ()=>Promise.resolve().then(O.bind(O, 8161)).then(e=>i(e.d))
        }), r.c6.of({
            name: "Dart",
            extensions: ["dart"],
            load: ()=>Promise.resolve().then(O.bind(O, 3957)).then(e=>i(e.dart))
        }), r.c6.of({
            name: "diff",
            extensions: ["diff", "patch"],
            load: ()=>Promise.resolve().then(O.bind(O, 5430)).then(e=>i(e.diff))
        }), r.c6.of({
            name: "Dockerfile",
            filename: /^Dockerfile$/,
            load: ()=>Promise.resolve().then(O.bind(O, 3185)).then(e=>i(e.dockerFile))
        }), r.c6.of({
            name: "DTD",
            extensions: ["dtd"],
            load: ()=>Promise.resolve().then(O.bind(O, 8998)).then(e=>i(e.dtd))
        }), r.c6.of({
            name: "Dylan",
            extensions: ["dylan", "dyl", "intr"],
            load: ()=>Promise.resolve().then(O.bind(O, 7573)).then(e=>i(e.dylan))
        }), r.c6.of({
            name: "EBNF",
            load: ()=>Promise.resolve().then(O.bind(O, 9565)).then(e=>i(e.ebnf))
        }), r.c6.of({
            name: "ECL",
            extensions: ["ecl"],
            load: ()=>Promise.resolve().then(O.bind(O, 130)).then(e=>i(e.ecl))
        }), r.c6.of({
            name: "edn",
            extensions: ["edn"],
            load: ()=>Promise.resolve().then(O.bind(O, 6260)).then(e=>i(e.clojure))
        }), r.c6.of({
            name: "Eiffel",
            extensions: ["e"],
            load: ()=>Promise.resolve().then(O.bind(O, 9318)).then(e=>i(e.eiffel))
        }), r.c6.of({
            name: "Elm",
            extensions: ["elm"],
            load: ()=>Promise.resolve().then(O.bind(O, 6373)).then(e=>i(e.elm))
        }), r.c6.of({
            name: "Erlang",
            extensions: ["erl"],
            load: ()=>Promise.resolve().then(O.bind(O, 4756)).then(e=>i(e.erlang))
        }), r.c6.of({
            name: "Esper",
            load: ()=>O.e(2090).then(O.bind(O, 2090)).then(e=>i(e.esper))
        }), r.c6.of({
            name: "Factor",
            extensions: ["factor"],
            load: ()=>Promise.resolve().then(O.bind(O, 3985)).then(e=>i(e.factor))
        }), r.c6.of({
            name: "FCL",
            load: ()=>Promise.resolve().then(O.bind(O, 9862)).then(e=>i(e.fcl))
        }), r.c6.of({
            name: "Forth",
            extensions: ["forth", "fth", "4th"],
            load: ()=>Promise.resolve().then(O.bind(O, 7420)).then(e=>i(e.forth))
        }), r.c6.of({
            name: "Fortran",
            extensions: ["f", "for", "f77", "f90", "f95"],
            load: ()=>Promise.resolve().then(O.bind(O, 5344)).then(e=>i(e.fortran))
        }), r.c6.of({
            name: "F#",
            alias: ["fsharp"],
            extensions: ["fs"],
            load: ()=>O.e(3952).then(O.bind(O, 3952)).then(e=>i(e.fSharp))
        }), r.c6.of({
            name: "Gas",
            extensions: ["s"],
            load: ()=>Promise.resolve().then(O.bind(O, 5455)).then(e=>i(e.gas))
        }), r.c6.of({
            name: "Gherkin",
            extensions: ["feature"],
            load: ()=>Promise.resolve().then(O.bind(O, 2569)).then(e=>i(e.gherkin))
        }), r.c6.of({
            name: "Go",
            extensions: ["go"],
            load: ()=>Promise.resolve().then(O.bind(O, 8174)).then(e=>i(e.go))
        }), r.c6.of({
            name: "Groovy",
            extensions: ["groovy", "gradle"],
            filename: /^Jenkinsfile$/,
            load: ()=>Promise.resolve().then(O.bind(O, 4737)).then(e=>i(e.groovy))
        }), r.c6.of({
            name: "Haskell",
            extensions: ["hs"],
            load: ()=>Promise.resolve().then(O.bind(O, 3580)).then(e=>i(e.haskell))
        }), r.c6.of({
            name: "Haxe",
            extensions: ["hx"],
            load: ()=>Promise.resolve().then(O.bind(O, 1067)).then(e=>i(e.haxe))
        }), r.c6.of({
            name: "HXML",
            extensions: ["hxml"],
            load: ()=>Promise.resolve().then(O.bind(O, 1067)).then(e=>i(e.hxml))
        }), r.c6.of({
            name: "HTTP",
            load: ()=>Promise.resolve().then(O.bind(O, 6746)).then(e=>i(e.http))
        }), r.c6.of({
            name: "IDL",
            extensions: ["pro"],
            load: ()=>Promise.resolve().then(O.bind(O, 4085)).then(e=>i(e.idl))
        }), r.c6.of({
            name: "JSON-LD",
            alias: ["jsonld"],
            extensions: ["jsonld"],
            load: ()=>O.e(9634).then(O.bind(O, 9634)).then(e=>i(e.jsonld))
        }), r.c6.of({
            name: "Jinja2",
            extensions: ["j2", "jinja", "jinja2"],
            load: ()=>Promise.resolve().then(O.bind(O, 2197)).then(e=>i(e.jinja2))
        }), r.c6.of({
            name: "Julia",
            extensions: ["jl"],
            load: ()=>Promise.resolve().then(O.bind(O, 8590)).then(e=>i(e.julia))
        }), r.c6.of({
            name: "Kotlin",
            extensions: ["kt"],
            load: ()=>Promise.resolve().then(O.bind(O, 3957)).then(e=>i(e.kotlin))
        }), r.c6.of({
            name: "LESS",
            extensions: ["less"],
            load: ()=>Promise.resolve().then(O.bind(O, 6581)).then(e=>i(e.less))
        }), r.c6.of({
            name: "LiveScript",
            alias: ["ls"],
            extensions: ["ls"],
            load: ()=>Promise.resolve().then(O.bind(O, 9140)).then(e=>i(e.liveScript))
        }), r.c6.of({
            name: "Lua",
            extensions: ["lua"],
            load: ()=>Promise.resolve().then(O.bind(O, 4520)).then(e=>i(e.lua))
        }), r.c6.of({
            name: "mIRC",
            extensions: ["mrc"],
            load: ()=>Promise.resolve().then(O.bind(O, 6277)).then(e=>i(e.mirc))
        }), r.c6.of({
            name: "Mathematica",
            extensions: ["m", "nb", "wl", "wls"],
            load: ()=>Promise.resolve().then(O.bind(O, 7539)).then(e=>i(e.mathematica))
        }), r.c6.of({
            name: "Modelica",
            extensions: ["mo"],
            load: ()=>Promise.resolve().then(O.bind(O, 3113)).then(e=>i(e.modelica))
        }), r.c6.of({
            name: "MUMPS",
            extensions: ["mps"],
            load: ()=>Promise.resolve().then(O.bind(O, 8937)).then(e=>i(e.mumps))
        }), r.c6.of({
            name: "Mbox",
            extensions: ["mbox"],
            load: ()=>Promise.resolve().then(O.bind(O, 2232)).then(e=>i(e.mbox))
        }), r.c6.of({
            name: "Nginx",
            filename: /nginx.*\.conf$/i,
            load: ()=>Promise.resolve().then(O.bind(O, 874)).then(e=>i(e.nginx))
        }), r.c6.of({
            name: "NSIS",
            extensions: ["nsh", "nsi"],
            load: ()=>Promise.resolve().then(O.bind(O, 1988)).then(e=>i(e.nsis))
        }), r.c6.of({
            name: "NTriples",
            extensions: ["nt", "nq"],
            load: ()=>Promise.resolve().then(O.bind(O, 6342)).then(e=>i(e.ntriples))
        }), r.c6.of({
            name: "Objective-C",
            alias: ["objective-c", "objc"],
            extensions: ["m"],
            load: ()=>Promise.resolve().then(O.bind(O, 3957)).then(e=>i(e.objectiveC))
        }), r.c6.of({
            name: "Objective-C++",
            alias: ["objective-c++", "objc++"],
            extensions: ["mm"],
            load: ()=>Promise.resolve().then(O.bind(O, 3957)).then(e=>i(e.objectiveCpp))
        }), r.c6.of({
            name: "OCaml",
            extensions: ["ml", "mli", "mll", "mly"],
            load: ()=>O.e(3952).then(O.bind(O, 3952)).then(e=>i(e.oCaml))
        }), r.c6.of({
            name: "Octave",
            extensions: ["m"],
            load: ()=>Promise.resolve().then(O.bind(O, 681)).then(e=>i(e.octave))
        }), r.c6.of({
            name: "Oz",
            extensions: ["oz"],
            load: ()=>Promise.resolve().then(O.bind(O, 7337)).then(e=>i(e.oz))
        }), r.c6.of({
            name: "Pascal",
            extensions: ["p", "pas"],
            load: ()=>Promise.resolve().then(O.bind(O, 1568)).then(e=>i(e.pascal))
        }), r.c6.of({
            name: "Perl",
            extensions: ["pl", "pm"],
            load: ()=>Promise.resolve().then(O.bind(O, 5912)).then(e=>i(e.perl))
        }), r.c6.of({
            name: "Pig",
            extensions: ["pig"],
            load: ()=>Promise.resolve().then(O.bind(O, 9494)).then(e=>i(e.pig))
        }), r.c6.of({
            name: "PowerShell",
            extensions: ["ps1", "psd1", "psm1"],
            load: ()=>Promise.resolve().then(O.bind(O, 812)).then(e=>i(e.powerShell))
        }), r.c6.of({
            name: "Properties files",
            alias: ["ini", "properties"],
            extensions: ["properties", "ini", "in"],
            load: ()=>Promise.resolve().then(O.bind(O, 889)).then(e=>i(e.properties))
        }), r.c6.of({
            name: "ProtoBuf",
            extensions: ["proto"],
            load: ()=>Promise.resolve().then(O.bind(O, 84)).then(e=>i(e.protobuf))
        }), r.c6.of({
            name: "Puppet",
            extensions: ["pp"],
            load: ()=>Promise.resolve().then(O.bind(O, 8240)).then(e=>i(e.puppet))
        }), r.c6.of({
            name: "Q",
            extensions: ["q"],
            load: ()=>Promise.resolve().then(O.bind(O, 2891)).then(e=>i(e.q))
        }), r.c6.of({
            name: "R",
            alias: ["rscript"],
            extensions: ["r", "R"],
            load: ()=>Promise.resolve().then(O.bind(O, 6778)).then(e=>i(e.r))
        }), r.c6.of({
            name: "RPM Changes",
            load: ()=>O.e(5966).then(O.bind(O, 5966)).then(e=>i(e.rpmChanges))
        }), r.c6.of({
            name: "RPM Spec",
            extensions: ["spec"],
            load: ()=>O.e(5966).then(O.bind(O, 5966)).then(e=>i(e.rpmSpec))
        }), r.c6.of({
            name: "Ruby",
            alias: ["jruby", "macruby", "rake", "rb", "rbx"],
            extensions: ["rb"],
            filename: /^(Gemfile|Rakefile)$/,
            load: ()=>Promise.resolve().then(O.bind(O, 2685)).then(e=>i(e.ruby))
        }), r.c6.of({
            name: "SAS",
            extensions: ["sas"],
            load: ()=>Promise.resolve().then(O.bind(O, 4595)).then(e=>i(e.sas))
        }), r.c6.of({
            name: "Scala",
            extensions: ["scala"],
            load: ()=>Promise.resolve().then(O.bind(O, 3957)).then(e=>i(e.scala))
        }), r.c6.of({
            name: "Scheme",
            extensions: ["scm", "ss"],
            load: ()=>Promise.resolve().then(O.bind(O, 8346)).then(e=>i(e.scheme))
        }), r.c6.of({
            name: "Shell",
            alias: ["bash", "sh", "zsh"],
            extensions: ["sh", "ksh", "bash"],
            filename: /^PKGBUILD$/,
            load: ()=>Promise.resolve().then(O.bind(O, 6148)).then(e=>i(e.shell))
        }), r.c6.of({
            name: "Sieve",
            extensions: ["siv", "sieve"],
            load: ()=>Promise.resolve().then(O.bind(O, 7671)).then(e=>i(e.sieve))
        }), r.c6.of({
            name: "Smalltalk",
            extensions: ["st"],
            load: ()=>Promise.resolve().then(O.bind(O, 8045)).then(e=>i(e.smalltalk))
        }), r.c6.of({
            name: "Solr",
            load: ()=>Promise.resolve().then(O.bind(O, 1583)).then(e=>i(e.solr))
        }), r.c6.of({
            name: "SML",
            extensions: ["sml", "sig", "fun", "smackspec"],
            load: ()=>O.e(3952).then(O.bind(O, 3952)).then(e=>i(e.sml))
        }), r.c6.of({
            name: "SPARQL",
            alias: ["sparul"],
            extensions: ["rq", "sparql"],
            load: ()=>Promise.resolve().then(O.bind(O, 8008)).then(e=>i(e.sparql))
        }), r.c6.of({
            name: "Spreadsheet",
            alias: ["excel", "formula"],
            load: ()=>Promise.resolve().then(O.bind(O, 9316)).then(e=>i(e.spreadsheet))
        }), r.c6.of({
            name: "Squirrel",
            extensions: ["nut"],
            load: ()=>Promise.resolve().then(O.bind(O, 3957)).then(e=>i(e.squirrel))
        }), r.c6.of({
            name: "Stylus",
            extensions: ["styl"],
            load: ()=>Promise.resolve().then(O.bind(O, 9744)).then(e=>i(e.stylus))
        }), r.c6.of({
            name: "Swift",
            extensions: ["swift"],
            load: ()=>Promise.resolve().then(O.bind(O, 8777)).then(e=>i(e.swift))
        }), r.c6.of({
            name: "sTeX",
            load: ()=>Promise.resolve().then(O.bind(O, 2199)).then(e=>i(e.stex))
        }), r.c6.of({
            name: "LaTeX",
            alias: ["tex"],
            extensions: ["text", "ltx", "tex"],
            load: ()=>Promise.resolve().then(O.bind(O, 2199)).then(e=>i(e.stex))
        }), r.c6.of({
            name: "SystemVerilog",
            extensions: ["v", "sv", "svh"],
            load: ()=>Promise.resolve().then(O.bind(O, 5113)).then(e=>i(e.verilog))
        }), r.c6.of({
            name: "Tcl",
            extensions: ["tcl"],
            load: ()=>Promise.resolve().then(O.bind(O, 1087)).then(e=>i(e.tcl))
        }), r.c6.of({
            name: "Textile",
            extensions: ["textile"],
            load: ()=>Promise.resolve().then(O.bind(O, 2587)).then(e=>i(e.textile))
        }), r.c6.of({
            name: "TiddlyWiki",
            load: ()=>Promise.resolve().then(O.bind(O, 2511)).then(e=>i(e.tiddlyWiki))
        }), r.c6.of({
            name: "Tiki wiki",
            load: ()=>Promise.resolve().then(O.bind(O, 811)).then(e=>i(e.tiki))
        }), r.c6.of({
            name: "TOML",
            extensions: ["toml"],
            load: ()=>Promise.resolve().then(O.bind(O, 4686)).then(e=>i(e.toml))
        }), r.c6.of({
            name: "Troff",
            extensions: ["1", "2", "3", "4", "5", "6", "7", "8", "9"],
            load: ()=>Promise.resolve().then(O.bind(O, 3355)).then(e=>i(e.troff))
        }), r.c6.of({
            name: "TTCN",
            extensions: ["ttcn", "ttcn3", "ttcnpp"],
            load: ()=>Promise.resolve().then(O.bind(O, 6482)).then(e=>i(e.ttcn))
        }), r.c6.of({
            name: "TTCN_CFG",
            extensions: ["cfg"],
            load: ()=>O.e(2380).then(O.bind(O, 2380)).then(e=>i(e.ttcnCfg))
        }), r.c6.of({
            name: "Turtle",
            extensions: ["ttl"],
            load: ()=>Promise.resolve().then(O.bind(O, 6547)).then(e=>i(e.turtle))
        }), r.c6.of({
            name: "Web IDL",
            extensions: ["webidl"],
            load: ()=>Promise.resolve().then(O.bind(O, 314)).then(e=>i(e.webIDL))
        }), r.c6.of({
            name: "VB.NET",
            extensions: ["vb"],
            load: ()=>Promise.resolve().then(O.bind(O, 5593)).then(e=>i(e.vb))
        }), r.c6.of({
            name: "VBScript",
            extensions: ["vbs"],
            load: ()=>Promise.resolve().then(O.bind(O, 1747)).then(e=>i(e.vbScript))
        }), r.c6.of({
            name: "Velocity",
            extensions: ["vtl"],
            load: ()=>Promise.resolve().then(O.bind(O, 2928)).then(e=>i(e.velocity))
        }), r.c6.of({
            name: "Verilog",
            extensions: ["v"],
            load: ()=>Promise.resolve().then(O.bind(O, 5113)).then(e=>i(e.verilog))
        }), r.c6.of({
            name: "VHDL",
            extensions: ["vhd", "vhdl"],
            load: ()=>Promise.resolve().then(O.bind(O, 1124)).then(e=>i(e.vhdl))
        }), r.c6.of({
            name: "XQuery",
            extensions: ["xy", "xquery"],
            load: ()=>Promise.resolve().then(O.bind(O, 8856)).then(e=>i(e.xQuery))
        }), r.c6.of({
            name: "Yacas",
            extensions: ["ys"],
            load: ()=>Promise.resolve().then(O.bind(O, 2819)).then(e=>i(e.yacas))
        }), r.c6.of({
            name: "YAML",
            alias: ["yml"],
            extensions: ["yaml", "yml"],
            load: ()=>Promise.resolve().then(O.bind(O, 5866)).then(e=>i(e.yaml))
        }), r.c6.of({
            name: "Z80",
            extensions: ["z80"],
            load: ()=>Promise.resolve().then(O.bind(O, 4869)).then(e=>i(e.z80))
        }), r.c6.of({
            name: "MscGen",
            extensions: ["mscgen", "mscin", "msc"],
            load: ()=>Promise.resolve().then(O.bind(O, 1291)).then(e=>i(e.mscgen))
        }), r.c6.of({
            name: "X\xf9",
            extensions: ["xu"],
            load: ()=>Promise.resolve().then(O.bind(O, 1291)).then(e=>i(e.xu))
        }), r.c6.of({
            name: "MsGenny",
            extensions: ["msgenny"],
            load: ()=>Promise.resolve().then(O.bind(O, 1291)).then(e=>i(e.msgenny))
        }), r.c6.of({
            name: "Vue",
            extensions: ["vue"],
            load: ()=>O.e(8574).then(O.bind(O, 8574)).then(e=>e.vue())
        }), r.c6.of({
            name: "Angular Template",
            load: ()=>O.e(2063).then(O.bind(O, 2063)).then(e=>e.angular())
        })];
        var s = O(8195)
          , l = O(4695)
          , c = O(1303)
          , u = O(8662)
          , p = O(3068)
          , d = O(4246)
          , f = O(6456)
          , h = O(2140)
          , m = O(1952)
          , Q = O(473)
          , $ = O(3379)
          , g = O(2679)
          , P = O(5306);
        let S = (0,
        P.Gv)({
            LineComment: P.pJ.lineComment,
            BlockComment: P.pJ.blockComment,
            AnyChar: P.pJ.character,
            Literal: P.pJ.string,
            "tokens from grammar as empty prop extend specialize": P.pJ.keyword,
            "@top @left @right @cut @external": P.pJ.modifier,
            "@precedence @tokens @context @dialects @skip @detectDelim @conflict": P.pJ.definitionKeyword,
            "@extend @specialize": P.pJ.operatorKeyword,
            "CharSet InvertedCharSet": P.pJ.regexp,
            CharClass: P.pJ.atom,
            RuleName: P.pJ.variableName,
            "RuleDeclaration/RuleName InlineRule/RuleName TokensBody/RuleName": P.pJ.definition(P.pJ.variableName),
            PrecedenceName: P.pJ.labelName,
            Name: P.pJ.name,
            "( )": P.pJ.paren,
            "[ ]": P.pJ.squareBracket,
            "{ }": P.pJ.brace,
            '"!" ~ "*" + ? |': P.pJ.operator
        })
          , b = {
            __proto__: null,
            "@asciiLetter": 244,
            "@asciiUpperCase": 244,
            "@asciiLowerCase": 244,
            "@digit": 244,
            "@whitespace": 244,
            "@eof": 244,
            "@specialize": 76,
            "@extend": 78,
            "@top": 98,
            "@precedence": 102,
            "@left": 108,
            "@right": 110,
            "@cut": 112,
            "@tokens": 116,
            "@conflict": 126,
            "@local": 134,
            "@else": 142,
            "@external": 146,
            "@context": 172,
            "@dialects": 176,
            "@skip": 182,
            "@detectDelim": 190
        }
          , y = {
            __proto__: null,
            tokens: 136,
            from: 148,
            prop: 156,
            as: 158,
            propSource: 162,
            extend: 166,
            specialize: 168
        }
          , x = g.WQ.deserialize({
            version: 14,
            states: "<zQ]QPOOOOQO'#Ca'#CaO}QPO'#C`OOQO'#Eq'#EqOOQO'#E`'#E`Q]QPOOOxQPO'#D^O!YQPO'#D`O!_QPO'#DgO!dQQO'#DpO!iQQO'#D{O!zQPO'#ETO#PQPO'#EVO#UQPO'#EYOOQO'#E^'#E^O#ZQPO'#CdO#fQPO'#CnO$iQPO'#CoOOQO,58z,58zO#UQPO,58zO!QQPO,58zOOQO-E8^-E8^O}QPO,59xO$pQPO'#DbOOQO,59z,59zO$xQPO'#DiOOQO,5:R,5:RO%ZQPO,5:[O!zQPO,5:bO!zQPO,5:gO!zQPO,5:jO#UQPO,5:lOOQO'#Cg'#CgO%`QQO,5:oO%eQPO'#EXOOQO,5:q,5:qO%mQPO,5:tO&eQPO'#CeO&pQPO,59OO#^QPO,59OOOQO,59O,59OOOQO,59Y,59YO&xQPO,59YO(bQPO'#EyO(oQPO'#EyOOQO'#Ey'#EyOOQO'#Cv'#CvO)nQPO'#EwO#UQPO'#C}O*[QPO'#DQOOQO'#Ex'#ExO$sQPO'#DVO!zQPO'#DYOOQO'#E{'#E{O*cQPO'#DUOOQO'#Ew'#EwO*vQPO'#EfO+ZQPO'#D[O+lQPO'#EvOOQO'#Ev'#EvOOQO,59Z,59ZO+}QPO,59ZO,SQPO'#DROOQO1G.f1G.fO#UQPO1G.fOOQO1G/d1G/dO#UQPO1G/dO!QQPO1G/dOOQO'#DX'#DXO,[QPO'#DcO,pQPO'#EgO,{QPO,59|OOQO,59|,59|O-TQPO'#DoOOQO'#E|'#E|OOQO'#Eh'#EhO-lQPO,5:TOOQO,5:T,5:TO-}QPO'#DjO.SQPO'#DlO.jQPO'#DsOOQO1G/v1G/vO.qQQO1G/|O.vQQO1G0RO/OQQO1G0UO!zQPO1G0WO/TQPO1G0ZO/YQPO'#ElO/eQPO,5:sOOQO,5:s,5:sO/mQPO'#E]OOQO1G0b1G0bO/xQPO,59POOQO,5:{,5:{OOQO1G.j1G.jO0^QPO1G.jOOQO-E8_-E8_O!zQPO'#EcO0fQPO1G.tOOQO1G.t1G.tOxQPO,59_O0nQPO'#CuOOQO,59`,59`OOQO,59i,59iO#UQPO,59iO0uQPO'#EeOOQO,59d,59dOOQO,59f,59fOOQO,59h,59hOOQO'#Ee'#EeO2VQPO,59pOOQO,59l,59lO2jQPO,59lOOQO,59q,59qOOQO,59t,59tOOQO,5;Q,5;QOOQO-E8d-E8dO2oQPO,59vOOQO1G.u1G.uOOQO,59m,59mO,VQPO,59mOOQO7+$Q7+$QOOQO7+%O7+%OO#UQPO7+%OOOQO,59},59}OOQO,5;R,5;ROOQO-E8e-E8eOOQO1G/h1G/hOOQO,5:Z,5:ZOOQO-E8f-E8fOOQO1G/o1G/oO3QQPO'#DkOOQO,5:U,5:UO3]QPO'#DnOOQO,5:W,5:WOOQO'#Ej'#EjO3eQPO,5:_OOQO,5:_,5:_OxQPO'#DtO3lQPO7+%hO3qQPO7+%mO!zQPO7+%mO3vQPO7+%pO3{QQO7+%rOOQO7+%u7+%uOOQO,5;W,5;WOOQO-E8j-E8jOOQO1G0_1G0_OOQO'#Em'#EmO4QQPO,5:wOOQO,5:w,5:wOxQPO'#CmOOQO'#Eb'#EbO4]QPO1G.kOOQO7+$U7+$UP&sQPO'#EaOOQO,5:},5:}OOQO-E8a-E8aOOQO7+$`7+$`OOQO1G.y1G.yOOQO,59a,59aO4qQPO,59aOOQO1G/T1G/TOOQO-E8c-E8cOOQO1G/W1G/WOOQO1G/X1G/XOOQO<<Hj<<HjO4yQPO'#EyO5_QPO'#EiO5mQPO,5:VOOQO,5:V,5:VO5xQPO,5:YOOQO-E8h-E8hOOQO1G/y1G/yO6TQPO,5:`O6lQPO<<ISOOQO<<IX<<IXO6qQQO<<IXOOQO<<I[<<I[O6vQPO<<I^OOQO-E8k-E8kOOQO1G0c1G0cO6{QPO,59XOOQO-E8`-E8`O#nQPO'#EdO7QQPO1G.{OOQO1G.{1G.{OOQO,5;T,5;TOOQO-E8g-E8gOOQO1G/q1G/qO7YQPO1G/tO7_QPO1G/tOOQO1G/z1G/zO7gQPO'#DyOOQOAN>nAN>nO7oQPOAN>sO6lQPOAN>xOOQO1G.s1G.sOOQO,5;O,5;OOOQO-E8b-E8bOOQO7+$g7+$gOOQO7+%`7+%`O7tQPO7+%`O7yQPO'#DzO8XQPO'#EkO8dQPO,5:eOOQO,5:e,5:eOOQOG24_G24_OOQOG24dG24dOOQO<<Hz<<HzOOQO,5:f,5:fOOQO,5;V,5;VOOQO-E8i-E8iOOQO1G0P1G0P",
            stateData: "8s~O#dOSPOSQOS~O!RUO!TVO![WO!eXO!kYO!xZO!z[O!}]O#R^O#fPO~OV_O`aO#i`O~O`gO~O`iO~O!fkO~O!flO!pmO!snO!uoO!voO~O#fpO~O`rO~O`aO~OUxOYuO#fpO~O#fpO#hyO~OV_O]!SOd!SOe!SOf!SOs!ROv!`Ow!`Oz!TO}!UO!P!YO#fPO#n!OO~O_!^O~P#nO_!jO#f!fO~O]!kO_!oO!T!pO!a!qO#fPO~O`!rO~O!l!xO~O_!{O#fpO~O`!|O!R!|a!T!|a![!|a!e!|a!k!|a!x!|a!z!|a!}!|a#R!|a#b!|a#f!|a~O[#OOUXX#gXX~OU#QO#g#PO~O#g#TO#h#VO~O#i#XO]#mX_#mXd#mXe#mXf#mXk#mXm#mXo#mXs#mXv#mXw#mXz#mX}#mX!P#mX#f#mX#n#mXr#mX#g#mX#h#mX~OV_O^#WO`aO~P'QOV#mX~P'QOV_O]!SOd!SOe!SOf!SOs!ROv!`Ow!`Oz!TO}!UO#fPO#n!OO~Ok#^Om#_Oo#`O_#kX!P#kXr#kX#g#kX#h#kX~P(vOr#cO~P#nO_xX!PxXrxX#gxX#hxX~P(vO_#YX!P#YXr#YX#g#YX#h#YX~P(vO!P!YO_!OXr!OX#g!OX#h!OX~O!P!YO_#jXr#jX#g#jX#h#jX~O_#jO~OV_O#i#XO~O!W#pO!X#pO!Y#pO_!VX#f!VX#g!VX~O#g#qO_#ZX#f#ZX~O_#sO#f!fO~OV_O]!cX_!cX!T!cX!a!cX#f!cX!i!cX~O]!kO_#vO!T!pO!a!qO#fPO~O`#wO~O`#yO~O]!kO!T!pO!a!qO!i$OO#fPO~O_#}O~P.XO!l$PO~O!l$QO!q$RO~O!l$SO~O]$UO~O#g$VO_#`X#f#`X~O_$XO#fpO~O_$[O!RUO#fPO~O]$^O^$^O`$]O#fpOUXa#gXa~OU$`O#g#PO~O#g#TO#h$dO~O#h$fO~P#nOk#^Om#_Oo#`OV#XX]#XX_#XXd#XXe#XXf#XXs#XXv#XXw#XXz#XX}#XX!P#XX#f#XX#n#XXr#XX#g#XX#h#XX~O_xa!Pxarxa#gxa#hxa~P(vOr$jO~O!P!YO_!Oar!Oa#g!Oa#h!Oa~O]$nO_$pO#fPO~O]$qO#fPO~O_$sO~P.XO]$uO~O]$vO~O]$xO~O!l$yO~O_${O!RUO#fPO~O]$^O^$^O`$]O#fpOUXi#gXi~O#g%OO#h%QO~O^#WO#i#XO]#mX_#mX#f#mX#g#mX~O#g%RO]#]X_#]X#f#]X~O]$nO_%TO#fPO~O]%UO#fPO#g%VO~OV_O]!ha_!ha!T!ha!a!ha!i!ha#f!ha~O`%XO~O!l%ZO~O]%[O~O_%]O~O#g%OO#h%`O~O_%aO~O]%bO#fPO~O_%fO#fPO~O]%gO~O_%iO~OV_O_!nX#f!nX#g!nX~O#g%kO_#_X#f#_X~O_%mO#fPO~Oe#dfz#f#q~",
            goto: ".d#qPPPP#r$QPP$}%nP%tPPPPP&m&q&}PPP'p(P(`(kP(kP(kP(k(kPP(k(kPP(u(|P)W(|P)_P)eP)mP)q)tPPP)mP)x){*R){P*U){)mPP*X*[P)mPP*`*f)mPP)mP)mPP)mP)mP*j)mP)m*m)mP*p*v*|+S+Y+`+g+t+z,Q,W,^,d,jPPP,pPPPP,t-Q-Z-gP.O.[SROTW!li!n!r#|T$Y!|$Z`QOTi!n!r!|#|$ZQfU`{a!P!R!W!Y#X#b%OQ$e#WY$m#w#y$o$q%VQ$t$OQ$|$]T%c%X%eQdQ`!Qa!P!R!W!Y#X#b%OQ!efQ#[{Q#l!`Q#t!kQ%W$tR%j%cQv_R#RwQqZSu_wQz`Q!tlQ!umQ!vnS!yr!zQ#f!UQ$T!wS$^#O$_Q$b#TR$w$RT$^#O$_QcQQ!bdQ!dfR#o!eQbQQt]S!acdQ!cfQ!woS#Z{!QQ#m!bS#n!d!eQ$h#[R$l#ok|a!P!R!W!Y#X#b#w#y$o$q%O%Vk}a!P!R!W!Y#X#b#w#y$o$q%O%VU#Y{|$mQ#k!`R$k#la!Sa!P!R!W!Y#X#b%OZ!Xa!R!Y#X%Oa!Va!P!R!W!Y#X#b%OS!gg!iR#e!TX!]a!R#X%OSROTT$Y!|$ZTROTRhVT!hg!iRjWX!li!n!r#|R#x!pR#z!qR!skT#{!r#|Q%Y$uR%h%[T%d%X%eRs[R!}tQTOReTQw_R#SwQ$_#OR$}$_Q#UzR$c#UQ%P$gR%_%PS#b!P!WR$i#bW!Za!R#X%OS#h!Z#iR#i![Q!igR#r!iQ!niR#u!nQ$o#wR%S$oQ#|!rR$r#|Q%e%XR%l%eQ!zrR$W!zQ$Z!|R$z$ZTSOTQ!_aQ#d!RQ$g#XR%^%OW![a!R#X%OR#g!YY!Pa!R!Y#X%OV#]!P!W#b`!Sa!P!R!W!Y#X#b%OS$n#w$oQ$q#yQ%U$qR%b%VY!Wa!R!Y#X%OV#a!P!W#bS!mi!nT#{!r#|",
            nodeNames: "⚠ LineComment BlockComment Grammar RuleDeclaration RuleName ] [ Props Prop AtName Name = Literal . } { PropEsc ParamList Body CharSet AnyChar InvertedCharSet ScopedName Call ArgList CharClass ? Optional * Repeat + Repeat1 InlineRule ) ( ParenExpression Specialization @specialize @extend Sequence PrecedenceMarker ! PrecedenceName AmbiguityMarker ~ Choice | RuleDeclaration @top PrecedenceDeclaration @precedence PrecedenceBody Precedence @left @right @cut TokensDeclaration @tokens TokensBody TokenPrecedenceDeclaration PrecedenceBody TokenConflictDeclaration @conflict ConflictBody LiteralTokenDeclaration LocalTokensDeclaration @local tokens TokensBody ElseToken @else ExternalTokensDeclaration @external from TokensBody Token ExternalPropDeclaration prop as ExternalPropSourceDeclaration propSource ExternalSpecializeDeclaration extend specialize ContextDeclaration @context DialectsDeclaration @dialects DialectBody TopSkipDeclaration @skip SkipScope SkipBody DetectDelimDeclaration @detectDelim",
            maxTerm: 125,
            nodeProps: [["group", 4, "Declaration Declaration", -16, 5, 13, 20, 21, 22, 23, 24, 26, 28, 30, 32, 33, 36, 37, 40, 46, "Expression", -16, 48, 50, 57, 60, 62, 65, 66, 72, 77, 80, 82, 85, 87, 90, 92, 94, "Declaration"], ["openedBy", 6, "[", 15, "{", 34, "("], ["closedBy", 7, "]", 16, "}", 35, ")"]],
            propSources: [S],
            skippedNodes: [0, 1, 2],
            repeatNodeCount: 14,
            tokenData: "3w~R!OX^$Rpq$Rqr$vrs&ftu(^wx)zxy+myz+rz{+w{|+||},R}!O,W!O!P,}!P!Q-S!Q![,W!^!_.{!_!`/Q!`!a/V!a!b/[!b!c/a!c!},W!}#O0q#P#Q0v#R#S0{#T#o,W#o#p1n#p#q1s#q#r1x#r#s1}#y#z$R$f$g$R$g#BY,W#BY#BZ2S#BZ$IS,W$IS$I_2S$I_$I|,W$I|$JO2S$JO$JT,W$JT$JU2S$JU$KV,W$KV$KW2S$KW&FU,W&FU&FV2S&FV;'S,W;'S;=`,w<%lO,W~$WY#d~X^$Rpq$R#y#z$R$f$g$R#BY#BZ$R$IS$I_$R$I|$JO$R$JT$JU$R$KV$KW$R&FU&FV$R~${Pz~!}#O%O~%RUO#O%O#O#P%e#P#Q&Z#Q;'S%O;'S;=`&`<%lO%O~%hRO;'S%O;'S;=`%q;=`O%O~%tVO#O%O#O#P%e#P#Q&Z#Q;'S%O;'S;=`&`;=`<%l%O<%lO%O~&`Of~~&cP;=`<%l%O~&kW]~OY&fZr&frs'Ts#O&f#O#P'Y#P;'S&f;'S;=`(W<%lO&f~'YO]~~']RO;'S&f;'S;=`'f;=`O&f~'kX]~OY&fZr&frs'Ts#O&f#O#P'Y#P;'S&f;'S;=`(W;=`<%l&f<%lO&f~(ZP;=`<%l&f~(aP!}#O(d~(gUO#O(d#O#P(y#P#Q)o#Q;'S(d;'S;=`)t<%lO(d~(|RO;'S(d;'S;=`)V;=`O(d~)YVO#O(d#O#P(y#P#Q)o#Q;'S(d;'S;=`)t;=`<%l(d<%lO(d~)tOd~~)wP;=`<%l(d~*PW]~OY)zZw)zwx'Tx#O)z#O#P*i#P;'S)z;'S;=`+g<%lO)z~*lRO;'S)z;'S;=`*u;=`O)z~*zX]~OY)zZw)zwx'Tx#O)z#O#P*i#P;'S)z;'S;=`+g;=`<%l)z<%lO)z~+jP;=`<%l)z~+rOs~~+wOr~~+|Om~~,ROo~~,WO#g~R,_W#fP#qQ}!O,W!Q![,W!c!},W#R#S,W#T#o,W$g;'S,W;'S;=`,w<%lO,WR,zP;=`<%l,W~-SO^~~-VQz{-]!P!Q.d~-`TOz-]z{-o{;'S-];'S;=`.^<%lO-]~-rVOz-]z{-o{!P-]!P!Q.X!Q;'S-];'S;=`.^<%lO-]~.^OQ~~.aP;=`<%l-]~.iSP~OY.dZ;'S.d;'S;=`.u<%lO.d~.xP;=`<%l.d~/QO#i~~/VO[~~/[O#h~~/aOk~~/dW}!O/|!Q![/|!c!}/|#R#S/|#T#o/|$g;'S/|;'S;=`0k<%lO/|~0RWY~}!O/|!Q![/|!c!}/|#R#S/|#T#o/|$g;'S/|;'S;=`0k<%lO/|~0nP;=`<%l/|~0vOV~~0{OU~R1UWeP#fP#qQ}!O,W!Q![,W!c!},W#R#S,W#T#o,W$g;'S,W;'S;=`,w<%lO,W~1sO`~~1xO!P~~1}O_~~2SO}~~2]h#d~#fP#qQX^$Rpq$R}!O,W!Q![,W!c!},W#R#S,W#T#o,W#y#z$R$f$g$R$g#BY,W#BY#BZ2S#BZ$IS,W$IS$I_2S$I_$I|,W$I|$JO2S$JO$JT,W$JT$JU2S$JU$KV,W$KV$KW2S$KW&FU,W&FU&FV2S&FV;'S,W;'S;=`,w<%lO,W",
            tokenizers: [0, 1],
            topRules: {
                Grammar: [0, 3]
            },
            specialized: [{
                term: 10,
                get: e=>b[e] || -1
            }, {
                term: 125,
                get: e=>y[e] || -1
            }],
            tokenPrec: 1086
        })
          , X = r.qp.define({
            name: "lezer",
            parser: x.configure({
                props: [r.x0.add({
                    "Body TokensBody SkipBody PrecedenceBody": r.Dv
                })]
            }),
            languageData: {
                commentTokens: {
                    block: {
                        open: "/*",
                        close: "*/"
                    },
                    line: "//"
                },
                indentOnInput: /^\s*\}$/
            }
        });
        var v = O(9379)
          , k = O(658)
          , w = O(725)
          , T = O(9439)
          , _ = O(5027)
          , W = O(4676)
          , Z = O(3957)
          , z = O(6260)
          , q = O(6581)
          , Y = O(7422)
          , R = O(3702)
          , U = O(3196)
          , V = O(3478)
          , E = O(2059)
          , j = O(3225)
          , G = O(8161)
          , C = O(5430)
          , A = O(3185)
          , I = O(8998)
          , J = O(7573)
          , N = O(9565)
          , D = O(130)
          , L = O(9318)
          , F = O(6373)
          , M = O(4756)
          , B = O(3985)
          , H = O(9862)
          , K = O(7420)
          , ee = O(5344)
          , et = O(5455)
          , eO = O(2569)
          , en = O(8174)
          , er = O(4737)
          , ei = O(3580)
          , ea = O(1067)
          , eo = O(6746)
          , es = O(4085)
          , el = O(2197)
          , ec = O(8590)
          , eu = O(9140)
          , ep = O(4520)
          , ed = O(7539)
          , ef = O(2232)
          , eh = O(6277)
          , em = O(3113)
          , eQ = O(1291)
          , e$ = O(8937)
          , eg = O(874)
          , eP = O(1988)
          , eS = O(6342)
          , eb = O(681)
          , ey = O(7337)
          , ex = O(1568)
          , eX = O(5912)
          , ev = O(9494)
          , ek = O(812)
          , ew = O(889)
          , eT = O(84)
          , e_ = O(8240)
          , eW = O(2891)
          , eZ = O(6778)
          , ez = O(2685)
          , eq = O(4595);
        let eY = new Set(q.keywords.properties)
          , eR = new Set(q.keywords.colors)
          , eU = new Set(q.keywords.values)
          , eV = new Set(q.keywords.fonts)
          , eE = RegExp("^true|false|null|auto")
          , ej = RegExp("^\\(|\\)|=|>|<|==|>=|<=|\\+|-|\\!=|/|\\*|%|and|or|not|;|\\{|\\}|:")
          , eG = /^::?[a-zA-Z_][\w\-]*/;
        function eC(e) {
            return !e.peek() || e.match(/\s+$/, !1)
        }
        function eA(e, t) {
            let O = e.peek();
            return ")" === O ? (e.next(),
            t.tokenizer = eF,
            "operator") : "(" === O ? (e.next(),
            e.eatSpace(),
            "operator") : "'" === O || '"' === O ? (t.tokenizer = eJ(e.next()),
            "string") : (t.tokenizer = eJ(")", !1),
            "string")
        }
        function eI(e, t) {
            return function(O, n) {
                return O.sol() && O.indentation() <= e ? (n.tokenizer = eF,
                eF(O, n)) : (t && O.skipTo("*/") ? (O.next(),
                O.next(),
                n.tokenizer = eF) : O.skipToEnd(),
                "comment")
            }
        }
        function eJ(e, t) {
            return null == t && (t = !0),
            function O(n, r) {
                let i = n.next()
                  , a = n.peek()
                  , o = n.string.charAt(n.pos - 2);
                return "\\" !== i && a === e || i === e && "\\" !== o ? (i !== e && t && n.next(),
                eC(n) && (r.cursorHalf = 0),
                r.tokenizer = eF,
                "string") : "#" === i && "{" === a ? (r.tokenizer = eN(O),
                n.next(),
                "operator") : "string"
            }
        }
        function eN(e) {
            return function(t, O) {
                return "}" === t.peek() ? (t.next(),
                O.tokenizer = e,
                "operator") : eF(t, O)
            }
        }
        function eD(e, t) {
            if (0 == e.indentCount) {
                e.indentCount++;
                let O = e.scopes[0].offset + t.indentUnit;
                e.scopes.unshift({
                    offset: O
                })
            }
        }
        function eL(e) {
            1 != e.scopes.length && e.scopes.shift()
        }
        function eF(e, t) {
            let O = e.peek();
            if (e.match("/*"))
                return t.tokenizer = eI(e.indentation(), !0),
                t.tokenizer(e, t);
            if (e.match("//"))
                return t.tokenizer = eI(e.indentation(), !1),
                t.tokenizer(e, t);
            if (e.match("#{"))
                return t.tokenizer = eN(eF),
                "operator";
            if ('"' === O || "'" === O)
                return e.next(),
                t.tokenizer = eJ(O),
                "string";
            if (t.cursorHalf) {
                if ("#" === O && (e.next(),
                e.match(/[0-9a-fA-F]{6}|[0-9a-fA-F]{3}/)) || e.match(/^-?[0-9\.]+/))
                    return eC(e) && (t.cursorHalf = 0),
                    "number";
                if (e.match(/^(px|em|in)\b/))
                    return eC(e) && (t.cursorHalf = 0),
                    "unit";
                if (e.match(eE))
                    return eC(e) && (t.cursorHalf = 0),
                    "keyword";
                if (e.match(/^url/) && "(" === e.peek())
                    return t.tokenizer = eA,
                    eC(e) && (t.cursorHalf = 0),
                    "atom";
                if ("$" === O)
                    return e.next(),
                    e.eatWhile(/[\w-]/),
                    eC(e) && (t.cursorHalf = 0),
                    "variable-2";
                if ("!" === O)
                    return e.next(),
                    t.cursorHalf = 0,
                    e.match(/^[\w]+/) ? "keyword" : "operator";
                if (e.match(ej))
                    return eC(e) && (t.cursorHalf = 0),
                    "operator";
                if (e.eatWhile(/[\w-]/))
                    return (eC(e) && (t.cursorHalf = 0),
                    n = e.current().toLowerCase(),
                    eU.has(n)) ? "atom" : eR.has(n) ? "keyword" : eY.has(n) ? (t.prevProp = e.current().toLowerCase(),
                    "property") : "tag";
                if (eC(e))
                    return t.cursorHalf = 0,
                    null
            } else {
                if ("-" === O && e.match(/^-\w+-/))
                    return "meta";
                if ("." === O) {
                    if (e.next(),
                    e.match(/^[\w-]+/))
                        return eD(t, e),
                        "qualifier";
                    if ("#" === e.peek())
                        return eD(t, e),
                        "tag"
                }
                if ("#" === O) {
                    if (e.next(),
                    e.match(/^[\w-]+/))
                        return eD(t, e),
                        "builtin";
                    if ("#" === e.peek())
                        return eD(t, e),
                        "tag"
                }
                if ("$" === O)
                    return e.next(),
                    e.eatWhile(/[\w-]/),
                    "variable-2";
                if (e.match(/^-?[0-9\.]+/))
                    return "number";
                if (e.match(/^(px|em|in)\b/))
                    return "unit";
                if (e.match(eE))
                    return "keyword";
                if (e.match(/^url/) && "(" === e.peek())
                    return t.tokenizer = eA,
                    "atom";
                if ("=" === O && e.match(/^=[\w-]+/))
                    return eD(t, e),
                    "meta";
                if ("+" === O && e.match(/^\+[\w-]+/))
                    return "meta";
                if ("@" === O && e.match("@extend") && !e.match(/\s*[\w]/) && eL(t),
                e.match(/^@(else if|if|media|else|for|each|while|mixin|function)/))
                    return eD(t, e),
                    "def";
                if ("@" === O)
                    return e.next(),
                    e.eatWhile(/[\w-]/),
                    "def";
                if (e.eatWhile(/[\w-]/)) {
                    if (e.match(/ *: *[\w-\+\$#!\("']/, !1)) {
                        n = e.current().toLowerCase();
                        let O = t.prevProp + "-" + n;
                        return eY.has(O) ? "property" : eY.has(n) ? (t.prevProp = n,
                        "property") : eV.has(n) ? "property" : "tag"
                    }
                    return e.match(/ *:/, !1) ? (eD(t, e),
                    t.cursorHalf = 1,
                    t.prevProp = e.current().toLowerCase(),
                    "property") : (e.match(/ *,/, !1) || eD(t, e),
                    "tag")
                }
                if (":" === O)
                    return e.match(eG) ? "type" : (e.next(),
                    t.cursorHalf = 1,
                    "operator")
            }
            return e.match(ej) ? "operator" : (e.next(),
            null)
        }
        let eM = {
            name: "sass",
            startState: function() {
                return {
                    tokenizer: eF,
                    scopes: [{
                        offset: 0,
                        type: "sass"
                    }],
                    indentCount: 0,
                    cursorHalf: 0,
                    definedVars: [],
                    definedMixins: []
                }
            },
            token: function(e, t) {
                let O = function(e, t) {
                    e.sol() && (t.indentCount = 0);
                    let O = t.tokenizer(e, t)
                      , n = e.current();
                    if (("@return" === n || "}" === n) && eL(t),
                    null !== O) {
                        let O = e.pos - n.length + e.indentUnit * t.indentCount
                          , r = [];
                        for (let e = 0; e < t.scopes.length; e++) {
                            let n = t.scopes[e];
                            n.offset <= O && r.push(n)
                        }
                        t.scopes = r
                    }
                    return O
                }(e, t);
                return t.lastToken = {
                    style: O,
                    content: e.current()
                },
                O
            },
            indent: function(e) {
                return e.scopes[0].offset
            },
            languageData: {
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                },
                autocomplete: q.keywords.all
            }
        };
        var eB = O(8346)
          , eH = O(6148)
          , eK = O(7671)
          , e1 = O(8045)
          , e0 = O(1583)
          , e5 = O(8008)
          , e2 = O(9316)
          , e9 = O(2199)
          , e4 = O(9744)
          , e6 = O(8777)
          , e7 = O(1087)
          , e3 = O(2587)
          , e8 = O(2511)
          , te = O(811)
          , tt = O(4686)
          , tO = O(3355)
          , tn = O(6482)
          , tr = O(6547)
          , ti = O(5593)
          , ta = O(1747)
          , to = O(2928)
          , ts = O(5113)
          , tl = O(1124)
          , tc = O(314)
          , tu = O(8856)
          , tp = O(2819)
          , td = O(5866)
          , tf = O(4869)
          , th = {
            apl: ()=>r.il.define(w.apl),
            asciiArmor: ()=>r.il.define(T.asciiArmor),
            asterisk: ()=>r.il.define(_.asterisk),
            c: ()=>r.il.define(Z.c),
            csharp: ()=>r.il.define(Z.csharp),
            scala: ()=>r.il.define(Z.scala),
            kotlin: ()=>r.il.define(Z.kotlin),
            shader: ()=>r.il.define(Z.shader),
            nesC: ()=>r.il.define(Z.nesC),
            objectiveC: ()=>r.il.define(Z.objectiveC),
            objectiveCpp: ()=>r.il.define(Z.objectiveCpp),
            squirrel: ()=>r.il.define(Z.squirrel),
            ceylon: ()=>r.il.define(Z.ceylon),
            dart: ()=>r.il.define(Z.dart),
            cmake: ()=>r.il.define(Y.cmake),
            cobol: ()=>r.il.define(R.cobol),
            commonLisp: ()=>r.il.define(V.commonLisp),
            crystal: ()=>r.il.define(E.crystal),
            cypher: ()=>r.il.define(j.cypher),
            d: ()=>r.il.define(G.d),
            diff: ()=>r.il.define(C.diff),
            dtd: ()=>r.il.define(I.dtd),
            dylan: ()=>r.il.define(J.dylan),
            ebnf: ()=>r.il.define(N.ebnf),
            ecl: ()=>r.il.define(D.ecl),
            eiffel: ()=>r.il.define(L.eiffel),
            elm: ()=>r.il.define(F.elm),
            factor: ()=>r.il.define(B.factor),
            fcl: ()=>r.il.define(H.fcl),
            forth: ()=>r.il.define(K.forth),
            fortran: ()=>r.il.define(ee.fortran),
            gas: ()=>r.il.define(et.gas),
            gherkin: ()=>r.il.define(eO.gherkin),
            groovy: ()=>r.il.define(er.groovy),
            haskell: ()=>r.il.define(ei.haskell),
            haxe: ()=>r.il.define(ea.haxe),
            http: ()=>r.il.define(eo.http),
            idl: ()=>r.il.define(es.idl),
            jinja2: ()=>r.il.define(el.jinja2),
            mathematica: ()=>r.il.define(ed.mathematica),
            mbox: ()=>r.il.define(ef.mbox),
            mirc: ()=>r.il.define(eh.mirc),
            modelica: ()=>r.il.define(em.modelica),
            mscgen: ()=>r.il.define(eQ.mscgen),
            mumps: ()=>r.il.define(e$.mumps),
            nsis: ()=>r.il.define(eP.nsis),
            ntriples: ()=>r.il.define(eS.ntriples),
            octave: ()=>r.il.define(eb.octave),
            oz: ()=>r.il.define(ey.oz),
            pig: ()=>r.il.define(ev.pig),
            properties: ()=>r.il.define(ew.properties),
            protobuf: ()=>r.il.define(eT.protobuf),
            puppet: ()=>r.il.define(e_.puppet),
            q: ()=>r.il.define(eW.q),
            sas: ()=>r.il.define(eq.sas),
            sass: ()=>r.il.define(eM),
            sieve: ()=>r.il.define(eK.sieve),
            smalltalk: ()=>r.il.define(e1.smalltalk),
            solr: ()=>r.il.define(e0.solr),
            sparql: ()=>r.il.define(e5.sparql),
            spreadsheet: ()=>r.il.define(e2.spreadsheet),
            stex: ()=>r.il.define(e9.stex),
            textile: ()=>r.il.define(e3.textile),
            tiddlyWiki: ()=>r.il.define(e8.tiddlyWiki),
            tiki: ()=>r.il.define(te.tiki),
            troff: ()=>r.il.define(tO.troff),
            ttcn: ()=>r.il.define(tn.ttcn),
            turtle: ()=>r.il.define(tr.turtle),
            velocity: ()=>r.il.define(to.velocity),
            verilog: ()=>r.il.define(ts.verilog),
            vhdl: ()=>r.il.define(tl.vhdl),
            webIDL: ()=>r.il.define(tc.webIDL),
            xQuery: ()=>r.il.define(tu.xQuery),
            yacas: ()=>r.il.define(tp.yacas),
            z80: ()=>r.il.define(tf.z80),
            wast: k.wast,
            javascript: l.javascript,
            jsx: ()=>(0,
            l.javascript)({
                jsx: !0
            }),
            typescript: ()=>(0,
            l.javascript)({
                typescript: !0
            }),
            tsx: ()=>(0,
            l.javascript)({
                jsx: !0,
                typescript: !0
            }),
            json: p.json,
            html: c.html,
            css: u.css,
            python: d.python,
            markdown: ()=>(0,
            s.markdown)({
                base: s.markdownLanguage,
                codeLanguages: o
            }),
            xml: f.xml,
            sql: h.sql,
            mysql: ()=>(0,
            h.sql)({
                dialect: h.MySQL
            }),
            pgsql: ()=>(0,
            h.sql)({
                dialect: h.PostgreSQL
            }),
            java: m.java,
            rust: Q.rust,
            cpp: $.cpp,
            lezer: function() {
                return new r.ri(X)
            },
            php: v.php,
            go: ()=>r.il.define(en.go),
            shell: ()=>r.il.define(eH.shell),
            lua: ()=>r.il.define(ep.lua),
            swift: ()=>r.il.define(e6.swift),
            tcl: ()=>r.il.define(e7.tcl),
            yaml: ()=>r.il.define(td.yaml),
            vb: ()=>r.il.define(ti.vb),
            powershell: ()=>r.il.define(ek.powerShell),
            brainfuck: ()=>r.il.define(W.brainfuck),
            stylus: ()=>r.il.define(e4.stylus),
            erlang: ()=>r.il.define(M.erlang),
            nginx: ()=>r.il.define(eg.nginx),
            perl: ()=>r.il.define(eX.perl),
            ruby: ()=>r.il.define(ez.ruby),
            pascal: ()=>r.il.define(ex.pascal),
            livescript: ()=>r.il.define(eu.liveScript),
            less: ()=>r.il.define(q.less),
            scheme: ()=>r.il.define(eB.scheme),
            toml: ()=>r.il.define(tt.toml),
            vbscript: ()=>r.il.define(ta.vbScript),
            clojure: ()=>r.il.define(z.clojure),
            coffeescript: ()=>r.il.define(U.coffeeScript),
            julia: ()=>r.il.define(ec.julia),
            dockerfile: ()=>r.il.define(A.dockerFile),
            r: ()=>r.il.define(eZ.r)
        };
        Object.keys(th)
    },
    3089: function(e, t, O) {
        "use strict";
        O.d(t, {
            WR: function() {
                return S
            }
        });
        var n = O(3728)
          , r = O(5306)
          , i = O(6470)
          , a = O(168)
          , o = e=>{
            var {theme: t, settings: O={}, styles: n=[]} = e
              , r = {
                ".cm-gutters": {}
            }
              , o = {};
            O.background && (o.backgroundColor = O.background),
            O.foreground && (o.color = O.foreground),
            (O.background || O.foreground) && (r["&"] = o),
            O.fontFamily && (r["&.cm-editor .cm-scroller"] = {
                fontFamily: O.fontFamily
            }),
            O.gutterBackground && (r[".cm-gutters"].backgroundColor = O.gutterBackground),
            O.gutterForeground && (r[".cm-gutters"].color = O.gutterForeground),
            O.gutterBorder && (r[".cm-gutters"].borderRightColor = O.gutterBorder),
            O.caret && (r[".cm-content"] = {
                caretColor: O.caret
            },
            r[".cm-cursor, .cm-dropCursor"] = {
                borderLeftColor: O.caret
            });
            var s = {};
            O.gutterActiveForeground && (s.color = O.gutterActiveForeground),
            O.lineHighlight && (r[".cm-activeLine"] = {
                backgroundColor: O.lineHighlight
            },
            s.backgroundColor = O.lineHighlight),
            r[".cm-activeLineGutter"] = s,
            O.selection && (r["&.cm-focused .cm-selectionBackground, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection"] = {
                backgroundColor: O.selection
            }),
            O.selectionMatch && (r["& .cm-selectionMatch"] = {
                backgroundColor: O.selectionMatch
            });
            var l = i.tk.theme(r, {
                dark: "dark" === t
            })
              , c = a.Qf.define(n);
            return [l, (0,
            a.nF)(c)]
        }
          , s = {
            background: "#0f0f0f",
            foreground: "#defdef",
            caret: "#00FF00",
            selection: "#515151",
            selectionMatch: "#515151",
            gutterBackground: "#555",
            gutterForeground: "#FFFFFF",
            lineHighlight: "#314151"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, s, O),
                styles: [{
                    tag: r.pJ.keyword,
                    color: "darkgoldenrod",
                    fontWeight: "bold"
                }, {
                    tag: r.pJ.atom,
                    color: "#77F"
                }, {
                    tag: r.pJ.comment,
                    color: "#7a7b7c",
                    fontStyle: "italic"
                }, {
                    tag: r.pJ.number,
                    color: "violet"
                }, {
                    tag: r.pJ.definition(r.pJ.variableName),
                    color: "#fffabc"
                }, {
                    tag: r.pJ.variableName,
                    color: "#abcdef"
                }, {
                    tag: r.pJ.function(r.pJ.variableName),
                    color: "#fffabc"
                }, {
                    tag: r.pJ.typeName,
                    color: "#FFDD44"
                }, {
                    tag: r.pJ.tagName,
                    color: "#def"
                }, {
                    tag: r.pJ.string,
                    color: "#2b4"
                }, {
                    tag: r.pJ.meta,
                    color: "#C9F"
                }, {
                    tag: r.pJ.bracket,
                    color: "#8a8a8a"
                }, {
                    tag: r.pJ.attributeName,
                    color: "#DDFF00"
                }, {
                    tag: r.pJ.heading,
                    color: "aquamarine",
                    fontWeight: "bold"
                }, {
                    tag: r.pJ.link,
                    color: "blueviolet",
                    fontWeight: "bold"
                }, ...i]
            })
        }
        )();
        var l = {
            background: "#282b2e",
            foreground: "#a9b7c6",
            caret: "#00FF00",
            selection: "#343739",
            selectionMatch: "#343739",
            lineHighlight: "#343739"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, l, O),
                styles: [{
                    tag: [r.pJ.keyword, r.pJ.deleted, r.pJ.className],
                    color: "#cc7832"
                }, {
                    tag: [r.pJ.number, r.pJ.literal, r.pJ.derefOperator],
                    color: "#6897bb"
                }, {
                    tag: [r.pJ.link, r.pJ.variableName],
                    color: "#629755"
                }, {
                    tag: [r.pJ.comment, r.pJ.quote],
                    color: "grey"
                }, {
                    tag: [r.pJ.meta, r.pJ.documentMeta],
                    color: "#bbb529"
                }, {
                    tag: [r.pJ.string, r.pJ.propertyName, r.pJ.attributeValue],
                    color: "#6a8759"
                }, {
                    tag: [r.pJ.heading, r.pJ.typeName],
                    color: "#ffc66d"
                }, {
                    tag: [r.pJ.attributeName],
                    color: "#a9b7c6"
                }, {
                    tag: [r.pJ.emphasis],
                    fontStyle: "italic"
                }, ...i]
            })
        }
        )();
        var c = {
            background: "#272C35",
            foreground: "#9d9b97",
            caret: "#797977",
            selection: "#ffffff30",
            selectionMatch: "#2B323D",
            gutterBackground: "#272C35",
            gutterForeground: "#465063",
            gutterBorder: "transparent",
            lineHighlight: "#2B323D"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, c, O),
                styles: [{
                    tag: [r.pJ.function(r.pJ.variableName), r.pJ.function(r.pJ.propertyName), r.pJ.url, r.pJ.processingInstruction],
                    color: "hsl(207, 82%, 66%)"
                }, {
                    tag: [r.pJ.tagName, r.pJ.heading],
                    color: "#e06c75"
                }, {
                    tag: r.pJ.comment,
                    color: "#54636D"
                }, {
                    tag: [r.pJ.propertyName],
                    color: "hsl(220, 14%, 71%)"
                }, {
                    tag: [r.pJ.attributeName, r.pJ.number],
                    color: "hsl( 29, 54%, 61%)"
                }, {
                    tag: r.pJ.className,
                    color: "hsl( 39, 67%, 69%)"
                }, {
                    tag: r.pJ.keyword,
                    color: "hsl(286, 60%, 67%)"
                }, {
                    tag: [r.pJ.string, r.pJ.regexp, r.pJ.special(r.pJ.propertyName)],
                    color: "#98c379"
                }, ...i]
            })
        }
        )();
        var u = {
            background: "#21202e",
            foreground: "#edecee",
            caret: "#a277ff",
            selection: "#3d375e7f",
            selectionMatch: "#3d375e7f",
            gutterBackground: "#21202e",
            gutterForeground: "#edecee",
            gutterBorder: "transparent",
            lineHighlight: "#a394f033"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, u, O),
                styles: [{
                    tag: r.pJ.keyword,
                    color: "#a277ff"
                }, {
                    tag: [r.pJ.name, r.pJ.deleted, r.pJ.character, r.pJ.macroName],
                    color: "#edecee"
                }, {
                    tag: [r.pJ.propertyName],
                    color: "#ffca85"
                }, {
                    tag: [r.pJ.processingInstruction, r.pJ.string, r.pJ.inserted, r.pJ.special(r.pJ.string)],
                    color: "#61ffca"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName), r.pJ.labelName],
                    color: "#ffca85"
                }, {
                    tag: [r.pJ.color, r.pJ.constant(r.pJ.name), r.pJ.standard(r.pJ.name)],
                    color: "#61ffca"
                }, {
                    tag: [r.pJ.definition(r.pJ.name), r.pJ.separator],
                    color: "#edecee"
                }, {
                    tag: [r.pJ.className],
                    color: "#82e2ff"
                }, {
                    tag: [r.pJ.number, r.pJ.changed, r.pJ.annotation, r.pJ.modifier, r.pJ.self, r.pJ.namespace],
                    color: "#61ffca"
                }, {
                    tag: [r.pJ.typeName],
                    color: "#82e2ff"
                }, {
                    tag: [r.pJ.operator, r.pJ.operatorKeyword],
                    color: "#a277ff"
                }, {
                    tag: [r.pJ.url, r.pJ.escape, r.pJ.regexp, r.pJ.link],
                    color: "#61ffca"
                }, {
                    tag: [r.pJ.meta, r.pJ.comment],
                    color: "#6d6d6d"
                }, {
                    tag: r.pJ.strong,
                    fontWeight: "bold"
                }, {
                    tag: r.pJ.emphasis,
                    fontStyle: "italic"
                }, {
                    tag: r.pJ.link,
                    textDecoration: "underline"
                }, {
                    tag: r.pJ.heading,
                    fontWeight: "bold",
                    color: "#a277ff"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#edecee"
                }, {
                    tag: r.pJ.invalid,
                    color: "#ff6767"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, ...i]
            })
        }
        )();
        var p = {
            background: "#FFFFFF",
            foreground: "#000000",
            caret: "#FBAC52",
            selection: "#FFD420",
            selectionMatch: "#FFD420",
            gutterBackground: "#f5f5f5",
            gutterForeground: "#4D4D4C",
            gutterBorder: "transparent",
            lineHighlight: "#00000012"
        };
        (e=>{
            var {theme: t="light", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, p, O),
                styles: [{
                    tag: [r.pJ.meta, r.pJ.comment],
                    color: "#804000"
                }, {
                    tag: [r.pJ.keyword, r.pJ.strong],
                    color: "#0000FF"
                }, {
                    tag: [r.pJ.number],
                    color: "#FF0080"
                }, {
                    tag: [r.pJ.string],
                    color: "#FF0080"
                }, {
                    tag: [r.pJ.variableName],
                    color: "#006600"
                }, {
                    tag: [r.pJ.escape],
                    color: "#33CC33"
                }, {
                    tag: [r.pJ.tagName],
                    color: "#1C02FF"
                }, {
                    tag: [r.pJ.heading],
                    color: "#0C07FF"
                }, {
                    tag: [r.pJ.quote],
                    color: "#000000"
                }, {
                    tag: [r.pJ.list],
                    color: "#B90690"
                }, {
                    tag: [r.pJ.documentMeta],
                    color: "#888888"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName)],
                    color: "#0000A2"
                }, {
                    tag: [r.pJ.definition(r.pJ.typeName), r.pJ.typeName],
                    color: "#6D79DE"
                }, ...i]
            })
        }
        )();
        var d = {
            background: "#28211c",
            foreground: "#9d9b97",
            caret: "#797977",
            selection: "#36312e",
            selectionMatch: "#4f382b",
            gutterBackground: "#28211c",
            gutterForeground: "#666666",
            lineHighlight: "rgba(255, 255, 255, 0.1)"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, d, O),
                styles: [{
                    tag: [r.pJ.atom, r.pJ.number, r.pJ.link, r.pJ.bool],
                    color: "#9b859d"
                }, {
                    tag: r.pJ.comment,
                    color: "#937121"
                }, {
                    tag: [r.pJ.keyword, r.pJ.tagName],
                    color: "#cf6a4c"
                }, {
                    tag: r.pJ.string,
                    color: "#f9ee98"
                }, {
                    tag: r.pJ.bracket,
                    color: "#9d9b97"
                }, {
                    tag: [r.pJ.variableName],
                    color: "#5ea6ea"
                }, {
                    tag: r.pJ.definition(r.pJ.variableName),
                    color: "#cf7d34"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName), r.pJ.className],
                    color: "#cf7d34"
                }, {
                    tag: [r.pJ.propertyName, r.pJ.attributeName],
                    color: "#54be0d"
                }, ...i]
            })
        }
        )();
        var f = {
            background: "#2B2B2B",
            foreground: "#f8f8f2",
            caret: "#FFFFFF",
            selection: "rgba(255, 255, 255, 0.1)",
            selectionMatch: "rgba(255, 255, 255, 0.2)",
            gutterBackground: "rgba(255, 255, 255, 0.1)",
            gutterForeground: "#999",
            gutterBorder: "transparent",
            lineHighlight: "rgba(255, 255, 255, 0.1)"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, f, O),
                styles: [{
                    tag: [r.pJ.atom, r.pJ.number],
                    color: "#bd93f9"
                }, {
                    tag: [r.pJ.comment],
                    color: "#61A151"
                }, {
                    tag: [r.pJ.string],
                    color: "#6A8759"
                }, {
                    tag: [r.pJ.variableName, r.pJ.operator],
                    color: "#A9B7C6"
                }, {
                    tag: [r.pJ.meta, r.pJ.className],
                    color: "#A9B7C6"
                }, {
                    tag: [r.pJ.propertyName],
                    color: "#FFC66D"
                }, {
                    tag: [r.pJ.keyword],
                    color: "#CC7832"
                }, {
                    tag: [r.pJ.tagName],
                    color: "#ff79c6"
                }, {
                    tag: [r.pJ.typeName],
                    color: "#ffb86c"
                }, ...i]
            })
        }
        )();
        var h = {
            background: "#282a36",
            foreground: "#f8f8f2",
            caret: "#f8f8f0",
            selection: "rgba(255, 255, 255, 0.1)",
            selectionMatch: "rgba(255, 255, 255, 0.2)",
            gutterBackground: "#282a36",
            gutterForeground: "#6D8A88",
            gutterBorder: "transparent",
            lineHighlight: "rgba(255, 255, 255, 0.1)"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, h, O),
                styles: [{
                    tag: r.pJ.comment,
                    color: "#6272a4"
                }, {
                    tag: r.pJ.string,
                    color: "#f1fa8c"
                }, {
                    tag: r.pJ.atom,
                    color: "#bd93f9"
                }, {
                    tag: r.pJ.meta,
                    color: "#f8f8f2"
                }, {
                    tag: [r.pJ.keyword, r.pJ.operator, r.pJ.tagName],
                    color: "#ff79c6"
                }, {
                    tag: [r.pJ.function(r.pJ.propertyName), r.pJ.propertyName],
                    color: "#66d9ef"
                }, {
                    tag: [r.pJ.definition(r.pJ.variableName), r.pJ.function(r.pJ.variableName), r.pJ.className, r.pJ.attributeName],
                    color: "#50fa7b"
                }, {
                    tag: r.pJ.atom,
                    color: "#bd93f9"
                }, ...i]
            })
        }
        )();
        var m = {
            background: "#faf8f5",
            foreground: "#b29762",
            caret: "#93abdc",
            selection: "#e3dcce",
            selectionMatch: "#e3dcce",
            gutterBackground: "#faf8f5",
            gutterForeground: "#cdc4b1",
            gutterBorder: "transparent",
            lineHighlight: "#EFEFEF"
        };
        (e=>{
            var {theme: t="light", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, m, O),
                styles: [{
                    tag: [r.pJ.comment, r.pJ.bracket],
                    color: "#b6ad9a"
                }, {
                    tag: [r.pJ.atom, r.pJ.number, r.pJ.keyword, r.pJ.link, r.pJ.attributeName, r.pJ.quote],
                    color: "#063289"
                }, {
                    tag: [r.pJ.emphasis, r.pJ.heading, r.pJ.tagName, r.pJ.propertyName, r.pJ.variableName],
                    color: "#2d2006"
                }, {
                    tag: [r.pJ.typeName, r.pJ.url, r.pJ.string],
                    color: "#896724"
                }, {
                    tag: [r.pJ.operator, r.pJ.string],
                    color: "#1659df"
                }, {
                    tag: [r.pJ.propertyName],
                    color: "#b29762"
                }, {
                    tag: [r.pJ.unit, r.pJ.punctuation],
                    color: "#063289"
                }, ...i]
            })
        }
        )();
        var Q = {
            background: "#2a2734",
            foreground: "#6c6783",
            caret: "#ffad5c",
            selection: "rgba(255, 255, 255, 0.1)",
            gutterBackground: "#2a2734",
            gutterForeground: "#545167",
            lineHighlight: "#36334280"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, Q, O),
                styles: [{
                    tag: [r.pJ.comment, r.pJ.bracket],
                    color: "#6c6783"
                }, {
                    tag: [r.pJ.atom, r.pJ.number, r.pJ.keyword, r.pJ.link, r.pJ.attributeName, r.pJ.quote],
                    color: "#ffcc99"
                }, {
                    tag: [r.pJ.emphasis, r.pJ.heading, r.pJ.tagName, r.pJ.propertyName, r.pJ.className, r.pJ.variableName],
                    color: "#eeebff"
                }, {
                    tag: [r.pJ.typeName, r.pJ.url],
                    color: "#7a63ee"
                }, {
                    tag: r.pJ.operator,
                    color: "#ffad5c"
                }, {
                    tag: r.pJ.string,
                    color: "#ffb870"
                }, {
                    tag: [r.pJ.propertyName],
                    color: "#9a86fd"
                }, {
                    tag: [r.pJ.unit, r.pJ.punctuation],
                    color: "#e09142"
                }, ...i]
            })
        }
        )();
        var $ = {
            background: "#fff",
            foreground: "#000",
            caret: "#FFFFFF",
            selection: "#d7d4f0",
            selectionMatch: "#d7d4f0",
            gutterBackground: "#f7f7f7",
            gutterForeground: "#999",
            lineHighlight: "#e8f2ff",
            gutterBorder: "transparent"
        };
        (e=>{
            var {theme: t="light", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, $, O),
                styles: [{
                    tag: [r.pJ.comment],
                    color: "#3F7F5F"
                }, {
                    tag: [r.pJ.documentMeta],
                    color: "#FF1717"
                }, {
                    tag: r.pJ.keyword,
                    color: "#7F0055",
                    fontWeight: "bold"
                }, {
                    tag: r.pJ.atom,
                    color: "#00f"
                }, {
                    tag: r.pJ.number,
                    color: "#164"
                }, {
                    tag: r.pJ.propertyName,
                    color: "#164"
                }, {
                    tag: [r.pJ.variableName, r.pJ.definition(r.pJ.variableName)],
                    color: "#0000C0"
                }, {
                    tag: r.pJ.function(r.pJ.variableName),
                    color: "#0000C0"
                }, {
                    tag: r.pJ.string,
                    color: "#2A00FF"
                }, {
                    tag: r.pJ.operator,
                    color: "black"
                }, {
                    tag: r.pJ.tagName,
                    color: "#170"
                }, {
                    tag: r.pJ.attributeName,
                    color: "#00c"
                }, {
                    tag: r.pJ.link,
                    color: "#219"
                }, ...i]
            })
        }
        )();
        var g = {
            background: "#fff",
            foreground: "#24292e",
            selection: "#BBDFFF",
            selectionMatch: "#BBDFFF",
            gutterBackground: "#fff",
            gutterForeground: "#6e7781"
        };
        (e=>{
            var {theme: t="light", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, g, O),
                styles: [{
                    tag: [r.pJ.standard(r.pJ.tagName), r.pJ.tagName],
                    color: "#116329"
                }, {
                    tag: [r.pJ.comment, r.pJ.bracket],
                    color: "#6a737d"
                }, {
                    tag: [r.pJ.className, r.pJ.propertyName],
                    color: "#6f42c1"
                }, {
                    tag: [r.pJ.variableName, r.pJ.attributeName, r.pJ.number, r.pJ.operator],
                    color: "#005cc5"
                }, {
                    tag: [r.pJ.keyword, r.pJ.typeName, r.pJ.typeOperator, r.pJ.typeName],
                    color: "#d73a49"
                }, {
                    tag: [r.pJ.string, r.pJ.meta, r.pJ.regexp],
                    color: "#032f62"
                }, {
                    tag: [r.pJ.name, r.pJ.quote],
                    color: "#22863a"
                }, {
                    tag: [r.pJ.heading],
                    color: "#24292e",
                    fontWeight: "bold"
                }, {
                    tag: [r.pJ.emphasis],
                    color: "#24292e",
                    fontStyle: "italic"
                }, {
                    tag: [r.pJ.deleted],
                    color: "#b31d28",
                    backgroundColor: "ffeef0"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#e36209"
                }, {
                    tag: [r.pJ.url, r.pJ.escape, r.pJ.regexp, r.pJ.link],
                    color: "#032f62"
                }, {
                    tag: r.pJ.link,
                    textDecoration: "underline"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, {
                    tag: r.pJ.invalid,
                    color: "#cb2431"
                }, ...i]
            })
        }
        )();
        var P = {
            background: "#0d1117",
            foreground: "#c9d1d9",
            caret: "#c9d1d9",
            selection: "#003d73",
            selectionMatch: "#003d73",
            lineHighlight: "#36334280"
        }
          , S = (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, P, O),
                styles: [{
                    tag: [r.pJ.standard(r.pJ.tagName), r.pJ.tagName],
                    color: "#7ee787"
                }, {
                    tag: [r.pJ.comment, r.pJ.bracket],
                    color: "#8b949e"
                }, {
                    tag: [r.pJ.className, r.pJ.propertyName],
                    color: "#d2a8ff"
                }, {
                    tag: [r.pJ.variableName, r.pJ.attributeName, r.pJ.number, r.pJ.operator],
                    color: "#79c0ff"
                }, {
                    tag: [r.pJ.keyword, r.pJ.typeName, r.pJ.typeOperator, r.pJ.typeName],
                    color: "#ff7b72"
                }, {
                    tag: [r.pJ.string, r.pJ.meta, r.pJ.regexp],
                    color: "#a5d6ff"
                }, {
                    tag: [r.pJ.name, r.pJ.quote],
                    color: "#7ee787"
                }, {
                    tag: [r.pJ.heading],
                    color: "#d2a8ff",
                    fontWeight: "bold"
                }, {
                    tag: [r.pJ.emphasis],
                    color: "#d2a8ff",
                    fontStyle: "italic"
                }, {
                    tag: [r.pJ.deleted],
                    color: "#ffdcd7",
                    backgroundColor: "ffeef0"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#ffab70"
                }, {
                    tag: r.pJ.link,
                    textDecoration: "underline"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, {
                    tag: r.pJ.invalid,
                    color: "#f97583"
                }, ...i]
            })
        }
        )()
          , b = {
            background: "#282828",
            foreground: "#ebdbb2",
            caret: "#ebdbb2",
            selection: "#bdae93",
            selectionMatch: "#bdae93",
            lineHighlight: "#3c3836",
            gutterBackground: "#282828",
            gutterForeground: "#7c6f64"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, b, O),
                styles: [{
                    tag: r.pJ.keyword,
                    color: "#fb4934"
                }, {
                    tag: [r.pJ.name, r.pJ.deleted, r.pJ.character, r.pJ.propertyName, r.pJ.macroName],
                    color: "#8ec07c"
                }, {
                    tag: [r.pJ.variableName],
                    color: "#83a598"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName)],
                    color: "#b8bb26",
                    fontStyle: "bold"
                }, {
                    tag: [r.pJ.labelName],
                    color: "#ebdbb2"
                }, {
                    tag: [r.pJ.color, r.pJ.constant(r.pJ.name), r.pJ.standard(r.pJ.name)],
                    color: "#d3869b"
                }, {
                    tag: [r.pJ.definition(r.pJ.name), r.pJ.separator],
                    color: "#ebdbb2"
                }, {
                    tag: [r.pJ.brace],
                    color: "#ebdbb2"
                }, {
                    tag: [r.pJ.annotation],
                    color: "#fb4934d"
                }, {
                    tag: [r.pJ.number, r.pJ.changed, r.pJ.annotation, r.pJ.modifier, r.pJ.self, r.pJ.namespace],
                    color: "#d3869b"
                }, {
                    tag: [r.pJ.typeName, r.pJ.className],
                    color: "#fabd2f"
                }, {
                    tag: [r.pJ.operator, r.pJ.operatorKeyword],
                    color: "#fb4934"
                }, {
                    tag: [r.pJ.tagName],
                    color: "#8ec07c",
                    fontStyle: "bold"
                }, {
                    tag: [r.pJ.squareBracket],
                    color: "#fe8019"
                }, {
                    tag: [r.pJ.angleBracket],
                    color: "#83a598"
                }, {
                    tag: [r.pJ.attributeName],
                    color: "#8ec07c"
                }, {
                    tag: [r.pJ.regexp],
                    color: "#8ec07c"
                }, {
                    tag: [r.pJ.quote],
                    color: "#928374"
                }, {
                    tag: [r.pJ.string],
                    color: "#ebdbb2"
                }, {
                    tag: r.pJ.link,
                    color: "#a89984",
                    textDecoration: "underline",
                    textUnderlinePosition: "under"
                }, {
                    tag: [r.pJ.url, r.pJ.escape, r.pJ.special(r.pJ.string)],
                    color: "#d3869b"
                }, {
                    tag: [r.pJ.meta],
                    color: "#fabd2f"
                }, {
                    tag: [r.pJ.comment],
                    color: "#928374",
                    fontStyle: "italic"
                }, {
                    tag: r.pJ.strong,
                    fontWeight: "bold",
                    color: "#fe8019"
                }, {
                    tag: r.pJ.emphasis,
                    fontStyle: "italic",
                    color: "#b8bb26"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, {
                    tag: r.pJ.heading,
                    fontWeight: "bold",
                    color: "#b8bb26"
                }, {
                    tag: [r.pJ.heading1, r.pJ.heading2],
                    fontWeight: "bold",
                    color: "#b8bb26"
                }, {
                    tag: [r.pJ.heading3, r.pJ.heading4],
                    fontWeight: "bold",
                    color: "#fabd2f"
                }, {
                    tag: [r.pJ.heading5, r.pJ.heading6],
                    color: "#fabd2f"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#d3869b"
                }, {
                    tag: [r.pJ.processingInstruction, r.pJ.inserted],
                    color: "#83a598"
                }, {
                    tag: [r.pJ.contentSeparator],
                    color: "#fb4934"
                }, {
                    tag: r.pJ.invalid,
                    color: "#fe8019",
                    borderBottom: "1px dotted #fb4934d"
                }, ...i]
            })
        }
        )();
        var y = {
            background: "#fbf1c7",
            foreground: "#3c3836",
            caret: "#af3a03",
            selection: "#ebdbb2",
            selectionMatch: "#bdae93",
            lineHighlight: "#ebdbb2",
            gutterBackground: "#ebdbb2",
            gutterForeground: "#665c54",
            gutterBorder: "transparent"
        };
        (e=>{
            var {theme: t="light", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, y, O),
                styles: [{
                    tag: r.pJ.keyword,
                    color: "#9d0006"
                }, {
                    tag: [r.pJ.name, r.pJ.deleted, r.pJ.character, r.pJ.propertyName, r.pJ.macroName],
                    color: "#427b58"
                }, {
                    tag: [r.pJ.variableName],
                    color: "#076678"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName)],
                    color: "#79740e",
                    fontStyle: "bold"
                }, {
                    tag: [r.pJ.labelName],
                    color: "#3c3836"
                }, {
                    tag: [r.pJ.color, r.pJ.constant(r.pJ.name), r.pJ.standard(r.pJ.name)],
                    color: "#8f3f71"
                }, {
                    tag: [r.pJ.definition(r.pJ.name), r.pJ.separator],
                    color: "#3c3836"
                }, {
                    tag: [r.pJ.brace],
                    color: "#3c3836"
                }, {
                    tag: [r.pJ.annotation],
                    color: "#9d0006"
                }, {
                    tag: [r.pJ.number, r.pJ.changed, r.pJ.annotation, r.pJ.modifier, r.pJ.self, r.pJ.namespace],
                    color: "#8f3f71"
                }, {
                    tag: [r.pJ.typeName, r.pJ.className],
                    color: "#b57614"
                }, {
                    tag: [r.pJ.operator, r.pJ.operatorKeyword],
                    color: "#9d0006"
                }, {
                    tag: [r.pJ.tagName],
                    color: "#427b58",
                    fontStyle: "bold"
                }, {
                    tag: [r.pJ.squareBracket],
                    color: "#af3a03"
                }, {
                    tag: [r.pJ.angleBracket],
                    color: "#076678"
                }, {
                    tag: [r.pJ.attributeName],
                    color: "#427b58"
                }, {
                    tag: [r.pJ.regexp],
                    color: "#427b58"
                }, {
                    tag: [r.pJ.quote],
                    color: "#928374"
                }, {
                    tag: [r.pJ.string],
                    color: "#3c3836"
                }, {
                    tag: r.pJ.link,
                    color: "#7c6f64",
                    textDecoration: "underline",
                    textUnderlinePosition: "under"
                }, {
                    tag: [r.pJ.url, r.pJ.escape, r.pJ.special(r.pJ.string)],
                    color: "#8f3f71"
                }, {
                    tag: [r.pJ.meta],
                    color: "#b57614"
                }, {
                    tag: [r.pJ.comment],
                    color: "#928374",
                    fontStyle: "italic"
                }, {
                    tag: r.pJ.strong,
                    fontWeight: "bold",
                    color: "#af3a03"
                }, {
                    tag: r.pJ.emphasis,
                    fontStyle: "italic",
                    color: "#79740e"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, {
                    tag: r.pJ.heading,
                    fontWeight: "bold",
                    color: "#79740e"
                }, {
                    tag: [r.pJ.heading1, r.pJ.heading2],
                    fontWeight: "bold",
                    color: "#79740e"
                }, {
                    tag: [r.pJ.heading3, r.pJ.heading4],
                    fontWeight: "bold",
                    color: "#b57614"
                }, {
                    tag: [r.pJ.heading5, r.pJ.heading6],
                    color: "#b57614"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#8f3f71"
                }, {
                    tag: [r.pJ.processingInstruction, r.pJ.inserted],
                    color: "#076678"
                }, {
                    tag: [r.pJ.contentSeparator],
                    color: "#9d0006"
                }, {
                    tag: r.pJ.invalid,
                    color: "#af3a03",
                    borderBottom: "1px dotted #9d0006"
                }, ...i]
            })
        }
        )();
        var x = {
            background: "#2e3235",
            foreground: "#bdbdbd",
            caret: "#a0a4ae",
            selection: "#d7d4f0",
            selectionMatch: "#d7d4f0",
            gutterBackground: "#2e3235",
            gutterForeground: "#999",
            gutterActiveForeground: "#4f5b66",
            lineHighlight: "#545b61"
        }
          , X = e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = e || {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, x, O),
                styles: [{
                    tag: r.pJ.keyword,
                    color: "#cf6edf"
                }, {
                    tag: [r.pJ.name, r.pJ.deleted, r.pJ.character, r.pJ.macroName],
                    color: "#56c8d8"
                }, {
                    tag: [r.pJ.propertyName],
                    color: "#facf4e"
                }, {
                    tag: [r.pJ.variableName],
                    color: "#bdbdbd"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName)],
                    color: "#56c8d8"
                }, {
                    tag: [r.pJ.labelName],
                    color: "#cf6edf"
                }, {
                    tag: [r.pJ.color, r.pJ.constant(r.pJ.name), r.pJ.standard(r.pJ.name)],
                    color: "#facf4e"
                }, {
                    tag: [r.pJ.definition(r.pJ.name), r.pJ.separator],
                    color: "#fa5788"
                }, {
                    tag: [r.pJ.brace],
                    color: "#cf6edf"
                }, {
                    tag: [r.pJ.annotation],
                    color: "#ff5f52"
                }, {
                    tag: [r.pJ.number, r.pJ.changed, r.pJ.annotation, r.pJ.modifier, r.pJ.self, r.pJ.namespace],
                    color: "#ffad42"
                }, {
                    tag: [r.pJ.typeName, r.pJ.className],
                    color: "#ffad42"
                }, {
                    tag: [r.pJ.operator, r.pJ.operatorKeyword],
                    color: "#7186f0"
                }, {
                    tag: [r.pJ.tagName],
                    color: "#99d066"
                }, {
                    tag: [r.pJ.squareBracket],
                    color: "#ff5f52"
                }, {
                    tag: [r.pJ.angleBracket],
                    color: "#606f7a"
                }, {
                    tag: [r.pJ.attributeName],
                    color: "#bdbdbd"
                }, {
                    tag: [r.pJ.regexp],
                    color: "#ff5f52"
                }, {
                    tag: [r.pJ.quote],
                    color: "#6abf69"
                }, {
                    tag: [r.pJ.string],
                    color: "#99d066"
                }, {
                    tag: r.pJ.link,
                    color: "#56c8d8",
                    textDecoration: "underline",
                    textUnderlinePosition: "under"
                }, {
                    tag: [r.pJ.url, r.pJ.escape, r.pJ.special(r.pJ.string)],
                    color: "#facf4e"
                }, {
                    tag: [r.pJ.meta],
                    color: "#707d8b"
                }, {
                    tag: [r.pJ.comment],
                    color: "#707d8b",
                    fontStyle: "italic"
                }, {
                    tag: r.pJ.monospace,
                    color: "#bdbdbd"
                }, {
                    tag: r.pJ.strong,
                    fontWeight: "bold",
                    color: "#ff5f52"
                }, {
                    tag: r.pJ.emphasis,
                    fontStyle: "italic",
                    color: "#99d066"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, {
                    tag: r.pJ.heading,
                    fontWeight: "bold",
                    color: "#facf4e"
                }, {
                    tag: r.pJ.heading1,
                    fontWeight: "bold",
                    color: "#facf4e"
                }, {
                    tag: [r.pJ.heading2, r.pJ.heading3, r.pJ.heading4],
                    fontWeight: "bold",
                    color: "#facf4e"
                }, {
                    tag: [r.pJ.heading5, r.pJ.heading6],
                    color: "#facf4e"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#56c8d8"
                }, {
                    tag: [r.pJ.processingInstruction, r.pJ.inserted],
                    color: "#ff5f52"
                }, {
                    tag: [r.pJ.contentSeparator],
                    color: "#56c8d8"
                }, {
                    tag: r.pJ.invalid,
                    color: "#606f7a",
                    borderBottom: "1px dotted #ff5f52"
                }, ...i]
            })
        }
        ;
        X(),
        X();
        var v = {
            background: "#FAFAFA",
            foreground: "#90A4AE",
            caret: "#272727",
            selection: "#80CBC440",
            selectionMatch: "#FAFAFA",
            gutterBackground: "#FAFAFA",
            gutterForeground: "#90A4AE",
            gutterBorder: "transparent",
            lineHighlight: "#CCD7DA50"
        };
        (e=>{
            var {theme: t="light", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, v, O),
                styles: [{
                    tag: r.pJ.keyword,
                    color: "#39ADB5"
                }, {
                    tag: [r.pJ.name, r.pJ.deleted, r.pJ.character, r.pJ.macroName],
                    color: "#90A4AE"
                }, {
                    tag: [r.pJ.propertyName],
                    color: "#6182B8"
                }, {
                    tag: [r.pJ.processingInstruction, r.pJ.string, r.pJ.inserted, r.pJ.special(r.pJ.string)],
                    color: "#91B859"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName), r.pJ.labelName],
                    color: "#6182B8"
                }, {
                    tag: [r.pJ.color, r.pJ.constant(r.pJ.name), r.pJ.standard(r.pJ.name)],
                    color: "#39ADB5"
                }, {
                    tag: [r.pJ.definition(r.pJ.name), r.pJ.separator],
                    color: "#90A4AE"
                }, {
                    tag: [r.pJ.className],
                    color: "#E2931D"
                }, {
                    tag: [r.pJ.number, r.pJ.changed, r.pJ.annotation, r.pJ.modifier, r.pJ.self, r.pJ.namespace],
                    color: "#F76D47"
                }, {
                    tag: [r.pJ.typeName],
                    color: "#E2931D",
                    fontStyle: "#E2931D"
                }, {
                    tag: [r.pJ.operator, r.pJ.operatorKeyword],
                    color: "#39ADB5"
                }, {
                    tag: [r.pJ.url, r.pJ.escape, r.pJ.regexp, r.pJ.link],
                    color: "#91B859"
                }, {
                    tag: [r.pJ.meta, r.pJ.comment],
                    color: "#90A4AE"
                }, {
                    tag: r.pJ.strong,
                    fontWeight: "bold"
                }, {
                    tag: r.pJ.emphasis,
                    fontStyle: "italic"
                }, {
                    tag: r.pJ.link,
                    textDecoration: "underline"
                }, {
                    tag: r.pJ.heading,
                    fontWeight: "bold",
                    color: "#39ADB5"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#90A4AE"
                }, {
                    tag: r.pJ.invalid,
                    color: "#E5393570"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, ...i]
            })
        }
        )();
        var k = {
            background: "#f2f1f8",
            foreground: "#0c006b",
            caret: "#5c49e9",
            selection: "#d5d1f2",
            selectionMatch: "#d5d1f2",
            gutterBackground: "#f2f1f8",
            gutterForeground: "#0c006b70",
            lineHighlight: "#e1def3"
        };
        (e=>{
            var {theme: t="light", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, k, O),
                styles: [{
                    tag: r.pJ.comment,
                    color: "#9995b7"
                }, {
                    tag: r.pJ.keyword,
                    color: "#ff5792",
                    fontWeight: "bold"
                }, {
                    tag: [r.pJ.definitionKeyword, r.pJ.modifier],
                    color: "#ff5792"
                }, {
                    tag: [r.pJ.className, r.pJ.tagName, r.pJ.definition(r.pJ.typeName)],
                    color: "#0094f0"
                }, {
                    tag: [r.pJ.number, r.pJ.bool, r.pJ.null, r.pJ.special(r.pJ.brace)],
                    color: "#5842ff"
                }, {
                    tag: [r.pJ.definition(r.pJ.propertyName), r.pJ.function(r.pJ.variableName)],
                    color: "#0095a8"
                }, {
                    tag: r.pJ.typeName,
                    color: "#b3694d"
                }, {
                    tag: [r.pJ.propertyName, r.pJ.variableName],
                    color: "#fa8900"
                }, {
                    tag: r.pJ.operator,
                    color: "#ff5792"
                }, {
                    tag: r.pJ.self,
                    color: "#e64100"
                }, {
                    tag: [r.pJ.string, r.pJ.regexp],
                    color: "#00b368"
                }, {
                    tag: [r.pJ.paren, r.pJ.bracket],
                    color: "#0431fa"
                }, {
                    tag: r.pJ.labelName,
                    color: "#00bdd6"
                }, {
                    tag: r.pJ.attributeName,
                    color: "#e64100"
                }, {
                    tag: r.pJ.angleBracket,
                    color: "#9995b7"
                }, ...i]
            })
        }
        )();
        var w = {
            background: "#2e3440",
            foreground: "#FFFFFF",
            caret: "#FFFFFF",
            selection: "#3b4252",
            selectionMatch: "#e5e9f0",
            gutterBackground: "#2e3440",
            gutterForeground: "#4c566a",
            gutterActiveForeground: "#d8dee9",
            lineHighlight: "#4c566a"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, w, O),
                styles: [{
                    tag: r.pJ.keyword,
                    color: "#5e81ac"
                }, {
                    tag: [r.pJ.name, r.pJ.deleted, r.pJ.character, r.pJ.propertyName, r.pJ.macroName],
                    color: "#88c0d0"
                }, {
                    tag: [r.pJ.variableName],
                    color: "#8fbcbb"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName)],
                    color: "#8fbcbb"
                }, {
                    tag: [r.pJ.labelName],
                    color: "#81a1c1"
                }, {
                    tag: [r.pJ.color, r.pJ.constant(r.pJ.name), r.pJ.standard(r.pJ.name)],
                    color: "#5e81ac"
                }, {
                    tag: [r.pJ.definition(r.pJ.name), r.pJ.separator],
                    color: "#a3be8c"
                }, {
                    tag: [r.pJ.brace],
                    color: "#8fbcbb"
                }, {
                    tag: [r.pJ.annotation],
                    color: "#d30102"
                }, {
                    tag: [r.pJ.number, r.pJ.changed, r.pJ.annotation, r.pJ.modifier, r.pJ.self, r.pJ.namespace],
                    color: "#b48ead"
                }, {
                    tag: [r.pJ.typeName, r.pJ.className],
                    color: "#ebcb8b"
                }, {
                    tag: [r.pJ.operator, r.pJ.operatorKeyword],
                    color: "#a3be8c"
                }, {
                    tag: [r.pJ.tagName],
                    color: "#b48ead"
                }, {
                    tag: [r.pJ.squareBracket],
                    color: "#bf616a"
                }, {
                    tag: [r.pJ.angleBracket],
                    color: "#d08770"
                }, {
                    tag: [r.pJ.attributeName],
                    color: "#ebcb8b"
                }, {
                    tag: [r.pJ.regexp],
                    color: "#5e81ac"
                }, {
                    tag: [r.pJ.quote],
                    color: "#b48ead"
                }, {
                    tag: [r.pJ.string],
                    color: "#a3be8c"
                }, {
                    tag: r.pJ.link,
                    color: "#a3be8c",
                    textDecoration: "underline",
                    textUnderlinePosition: "under"
                }, {
                    tag: [r.pJ.url, r.pJ.escape, r.pJ.special(r.pJ.string)],
                    color: "#8fbcbb"
                }, {
                    tag: [r.pJ.meta],
                    color: "#88c0d0"
                }, {
                    tag: [r.pJ.monospace],
                    color: "#d8dee9",
                    fontStyle: "italic"
                }, {
                    tag: [r.pJ.comment],
                    color: "#4c566a",
                    fontStyle: "italic"
                }, {
                    tag: r.pJ.strong,
                    fontWeight: "bold",
                    color: "#5e81ac"
                }, {
                    tag: r.pJ.emphasis,
                    fontStyle: "italic",
                    color: "#5e81ac"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, {
                    tag: r.pJ.heading,
                    fontWeight: "bold",
                    color: "#5e81ac"
                }, {
                    tag: r.pJ.special(r.pJ.heading1),
                    fontWeight: "bold",
                    color: "#5e81ac"
                }, {
                    tag: r.pJ.heading1,
                    fontWeight: "bold",
                    color: "#5e81ac"
                }, {
                    tag: [r.pJ.heading2, r.pJ.heading3, r.pJ.heading4],
                    fontWeight: "bold",
                    color: "#5e81ac"
                }, {
                    tag: [r.pJ.heading5, r.pJ.heading6],
                    color: "#5e81ac"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#d08770"
                }, {
                    tag: [r.pJ.processingInstruction, r.pJ.inserted],
                    color: "#8fbcbb"
                }, {
                    tag: [r.pJ.contentSeparator],
                    color: "#ebcb8b"
                }, {
                    tag: r.pJ.invalid,
                    color: "#434c5e",
                    borderBottom: "1px dotted #d30102"
                }, ...i]
            })
        }
        )();
        var T = {
            background: "#272822",
            foreground: "#FFFFFF",
            caret: "#FFFFFF",
            selection: "#49483E",
            selectionMatch: "#49483E",
            gutterBackground: "#272822",
            gutterForeground: "#FFFFFF70",
            lineHighlight: "#00000059"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, T, O),
                styles: [{
                    tag: [r.pJ.comment, r.pJ.documentMeta],
                    color: "#8292a2"
                }, {
                    tag: [r.pJ.number, r.pJ.bool, r.pJ.null, r.pJ.atom],
                    color: "#ae81ff"
                }, {
                    tag: [r.pJ.attributeValue, r.pJ.className, r.pJ.name],
                    color: "#e6db74"
                }, {
                    tag: [r.pJ.propertyName, r.pJ.attributeName],
                    color: "#a6e22e"
                }, {
                    tag: [r.pJ.variableName],
                    color: "#9effff"
                }, {
                    tag: [r.pJ.squareBracket],
                    color: "#bababa"
                }, {
                    tag: [r.pJ.string, r.pJ.special(r.pJ.brace)],
                    color: "#e6db74"
                }, {
                    tag: [r.pJ.regexp, r.pJ.className, r.pJ.typeName, r.pJ.definition(r.pJ.typeName)],
                    color: "#66d9ef"
                }, {
                    tag: [r.pJ.definition(r.pJ.variableName), r.pJ.definition(r.pJ.propertyName), r.pJ.function(r.pJ.variableName)],
                    color: "#fd971f"
                }, {
                    tag: [r.pJ.keyword, r.pJ.definitionKeyword, r.pJ.modifier, r.pJ.tagName, r.pJ.angleBracket],
                    color: "#f92672"
                }, ...i]
            })
        }
        )();
        var _ = {
            background: "#fdf6e3",
            foreground: "#657b83",
            caret: "#586e75",
            selection: "#dfd9c8",
            selectionMatch: "#dfd9c8",
            gutterBackground: "#00000010",
            gutterForeground: "#657b83",
            lineHighlight: "#dfd9c8"
        };
        (e=>{
            var {theme: t="light", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, _, O),
                styles: [{
                    tag: r.pJ.keyword,
                    color: "#859900"
                }, {
                    tag: [r.pJ.name, r.pJ.deleted, r.pJ.character, r.pJ.propertyName, r.pJ.macroName],
                    color: "#2aa198"
                }, {
                    tag: [r.pJ.variableName],
                    color: "#268bd2"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName)],
                    color: "#268bd2"
                }, {
                    tag: [r.pJ.labelName],
                    color: "#d33682"
                }, {
                    tag: [r.pJ.color, r.pJ.constant(r.pJ.name), r.pJ.standard(r.pJ.name)],
                    color: "#b58900"
                }, {
                    tag: [r.pJ.definition(r.pJ.name), r.pJ.separator],
                    color: "#2aa198"
                }, {
                    tag: [r.pJ.brace],
                    color: "#d33682"
                }, {
                    tag: [r.pJ.annotation],
                    color: "#d30102"
                }, {
                    tag: [r.pJ.number, r.pJ.changed, r.pJ.annotation, r.pJ.modifier, r.pJ.self, r.pJ.namespace],
                    color: "#d33682"
                }, {
                    tag: [r.pJ.typeName, r.pJ.className],
                    color: "#cb4b16"
                }, {
                    tag: [r.pJ.operator, r.pJ.operatorKeyword],
                    color: "#6c71c4"
                }, {
                    tag: [r.pJ.tagName],
                    color: "#268bd2"
                }, {
                    tag: [r.pJ.squareBracket],
                    color: "#dc322f"
                }, {
                    tag: [r.pJ.angleBracket],
                    color: "#073642"
                }, {
                    tag: [r.pJ.attributeName],
                    color: "#93a1a1"
                }, {
                    tag: [r.pJ.regexp],
                    color: "#d30102"
                }, {
                    tag: [r.pJ.quote],
                    color: "#859900"
                }, {
                    tag: [r.pJ.string],
                    color: "#b58900"
                }, {
                    tag: r.pJ.link,
                    color: "#2aa198",
                    textDecoration: "underline",
                    textUnderlinePosition: "under"
                }, {
                    tag: [r.pJ.url, r.pJ.escape, r.pJ.special(r.pJ.string)],
                    color: "#b58900"
                }, {
                    tag: [r.pJ.meta],
                    color: "#dc322f"
                }, {
                    tag: [r.pJ.comment],
                    color: "#586e75",
                    fontStyle: "italic"
                }, {
                    tag: r.pJ.strong,
                    fontWeight: "bold",
                    color: "#586e75"
                }, {
                    tag: r.pJ.emphasis,
                    fontStyle: "italic",
                    color: "#859900"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, {
                    tag: r.pJ.heading,
                    fontWeight: "bold",
                    color: "#b58900"
                }, {
                    tag: r.pJ.heading1,
                    fontWeight: "bold",
                    color: "#002b36"
                }, {
                    tag: [r.pJ.heading2, r.pJ.heading3, r.pJ.heading4],
                    fontWeight: "bold",
                    color: "#002b36"
                }, {
                    tag: [r.pJ.heading5, r.pJ.heading6],
                    color: "#002b36"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#d33682"
                }, {
                    tag: [r.pJ.processingInstruction, r.pJ.inserted, r.pJ.contentSeparator],
                    color: "#dc322f"
                }, {
                    tag: [r.pJ.contentSeparator],
                    color: "#b58900"
                }, {
                    tag: r.pJ.invalid,
                    color: "#073642",
                    borderBottom: "1px dotted #dc322f"
                }, ...i]
            })
        }
        )();
        var W = {
            background: "#002b36",
            foreground: "#93a1a1",
            caret: "#839496",
            selection: "#173541",
            selectionMatch: "#aafe661a",
            gutterBackground: "#00252f",
            gutterForeground: "#839496",
            lineHighlight: "#173541"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, W, O),
                styles: [{
                    tag: r.pJ.keyword,
                    color: "#859900"
                }, {
                    tag: [r.pJ.name, r.pJ.deleted, r.pJ.character, r.pJ.propertyName, r.pJ.macroName],
                    color: "#2aa198"
                }, {
                    tag: [r.pJ.variableName],
                    color: "#93a1a1"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName)],
                    color: "#268bd2"
                }, {
                    tag: [r.pJ.labelName],
                    color: "#d33682"
                }, {
                    tag: [r.pJ.color, r.pJ.constant(r.pJ.name), r.pJ.standard(r.pJ.name)],
                    color: "#b58900"
                }, {
                    tag: [r.pJ.definition(r.pJ.name), r.pJ.separator],
                    color: "#2aa198"
                }, {
                    tag: [r.pJ.brace],
                    color: "#d33682"
                }, {
                    tag: [r.pJ.annotation],
                    color: "#d30102"
                }, {
                    tag: [r.pJ.number, r.pJ.changed, r.pJ.annotation, r.pJ.modifier, r.pJ.self, r.pJ.namespace],
                    color: "#d33682"
                }, {
                    tag: [r.pJ.typeName, r.pJ.className],
                    color: "#cb4b16"
                }, {
                    tag: [r.pJ.operator, r.pJ.operatorKeyword],
                    color: "#6c71c4"
                }, {
                    tag: [r.pJ.tagName],
                    color: "#268bd2"
                }, {
                    tag: [r.pJ.squareBracket],
                    color: "#dc322f"
                }, {
                    tag: [r.pJ.angleBracket],
                    color: "#586e75"
                }, {
                    tag: [r.pJ.attributeName],
                    color: "#93a1a1"
                }, {
                    tag: [r.pJ.regexp],
                    color: "#d30102"
                }, {
                    tag: [r.pJ.quote],
                    color: "#859900"
                }, {
                    tag: [r.pJ.string],
                    color: "#b58900"
                }, {
                    tag: r.pJ.link,
                    color: "#2aa198",
                    textDecoration: "underline",
                    textUnderlinePosition: "under"
                }, {
                    tag: [r.pJ.url, r.pJ.escape, r.pJ.special(r.pJ.string)],
                    color: "#b58900"
                }, {
                    tag: [r.pJ.meta],
                    color: "#dc322f"
                }, {
                    tag: [r.pJ.comment],
                    color: "#586e75",
                    fontStyle: "italic"
                }, {
                    tag: r.pJ.strong,
                    fontWeight: "bold",
                    color: "#eee8d5"
                }, {
                    tag: r.pJ.emphasis,
                    fontStyle: "italic",
                    color: "#859900"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, {
                    tag: r.pJ.heading,
                    fontWeight: "bold",
                    color: "#b58900"
                }, {
                    tag: r.pJ.heading1,
                    fontWeight: "bold",
                    color: "#fdf6e3"
                }, {
                    tag: [r.pJ.heading2, r.pJ.heading3, r.pJ.heading4],
                    fontWeight: "bold",
                    color: "#eee8d5"
                }, {
                    tag: [r.pJ.heading5, r.pJ.heading6],
                    color: "#eee8d5"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#d33682"
                }, {
                    tag: [r.pJ.processingInstruction, r.pJ.inserted, r.pJ.contentSeparator],
                    color: "#dc322f"
                }, {
                    tag: [r.pJ.contentSeparator],
                    color: "#b58900"
                }, {
                    tag: r.pJ.invalid,
                    color: "#586e75",
                    borderBottom: "1px dotted #dc322f"
                }, ...i]
            })
        }
        )();
        var Z = {
            background: "#303841",
            foreground: "#FFFFFF",
            caret: "#FBAC52",
            selection: "#4C5964",
            selectionMatch: "#3A546E",
            gutterBackground: "#303841",
            gutterForeground: "#FFFFFF70",
            lineHighlight: "#00000059"
        };
        !function(e) {
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            o({
                theme: t,
                settings: (0,
                n.Z)({}, Z, O),
                styles: [{
                    tag: [r.pJ.meta, r.pJ.comment],
                    color: "#A2A9B5"
                }, {
                    tag: [r.pJ.attributeName, r.pJ.keyword],
                    color: "#B78FBA"
                }, {
                    tag: r.pJ.function(r.pJ.variableName),
                    color: "#5AB0B0"
                }, {
                    tag: [r.pJ.string, r.pJ.regexp, r.pJ.attributeValue],
                    color: "#99C592"
                }, {
                    tag: r.pJ.operator,
                    color: "#f47954"
                }, {
                    tag: [r.pJ.tagName, r.pJ.modifier],
                    color: "#E35F63"
                }, {
                    tag: [r.pJ.number, r.pJ.definition(r.pJ.tagName), r.pJ.className, r.pJ.definition(r.pJ.variableName)],
                    color: "#fbac52"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#E35F63"
                }, {
                    tag: r.pJ.variableName,
                    color: "#539ac4"
                }, {
                    tag: [r.pJ.propertyName, r.pJ.typeName],
                    color: "#629ccd"
                }, {
                    tag: r.pJ.propertyName,
                    color: "#36b7b5"
                }, ...i]
            })
        }();
        var z = {
            background: "#1a1b26",
            foreground: "#787c99",
            caret: "#c0caf5",
            selection: "#515c7e40",
            selectionMatch: "#16161e",
            gutterBackground: "#1a1b26",
            gutterForeground: "#787c99",
            gutterBorder: "transparent",
            lineHighlight: "#1e202e"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, z, O),
                styles: [{
                    tag: r.pJ.keyword,
                    color: "#bb9af7"
                }, {
                    tag: [r.pJ.name, r.pJ.deleted, r.pJ.character, r.pJ.macroName],
                    color: "#c0caf5"
                }, {
                    tag: [r.pJ.propertyName],
                    color: "#7aa2f7"
                }, {
                    tag: [r.pJ.processingInstruction, r.pJ.string, r.pJ.inserted, r.pJ.special(r.pJ.string)],
                    color: "#9ece6a"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName), r.pJ.labelName],
                    color: "#7aa2f7"
                }, {
                    tag: [r.pJ.color, r.pJ.constant(r.pJ.name), r.pJ.standard(r.pJ.name)],
                    color: "#bb9af7"
                }, {
                    tag: [r.pJ.definition(r.pJ.name), r.pJ.separator],
                    color: "#c0caf5"
                }, {
                    tag: [r.pJ.className],
                    color: "#c0caf5"
                }, {
                    tag: [r.pJ.number, r.pJ.changed, r.pJ.annotation, r.pJ.modifier, r.pJ.self, r.pJ.namespace],
                    color: "#ff9e64"
                }, {
                    tag: [r.pJ.typeName],
                    color: "#0db9d7"
                }, {
                    tag: [r.pJ.operator, r.pJ.operatorKeyword],
                    color: "#bb9af7"
                }, {
                    tag: [r.pJ.url, r.pJ.escape, r.pJ.regexp, r.pJ.link],
                    color: "#b4f9f8"
                }, {
                    tag: [r.pJ.meta, r.pJ.comment],
                    color: "#444b6a"
                }, {
                    tag: r.pJ.strong,
                    fontWeight: "bold"
                }, {
                    tag: r.pJ.emphasis,
                    fontStyle: "italic"
                }, {
                    tag: r.pJ.link,
                    textDecoration: "underline"
                }, {
                    tag: r.pJ.heading,
                    fontWeight: "bold",
                    color: "#89ddff"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#c0caf5"
                }, {
                    tag: r.pJ.invalid,
                    color: "#ff5370"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, ...i]
            })
        }
        )();
        var q = {
            background: "#24283b",
            foreground: "#7982a9",
            caret: "#c0caf5",
            selection: "#6f7bb630",
            selectionMatch: "#1f2335",
            gutterBackground: "#24283b",
            gutterForeground: "#7982a9",
            gutterBorder: "transparent",
            lineHighlight: "#292e42"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, q, O),
                styles: [{
                    tag: r.pJ.keyword,
                    color: "#bb9af7"
                }, {
                    tag: [r.pJ.name, r.pJ.deleted, r.pJ.character, r.pJ.macroName],
                    color: "#c0caf5"
                }, {
                    tag: [r.pJ.propertyName],
                    color: "#7aa2f7"
                }, {
                    tag: [r.pJ.processingInstruction, r.pJ.string, r.pJ.inserted, r.pJ.special(r.pJ.string)],
                    color: "#9ece6a"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName), r.pJ.labelName],
                    color: "#7aa2f7"
                }, {
                    tag: [r.pJ.color, r.pJ.constant(r.pJ.name), r.pJ.standard(r.pJ.name)],
                    color: "#bb9af7"
                }, {
                    tag: [r.pJ.definition(r.pJ.name), r.pJ.separator],
                    color: "#c0caf5"
                }, {
                    tag: [r.pJ.className],
                    color: "#c0caf5"
                }, {
                    tag: [r.pJ.number, r.pJ.changed, r.pJ.annotation, r.pJ.modifier, r.pJ.self, r.pJ.namespace],
                    color: "#ff9e64"
                }, {
                    tag: [r.pJ.typeName],
                    color: "#2ac3de",
                    fontStyle: "#2ac3de"
                }, {
                    tag: [r.pJ.operator, r.pJ.operatorKeyword],
                    color: "#bb9af7"
                }, {
                    tag: [r.pJ.url, r.pJ.escape, r.pJ.regexp, r.pJ.link],
                    color: "#b4f9f8"
                }, {
                    tag: [r.pJ.meta, r.pJ.comment],
                    color: "#565f89"
                }, {
                    tag: r.pJ.strong,
                    fontWeight: "bold"
                }, {
                    tag: r.pJ.emphasis,
                    fontStyle: "italic"
                }, {
                    tag: r.pJ.link,
                    textDecoration: "underline"
                }, {
                    tag: r.pJ.heading,
                    fontWeight: "bold",
                    color: "#89ddff"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#c0caf5"
                }, {
                    tag: r.pJ.invalid,
                    color: "#ff5370"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, ...i]
            })
        }
        )();
        var Y = {
            background: "#e1e2e7",
            foreground: "#3760bf",
            caret: "#3760bf",
            selection: "#99a7df",
            selectionMatch: "#99a7df",
            gutterBackground: "#e1e2e7",
            gutterForeground: "#3760bf",
            gutterBorder: "transparent",
            lineHighlight: "#5f5faf11"
        };
        (e=>{
            var {theme: t="light", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, Y, O),
                styles: [{
                    tag: r.pJ.keyword,
                    color: "#007197"
                }, {
                    tag: [r.pJ.name, r.pJ.deleted, r.pJ.character, r.pJ.macroName],
                    color: "#3760bf"
                }, {
                    tag: [r.pJ.propertyName],
                    color: "#3760bf"
                }, {
                    tag: [r.pJ.processingInstruction, r.pJ.string, r.pJ.inserted, r.pJ.special(r.pJ.string)],
                    color: "#587539"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName), r.pJ.labelName],
                    color: "#3760bf"
                }, {
                    tag: [r.pJ.color, r.pJ.constant(r.pJ.name), r.pJ.standard(r.pJ.name)],
                    color: "#3760bf"
                }, {
                    tag: [r.pJ.definition(r.pJ.name), r.pJ.separator],
                    color: "#3760bf"
                }, {
                    tag: [r.pJ.className],
                    color: "#3760bf"
                }, {
                    tag: [r.pJ.number, r.pJ.changed, r.pJ.annotation, r.pJ.modifier, r.pJ.self, r.pJ.namespace],
                    color: "#b15c00"
                }, {
                    tag: [r.pJ.typeName],
                    color: "#007197",
                    fontStyle: "#007197"
                }, {
                    tag: [r.pJ.operator, r.pJ.operatorKeyword],
                    color: "#007197"
                }, {
                    tag: [r.pJ.url, r.pJ.escape, r.pJ.regexp, r.pJ.link],
                    color: "#587539"
                }, {
                    tag: [r.pJ.meta, r.pJ.comment],
                    color: "#848cb5"
                }, {
                    tag: r.pJ.strong,
                    fontWeight: "bold"
                }, {
                    tag: r.pJ.emphasis,
                    fontStyle: "italic"
                }, {
                    tag: r.pJ.link,
                    textDecoration: "underline"
                }, {
                    tag: r.pJ.heading,
                    fontWeight: "bold",
                    color: "#b15c00"
                }, {
                    tag: [r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#3760bf"
                }, {
                    tag: r.pJ.invalid,
                    color: "#f52a65"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, ...i]
            })
        }
        )();
        var R = {
            background: "#1e1e1e",
            foreground: "#9cdcfe",
            caret: "#c6c6c6",
            selection: "#6199ff2f",
            selectionMatch: "#72a1ff59",
            lineHighlight: "#ffffff0f",
            gutterBackground: "#1e1e1e",
            gutterForeground: "#838383",
            gutterActiveForeground: "#fff",
            fontFamily: 'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace'
        };
        !function(e) {
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            o({
                theme: t,
                settings: (0,
                n.Z)({}, R, O),
                styles: [{
                    tag: [r.pJ.keyword, r.pJ.operatorKeyword, r.pJ.modifier, r.pJ.color, r.pJ.constant(r.pJ.name), r.pJ.standard(r.pJ.name), r.pJ.standard(r.pJ.tagName), r.pJ.special(r.pJ.brace), r.pJ.atom, r.pJ.bool, r.pJ.special(r.pJ.variableName)],
                    color: "#569cd6"
                }, {
                    tag: [r.pJ.controlKeyword, r.pJ.moduleKeyword],
                    color: "#c586c0"
                }, {
                    tag: [r.pJ.name, r.pJ.deleted, r.pJ.character, r.pJ.macroName, r.pJ.propertyName, r.pJ.variableName, r.pJ.labelName, r.pJ.definition(r.pJ.name)],
                    color: "#9cdcfe"
                }, {
                    tag: r.pJ.heading,
                    fontWeight: "bold",
                    color: "#9cdcfe"
                }, {
                    tag: [r.pJ.typeName, r.pJ.className, r.pJ.tagName, r.pJ.number, r.pJ.changed, r.pJ.annotation, r.pJ.self, r.pJ.namespace],
                    color: "#4ec9b0"
                }, {
                    tag: [r.pJ.function(r.pJ.variableName), r.pJ.function(r.pJ.propertyName)],
                    color: "#dcdcaa"
                }, {
                    tag: [r.pJ.number],
                    color: "#b5cea8"
                }, {
                    tag: [r.pJ.operator, r.pJ.punctuation, r.pJ.separator, r.pJ.url, r.pJ.escape, r.pJ.regexp],
                    color: "#d4d4d4"
                }, {
                    tag: [r.pJ.regexp],
                    color: "#d16969"
                }, {
                    tag: [r.pJ.special(r.pJ.string), r.pJ.processingInstruction, r.pJ.string, r.pJ.inserted],
                    color: "#ce9178"
                }, {
                    tag: [r.pJ.angleBracket],
                    color: "#808080"
                }, {
                    tag: r.pJ.strong,
                    fontWeight: "bold"
                }, {
                    tag: r.pJ.emphasis,
                    fontStyle: "italic"
                }, {
                    tag: r.pJ.strikethrough,
                    textDecoration: "line-through"
                }, {
                    tag: [r.pJ.meta, r.pJ.comment],
                    color: "#6a9955"
                }, {
                    tag: r.pJ.link,
                    color: "#6a9955",
                    textDecoration: "underline"
                }, {
                    tag: r.pJ.invalid,
                    color: "#ff0000"
                }, ...i]
            })
        }();
        var U = {
            background: "#fff",
            foreground: "#3D3D3D",
            selection: "#BBDFFF",
            selectionMatch: "#BBDFFF",
            gutterBackground: "#fff",
            gutterForeground: "#AFAFAF",
            lineHighlight: "#EDF4FF"
        };
        !function(e) {
            var {theme: t="light", settings: O={}, styles: i=[]} = {};
            o({
                theme: t,
                settings: (0,
                n.Z)({}, U, O),
                styles: [{
                    tag: [r.pJ.comment, r.pJ.quote],
                    color: "#707F8D"
                }, {
                    tag: [r.pJ.typeName, r.pJ.typeOperator],
                    color: "#aa0d91"
                }, {
                    tag: [r.pJ.keyword],
                    color: "#aa0d91",
                    fontWeight: "bold"
                }, {
                    tag: [r.pJ.string, r.pJ.meta],
                    color: "#D23423"
                }, {
                    tag: [r.pJ.name],
                    color: "#032f62"
                }, {
                    tag: [r.pJ.typeName],
                    color: "#522BB2"
                }, {
                    tag: [r.pJ.variableName],
                    color: "#23575C"
                }, {
                    tag: [r.pJ.definition(r.pJ.variableName)],
                    color: "#327A9E"
                }, {
                    tag: [r.pJ.regexp, r.pJ.link],
                    color: "#0e0eff"
                }, ...i]
            })
        }();
        var V = {
            background: "#292A30",
            foreground: "#CECFD0",
            caret: "#fff",
            selection: "#727377",
            selectionMatch: "#727377",
            lineHighlight: "#2F3239"
        };
        (e=>{
            var {theme: t="dark", settings: O={}, styles: i=[]} = {};
            return o({
                theme: t,
                settings: (0,
                n.Z)({}, V, O),
                styles: [{
                    tag: [r.pJ.comment, r.pJ.quote],
                    color: "#7F8C98"
                }, {
                    tag: [r.pJ.keyword],
                    color: "#FF7AB2",
                    fontWeight: "bold"
                }, {
                    tag: [r.pJ.string, r.pJ.meta],
                    color: "#FF8170"
                }, {
                    tag: [r.pJ.typeName],
                    color: "#DABAFF"
                }, {
                    tag: [r.pJ.definition(r.pJ.variableName)],
                    color: "#6BDFFF"
                }, {
                    tag: [r.pJ.name],
                    color: "#6BAA9F"
                }, {
                    tag: [r.pJ.variableName],
                    color: "#ACF2E4"
                }, {
                    tag: [r.pJ.regexp, r.pJ.link],
                    color: "#FF8170"
                }, ...i]
            })
        }
        )()
    },
    5911: function(e, t, O) {
        "use strict";
        O.d(t, {
            ZP: function() {
                return OI
            }
        });
        var n = O(3728)
          , r = O(5526)
          , i = O(4091)
          , a = O(6470)
          , o = O(168)
          , s = O(770);
        let l = e=>{
            let {state: t} = e
              , O = t.doc.lineAt(t.selection.main.from)
              , n = f(e.state, O.from);
            return n.line ? u(e) : !!n.block && d(e)
        }
        ;
        function c(e, t) {
            return ({state: O, dispatch: n})=>{
                if (O.readOnly)
                    return !1;
                let r = e(t, O);
                return !!r && (n(O.update(r)),
                !0)
            }
        }
        let u = c(function(e, t, O=t.selection.ranges) {
            let n = []
              , r = -1;
            for (let {from: e, to: i} of O) {
                let O = n.length
                  , a = 1e9
                  , o = f(t, e).line;
                if (o) {
                    for (let O = e; O <= i; ) {
                        let s = t.doc.lineAt(O);
                        if (s.from > r && (e == i || i > s.from)) {
                            r = s.from;
                            let e = /^\s*/.exec(s.text)[0].length
                              , t = e == s.length
                              , O = s.text.slice(e, e + o.length) == o ? e : -1;
                            e < s.text.length && e < a && (a = e),
                            n.push({
                                line: s,
                                comment: O,
                                token: o,
                                indent: e,
                                empty: t,
                                single: !1
                            })
                        }
                        O = s.to + 1
                    }
                    if (a < 1e9)
                        for (let e = O; e < n.length; e++)
                            n[e].indent < n[e].line.text.length && (n[e].indent = a);
                    n.length == O + 1 && (n[O].single = !0)
                }
            }
            if (2 != e && n.some(e=>e.comment < 0 && (!e.empty || e.single))) {
                let e = [];
                for (let {line: t, token: O, indent: r, empty: i, single: a} of n)
                    (a || !i) && e.push({
                        from: t.from + r,
                        insert: O + " "
                    });
                let O = t.changes(e);
                return {
                    changes: O,
                    selection: t.selection.map(O, 1)
                }
            }
            if (1 != e && n.some(e=>e.comment >= 0)) {
                let e = [];
                for (let {line: t, comment: O, token: r} of n)
                    if (O >= 0) {
                        let n = t.from + O
                          , i = n + r.length;
                        " " == t.text[i - t.from] && i++,
                        e.push({
                            from: n,
                            to: i
                        })
                    }
                return {
                    changes: e
                }
            }
            return null
        }, 0)
          , p = c(h, 0)
          , d = c((e,t)=>h(e, t, function(e) {
            let t = [];
            for (let O of e.selection.ranges) {
                let n = e.doc.lineAt(O.from)
                  , r = O.to <= n.to ? n : e.doc.lineAt(O.to)
                  , i = t.length - 1;
                i >= 0 && t[i].to > n.from ? t[i].to = r.to : t.push({
                    from: n.from + /^\s*/.exec(n.text)[0].length,
                    to: r.to
                })
            }
            return t
        }(t)), 0);
        function f(e, t) {
            let O = e.languageDataAt("commentTokens", t);
            return O.length ? O[0] : {}
        }
        function h(e, t, O=t.selection.ranges) {
            let n = O.map(e=>f(t, e.from).block);
            if (!n.every(e=>e))
                return null;
            let r = O.map((e,O)=>(function(e, {open: t, close: O}, n, r) {
                let i, a, o = e.sliceDoc(n - 50, n), s = e.sliceDoc(r, r + 50), l = /\s*$/.exec(o)[0].length, c = /^\s*/.exec(s)[0].length, u = o.length - l;
                if (o.slice(u - t.length, u) == t && s.slice(c, c + O.length) == O)
                    return {
                        open: {
                            pos: n - l,
                            margin: l && 1
                        },
                        close: {
                            pos: r + c,
                            margin: c && 1
                        }
                    };
                r - n <= 100 ? i = a = e.sliceDoc(n, r) : (i = e.sliceDoc(n, n + 50),
                a = e.sliceDoc(r - 50, r));
                let p = /^\s*/.exec(i)[0].length
                  , d = /\s*$/.exec(a)[0].length
                  , f = a.length - d - O.length;
                return i.slice(p, p + t.length) == t && a.slice(f, f + O.length) == O ? {
                    open: {
                        pos: n + p + t.length,
                        margin: /\s/.test(i.charAt(p + t.length)) ? 1 : 0
                    },
                    close: {
                        pos: r - d - O.length,
                        margin: /\s/.test(a.charAt(f - 1)) ? 1 : 0
                    }
                } : null
            }
            )(t, n[O], e.from, e.to));
            if (2 != e && !r.every(e=>e))
                return {
                    changes: t.changes(O.map((e,t)=>r[t] ? [] : [{
                        from: e.from,
                        insert: n[t].open + " "
                    }, {
                        from: e.to,
                        insert: " " + n[t].close
                    }]))
                };
            if (1 != e && r.some(e=>e)) {
                let e = [];
                for (let t = 0, O; t < r.length; t++)
                    if (O = r[t]) {
                        let r = n[t]
                          , {open: i, close: a} = O;
                        e.push({
                            from: i.pos - r.open.length,
                            to: i.pos + i.margin
                        }, {
                            from: a.pos - a.margin,
                            to: a.pos + r.close.length
                        })
                    }
                return {
                    changes: e
                }
            }
            return null
        }
        let m = i.q6.define()
          , Q = i.q6.define()
          , $ = i.r$.define()
          , g = i.r$.define({
            combine: e=>(0,
            i.BO)(e, {
                minDepth: 100,
                newGroupDelay: 500,
                joinToEvent: (e,t)=>t
            }, {
                minDepth: Math.max,
                newGroupDelay: Math.min,
                joinToEvent: (e,t)=>(O,n)=>e(O, n) || t(O, n)
            })
        })
          , P = i.QQ.define({
            create: ()=>z.empty,
            update(e, t) {
                let O = t.state.facet(g)
                  , n = t.annotation(m);
                if (n) {
                    var r;
                    let a;
                    let o = t.docChanged ? i.jT.single((r = t.changes,
                    a = 0,
                    r.iterChangedRanges((e,t)=>a = t),
                    a)) : void 0
                      , s = v.fromTransaction(t, o)
                      , l = n.side
                      , c = 0 == l ? e.undone : e.done;
                    return c = s ? k(c, c.length, O.minDepth, s) : _(c, t.startState.selection),
                    new z(0 == l ? n.rest : c,0 == l ? c : n.rest)
                }
                let a = t.annotation(Q);
                if (("full" == a || "before" == a) && (e = e.isolate()),
                !1 === t.annotation(i.YW.addToHistory))
                    return t.changes.empty ? e : e.addMapping(t.changes.desc);
                let o = v.fromTransaction(t)
                  , s = t.annotation(i.YW.time)
                  , l = t.annotation(i.YW.userEvent);
                return o ? e = e.addChanges(o, s, l, O, t) : t.selection && (e = e.addSelection(t.startState.selection, s, l, O.newGroupDelay)),
                ("full" == a || "after" == a) && (e = e.isolate()),
                e
            },
            toJSON: e=>({
                done: e.done.map(e=>e.toJSON()),
                undone: e.undone.map(e=>e.toJSON())
            }),
            fromJSON: e=>new z(e.done.map(v.fromJSON),e.undone.map(v.fromJSON))
        });
        function S(e, t) {
            return function({state: O, dispatch: n}) {
                if (!t && O.readOnly)
                    return !1;
                let r = O.field(P, !1);
                if (!r)
                    return !1;
                let i = r.pop(e, O, t);
                return !!i && (n(i),
                !0)
            }
        }
        let b = S(0, !1)
          , y = S(1, !1)
          , x = S(0, !0)
          , X = S(1, !0);
        class v {
            constructor(e, t, O, n, r) {
                this.changes = e,
                this.effects = t,
                this.mapped = O,
                this.startSelection = n,
                this.selectionsAfter = r
            }
            setSelAfter(e) {
                return new v(this.changes,this.effects,this.mapped,this.startSelection,e)
            }
            toJSON() {
                var e, t, O;
                return {
                    changes: null === (e = this.changes) || void 0 === e ? void 0 : e.toJSON(),
                    mapped: null === (t = this.mapped) || void 0 === t ? void 0 : t.toJSON(),
                    startSelection: null === (O = this.startSelection) || void 0 === O ? void 0 : O.toJSON(),
                    selectionsAfter: this.selectionsAfter.map(e=>e.toJSON())
                }
            }
            static fromJSON(e) {
                return new v(e.changes && i.as.fromJSON(e.changes),[],e.mapped && i.n0.fromJSON(e.mapped),e.startSelection && i.jT.fromJSON(e.startSelection),e.selectionsAfter.map(i.jT.fromJSON))
            }
            static fromTransaction(e, t) {
                let O = T;
                for (let t of e.startState.facet($)) {
                    let n = t(e);
                    n.length && (O = O.concat(n))
                }
                return !O.length && e.changes.empty ? null : new v(e.changes.invert(e.startState.doc),O,void 0,t || e.startState.selection,T)
            }
            static selection(e) {
                return new v(void 0,T,void 0,void 0,e)
            }
        }
        function k(e, t, O, n) {
            let r = e.slice(t + 1 > O + 20 ? t - O - 1 : 0, t);
            return r.push(n),
            r
        }
        function w(e, t) {
            return e.length ? t.length ? e.concat(t) : e : t
        }
        let T = [];
        function _(e, t) {
            if (!e.length)
                return [v.selection([t])];
            {
                let O = e[e.length - 1]
                  , n = O.selectionsAfter.slice(Math.max(0, O.selectionsAfter.length - 200));
                return n.length && n[n.length - 1].eq(t) ? e : (n.push(t),
                k(e, e.length - 1, 1e9, O.setSelAfter(n)))
            }
        }
        function W(e, t) {
            if (!e.length)
                return e;
            let O = e.length
              , n = T;
            for (; O; ) {
                let r = function(e, t, O) {
                    let n = w(e.selectionsAfter.length ? e.selectionsAfter.map(e=>e.map(t)) : T, O);
                    if (!e.changes)
                        return v.selection(n);
                    let r = e.changes.map(t)
                      , a = t.mapDesc(e.changes, !0)
                      , o = e.mapped ? e.mapped.composeDesc(a) : a;
                    return new v(r,i.Py.mapEffects(e.effects, t),o,e.startSelection.map(a),n)
                }(e[O - 1], t, n);
                if (r.changes && !r.changes.empty || r.effects.length) {
                    let t = e.slice(0, O);
                    return t[O - 1] = r,
                    t
                }
                t = r.mapped,
                O--,
                n = r.selectionsAfter
            }
            return n.length ? [v.selection(n)] : T
        }
        let Z = /^(input\.type|delete)($|\.)/;
        class z {
            constructor(e, t, O=0, n) {
                this.done = e,
                this.undone = t,
                this.prevTime = O,
                this.prevUserEvent = n
            }
            isolate() {
                return this.prevTime ? new z(this.done,this.undone) : this
            }
            addChanges(e, t, O, n, r) {
                var i, a;
                let o, s, l = this.done, c = l[l.length - 1];
                return l = c && c.changes && !c.changes.empty && e.changes && (!O || Z.test(O)) && (!c.selectionsAfter.length && t - this.prevTime < n.newGroupDelay && n.joinToEvent(r, (i = c.changes,
                a = e.changes,
                o = [],
                s = !1,
                i.iterChangedRanges((e,t)=>o.push(e, t)),
                a.iterChangedRanges((e,t,O,n)=>{
                    for (let e = 0; e < o.length; ) {
                        let t = o[e++]
                          , r = o[e++];
                        n >= t && O <= r && (s = !0)
                    }
                }
                ),
                s)) || "input.type.compose" == O) ? k(l, l.length - 1, n.minDepth, new v(e.changes.compose(c.changes),w(e.effects, c.effects),c.mapped,c.startSelection,T)) : k(l, l.length, n.minDepth, e),
                new z(l,T,t,O)
            }
            addSelection(e, t, O, n) {
                var r;
                let i = this.done.length ? this.done[this.done.length - 1].selectionsAfter : T;
                return i.length > 0 && t - this.prevTime < n && O == this.prevUserEvent && O && /^select($|\.)/.test(O) && (r = i[i.length - 1]).ranges.length == e.ranges.length && 0 === r.ranges.filter((t,O)=>t.empty != e.ranges[O].empty).length ? this : new z(_(this.done, e),this.undone,t,O)
            }
            addMapping(e) {
                return new z(W(this.done, e),W(this.undone, e),this.prevTime,this.prevUserEvent)
            }
            pop(e, t, O) {
                let n = 0 == e ? this.done : this.undone;
                if (0 == n.length)
                    return null;
                let r = n[n.length - 1];
                if (O && r.selectionsAfter.length) {
                    var i;
                    let O, a;
                    return t.update({
                        selection: r.selectionsAfter[r.selectionsAfter.length - 1],
                        annotations: m.of({
                            side: e,
                            rest: (O = (i = n)[i.length - 1],
                            (a = i.slice())[i.length - 1] = O.setSelAfter(O.selectionsAfter.slice(0, O.selectionsAfter.length - 1)),
                            a)
                        }),
                        userEvent: 0 == e ? "select.undo" : "select.redo",
                        scrollIntoView: !0
                    })
                }
                if (!r.changes)
                    return null;
                {
                    let O = 1 == n.length ? T : n.slice(0, n.length - 1);
                    return r.mapped && (O = W(O, r.mapped)),
                    t.update({
                        changes: r.changes,
                        selection: r.startSelection,
                        effects: r.effects,
                        annotations: m.of({
                            side: e,
                            rest: O
                        }),
                        filter: !1,
                        userEvent: 0 == e ? "undo" : "redo",
                        scrollIntoView: !0
                    })
                }
            }
        }
        z.empty = new z(T,T);
        let q = [{
            key: "Mod-z",
            run: b,
            preventDefault: !0
        }, {
            key: "Mod-y",
            mac: "Mod-Shift-z",
            run: y,
            preventDefault: !0
        }, {
            linux: "Ctrl-Shift-z",
            run: y,
            preventDefault: !0
        }, {
            key: "Mod-u",
            run: x,
            preventDefault: !0
        }, {
            key: "Alt-u",
            mac: "Mod-Shift-u",
            run: X,
            preventDefault: !0
        }];
        function Y(e, t) {
            return i.jT.create(e.ranges.map(t), e.mainIndex)
        }
        function R(e, t) {
            return e.update({
                selection: t,
                scrollIntoView: !0,
                userEvent: "select"
            })
        }
        function U({state: e, dispatch: t}, O) {
            let n = Y(e.selection, O);
            return !n.eq(e.selection) && (t(R(e, n)),
            !0)
        }
        function V(e, t) {
            return i.jT.cursor(t ? e.to : e.from)
        }
        function E(e, t) {
            return U(e, O=>O.empty ? e.moveByChar(O, t) : V(O, t))
        }
        function j(e) {
            return e.textDirectionAt(e.state.selection.main.head) == a.Nm.LTR
        }
        let G = e=>E(e, !j(e))
          , C = e=>E(e, j(e));
        function A(e, t) {
            return U(e, O=>O.empty ? e.moveByGroup(O, t) : V(O, t))
        }
        let I = e=>A(e, !j(e))
          , J = e=>A(e, j(e));
        function N(e, t, O) {
            let n, r, a = (0,
            o.qz)(e).resolveInner(t.head), l = O ? s.md.closedBy : s.md.openedBy;
            for (let n = t.head; ; ) {
                let t = O ? a.childAfter(n) : a.childBefore(n);
                if (!t)
                    break;
                !function(e, t, O) {
                    if (t.type.prop(O))
                        return !0;
                    let n = t.to - t.from;
                    return n && (n > 2 || /[^\s,.;:]/.test(e.sliceDoc(t.from, t.to))) || t.firstChild
                }(e, t, l) ? n = O ? t.to : t.from : a = t
            }
            return r = a.type.prop(l) && (n = O ? (0,
            o.Um)(e, a.from, 1) : (0,
            o.Um)(e, a.to, -1)) && n.matched ? O ? n.end.to : n.end.from : O ? a.to : a.from,
            i.jT.cursor(r, O ? -1 : 1)
        }
        let D = e=>U(e, t=>N(e.state, t, !j(e)))
          , L = e=>U(e, t=>N(e.state, t, j(e)));
        function F(e, t) {
            return U(e, O=>{
                if (!O.empty)
                    return V(O, t);
                let n = e.moveVertically(O, t);
                return n.head != O.head ? n : e.moveToLineBoundary(O, t)
            }
            )
        }
        let M = e=>F(e, !1)
          , B = e=>F(e, !0);
        function H(e) {
            let t = e.scrollDOM.clientHeight < e.scrollDOM.scrollHeight - 2, O = 0, n = 0, r;
            if (t) {
                for (let t of e.state.facet(a.tk.scrollMargins)) {
                    let r = t(e);
                    (null == r ? void 0 : r.top) && (O = Math.max(null == r ? void 0 : r.top, O)),
                    (null == r ? void 0 : r.bottom) && (n = Math.max(null == r ? void 0 : r.bottom, n))
                }
                r = e.scrollDOM.clientHeight - O - n
            } else
                r = (e.dom.ownerDocument.defaultView || window).innerHeight;
            return {
                marginTop: O,
                marginBottom: n,
                selfScroll: t,
                height: Math.max(e.defaultLineHeight, r - 5)
            }
        }
        function K(e, t) {
            let O, n = H(e), {state: r} = e, i = Y(r.selection, O=>O.empty ? e.moveVertically(O, t, n.height) : V(O, t));
            if (i.eq(r.selection))
                return !1;
            if (n.selfScroll) {
                let t = e.coordsAtPos(r.selection.main.head)
                  , o = e.scrollDOM.getBoundingClientRect()
                  , s = o.top + n.marginTop
                  , l = o.bottom - n.marginBottom;
                t && t.top > s && t.bottom < l && (O = a.tk.scrollIntoView(i.main.head, {
                    y: "start",
                    yMargin: t.top - s
                }))
            }
            return e.dispatch(R(r, i), {
                effects: O
            }),
            !0
        }
        let ee = e=>K(e, !1)
          , et = e=>K(e, !0);
        function eO(e, t, O) {
            let n = e.lineBlockAt(t.head)
              , r = e.moveToLineBoundary(t, O);
            if (r.head == t.head && r.head != (O ? n.to : n.from) && (r = e.moveToLineBoundary(t, O, !1)),
            !O && r.head == n.from && n.length) {
                let O = /^\s*/.exec(e.state.sliceDoc(n.from, Math.min(n.from + 100, n.to)))[0].length;
                O && t.head != n.from + O && (r = i.jT.cursor(n.from + O))
            }
            return r
        }
        let en = e=>U(e, t=>eO(e, t, !0))
          , er = e=>U(e, t=>eO(e, t, !1))
          , ei = e=>U(e, t=>eO(e, t, !j(e)))
          , ea = e=>U(e, t=>eO(e, t, j(e)))
          , eo = e=>U(e, t=>i.jT.cursor(e.lineBlockAt(t.head).from, 1))
          , es = e=>U(e, t=>i.jT.cursor(e.lineBlockAt(t.head).to, -1))
          , el = ({state: e, dispatch: t})=>{
            let O, n;
            return O = !1,
            n = Y(e.selection, t=>{
                let n = (0,
                o.Um)(e, t.head, -1) || (0,
                o.Um)(e, t.head, 1) || t.head > 0 && (0,
                o.Um)(e, t.head - 1, 1) || t.head < e.doc.length && (0,
                o.Um)(e, t.head + 1, -1);
                if (!n || !n.end)
                    return t;
                O = !0;
                let r = n.start.from == t.head ? n.end.to : n.end.from;
                return i.jT.cursor(r)
            }
            ),
            !!O && (t(R(e, n)),
            !0)
        }
        ;
        function ec(e, t) {
            let O = Y(e.state.selection, e=>{
                let O = t(e);
                return i.jT.range(e.anchor, O.head, O.goalColumn, O.bidiLevel || void 0)
            }
            );
            return !O.eq(e.state.selection) && (e.dispatch(R(e.state, O)),
            !0)
        }
        function eu(e, t) {
            return ec(e, O=>e.moveByChar(O, t))
        }
        let ep = e=>eu(e, !j(e))
          , ed = e=>eu(e, j(e));
        function ef(e, t) {
            return ec(e, O=>e.moveByGroup(O, t))
        }
        let eh = e=>ef(e, !j(e))
          , em = e=>ef(e, j(e))
          , eQ = e=>ec(e, t=>N(e.state, t, !j(e)))
          , e$ = e=>ec(e, t=>N(e.state, t, j(e)));
        function eg(e, t) {
            return ec(e, O=>e.moveVertically(O, t))
        }
        let eP = e=>eg(e, !1)
          , eS = e=>eg(e, !0);
        function eb(e, t) {
            return ec(e, O=>e.moveVertically(O, t, H(e).height))
        }
        let ey = e=>eb(e, !1)
          , ex = e=>eb(e, !0)
          , eX = e=>ec(e, t=>eO(e, t, !0))
          , ev = e=>ec(e, t=>eO(e, t, !1))
          , ek = e=>ec(e, t=>eO(e, t, !j(e)))
          , ew = e=>ec(e, t=>eO(e, t, j(e)))
          , eT = e=>ec(e, t=>i.jT.cursor(e.lineBlockAt(t.head).from))
          , e_ = e=>ec(e, t=>i.jT.cursor(e.lineBlockAt(t.head).to))
          , eW = ({state: e, dispatch: t})=>(t(R(e, {
            anchor: 0
        })),
        !0)
          , eZ = ({state: e, dispatch: t})=>(t(R(e, {
            anchor: e.doc.length
        })),
        !0)
          , ez = ({state: e, dispatch: t})=>(t(R(e, {
            anchor: e.selection.main.anchor,
            head: 0
        })),
        !0)
          , eq = ({state: e, dispatch: t})=>(t(R(e, {
            anchor: e.selection.main.anchor,
            head: e.doc.length
        })),
        !0)
          , eY = ({state: e, dispatch: t})=>(t(e.update({
            selection: {
                anchor: 0,
                head: e.doc.length
            },
            userEvent: "select"
        })),
        !0)
          , eR = ({state: e, dispatch: t})=>{
            let O = eB(e).map(({from: t, to: O})=>i.jT.range(t, Math.min(O + 1, e.doc.length)));
            return t(e.update({
                selection: i.jT.create(O),
                userEvent: "select"
            })),
            !0
        }
          , eU = ({state: e, dispatch: t})=>{
            let O = Y(e.selection, t=>{
                var O;
                let n = (0,
                o.qz)(e).resolveInner(t.head, 1);
                for (; !(n.from < t.from && n.to >= t.to || n.to > t.to && n.from <= t.from || !(null === (O = n.parent) || void 0 === O ? void 0 : O.parent)); )
                    n = n.parent;
                return i.jT.range(n.to, n.from)
            }
            );
            return t(R(e, O)),
            !0
        }
          , eV = ({state: e, dispatch: t})=>{
            let O = e.selection
              , n = null;
            return O.ranges.length > 1 ? n = i.jT.create([O.main]) : O.main.empty || (n = i.jT.create([i.jT.cursor(O.main.head)])),
            !!n && (t(R(e, n)),
            !0)
        }
        ;
        function eE(e, t) {
            if (e.state.readOnly)
                return !1;
            let O = "delete.selection"
              , {state: n} = e
              , r = n.changeByRange(n=>{
                let {from: r, to: a} = n;
                if (r == a) {
                    let n = t(r);
                    n < r ? (O = "delete.backward",
                    n = ej(e, n, !1)) : n > r && (O = "delete.forward",
                    n = ej(e, n, !0)),
                    r = Math.min(r, n),
                    a = Math.max(a, n)
                } else
                    r = ej(e, r, !1),
                    a = ej(e, a, !0);
                return r == a ? {
                    range: n
                } : {
                    changes: {
                        from: r,
                        to: a
                    },
                    range: i.jT.cursor(r)
                }
            }
            );
            return !r.changes.empty && (e.dispatch(n.update(r, {
                scrollIntoView: !0,
                userEvent: O,
                effects: "delete.selection" == O ? a.tk.announce.of(n.phrase("Selection deleted")) : void 0
            })),
            !0)
        }
        function ej(e, t, O) {
            if (e instanceof a.tk)
                for (let n of e.state.facet(a.tk.atomicRanges).map(t=>t(e)))
                    n.between(t, t, (e,n)=>{
                        e < t && n > t && (t = O ? n : e)
                    }
                    );
            return t
        }
        let eG = (e,t)=>eE(e, O=>{
            let {state: n} = e, r = n.doc.lineAt(O), a, s;
            if (!t && O > r.from && O < r.from + 200 && !/[^ \t]/.test(a = r.text.slice(0, O - r.from))) {
                if ("	" == a[a.length - 1])
                    return O - 1;
                let e = (0,
                i.IS)(a, n.tabSize) % (0,
                o.y1)(n) || (0,
                o.y1)(n);
                for (let t = 0; t < e && " " == a[a.length - 1 - t]; t++)
                    O--;
                s = O
            } else
                (s = (0,
                i.cp)(r.text, O - r.from, t, t) + r.from) == O && r.number != (t ? n.doc.lines : 1) && (s += t ? 1 : -1);
            return s
        }
        )
          , eC = e=>eG(e, !1)
          , eA = e=>eG(e, !0)
          , eI = (e,t)=>eE(e, O=>{
            let n = O
              , {state: r} = e
              , a = r.doc.lineAt(n)
              , o = r.charCategorizer(n);
            for (let e = null; ; ) {
                if (n == (t ? a.to : a.from)) {
                    n == O && a.number != (t ? r.doc.lines : 1) && (n += t ? 1 : -1);
                    break
                }
                let s = (0,
                i.cp)(a.text, n - a.from, t) + a.from
                  , l = a.text.slice(Math.min(n, s) - a.from, Math.max(n, s) - a.from)
                  , c = o(l);
                if (null != e && c != e)
                    break;
                (" " != l || n != O) && (e = c),
                n = s
            }
            return n
        }
        )
          , eJ = e=>eI(e, !1)
          , eN = e=>eI(e, !0)
          , eD = e=>eE(e, t=>{
            let O = e.lineBlockAt(t).to;
            return t < O ? O : Math.min(e.state.doc.length, t + 1)
        }
        )
          , eL = e=>eE(e, t=>{
            let O = e.lineBlockAt(t).from;
            return t > O ? O : Math.max(0, t - 1)
        }
        )
          , eF = ({state: e, dispatch: t})=>{
            if (e.readOnly)
                return !1;
            let O = e.changeByRange(e=>({
                changes: {
                    from: e.from,
                    to: e.to,
                    insert: i.xv.of(["", ""])
                },
                range: i.jT.cursor(e.from)
            }));
            return t(e.update(O, {
                scrollIntoView: !0,
                userEvent: "input"
            })),
            !0
        }
          , eM = ({state: e, dispatch: t})=>{
            if (e.readOnly)
                return !1;
            let O = e.changeByRange(t=>{
                if (!t.empty || 0 == t.from || t.from == e.doc.length)
                    return {
                        range: t
                    };
                let O = t.from
                  , n = e.doc.lineAt(O)
                  , r = O == n.from ? O - 1 : (0,
                i.cp)(n.text, O - n.from, !1) + n.from
                  , a = O == n.to ? O + 1 : (0,
                i.cp)(n.text, O - n.from, !0) + n.from;
                return {
                    changes: {
                        from: r,
                        to: a,
                        insert: e.doc.slice(O, a).append(e.doc.slice(r, O))
                    },
                    range: i.jT.cursor(a)
                }
            }
            );
            return !O.changes.empty && (t(e.update(O, {
                scrollIntoView: !0,
                userEvent: "move.character"
            })),
            !0)
        }
        ;
        function eB(e) {
            let t = []
              , O = -1;
            for (let n of e.selection.ranges) {
                let r = e.doc.lineAt(n.from)
                  , i = e.doc.lineAt(n.to);
                if (n.empty || n.to != i.from || (i = e.doc.lineAt(n.to - 1)),
                O >= r.number) {
                    let e = t[t.length - 1];
                    e.to = i.to,
                    e.ranges.push(n)
                } else
                    t.push({
                        from: r.from,
                        to: i.to,
                        ranges: [n]
                    });
                O = i.number + 1
            }
            return t
        }
        function eH(e, t, O) {
            if (e.readOnly)
                return !1;
            let n = []
              , r = [];
            for (let t of eB(e)) {
                if (O ? t.to == e.doc.length : 0 == t.from)
                    continue;
                let a = e.doc.lineAt(O ? t.to + 1 : t.from - 1)
                  , o = a.length + 1;
                if (O)
                    for (let O of (n.push({
                        from: t.to,
                        to: a.to
                    }, {
                        from: t.from,
                        insert: a.text + e.lineBreak
                    }),
                    t.ranges))
                        r.push(i.jT.range(Math.min(e.doc.length, O.anchor + o), Math.min(e.doc.length, O.head + o)));
                else
                    for (let O of (n.push({
                        from: a.from,
                        to: t.from
                    }, {
                        from: t.to,
                        insert: e.lineBreak + a.text
                    }),
                    t.ranges))
                        r.push(i.jT.range(O.anchor - o, O.head - o))
            }
            return !!n.length && (t(e.update({
                changes: n,
                scrollIntoView: !0,
                selection: i.jT.create(r, e.selection.mainIndex),
                userEvent: "move.line"
            })),
            !0)
        }
        let eK = ({state: e, dispatch: t})=>eH(e, t, !1)
          , e1 = ({state: e, dispatch: t})=>eH(e, t, !0);
        function e0(e, t, O) {
            if (e.readOnly)
                return !1;
            let n = [];
            for (let t of eB(e))
                O ? n.push({
                    from: t.from,
                    insert: e.doc.slice(t.from, t.to) + e.lineBreak
                }) : n.push({
                    from: t.to,
                    insert: e.lineBreak + e.doc.slice(t.from, t.to)
                });
            return t(e.update({
                changes: n,
                scrollIntoView: !0,
                userEvent: "input.copyline"
            })),
            !0
        }
        let e5 = ({state: e, dispatch: t})=>e0(e, t, !1)
          , e2 = ({state: e, dispatch: t})=>e0(e, t, !0)
          , e9 = e=>{
            if (e.state.readOnly)
                return !1;
            let {state: t} = e
              , O = t.changes(eB(t).map(({from: e, to: O})=>(e > 0 ? e-- : O < t.doc.length && O++,
            {
                from: e,
                to: O
            })))
              , n = Y(t.selection, t=>e.moveVertically(t, !0)).map(O);
            return e.dispatch({
                changes: O,
                selection: n,
                scrollIntoView: !0,
                userEvent: "delete.line"
            }),
            !0
        }
          , e4 = e7(!1)
          , e6 = e7(!0);
        function e7(e) {
            return ({state: t, dispatch: O})=>{
                if (t.readOnly)
                    return !1;
                let n = t.changeByRange(O=>{
                    let {from: n, to: r} = O
                      , a = t.doc.lineAt(n)
                      , l = !e && n == r && function(e, t) {
                        if (/\(\)|\[\]|\{\}/.test(e.sliceDoc(t - 1, t + 1)))
                            return {
                                from: t,
                                to: t
                            };
                        let O = (0,
                        o.qz)(e).resolveInner(t), n = O.childBefore(t), r = O.childAfter(t), i;
                        return n && r && n.to <= t && r.from >= t && (i = n.type.prop(s.md.closedBy)) && i.indexOf(r.name) > -1 && e.doc.lineAt(n.to).from == e.doc.lineAt(r.from).from ? {
                            from: n.to,
                            to: r.from
                        } : null
                    }(t, n);
                    e && (n = r = (r <= a.to ? a : t.doc.lineAt(r)).to);
                    let c = new o.Gn(t,{
                        simulateBreak: n,
                        simulateDoubleBreak: !!l
                    })
                      , u = (0,
                    o.K0)(c, n);
                    for (null == u && (u = /^\s*/.exec(t.doc.lineAt(n).text)[0].length); r < a.to && /\s/.test(a.text[r - a.from]); )
                        r++;
                    l ? {from: n, to: r} = l : n > a.from && n < a.from + 100 && !/\S/.test(a.text.slice(0, n)) && (n = a.from);
                    let p = ["", (0,
                    o.SS)(t, u)];
                    return l && p.push((0,
                    o.SS)(t, c.lineIndent(a.from, -1))),
                    {
                        changes: {
                            from: n,
                            to: r,
                            insert: i.xv.of(p)
                        },
                        range: i.jT.cursor(n + 1 + p[1].length)
                    }
                }
                );
                return O(t.update(n, {
                    scrollIntoView: !0,
                    userEvent: "input"
                })),
                !0
            }
        }
        function e3(e, t) {
            let O = -1;
            return e.changeByRange(n=>{
                let r = [];
                for (let i = n.from; i <= n.to; ) {
                    let a = e.doc.lineAt(i);
                    a.number > O && (n.empty || n.to > a.from) && (t(a, r, n),
                    O = a.number),
                    i = a.to + 1
                }
                let a = e.changes(r);
                return {
                    changes: r,
                    range: i.jT.range(a.mapPos(n.anchor, 1), a.mapPos(n.head, 1))
                }
            }
            )
        }
        let e8 = ({state: e, dispatch: t})=>{
            if (e.readOnly)
                return !1;
            let O = Object.create(null)
              , n = new o.Gn(e,{
                overrideIndentation: e=>{
                    let t = O[e];
                    return null == t ? -1 : t
                }
            })
              , r = e3(e, (t,r,i)=>{
                let a = (0,
                o.K0)(n, t.from);
                if (null == a)
                    return;
                /\S/.test(t.text) || (a = 0);
                let s = /^\s*/.exec(t.text)[0]
                  , l = (0,
                o.SS)(e, a);
                (s != l || i.from < t.from + s.length) && (O[t.from] = a,
                r.push({
                    from: t.from,
                    to: t.from + s.length,
                    insert: l
                }))
            }
            );
            return r.changes.empty || t(e.update(r, {
                userEvent: "indent"
            })),
            !0
        }
          , te = ({state: e, dispatch: t})=>!e.readOnly && (t(e.update(e3(e, (t,O)=>{
            O.push({
                from: t.from,
                insert: e.facet(o.c)
            })
        }
        ), {
            userEvent: "input.indent"
        })),
        !0)
          , tt = ({state: e, dispatch: t})=>!e.readOnly && (t(e.update(e3(e, (t,O)=>{
            let n = /^\s*/.exec(t.text)[0];
            if (!n)
                return;
            let r = (0,
            i.IS)(n, e.tabSize)
              , a = 0
              , s = (0,
            o.SS)(e, Math.max(0, r - (0,
            o.y1)(e)));
            for (; a < n.length && a < s.length && n.charCodeAt(a) == s.charCodeAt(a); )
                a++;
            O.push({
                from: t.from + a,
                to: t.from + n.length,
                insert: s.slice(a)
            })
        }
        ), {
            userEvent: "delete.dedent"
        })),
        !0)
          , tO = [{
            key: "ArrowLeft",
            run: G,
            shift: ep,
            preventDefault: !0
        }, {
            key: "Mod-ArrowLeft",
            mac: "Alt-ArrowLeft",
            run: I,
            shift: eh,
            preventDefault: !0
        }, {
            mac: "Cmd-ArrowLeft",
            run: ei,
            shift: ek,
            preventDefault: !0
        }, {
            key: "ArrowRight",
            run: C,
            shift: ed,
            preventDefault: !0
        }, {
            key: "Mod-ArrowRight",
            mac: "Alt-ArrowRight",
            run: J,
            shift: em,
            preventDefault: !0
        }, {
            mac: "Cmd-ArrowRight",
            run: ea,
            shift: ew,
            preventDefault: !0
        }, {
            key: "ArrowUp",
            run: M,
            shift: eP,
            preventDefault: !0
        }, {
            mac: "Cmd-ArrowUp",
            run: eW,
            shift: ez
        }, {
            mac: "Ctrl-ArrowUp",
            run: ee,
            shift: ey
        }, {
            key: "ArrowDown",
            run: B,
            shift: eS,
            preventDefault: !0
        }, {
            mac: "Cmd-ArrowDown",
            run: eZ,
            shift: eq
        }, {
            mac: "Ctrl-ArrowDown",
            run: et,
            shift: ex
        }, {
            key: "PageUp",
            run: ee,
            shift: ey
        }, {
            key: "PageDown",
            run: et,
            shift: ex
        }, {
            key: "Home",
            run: er,
            shift: ev,
            preventDefault: !0
        }, {
            key: "Mod-Home",
            run: eW,
            shift: ez
        }, {
            key: "End",
            run: en,
            shift: eX,
            preventDefault: !0
        }, {
            key: "Mod-End",
            run: eZ,
            shift: eq
        }, {
            key: "Enter",
            run: e4
        }, {
            key: "Mod-a",
            run: eY
        }, {
            key: "Backspace",
            run: eC,
            shift: eC
        }, {
            key: "Delete",
            run: eA
        }, {
            key: "Mod-Backspace",
            mac: "Alt-Backspace",
            run: eJ
        }, {
            key: "Mod-Delete",
            mac: "Alt-Delete",
            run: eN
        }, {
            mac: "Mod-Backspace",
            run: eL
        }, {
            mac: "Mod-Delete",
            run: eD
        }].concat([{
            key: "Ctrl-b",
            run: G,
            shift: ep,
            preventDefault: !0
        }, {
            key: "Ctrl-f",
            run: C,
            shift: ed
        }, {
            key: "Ctrl-p",
            run: M,
            shift: eP
        }, {
            key: "Ctrl-n",
            run: B,
            shift: eS
        }, {
            key: "Ctrl-a",
            run: eo,
            shift: eT
        }, {
            key: "Ctrl-e",
            run: es,
            shift: e_
        }, {
            key: "Ctrl-d",
            run: eA
        }, {
            key: "Ctrl-h",
            run: eC
        }, {
            key: "Ctrl-k",
            run: eD
        }, {
            key: "Ctrl-Alt-h",
            run: eJ
        }, {
            key: "Ctrl-o",
            run: eF
        }, {
            key: "Ctrl-t",
            run: eM
        }, {
            key: "Ctrl-v",
            run: et
        }].map(e=>({
            mac: e.key,
            run: e.run,
            shift: e.shift
        })))
          , tn = [{
            key: "Alt-ArrowLeft",
            mac: "Ctrl-ArrowLeft",
            run: D,
            shift: eQ
        }, {
            key: "Alt-ArrowRight",
            mac: "Ctrl-ArrowRight",
            run: L,
            shift: e$
        }, {
            key: "Alt-ArrowUp",
            run: eK
        }, {
            key: "Shift-Alt-ArrowUp",
            run: e5
        }, {
            key: "Alt-ArrowDown",
            run: e1
        }, {
            key: "Shift-Alt-ArrowDown",
            run: e2
        }, {
            key: "Escape",
            run: eV
        }, {
            key: "Mod-Enter",
            run: e6
        }, {
            key: "Alt-l",
            mac: "Ctrl-l",
            run: eR
        }, {
            key: "Mod-i",
            run: eU,
            preventDefault: !0
        }, {
            key: "Mod-[",
            run: tt
        }, {
            key: "Mod-]",
            run: te
        }, {
            key: "Mod-Alt-\\",
            run: e8
        }, {
            key: "Shift-Mod-k",
            run: e9
        }, {
            key: "Shift-Mod-\\",
            run: el
        }, {
            key: "Mod-/",
            run: l
        }, {
            key: "Alt-A",
            run: p
        }].concat(tO)
          , tr = {
            key: "Tab",
            run: te,
            shift: tt
        };
        function ti() {
            var e = arguments[0];
            "string" == typeof e && (e = document.createElement(e));
            var t = 1
              , O = arguments[1];
            if (O && "object" == typeof O && null == O.nodeType && !Array.isArray(O)) {
                for (var n in O)
                    if (Object.prototype.hasOwnProperty.call(O, n)) {
                        var r = O[n];
                        "string" == typeof r ? e.setAttribute(n, r) : null != r && (e[n] = r)
                    }
                t++
            }
            for (; t < arguments.length; t++)
                !function e(t, O) {
                    if ("string" == typeof O)
                        t.appendChild(document.createTextNode(O));
                    else if (null == O)
                        ;
                    else if (null != O.nodeType)
                        t.appendChild(O);
                    else if (Array.isArray(O))
                        for (var n = 0; n < O.length; n++)
                            e(t, O[n]);
                    else
                        throw RangeError("Unsupported child node: " + O)
                }(e, arguments[t]);
            return e
        }
        let ta = "function" == typeof String.prototype.normalize ? e=>e.normalize("NFKD") : e=>e;
        class to {
            constructor(e, t, O=0, n=e.length, r, i) {
                this.test = i,
                this.value = {
                    from: 0,
                    to: 0
                },
                this.done = !1,
                this.matches = [],
                this.buffer = "",
                this.bufferPos = 0,
                this.iter = e.iterRange(O, n),
                this.bufferStart = O,
                this.normalize = r ? e=>r(ta(e)) : ta,
                this.query = this.normalize(t)
            }
            peek() {
                if (this.bufferPos == this.buffer.length) {
                    if (this.bufferStart += this.buffer.length,
                    this.iter.next(),
                    this.iter.done)
                        return -1;
                    this.bufferPos = 0,
                    this.buffer = this.iter.value
                }
                return (0,
                i.gm)(this.buffer, this.bufferPos)
            }
            next() {
                for (; this.matches.length; )
                    this.matches.pop();
                return this.nextOverlapping()
            }
            nextOverlapping() {
                for (; ; ) {
                    let e = this.peek();
                    if (e < 0)
                        return this.done = !0,
                        this;
                    let t = (0,
                    i.bg)(e)
                      , O = this.bufferStart + this.bufferPos;
                    this.bufferPos += (0,
                    i.nZ)(e);
                    let n = this.normalize(t);
                    for (let e = 0, r = O; ; e++) {
                        let i = n.charCodeAt(e)
                          , a = this.match(i, r);
                        if (a)
                            return this.value = a,
                            this;
                        if (e == n.length - 1)
                            break;
                        r == O && e < t.length && t.charCodeAt(e) == i && r++
                    }
                }
            }
            match(e, t) {
                let O = null;
                for (let n = 0; n < this.matches.length; n += 2) {
                    let r = this.matches[n]
                      , i = !1;
                    this.query.charCodeAt(r) == e && (r == this.query.length - 1 ? O = {
                        from: this.matches[n + 1],
                        to: t + 1
                    } : (this.matches[n]++,
                    i = !0)),
                    i || (this.matches.splice(n, 2),
                    n -= 2)
                }
                return this.query.charCodeAt(0) == e && (1 == this.query.length ? O = {
                    from: t,
                    to: t + 1
                } : this.matches.push(1, t)),
                O && this.test && !this.test(O.from, O.to, this.buffer, this.bufferPos) && (O = null),
                O
            }
        }
        "undefined" != typeof Symbol && (to.prototype[Symbol.iterator] = function() {
            return this
        }
        );
        let ts = {
            from: -1,
            to: -1,
            match: /.*/.exec("")
        }
          , tl = "gm" + (null == /x/.unicode ? "" : "u");
        class tc {
            constructor(e, t, O, n=0, r=e.length) {
                if (this.text = e,
                this.to = r,
                this.curLine = "",
                this.done = !1,
                this.value = ts,
                /\\[sWDnr]|\n|\r|\[\^/.test(t))
                    return new td(e,t,O,n,r);
                this.re = new RegExp(t,tl + ((null == O ? void 0 : O.ignoreCase) ? "i" : "")),
                this.test = null == O ? void 0 : O.test,
                this.iter = e.iter();
                let i = e.lineAt(n);
                this.curLineStart = i.from,
                this.matchPos = tf(e, n),
                this.getLine(this.curLineStart)
            }
            getLine(e) {
                this.iter.next(e),
                this.iter.lineBreak ? this.curLine = "" : (this.curLine = this.iter.value,
                this.curLineStart + this.curLine.length > this.to && (this.curLine = this.curLine.slice(0, this.to - this.curLineStart)),
                this.iter.next())
            }
            nextLine() {
                this.curLineStart = this.curLineStart + this.curLine.length + 1,
                this.curLineStart > this.to ? this.curLine = "" : this.getLine(0)
            }
            next() {
                for (let e = this.matchPos - this.curLineStart; ; ) {
                    this.re.lastIndex = e;
                    let t = this.matchPos <= this.to && this.re.exec(this.curLine);
                    if (t) {
                        let O = this.curLineStart + t.index
                          , n = O + t[0].length;
                        if (this.matchPos = tf(this.text, n + (O == n ? 1 : 0)),
                        O == this.curLineStart + this.curLine.length && this.nextLine(),
                        (O < n || O > this.value.to) && (!this.test || this.test(O, n, t)))
                            return this.value = {
                                from: O,
                                to: n,
                                match: t
                            },
                            this;
                        e = this.matchPos - this.curLineStart
                    } else {
                        if (!(this.curLineStart + this.curLine.length < this.to))
                            return this.done = !0,
                            this;
                        this.nextLine(),
                        e = 0
                    }
                }
            }
        }
        let tu = new WeakMap;
        class tp {
            constructor(e, t) {
                this.from = e,
                this.text = t
            }
            get to() {
                return this.from + this.text.length
            }
            static get(e, t, O) {
                let n = tu.get(e);
                if (!n || n.from >= O || n.to <= t) {
                    let n = new tp(t,e.sliceString(t, O));
                    return tu.set(e, n),
                    n
                }
                if (n.from == t && n.to == O)
                    return n;
                let {text: r, from: i} = n;
                return i > t && (r = e.sliceString(t, i) + r,
                i = t),
                n.to < O && (r += e.sliceString(n.to, O)),
                tu.set(e, new tp(i,r)),
                new tp(t,r.slice(t - i, O - i))
            }
        }
        class td {
            constructor(e, t, O, n, r) {
                this.text = e,
                this.to = r,
                this.done = !1,
                this.value = ts,
                this.matchPos = tf(e, n),
                this.re = new RegExp(t,tl + ((null == O ? void 0 : O.ignoreCase) ? "i" : "")),
                this.test = null == O ? void 0 : O.test,
                this.flat = tp.get(e, n, this.chunkEnd(n + 5e3))
            }
            chunkEnd(e) {
                return e >= this.to ? this.to : this.text.lineAt(e).to
            }
            next() {
                for (; ; ) {
                    let e = this.re.lastIndex = this.matchPos - this.flat.from
                      , t = this.re.exec(this.flat.text);
                    if (t && !t[0] && t.index == e && (this.re.lastIndex = e + 1,
                    t = this.re.exec(this.flat.text)),
                    t) {
                        let e = this.flat.from + t.index
                          , O = e + t[0].length;
                        if ((this.flat.to >= this.to || t.index + t[0].length <= this.flat.text.length - 10) && (!this.test || this.test(e, O, t)))
                            return this.value = {
                                from: e,
                                to: O,
                                match: t
                            },
                            this.matchPos = tf(this.text, O + (e == O ? 1 : 0)),
                            this
                    }
                    if (this.flat.to == this.to)
                        return this.done = !0,
                        this;
                    this.flat = tp.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + 2 * this.flat.text.length))
                }
            }
        }
        function tf(e, t) {
            if (t >= e.length)
                return t;
            let O = e.lineAt(t), n;
            for (; t < O.to && (n = O.text.charCodeAt(t - O.from)) >= 56320 && n < 57344; )
                t++;
            return t
        }
        function th(e) {
            let t = ti("input", {
                class: "cm-textfield",
                name: "line"
            });
            function O() {
                let O = /^([+-])?(\d+)?(:\d+)?(%)?$/.exec(t.value);
                if (!O)
                    return;
                let {state: n} = e
                  , r = n.doc.lineAt(n.selection.main.head)
                  , [,a,o,s,l] = O
                  , c = s ? +s.slice(1) : 0
                  , u = o ? +o : r.number;
                if (o && l) {
                    let e = u / 100;
                    a && (e = e * ("-" == a ? -1 : 1) + r.number / n.doc.lines),
                    u = Math.round(n.doc.lines * e)
                } else
                    o && a && (u = u * ("-" == a ? -1 : 1) + r.number);
                let p = n.doc.line(Math.max(1, Math.min(n.doc.lines, u)));
                e.dispatch({
                    effects: tm.of(!1),
                    selection: i.jT.cursor(p.from + Math.max(0, Math.min(c, p.length))),
                    scrollIntoView: !0
                }),
                e.focus()
            }
            return {
                dom: ti("form", {
                    class: "cm-gotoLine",
                    onkeydown: t=>{
                        27 == t.keyCode ? (t.preventDefault(),
                        e.dispatch({
                            effects: tm.of(!1)
                        }),
                        e.focus()) : 13 == t.keyCode && (t.preventDefault(),
                        O())
                    }
                    ,
                    onsubmit: e=>{
                        e.preventDefault(),
                        O()
                    }
                }, ti("label", e.state.phrase("Go to line"), ": ", t), " ", ti("button", {
                    class: "cm-button",
                    type: "submit"
                }, e.state.phrase("go")))
            }
        }
        "undefined" != typeof Symbol && (tc.prototype[Symbol.iterator] = td.prototype[Symbol.iterator] = function() {
            return this
        }
        );
        let tm = i.Py.define()
          , tQ = i.QQ.define({
            create: ()=>!0,
            update(e, t) {
                for (let O of t.effects)
                    O.is(tm) && (e = O.value);
                return e
            },
            provide: e=>a.mH.from(e, e=>e ? th : null)
        })
          , t$ = e=>{
            let t = (0,
            a.Sd)(e, th);
            if (!t) {
                let O = [tm.of(!0)];
                null == e.state.field(tQ, !1) && O.push(i.Py.appendConfig.of([tQ, tg])),
                e.dispatch({
                    effects: O
                }),
                t = (0,
                a.Sd)(e, th)
            }
            return t && t.dom.querySelector("input").focus(),
            !0
        }
          , tg = a.tk.baseTheme({
            ".cm-panel.cm-gotoLine": {
                padding: "2px 6px 4px",
                "& label": {
                    fontSize: "80%"
                }
            }
        })
          , tP = {
            highlightWordAroundCursor: !1,
            minSelectionLength: 1,
            maxMatches: 100,
            wholeWords: !1
        }
          , tS = i.r$.define({
            combine: e=>(0,
            i.BO)(e, tP, {
                highlightWordAroundCursor: (e,t)=>e || t,
                minSelectionLength: Math.min,
                maxMatches: Math.min
            })
        })
          , tb = a.p.mark({
            class: "cm-selectionMatch"
        })
          , ty = a.p.mark({
            class: "cm-selectionMatch cm-selectionMatch-main"
        });
        function tx(e, t, O, n) {
            return (0 == O || e(t.sliceDoc(O - 1, O)) != i.D0.Word) && (n == t.doc.length || e(t.sliceDoc(n, n + 1)) != i.D0.Word)
        }
        let tX = a.lg.fromClass(class {
            constructor(e) {
                this.decorations = this.getDeco(e)
            }
            update(e) {
                (e.selectionSet || e.docChanged || e.viewportChanged) && (this.decorations = this.getDeco(e.view))
            }
            getDeco(e) {
                let t = e.state.facet(tS)
                  , {state: O} = e
                  , n = O.selection;
                if (n.ranges.length > 1)
                    return a.p.none;
                let r = n.main, o, s = null;
                if (r.empty) {
                    if (!t.highlightWordAroundCursor)
                        return a.p.none;
                    let e = O.wordAt(r.head);
                    if (!e)
                        return a.p.none;
                    s = O.charCategorizer(r.head),
                    o = O.sliceDoc(e.from, e.to)
                } else {
                    let e = r.to - r.from;
                    if (e < t.minSelectionLength || e > 200)
                        return a.p.none;
                    if (t.wholeWords) {
                        var l, c, u;
                        if (o = O.sliceDoc(r.from, r.to),
                        !(tx(s = O.charCategorizer(r.head), O, r.from, r.to) && (l = s,
                        c = r.from,
                        u = r.to,
                        l(O.sliceDoc(c, c + 1)) == i.D0.Word && l(O.sliceDoc(u - 1, u)) == i.D0.Word)))
                            return a.p.none
                    } else if (!(o = O.sliceDoc(r.from, r.to).trim()))
                        return a.p.none
                }
                let p = [];
                for (let n of e.visibleRanges) {
                    let e = new to(O.doc,o,n.from,n.to);
                    for (; !e.next().done; ) {
                        let {from: n, to: i} = e.value;
                        if ((!s || tx(s, O, n, i)) && (r.empty && n <= r.from && i >= r.to ? p.push(ty.range(n, i)) : (n >= r.to || i <= r.from) && p.push(tb.range(n, i)),
                        p.length > t.maxMatches))
                            return a.p.none
                    }
                }
                return a.p.set(p)
            }
        }
        , {
            decorations: e=>e.decorations
        })
          , tv = a.tk.baseTheme({
            ".cm-selectionMatch": {
                backgroundColor: "#99ff7780"
            },
            ".cm-searchMatch .cm-selectionMatch": {
                backgroundColor: "transparent"
            }
        })
          , tk = ({state: e, dispatch: t})=>{
            let {selection: O} = e
              , n = i.jT.create(O.ranges.map(t=>e.wordAt(t.head) || i.jT.cursor(t.head)), O.mainIndex);
            return !n.eq(O) && (t(e.update({
                selection: n
            })),
            !0)
        }
          , tw = ({state: e, dispatch: t})=>{
            let {ranges: O} = e.selection;
            if (O.some(e=>e.from === e.to))
                return tk({
                    state: e,
                    dispatch: t
                });
            let n = e.sliceDoc(O[0].from, O[0].to);
            if (e.selection.ranges.some(t=>e.sliceDoc(t.from, t.to) != n))
                return !1;
            let r = function(e, t) {
                let {main: O, ranges: n} = e.selection
                  , r = e.wordAt(O.head)
                  , i = r && r.from == O.from && r.to == O.to;
                for (let O = !1, r = new to(e.doc,t,n[n.length - 1].to); ; )
                    if (r.next(),
                    r.done) {
                        if (O)
                            return null;
                        r = new to(e.doc,t,0,Math.max(0, n[n.length - 1].from - 1)),
                        O = !0
                    } else {
                        if (O && n.some(e=>e.from == r.value.from))
                            continue;
                        if (i) {
                            let t = e.wordAt(r.value.from);
                            if (!t || t.from != r.value.from || t.to != r.value.to)
                                continue
                        }
                        return r.value
                    }
            }(e, n);
            return !!r && (t(e.update({
                selection: e.selection.addRange(i.jT.range(r.from, r.to), !1),
                effects: a.tk.scrollIntoView(r.to)
            })),
            !0)
        }
          , tT = i.r$.define({
            combine: e=>(0,
            i.BO)(e, {
                top: !1,
                caseSensitive: !1,
                literal: !1,
                wholeWord: !1,
                createPanel: e=>new t4(e),
                scrollToMatch: e=>a.tk.scrollIntoView(e)
            })
        });
        class t_ {
            constructor(e) {
                this.search = e.search,
                this.caseSensitive = !!e.caseSensitive,
                this.literal = !!e.literal,
                this.regexp = !!e.regexp,
                this.replace = e.replace || "",
                this.valid = !!this.search && (!this.regexp || function(e) {
                    try {
                        return new RegExp(e,tl),
                        !0
                    } catch (e) {
                        return !1
                    }
                }(this.search)),
                this.unquoted = this.unquote(this.search),
                this.wholeWord = !!e.wholeWord
            }
            unquote(e) {
                return this.literal ? e : e.replace(/\\([nrt\\])/g, (e,t)=>"n" == t ? "\n" : "r" == t ? "\r" : "t" == t ? "	" : "\\")
            }
            eq(e) {
                return this.search == e.search && this.replace == e.replace && this.caseSensitive == e.caseSensitive && this.regexp == e.regexp && this.wholeWord == e.wholeWord
            }
            create() {
                return this.regexp ? new tU(this) : new tz(this)
            }
            getCursor(e, t=0, O) {
                let n = e.doc ? e : i.yy.create({
                    doc: e
                });
                return null == O && (O = n.doc.length),
                this.regexp ? tq(this, n, t, O) : tZ(this, n, t, O)
            }
        }
        class tW {
            constructor(e) {
                this.spec = e
            }
        }
        function tZ(e, t, O, n) {
            var r, a;
            return new to(t.doc,e.unquoted,O,n,e.caseSensitive ? void 0 : e=>e.toLowerCase(),e.wholeWord ? (r = t.doc,
            a = t.charCategorizer(t.selection.main.head),
            (e,t,O,n)=>((n > e || n + O.length < t) && (n = Math.max(0, e - 2),
            O = r.sliceString(n, Math.min(r.length, t + 2))),
            (a(tY(O, e - n)) != i.D0.Word || a(tR(O, e - n)) != i.D0.Word) && (a(tR(O, t - n)) != i.D0.Word || a(tY(O, t - n)) != i.D0.Word))) : void 0)
        }
        class tz extends tW {
            constructor(e) {
                super(e)
            }
            nextMatch(e, t, O) {
                let n = tZ(this.spec, e, O, e.doc.length).nextOverlapping();
                return n.done && (n = tZ(this.spec, e, 0, t).nextOverlapping()),
                n.done ? null : n.value
            }
            prevMatchInRange(e, t, O) {
                for (let n = O; ; ) {
                    let O = Math.max(t, n - 1e4 - this.spec.unquoted.length)
                      , r = tZ(this.spec, e, O, n)
                      , i = null;
                    for (; !r.nextOverlapping().done; )
                        i = r.value;
                    if (i)
                        return i;
                    if (O == t)
                        return null;
                    n -= 1e4
                }
            }
            prevMatch(e, t, O) {
                return this.prevMatchInRange(e, 0, t) || this.prevMatchInRange(e, O, e.doc.length)
            }
            getReplacement(e) {
                return this.spec.unquote(this.spec.replace)
            }
            matchAll(e, t) {
                let O = tZ(this.spec, e, 0, e.doc.length)
                  , n = [];
                for (; !O.next().done; ) {
                    if (n.length >= t)
                        return null;
                    n.push(O.value)
                }
                return n
            }
            highlight(e, t, O, n) {
                let r = tZ(this.spec, e, Math.max(0, t - this.spec.unquoted.length), Math.min(O + this.spec.unquoted.length, e.doc.length));
                for (; !r.next().done; )
                    n(r.value.from, r.value.to)
            }
        }
        function tq(e, t, O, n) {
            var r;
            return new tc(t.doc,e.search,{
                ignoreCase: !e.caseSensitive,
                test: e.wholeWord ? (r = t.charCategorizer(t.selection.main.head),
                (e,t,O)=>!O[0].length || (r(tY(O.input, O.index)) != i.D0.Word || r(tR(O.input, O.index)) != i.D0.Word) && (r(tR(O.input, O.index + O[0].length)) != i.D0.Word || r(tY(O.input, O.index + O[0].length)) != i.D0.Word)) : void 0
            },O,n)
        }
        function tY(e, t) {
            return e.slice((0,
            i.cp)(e, t, !1), t)
        }
        function tR(e, t) {
            return e.slice(t, (0,
            i.cp)(e, t))
        }
        class tU extends tW {
            nextMatch(e, t, O) {
                let n = tq(this.spec, e, O, e.doc.length).next();
                return n.done && (n = tq(this.spec, e, 0, t).next()),
                n.done ? null : n.value
            }
            prevMatchInRange(e, t, O) {
                for (let n = 1; ; n++) {
                    let r = Math.max(t, O - 1e4 * n)
                      , i = tq(this.spec, e, r, O)
                      , a = null;
                    for (; !i.next().done; )
                        a = i.value;
                    if (a && (r == t || a.from > r + 10))
                        return a;
                    if (r == t)
                        return null
                }
            }
            prevMatch(e, t, O) {
                return this.prevMatchInRange(e, 0, t) || this.prevMatchInRange(e, O, e.doc.length)
            }
            getReplacement(e) {
                return this.spec.unquote(this.spec.replace.replace(/\$([$&\d+])/g, (t,O)=>"$" == O ? "$" : "&" == O ? e.match[0] : "0" != O && +O < e.match.length ? e.match[O] : t))
            }
            matchAll(e, t) {
                let O = tq(this.spec, e, 0, e.doc.length)
                  , n = [];
                for (; !O.next().done; ) {
                    if (n.length >= t)
                        return null;
                    n.push(O.value)
                }
                return n
            }
            highlight(e, t, O, n) {
                let r = tq(this.spec, e, Math.max(0, t - 250), Math.min(O + 250, e.doc.length));
                for (; !r.next().done; )
                    n(r.value.from, r.value.to)
            }
        }
        let tV = i.Py.define()
          , tE = i.Py.define()
          , tj = i.QQ.define({
            create: e=>new tG(tK(e).create(),null),
            update(e, t) {
                for (let O of t.effects)
                    O.is(tV) ? e = new tG(O.value.create(),e.panel) : O.is(tE) && (e = new tG(e.query,O.value ? tH : null));
                return e
            },
            provide: e=>a.mH.from(e, e=>e.panel)
        });
        class tG {
            constructor(e, t) {
                this.query = e,
                this.panel = t
            }
        }
        let tC = a.p.mark({
            class: "cm-searchMatch"
        })
          , tA = a.p.mark({
            class: "cm-searchMatch cm-searchMatch-selected"
        })
          , tI = a.lg.fromClass(class {
            constructor(e) {
                this.view = e,
                this.decorations = this.highlight(e.state.field(tj))
            }
            update(e) {
                let t = e.state.field(tj);
                (t != e.startState.field(tj) || e.docChanged || e.selectionSet || e.viewportChanged) && (this.decorations = this.highlight(t))
            }
            highlight({query: e, panel: t}) {
                if (!t || !e.spec.valid)
                    return a.p.none;
                let {view: O} = this
                  , n = new i.f_;
                for (let t = 0, r = O.visibleRanges, i = r.length; t < i; t++) {
                    let {from: a, to: o} = r[t];
                    for (; t < i - 1 && o > r[t + 1].from - 500; )
                        o = r[++t].to;
                    e.highlight(O.state, a, o, (e,t)=>{
                        let r = O.state.selection.ranges.some(O=>O.from == e && O.to == t);
                        n.add(e, t, r ? tA : tC)
                    }
                    )
                }
                return n.finish()
            }
        }
        , {
            decorations: e=>e.decorations
        });
        function tJ(e) {
            return t=>{
                let O = t.state.field(tj, !1);
                return O && O.query.spec.valid ? e(t, O) : t5(t)
            }
        }
        let tN = tJ((e,{query: t})=>{
            let {to: O} = e.state.selection.main
              , n = t.nextMatch(e.state, O, O);
            if (!n)
                return !1;
            let r = i.jT.single(n.from, n.to)
              , a = e.state.facet(tT);
            return e.dispatch({
                selection: r,
                effects: [t3(e, n), a.scrollToMatch(r.main, e)],
                userEvent: "select.search"
            }),
            t0(e),
            !0
        }
        )
          , tD = tJ((e,{query: t})=>{
            let {state: O} = e
              , {from: n} = O.selection.main
              , r = t.prevMatch(O, n, n);
            if (!r)
                return !1;
            let a = i.jT.single(r.from, r.to)
              , o = e.state.facet(tT);
            return e.dispatch({
                selection: a,
                effects: [t3(e, r), o.scrollToMatch(a.main, e)],
                userEvent: "select.search"
            }),
            t0(e),
            !0
        }
        )
          , tL = tJ((e,{query: t})=>{
            let O = t.matchAll(e.state, 1e3);
            return !!O && !!O.length && (e.dispatch({
                selection: i.jT.create(O.map(e=>i.jT.range(e.from, e.to))),
                userEvent: "select.search.matches"
            }),
            !0)
        }
        )
          , tF = ({state: e, dispatch: t})=>{
            let O = e.selection;
            if (O.ranges.length > 1 || O.main.empty)
                return !1;
            let {from: n, to: r} = O.main
              , a = []
              , o = 0;
            for (let t = new to(e.doc,e.sliceDoc(n, r)); !t.next().done; ) {
                if (a.length > 1e3)
                    return !1;
                t.value.from == n && (o = a.length),
                a.push(i.jT.range(t.value.from, t.value.to))
            }
            return t(e.update({
                selection: i.jT.create(a, o),
                userEvent: "select.search.matches"
            })),
            !0
        }
          , tM = tJ((e,{query: t})=>{
            let {state: O} = e
              , {from: n, to: r} = O.selection.main;
            if (O.readOnly)
                return !1;
            let o = t.nextMatch(O, n, n);
            if (!o)
                return !1;
            let s = [], l, c, u = [];
            if (o.from == n && o.to == r && (c = O.toText(t.getReplacement(o)),
            s.push({
                from: o.from,
                to: o.to,
                insert: c
            }),
            o = t.nextMatch(O, o.from, o.to),
            u.push(a.tk.announce.of(O.phrase("replaced match on line $", O.doc.lineAt(n).number) + "."))),
            o) {
                let t = 0 == s.length || s[0].from >= o.to ? 0 : o.to - o.from - c.length;
                l = i.jT.single(o.from - t, o.to - t),
                u.push(t3(e, o)),
                u.push(O.facet(tT).scrollToMatch(l.main, e))
            }
            return e.dispatch({
                changes: s,
                selection: l,
                effects: u,
                userEvent: "input.replace"
            }),
            !0
        }
        )
          , tB = tJ((e,{query: t})=>{
            if (e.state.readOnly)
                return !1;
            let O = t.matchAll(e.state, 1e9).map(e=>{
                let {from: O, to: n} = e;
                return {
                    from: O,
                    to: n,
                    insert: t.getReplacement(e)
                }
            }
            );
            if (!O.length)
                return !1;
            let n = e.state.phrase("replaced $ matches", O.length) + ".";
            return e.dispatch({
                changes: O,
                effects: a.tk.announce.of(n),
                userEvent: "input.replace.all"
            }),
            !0
        }
        );
        function tH(e) {
            return e.state.facet(tT).createPanel(e)
        }
        function tK(e, t) {
            var O, n, r, i;
            let a = e.selection.main
              , o = a.empty || a.to > a.from + 100 ? "" : e.sliceDoc(a.from, a.to);
            if (t && !o)
                return t;
            let s = e.facet(tT);
            return new t_({
                search: (null !== (O = null == t ? void 0 : t.literal) && void 0 !== O ? O : s.literal) ? o : o.replace(/\n/g, "\\n"),
                caseSensitive: null !== (n = null == t ? void 0 : t.caseSensitive) && void 0 !== n ? n : s.caseSensitive,
                literal: null !== (r = null == t ? void 0 : t.literal) && void 0 !== r ? r : s.literal,
                wholeWord: null !== (i = null == t ? void 0 : t.wholeWord) && void 0 !== i ? i : s.wholeWord
            })
        }
        function t1(e) {
            let t = (0,
            a.Sd)(e, tH);
            return t && t.dom.querySelector("[main-field]")
        }
        function t0(e) {
            let t = t1(e);
            t && t == e.root.activeElement && t.select()
        }
        let t5 = e=>{
            let t = e.state.field(tj, !1);
            if (t && t.panel) {
                let O = t1(e);
                if (O && O != e.root.activeElement) {
                    let n = tK(e.state, t.query.spec);
                    n.valid && e.dispatch({
                        effects: tV.of(n)
                    }),
                    O.focus(),
                    O.select()
                }
            } else
                e.dispatch({
                    effects: [tE.of(!0), t ? tV.of(tK(e.state, t.query.spec)) : i.Py.appendConfig.of(Oe)]
                });
            return !0
        }
          , t2 = e=>{
            let t = e.state.field(tj, !1);
            if (!t || !t.panel)
                return !1;
            let O = (0,
            a.Sd)(e, tH);
            return O && O.dom.contains(e.root.activeElement) && e.focus(),
            e.dispatch({
                effects: tE.of(!1)
            }),
            !0
        }
          , t9 = [{
            key: "Mod-f",
            run: t5,
            scope: "editor search-panel"
        }, {
            key: "F3",
            run: tN,
            shift: tD,
            scope: "editor search-panel",
            preventDefault: !0
        }, {
            key: "Mod-g",
            run: tN,
            shift: tD,
            scope: "editor search-panel",
            preventDefault: !0
        }, {
            key: "Escape",
            run: t2,
            scope: "editor search-panel"
        }, {
            key: "Mod-Shift-l",
            run: tF
        }, {
            key: "Alt-g",
            run: t$
        }, {
            key: "Mod-d",
            run: tw,
            preventDefault: !0
        }];
        class t4 {
            constructor(e) {
                this.view = e;
                let t = this.query = e.state.field(tj).query.spec;
                function O(e, t, O) {
                    return ti("button", {
                        class: "cm-button",
                        name: e,
                        onclick: t,
                        type: "button"
                    }, O)
                }
                this.commit = this.commit.bind(this),
                this.searchField = ti("input", {
                    value: t.search,
                    placeholder: t6(e, "Find"),
                    "aria-label": t6(e, "Find"),
                    class: "cm-textfield",
                    name: "search",
                    form: "",
                    "main-field": "true",
                    onchange: this.commit,
                    onkeyup: this.commit
                }),
                this.replaceField = ti("input", {
                    value: t.replace,
                    placeholder: t6(e, "Replace"),
                    "aria-label": t6(e, "Replace"),
                    class: "cm-textfield",
                    name: "replace",
                    form: "",
                    onchange: this.commit,
                    onkeyup: this.commit
                }),
                this.caseField = ti("input", {
                    type: "checkbox",
                    name: "case",
                    form: "",
                    checked: t.caseSensitive,
                    onchange: this.commit
                }),
                this.reField = ti("input", {
                    type: "checkbox",
                    name: "re",
                    form: "",
                    checked: t.regexp,
                    onchange: this.commit
                }),
                this.wordField = ti("input", {
                    type: "checkbox",
                    name: "word",
                    form: "",
                    checked: t.wholeWord,
                    onchange: this.commit
                }),
                this.dom = ti("div", {
                    onkeydown: e=>this.keydown(e),
                    class: "cm-search"
                }, [this.searchField, O("next", ()=>tN(e), [t6(e, "next")]), O("prev", ()=>tD(e), [t6(e, "previous")]), O("select", ()=>tL(e), [t6(e, "all")]), ti("label", null, [this.caseField, t6(e, "match case")]), ti("label", null, [this.reField, t6(e, "regexp")]), ti("label", null, [this.wordField, t6(e, "by word")]), ...e.state.readOnly ? [] : [ti("br"), this.replaceField, O("replace", ()=>tM(e), [t6(e, "replace")]), O("replaceAll", ()=>tB(e), [t6(e, "replace all")])], ti("button", {
                    name: "close",
                    onclick: ()=>t2(e),
                    "aria-label": t6(e, "close"),
                    type: "button"
                }, ["\xd7"])])
            }
            commit() {
                let e = new t_({
                    search: this.searchField.value,
                    caseSensitive: this.caseField.checked,
                    regexp: this.reField.checked,
                    wholeWord: this.wordField.checked,
                    replace: this.replaceField.value
                });
                e.eq(this.query) || (this.query = e,
                this.view.dispatch({
                    effects: tV.of(e)
                }))
            }
            keydown(e) {
                (0,
                a.$1)(this.view, e, "search-panel") ? e.preventDefault() : 13 == e.keyCode && e.target == this.searchField ? (e.preventDefault(),
                (e.shiftKey ? tD : tN)(this.view)) : 13 == e.keyCode && e.target == this.replaceField && (e.preventDefault(),
                tM(this.view))
            }
            update(e) {
                for (let t of e.transactions)
                    for (let e of t.effects)
                        e.is(tV) && !e.value.eq(this.query) && this.setQuery(e.value)
            }
            setQuery(e) {
                this.query = e,
                this.searchField.value = e.search,
                this.replaceField.value = e.replace,
                this.caseField.checked = e.caseSensitive,
                this.reField.checked = e.regexp,
                this.wordField.checked = e.wholeWord
            }
            mount() {
                this.searchField.select()
            }
            get pos() {
                return 80
            }
            get top() {
                return this.view.state.facet(tT).top
            }
        }
        function t6(e, t) {
            return e.state.phrase(t)
        }
        let t7 = /[\s\.,:;?!]/;
        function t3(e, {from: t, to: O}) {
            let n = e.state.doc.lineAt(t)
              , r = e.state.doc.lineAt(O).to
              , i = Math.max(n.from, t - 30)
              , o = Math.min(r, O + 30)
              , s = e.state.sliceDoc(i, o);
            if (i != n.from) {
                for (let e = 0; e < 30; e++)
                    if (!t7.test(s[e + 1]) && t7.test(s[e])) {
                        s = s.slice(e);
                        break
                    }
            }
            if (o != r) {
                for (let e = s.length - 1; e > s.length - 30; e--)
                    if (!t7.test(s[e - 1]) && t7.test(s[e])) {
                        s = s.slice(0, e);
                        break
                    }
            }
            return a.tk.announce.of(`${e.state.phrase("current match")}. ${s} ${e.state.phrase("on line")} ${n.number}.`)
        }
        let t8 = a.tk.baseTheme({
            ".cm-panel.cm-search": {
                padding: "2px 6px 4px",
                position: "relative",
                "& [name=close]": {
                    position: "absolute",
                    top: "0",
                    right: "4px",
                    backgroundColor: "inherit",
                    border: "none",
                    font: "inherit",
                    padding: 0,
                    margin: 0
                },
                "& input, & button, & label": {
                    margin: ".2em .6em .2em 0"
                },
                "& input[type=checkbox]": {
                    marginRight: ".2em"
                },
                "& label": {
                    fontSize: "80%",
                    whiteSpace: "pre"
                }
            },
            "&light .cm-searchMatch": {
                backgroundColor: "#ffff0054"
            },
            "&dark .cm-searchMatch": {
                backgroundColor: "#00ffff8a"
            },
            "&light .cm-searchMatch-selected": {
                backgroundColor: "#ff6a0054"
            },
            "&dark .cm-searchMatch-selected": {
                backgroundColor: "#ff00ff8a"
            }
        })
          , Oe = [tj, i.Wl.lowest(tI), t8];
        var Ot = O(5338);
        class OO {
            constructor(e, t, O) {
                this.from = e,
                this.to = t,
                this.diagnostic = O
            }
        }
        class On {
            constructor(e, t, O) {
                this.diagnostics = e,
                this.panel = t,
                this.selected = O
            }
            static init(e, t, O) {
                let n = e
                  , r = O.facet(Oh).markerFilter;
                r && (n = r(n));
                let i = a.p.set(n.map(e=>e.from == e.to || e.from == e.to - 1 && O.doc.lineAt(e.from).to == e.from ? a.p.widget({
                    widget: new O$(e),
                    diagnostic: e
                }).range(e.from) : a.p.mark({
                    attributes: {
                        class: "cm-lintRange cm-lintRange-" + e.severity
                    },
                    diagnostic: e
                }).range(e.from, e.to)), !0);
                return new On(i,t,Or(i))
            }
        }
        function Or(e, t=null, O=0) {
            let n = null;
            return e.between(O, 1e9, (e,O,{spec: r})=>{
                if (!t || r.diagnostic == t)
                    return n = new OO(e,O,r.diagnostic),
                    !1
            }
            ),
            n
        }
        function Oi(e, t) {
            return !!(e.effects.some(e=>e.is(Oa)) || e.changes.touchesRange(t.pos))
        }
        let Oa = i.Py.define()
          , Oo = i.Py.define()
          , Os = i.Py.define()
          , Ol = i.QQ.define({
            create: ()=>new On(a.p.none,null,null),
            update(e, t) {
                if (t.docChanged) {
                    let O = e.diagnostics.map(t.changes)
                      , n = null;
                    if (e.selected) {
                        let r = t.changes.mapPos(e.selected.from, 1);
                        n = Or(O, e.selected.diagnostic, r) || Or(O, null, r)
                    }
                    e = new On(O,e.panel,n)
                }
                for (let O of t.effects)
                    O.is(Oa) ? e = On.init(O.value, e.panel, t.state) : O.is(Oo) ? e = new On(e.diagnostics,O.value ? OP.open : null,e.selected) : O.is(Os) && (e = new On(e.diagnostics,e.panel,O.value));
                return e
            },
            provide: e=>[a.mH.from(e, e=>e.panel), a.tk.decorations.from(e, e=>e.diagnostics)]
        })
          , Oc = a.p.mark({
            class: "cm-lintRange cm-lintRange-active"
        })
          , Ou = e=>{
            var t, O;
            let n = e.state.field(Ol, !1);
            n && n.panel || e.dispatch({
                effects: (t = e.state,
                O = [Oo.of(!0)],
                t.field(Ol, !1) ? O : O.concat(i.Py.appendConfig.of(Ox)))
            });
            let r = (0,
            a.Sd)(e, OP.open);
            return r && r.dom.querySelector(".cm-panel-lint ul").focus(),
            !0
        }
          , Op = e=>{
            let t = e.state.field(Ol, !1);
            return !!t && !!t.panel && (e.dispatch({
                effects: Oo.of(!1)
            }),
            !0)
        }
          , Od = e=>{
            let t = e.state.field(Ol, !1);
            if (!t)
                return !1;
            let O = e.state.selection.main
              , n = t.diagnostics.iter(O.to + 1);
            return (!!n.value || !!(n = t.diagnostics.iter(0)).value && (n.from != O.from || n.to != O.to)) && (e.dispatch({
                selection: {
                    anchor: n.from,
                    head: n.to
                },
                scrollIntoView: !0
            }),
            !0)
        }
          , Of = [{
            key: "Mod-Shift-m",
            run: Ou,
            preventDefault: !0
        }, {
            key: "F8",
            run: Od
        }]
          , Oh = i.r$.define({
            combine: e=>Object.assign({
                sources: e.map(e=>e.source)
            }, (0,
            i.BO)(e.map(e=>e.config), {
                delay: 750,
                markerFilter: null,
                tooltipFilter: null,
                needsRefresh: null
            }, {
                needsRefresh: (e,t)=>e ? t ? O=>e(O) || t(O) : e : t
            }))
        });
        function Om(e) {
            let t = [];
            if (e)
                e: for (let {name: O} of e) {
                    for (let e = 0; e < O.length; e++) {
                        let n = O[e];
                        if (/[a-zA-Z]/.test(n) && !t.some(e=>e.toLowerCase() == n.toLowerCase())) {
                            t.push(n);
                            continue e
                        }
                    }
                    t.push("")
                }
            return t
        }
        function OQ(e, t, O) {
            var n;
            let r = O ? Om(t.actions) : [];
            return ti("li", {
                class: "cm-diagnostic cm-diagnostic-" + t.severity
            }, ti("span", {
                class: "cm-diagnosticText"
            }, t.renderMessage ? t.renderMessage() : t.message), null === (n = t.actions) || void 0 === n ? void 0 : n.map((O,n)=>{
                let i = !1
                  , a = n=>{
                    if (n.preventDefault(),
                    i)
                        return;
                    i = !0;
                    let r = Or(e.state.field(Ol).diagnostics, t);
                    r && O.apply(e, r.from, r.to)
                }
                  , {name: o} = O
                  , s = r[n] ? o.indexOf(r[n]) : -1
                  , l = s < 0 ? o : [o.slice(0, s), ti("u", o.slice(s, s + 1)), o.slice(s + 1)];
                return ti("button", {
                    type: "button",
                    class: "cm-diagnosticAction",
                    onclick: a,
                    onmousedown: a,
                    "aria-label": ` Action: ${o}${s < 0 ? "" : ` (access key "${r[n]})"`}.`
                }, l)
            }
            ), t.source && ti("div", {
                class: "cm-diagnosticSource"
            }, t.source))
        }
        class O$ extends a.l9 {
            constructor(e) {
                super(),
                this.diagnostic = e
            }
            eq(e) {
                return e.diagnostic == this.diagnostic
            }
            toDOM() {
                return ti("span", {
                    class: "cm-lintPoint cm-lintPoint-" + this.diagnostic.severity
                })
            }
        }
        class Og {
            constructor(e, t) {
                this.diagnostic = t,
                this.id = "item_" + Math.floor(4294967295 * Math.random()).toString(16),
                this.dom = OQ(e, t, !0),
                this.dom.id = this.id,
                this.dom.setAttribute("role", "option")
            }
        }
        class OP {
            constructor(e) {
                this.view = e,
                this.items = [];
                let t = t=>{
                    if (27 == t.keyCode)
                        Op(this.view),
                        this.view.focus();
                    else if (38 == t.keyCode || 33 == t.keyCode)
                        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);
                    else if (40 == t.keyCode || 34 == t.keyCode)
                        this.moveSelection((this.selectedIndex + 1) % this.items.length);
                    else if (36 == t.keyCode)
                        this.moveSelection(0);
                    else if (35 == t.keyCode)
                        this.moveSelection(this.items.length - 1);
                    else if (13 == t.keyCode)
                        this.view.focus();
                    else {
                        if (!(t.keyCode >= 65) || !(t.keyCode <= 90) || !(this.selectedIndex >= 0))
                            return;
                        let {diagnostic: O} = this.items[this.selectedIndex]
                          , n = Om(O.actions);
                        for (let r = 0; r < n.length; r++)
                            if (n[r].toUpperCase().charCodeAt(0) == t.keyCode) {
                                let t = Or(this.view.state.field(Ol).diagnostics, O);
                                t && O.actions[r].apply(e, t.from, t.to)
                            }
                    }
                    t.preventDefault()
                }
                  , O = e=>{
                    for (let t = 0; t < this.items.length; t++)
                        this.items[t].dom.contains(e.target) && this.moveSelection(t)
                }
                ;
                this.list = ti("ul", {
                    tabIndex: 0,
                    role: "listbox",
                    "aria-label": this.view.state.phrase("Diagnostics"),
                    onkeydown: t,
                    onclick: O
                }),
                this.dom = ti("div", {
                    class: "cm-panel-lint"
                }, this.list, ti("button", {
                    type: "button",
                    name: "close",
                    "aria-label": this.view.state.phrase("close"),
                    onclick: ()=>Op(this.view)
                }, "\xd7")),
                this.update()
            }
            get selectedIndex() {
                let e = this.view.state.field(Ol).selected;
                if (!e)
                    return -1;
                for (let t = 0; t < this.items.length; t++)
                    if (this.items[t].diagnostic == e.diagnostic)
                        return t;
                return -1
            }
            update() {
                let {diagnostics: e, selected: t} = this.view.state.field(Ol)
                  , O = 0
                  , n = !1
                  , r = null;
                for (e.between(0, this.view.state.doc.length, (e,i,{spec: a})=>{
                    let o = -1, s;
                    for (let e = O; e < this.items.length; e++)
                        if (this.items[e].diagnostic == a.diagnostic) {
                            o = e;
                            break
                        }
                    o < 0 ? (s = new Og(this.view,a.diagnostic),
                    this.items.splice(O, 0, s),
                    n = !0) : (s = this.items[o],
                    o > O && (this.items.splice(O, o - O),
                    n = !0)),
                    t && s.diagnostic == t.diagnostic ? s.dom.hasAttribute("aria-selected") || (s.dom.setAttribute("aria-selected", "true"),
                    r = s) : s.dom.hasAttribute("aria-selected") && s.dom.removeAttribute("aria-selected"),
                    O++
                }
                ); O < this.items.length && !(1 == this.items.length && this.items[0].diagnostic.from < 0); )
                    n = !0,
                    this.items.pop();
                0 == this.items.length && (this.items.push(new Og(this.view,{
                    from: -1,
                    to: -1,
                    severity: "info",
                    message: this.view.state.phrase("No diagnostics")
                })),
                n = !0),
                r ? (this.list.setAttribute("aria-activedescendant", r.id),
                this.view.requestMeasure({
                    key: this,
                    read: ()=>({
                        sel: r.dom.getBoundingClientRect(),
                        panel: this.list.getBoundingClientRect()
                    }),
                    write: ({sel: e, panel: t})=>{
                        e.top < t.top ? this.list.scrollTop -= t.top - e.top : e.bottom > t.bottom && (this.list.scrollTop += e.bottom - t.bottom)
                    }
                })) : this.selectedIndex < 0 && this.list.removeAttribute("aria-activedescendant"),
                n && this.sync()
            }
            sync() {
                let e = this.list.firstChild;
                function t() {
                    let t = e;
                    e = t.nextSibling,
                    t.remove()
                }
                for (let O of this.items)
                    if (O.dom.parentNode == this.list) {
                        for (; e != O.dom; )
                            t();
                        e = O.dom.nextSibling
                    } else
                        this.list.insertBefore(O.dom, e);
                for (; e; )
                    t()
            }
            moveSelection(e) {
                if (this.selectedIndex < 0)
                    return;
                let t = Or(this.view.state.field(Ol).diagnostics, this.items[e].diagnostic);
                t && this.view.dispatch({
                    selection: {
                        anchor: t.from,
                        head: t.to
                    },
                    scrollIntoView: !0,
                    effects: Os.of(t)
                })
            }
            static open(e) {
                return new OP(e)
            }
        }
        function OS(e) {
            return function(e, t='viewBox="0 0 40 40"') {
                return `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${t}>${encodeURIComponent(e)}</svg>')`
            }(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${e}" fill="none" stroke-width=".7"/>`, 'width="6" height="3"')
        }
        let Ob = a.tk.baseTheme({
            ".cm-diagnostic": {
                padding: "3px 6px 3px 8px",
                marginLeft: "-1px",
                display: "block",
                whiteSpace: "pre-wrap"
            },
            ".cm-diagnostic-error": {
                borderLeft: "5px solid #d11"
            },
            ".cm-diagnostic-warning": {
                borderLeft: "5px solid orange"
            },
            ".cm-diagnostic-info": {
                borderLeft: "5px solid #999"
            },
            ".cm-diagnosticAction": {
                font: "inherit",
                border: "none",
                padding: "2px 4px",
                backgroundColor: "#444",
                color: "white",
                borderRadius: "3px",
                marginLeft: "8px",
                cursor: "pointer"
            },
            ".cm-diagnosticSource": {
                fontSize: "70%",
                opacity: .7
            },
            ".cm-lintRange": {
                backgroundPosition: "left bottom",
                backgroundRepeat: "repeat-x",
                paddingBottom: "0.7px"
            },
            ".cm-lintRange-error": {
                backgroundImage: OS("#d11")
            },
            ".cm-lintRange-warning": {
                backgroundImage: OS("orange")
            },
            ".cm-lintRange-info": {
                backgroundImage: OS("#999")
            },
            ".cm-lintRange-active": {
                backgroundColor: "#ffdd9980"
            },
            ".cm-tooltip-lint": {
                padding: 0,
                margin: 0
            },
            ".cm-lintPoint": {
                position: "relative",
                "&:after": {
                    content: '""',
                    position: "absolute",
                    bottom: 0,
                    left: "-2px",
                    borderLeft: "3px solid transparent",
                    borderRight: "3px solid transparent",
                    borderBottom: "4px solid #d11"
                }
            },
            ".cm-lintPoint-warning": {
                "&:after": {
                    borderBottomColor: "orange"
                }
            },
            ".cm-lintPoint-info": {
                "&:after": {
                    borderBottomColor: "#999"
                }
            },
            ".cm-panel.cm-panel-lint": {
                position: "relative",
                "& ul": {
                    maxHeight: "100px",
                    overflowY: "auto",
                    "& [aria-selected]": {
                        backgroundColor: "#ddd",
                        "& u": {
                            textDecoration: "underline"
                        }
                    },
                    "&:focus [aria-selected]": {
                        background_fallback: "#bdf",
                        backgroundColor: "Highlight",
                        color_fallback: "white",
                        color: "HighlightText"
                    },
                    "& u": {
                        textDecoration: "none"
                    },
                    padding: 0,
                    margin: 0
                },
                "& [name=close]": {
                    position: "absolute",
                    top: "0",
                    right: "2px",
                    background: "inherit",
                    border: "none",
                    font: "inherit",
                    padding: 0,
                    margin: 0
                }
            }
        });
        a.SJ;
        let Oy = i.Py.define()
          , Ox = [Ol, a.tk.decorations.compute([Ol], e=>{
            let {selected: t, panel: O} = e.field(Ol);
            return t && O && t.from != t.to ? a.p.set([Oc.range(t.from, t.to)]) : a.p.none
        }
        ), (0,
        a.bF)(function(e, t, O) {
            let {diagnostics: n} = e.state.field(Ol)
              , r = []
              , i = 2e8
              , a = 0;
            n.between(t - (O < 0 ? 1 : 0), t + (O > 0 ? 1 : 0), (e,n,{spec: o})=>{
                t >= e && t <= n && (e == n || (t > e || O > 0) && (t < n || O < 0)) && (r.push(o.diagnostic),
                i = Math.min(e, i),
                a = Math.max(n, a))
            }
            );
            let o = e.state.facet(Oh).tooltipFilter;
            return (o && (r = o(r)),
            r.length) ? {
                pos: i,
                end: a,
                above: e.state.doc.lineAt(i).to < a,
                create: ()=>{
                    var t;
                    return {
                        dom: (t = e,
                        ti("ul", {
                            class: "cm-tooltip-lint"
                        }, r.map(e=>OQ(t, e, !1))))
                    }
                }
            } : null
        }, {
            hideOn: Oi
        }), Ob];
        var OX = function(e) {
            void 0 === e && (e = {});
            var t, O = [];
            !1 !== e.closeBracketsKeymap && (O = O.concat(Ot.GA)),
            !1 !== e.defaultKeymap && (O = O.concat(tn)),
            !1 !== e.searchKeymap && (O = O.concat(t9)),
            !1 !== e.historyKeymap && (O = O.concat(q)),
            !1 !== e.foldKeymap && (O = O.concat(o.e7)),
            !1 !== e.completionKeymap && (O = O.concat(Ot.B1)),
            !1 !== e.lintKeymap && (O = O.concat(Of));
            var n = [];
            if (!1 !== e.lineNumbers && n.push((0,
            a.Eu)()),
            !1 !== e.highlightActiveLineGutter && n.push((0,
            a.HQ)()),
            !1 !== e.highlightSpecialChars && n.push((0,
            a.AE)()),
            !1 !== e.history && n.push(function(e={}) {
                return [P, g.of(e), a.tk.domEventHandlers({
                    beforeinput(e, t) {
                        let O = "historyUndo" == e.inputType ? b : "historyRedo" == e.inputType ? y : null;
                        return !!O && (e.preventDefault(),
                        O(t))
                    }
                })]
            }()),
            !1 !== e.foldGutter && n.push((0,
            o.mi)()),
            !1 !== e.drawSelection && n.push((0,
            a.Uw)()),
            !1 !== e.dropCursor && n.push((0,
            a.qr)()),
            !1 !== e.allowMultipleSelections && n.push(i.yy.allowMultipleSelections.of(!0)),
            !1 !== e.indentOnInput && n.push((0,
            o.nY)()),
            !1 !== e.syntaxHighlighting && n.push((0,
            o.nF)(o.R_, {
                fallback: !0
            })),
            !1 !== e.bracketMatching && n.push((0,
            o.n$)()),
            !1 !== e.closeBrackets && n.push((0,
            Ot.vQ)()),
            !1 !== e.autocompletion && n.push((0,
            Ot.ys)()),
            !1 !== e.rectangularSelection && n.push((0,
            a.Zs)()),
            !1 !== e.crosshairCursor && n.push((0,
            a.S2)()),
            !1 !== e.highlightActiveLine && n.push((0,
            a.ZO)()),
            !1 !== e.highlightSelectionMatches) {
                let e;
                n.push((e = [tv, tX],
                t && e.push(tS.of(t)),
                e))
            }
            return e.tabSize && "number" == typeof e.tabSize && n.push(o.c.of(" ".repeat(e.tabSize))),
            n.concat([a.$f.of(O.flat())]).filter(Boolean)
        }
          , Ov = O(5306);
        let Ok = "#e06c75"
          , Ow = "#abb2bf"
          , OT = "#7d8799"
          , O_ = "#d19a66"
          , OW = "#2c313a"
          , OZ = "#282c34"
          , Oz = "#353a42"
          , Oq = "#528bff"
          , OY = a.tk.theme({
            "&": {
                color: Ow,
                backgroundColor: OZ
            },
            ".cm-content": {
                caretColor: Oq
            },
            ".cm-cursor, .cm-dropCursor": {
                borderLeftColor: Oq
            },
            "&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection": {
                backgroundColor: "#3E4451"
            },
            ".cm-panels": {
                backgroundColor: "#21252b",
                color: Ow
            },
            ".cm-panels.cm-panels-top": {
                borderBottom: "2px solid black"
            },
            ".cm-panels.cm-panels-bottom": {
                borderTop: "2px solid black"
            },
            ".cm-searchMatch": {
                backgroundColor: "#72a1ff59",
                outline: "1px solid #457dff"
            },
            ".cm-searchMatch.cm-searchMatch-selected": {
                backgroundColor: "#6199ff2f"
            },
            ".cm-activeLine": {
                backgroundColor: "#6699ff0b"
            },
            ".cm-selectionMatch": {
                backgroundColor: "#aafe661a"
            },
            "&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket": {
                backgroundColor: "#bad0f847"
            },
            ".cm-gutters": {
                backgroundColor: OZ,
                color: OT,
                border: "none"
            },
            ".cm-activeLineGutter": {
                backgroundColor: OW
            },
            ".cm-foldPlaceholder": {
                backgroundColor: "transparent",
                border: "none",
                color: "#ddd"
            },
            ".cm-tooltip": {
                border: "none",
                backgroundColor: Oz
            },
            ".cm-tooltip .cm-tooltip-arrow:before": {
                borderTopColor: "transparent",
                borderBottomColor: "transparent"
            },
            ".cm-tooltip .cm-tooltip-arrow:after": {
                borderTopColor: Oz,
                borderBottomColor: Oz
            },
            ".cm-tooltip-autocomplete": {
                "& > ul > li[aria-selected]": {
                    backgroundColor: OW,
                    color: Ow
                }
            }
        }, {
            dark: !0
        })
          , OR = o.Qf.define([{
            tag: Ov.pJ.keyword,
            color: "#c678dd"
        }, {
            tag: [Ov.pJ.name, Ov.pJ.deleted, Ov.pJ.character, Ov.pJ.propertyName, Ov.pJ.macroName],
            color: Ok
        }, {
            tag: [Ov.pJ.function(Ov.pJ.variableName), Ov.pJ.labelName],
            color: "#61afef"
        }, {
            tag: [Ov.pJ.color, Ov.pJ.constant(Ov.pJ.name), Ov.pJ.standard(Ov.pJ.name)],
            color: O_
        }, {
            tag: [Ov.pJ.definition(Ov.pJ.name), Ov.pJ.separator],
            color: Ow
        }, {
            tag: [Ov.pJ.typeName, Ov.pJ.className, Ov.pJ.number, Ov.pJ.changed, Ov.pJ.annotation, Ov.pJ.modifier, Ov.pJ.self, Ov.pJ.namespace],
            color: "#e5c07b"
        }, {
            tag: [Ov.pJ.operator, Ov.pJ.operatorKeyword, Ov.pJ.url, Ov.pJ.escape, Ov.pJ.regexp, Ov.pJ.link, Ov.pJ.special(Ov.pJ.string)],
            color: "#56b6c2"
        }, {
            tag: [Ov.pJ.meta, Ov.pJ.comment],
            color: OT
        }, {
            tag: Ov.pJ.strong,
            fontWeight: "bold"
        }, {
            tag: Ov.pJ.emphasis,
            fontStyle: "italic"
        }, {
            tag: Ov.pJ.strikethrough,
            textDecoration: "line-through"
        }, {
            tag: Ov.pJ.link,
            color: OT,
            textDecoration: "underline"
        }, {
            tag: Ov.pJ.heading,
            fontWeight: "bold",
            color: Ok
        }, {
            tag: [Ov.pJ.atom, Ov.pJ.bool, Ov.pJ.special(Ov.pJ.variableName)],
            color: O_
        }, {
            tag: [Ov.pJ.processingInstruction, Ov.pJ.string, Ov.pJ.inserted],
            color: "#98c379"
        }, {
            tag: Ov.pJ.invalid,
            color: "#ffffff"
        }])
          , OU = [OY, (0,
        o.nF)(OR)];
        var OV = function(e) {
            void 0 === e && (e = {});
            var {indentWithTab: t=!0, editable: O=!0, readOnly: n=!1, theme: r="light", placeholder: o="", basicSetup: s=!0} = e
              , l = []
              , c = a.tk.theme({
                "&": {
                    backgroundColor: "#fff"
                }
            }, {
                dark: !1
            });
            switch (t && l.unshift(a.$f.of([tr])),
            s && ("boolean" == typeof s ? l.unshift(OX()) : l.unshift(OX(s))),
            o && l.unshift((0,
            a.W$)(o)),
            r) {
            case "light":
                l.push(c);
                break;
            case "dark":
                l.push(OU);
                break;
            case "none":
                break;
            default:
                l.push(r)
            }
            return !1 === O && l.push(a.tk.editable.of(!1)),
            n && l.push(i.yy.readOnly.of(!0)),
            [...l]
        }
          , OE = e=>({
            line: e.state.doc.lineAt(e.state.selection.main.from),
            lineCount: e.state.doc.lines,
            lineBreak: e.state.lineBreak,
            length: e.state.doc.length,
            readOnly: e.state.readOnly,
            tabSize: e.state.tabSize,
            selection: e.state.selection,
            selectionAsSingle: e.state.selection.asSingle().main,
            ranges: e.state.selection.ranges,
            selectionCode: e.state.sliceDoc(e.state.selection.main.from, e.state.selection.main.to),
            selections: e.state.selection.ranges.map(t=>e.state.sliceDoc(t.from, t.to)),
            selectedText: e.state.selection.ranges.some(e=>!e.empty)
        })
          , Oj = i.q6.define()
          , OG = O(3360)
          , OC = ["className", "value", "selection", "extensions", "onChange", "onStatistics", "onCreateEditor", "onUpdate", "autoFocus", "theme", "height", "minHeight", "maxHeight", "width", "minWidth", "maxWidth", "basicSetup", "placeholder", "indentWithTab", "editable", "readOnly", "root", "initialState"]
          , OA = (0,
        r.forwardRef)((e,t)=>{
            var {className: O, value: o="", selection: s, extensions: l=[], onChange: c, onStatistics: u, onCreateEditor: p, onUpdate: d, autoFocus: f, theme: h="light", height: m, minHeight: Q, maxHeight: $, width: g, minWidth: P, maxWidth: S, basicSetup: b, placeholder: y, indentWithTab: x, editable: X, readOnly: v, root: k, initialState: w} = e
              , T = function(e, t) {
                if (null == e)
                    return {};
                var O, n, r = {}, i = Object.keys(e);
                for (n = 0; n < i.length; n++)
                    O = i[n],
                    t.indexOf(O) >= 0 || (r[O] = e[O]);
                return r
            }(e, OC)
              , _ = (0,
            r.useRef)(null)
              , {state: W, view: Z, container: z} = function(e) {
                var {value: t, selection: O, onChange: n, onStatistics: o, onCreateEditor: s, onUpdate: l, extensions: c=[], autoFocus: u, theme: p="light", height: d="", minHeight: f="", maxHeight: h="", placeholder: m="", width: Q="", minWidth: $="", maxWidth: g="", editable: P=!0, readOnly: S=!1, indentWithTab: b=!0, basicSetup: y=!0, root: x, initialState: X} = e
                  , [v,k] = (0,
                r.useState)()
                  , [w,T] = (0,
                r.useState)()
                  , [_,W] = (0,
                r.useState)()
                  , Z = a.tk.theme({
                    "&": {
                        height: d,
                        minHeight: f,
                        maxHeight: h,
                        width: Q,
                        minWidth: $,
                        maxWidth: g
                    }
                })
                  , z = a.tk.updateListener.of(e=>{
                    e.docChanged && "function" == typeof n && !e.transactions.some(e=>e.annotation(Oj)) && n(e.state.doc.toString(), e),
                    o && o(OE(e))
                }
                )
                  , q = OV({
                    theme: p,
                    editable: P,
                    readOnly: S,
                    placeholder: m,
                    indentWithTab: b,
                    basicSetup: y
                })
                  , Y = [z, Z, ...q];
                return l && "function" == typeof l && Y.push(a.tk.updateListener.of(l)),
                Y = Y.concat(c),
                (0,
                r.useEffect)(()=>{
                    if (v && !_) {
                        var e = {
                            doc: t,
                            selection: O,
                            extensions: Y
                        }
                          , n = X ? i.yy.fromJSON(X.json, e, X.fields) : i.yy.create(e);
                        if (W(n),
                        !w) {
                            var r = new a.tk({
                                state: n,
                                parent: v,
                                root: x
                            });
                            T(r),
                            s && s(r, n)
                        }
                    }
                    return ()=>{
                        w && (W(void 0),
                        T(void 0))
                    }
                }
                , [v, _]),
                (0,
                r.useEffect)(()=>k(e.container), [e.container]),
                (0,
                r.useEffect)(()=>()=>{
                    w && (w.destroy(),
                    T(void 0))
                }
                , [w]),
                (0,
                r.useEffect)(()=>{
                    u && w && w.focus()
                }
                , [u, w]),
                (0,
                r.useEffect)(()=>{
                    w && w.dispatch({
                        effects: i.Py.reconfigure.of(Y)
                    })
                }
                , [p, c, d, f, h, Q, $, g, m, P, S, b, y, n, l]),
                (0,
                r.useEffect)(()=>{
                    if (void 0 !== t) {
                        var e = w ? w.state.doc.toString() : "";
                        w && t !== e && w.dispatch({
                            changes: {
                                from: 0,
                                to: e.length,
                                insert: t || ""
                            },
                            annotations: [Oj.of(!0)]
                        })
                    }
                }
                , [t, w]),
                {
                    state: _,
                    setState: W,
                    view: w,
                    setView: T,
                    container: v,
                    setContainer: k
                }
            }({
                container: _.current,
                root: k,
                value: o,
                autoFocus: f,
                theme: h,
                height: m,
                minHeight: Q,
                maxHeight: $,
                width: g,
                minWidth: P,
                maxWidth: S,
                basicSetup: b,
                placeholder: y,
                indentWithTab: x,
                editable: X,
                readOnly: v,
                selection: s,
                onChange: c,
                onStatistics: u,
                onCreateEditor: p,
                onUpdate: d,
                extensions: l,
                initialState: w
            });
            if ((0,
            r.useImperativeHandle)(t, ()=>({
                editor: _.current,
                state: W,
                view: Z
            }), [_, z, W, Z]),
            "string" != typeof o)
                throw Error("value must be typeof string but got " + typeof o);
            return (0,
            OG.jsx)("div", (0,
            n.Z)({
                ref: _,
                className: ("string" == typeof h ? "cm-theme-" + h : "cm-theme") + (O ? " " + O : "")
            }, T))
        }
        );
        OA.displayName = "CodeMirror";
        var OI = OA
    },
    5527: function(e, t, O) {
        "use strict";
        O.d(t, {
            Z: function() {
                return r
            }
        });
        var n = O(1014);
        let r = (0,
        n.Z)("Circle", [["circle", {
            cx: "12",
            cy: "12",
            r: "10",
            key: "1mglay"
        }]])
    },
    253: function(e, t, O) {
        "use strict";
        var n, r;
        e.exports = (null == (n = O.g.process) ? void 0 : n.env) && "object" == typeof (null == (r = O.g.process) ? void 0 : r.env) ? O.g.process : O(8076)
    },
    8076: function(e) {
        !function() {
            var t = {
                229: function(e) {
                    var t, O, n, r = e.exports = {};
                    function i() {
                        throw Error("setTimeout has not been defined")
                    }
                    function a() {
                        throw Error("clearTimeout has not been defined")
                    }
                    function o(e) {
                        if (t === setTimeout)
                            return setTimeout(e, 0);
                        if ((t === i || !t) && setTimeout)
                            return t = setTimeout,
                            setTimeout(e, 0);
                        try {
                            return t(e, 0)
                        } catch (O) {
                            try {
                                return t.call(null, e, 0)
                            } catch (O) {
                                return t.call(this, e, 0)
                            }
                        }
                    }
                    !function() {
                        try {
                            t = "function" == typeof setTimeout ? setTimeout : i
                        } catch (e) {
                            t = i
                        }
                        try {
                            O = "function" == typeof clearTimeout ? clearTimeout : a
                        } catch (e) {
                            O = a
                        }
                    }();
                    var s = []
                      , l = !1
                      , c = -1;
                    function u() {
                        l && n && (l = !1,
                        n.length ? s = n.concat(s) : c = -1,
                        s.length && p())
                    }
                    function p() {
                        if (!l) {
                            var e = o(u);
                            l = !0;
                            for (var t = s.length; t; ) {
                                for (n = s,
                                s = []; ++c < t; )
                                    n && n[c].run();
                                c = -1,
                                t = s.length
                            }
                            n = null,
                            l = !1,
                            function(e) {
                                if (O === clearTimeout)
                                    return clearTimeout(e);
                                if ((O === a || !O) && clearTimeout)
                                    return O = clearTimeout,
                                    clearTimeout(e);
                                try {
                                    O(e)
                                } catch (t) {
                                    try {
                                        return O.call(null, e)
                                    } catch (t) {
                                        return O.call(this, e)
                                    }
                                }
                            }(e)
                        }
                    }
                    function d(e, t) {
                        this.fun = e,
                        this.array = t
                    }
                    function f() {}
                    r.nextTick = function(e) {
                        var t = Array(arguments.length - 1);
                        if (arguments.length > 1)
                            for (var O = 1; O < arguments.length; O++)
                                t[O - 1] = arguments[O];
                        s.push(new d(e,t)),
                        1 !== s.length || l || o(p)
                    }
                    ,
                    d.prototype.run = function() {
                        this.fun.apply(null, this.array)
                    }
                    ,
                    r.title = "browser",
                    r.browser = !0,
                    r.env = {},
                    r.argv = [],
                    r.version = "",
                    r.versions = {},
                    r.on = f,
                    r.addListener = f,
                    r.once = f,
                    r.off = f,
                    r.removeListener = f,
                    r.removeAllListeners = f,
                    r.emit = f,
                    r.prependListener = f,
                    r.prependOnceListener = f,
                    r.listeners = function(e) {
                        return []
                    }
                    ,
                    r.binding = function(e) {
                        throw Error("process.binding is not supported")
                    }
                    ,
                    r.cwd = function() {
                        return "/"
                    }
                    ,
                    r.chdir = function(e) {
                        throw Error("process.chdir is not supported")
                    }
                    ,
                    r.umask = function() {
                        return 0
                    }
                }
            }
              , O = {};
            function n(e) {
                var r = O[e];
                if (void 0 !== r)
                    return r.exports;
                var i = O[e] = {
                    exports: {}
                }
                  , a = !0;
                try {
                    t[e](i, i.exports, n),
                    a = !1
                } finally {
                    a && delete O[e]
                }
                return i.exports
            }
            n.ab = "//";
            var r = n(229);
            e.exports = r
        }()
    },
    4556: function(e, t, O) {
        e.exports = O(9991)
    },
    5338: function(e, t, O) {
        "use strict";
        O.d(t, {
            B1: function() {
                return ev
            },
            GA: function() {
                return eP
            },
            Gn: function() {
                return eo
            },
            Mb: function() {
                return s
            },
            eC: function() {
                return l
            },
            vQ: function() {
                return ed
            },
            ys: function() {
                return eX
            }
        });
        var n = O(4091)
          , r = O(6470)
          , i = O(168);
        class a {
            constructor(e, t, O) {
                this.state = e,
                this.pos = t,
                this.explicit = O,
                this.abortListeners = []
            }
            tokenBefore(e) {
                let t = (0,
                i.qz)(this.state).resolveInner(this.pos, -1);
                for (; t && 0 > e.indexOf(t.name); )
                    t = t.parent;
                return t ? {
                    from: t.from,
                    to: this.pos,
                    text: this.state.sliceDoc(t.from, this.pos),
                    type: t.type
                } : null
            }
            matchBefore(e) {
                let t = this.state.doc.lineAt(this.pos)
                  , O = Math.max(t.from, this.pos - 250)
                  , n = t.text.slice(O - t.from, this.pos - t.from)
                  , r = n.search(p(e, !1));
                return r < 0 ? null : {
                    from: O + r,
                    to: this.pos,
                    text: n.slice(r)
                }
            }
            get aborted() {
                return null == this.abortListeners
            }
            addEventListener(e, t) {
                "abort" == e && this.abortListeners && this.abortListeners.push(t)
            }
        }
        function o(e) {
            let t = Object.keys(e).join("")
              , O = /\w/.test(t);
            return O && (t = t.replace(/\w/g, "")),
            `[${O ? "\\w" : ""}${t.replace(/[^\w\s]/g, "\\$&")}]`
        }
        function s(e) {
            let t = e.map(e=>"string" == typeof e ? {
                label: e
            } : e)
              , [O,n] = t.every(e=>/^\w+$/.test(e.label)) ? [/\w*$/, /\w+$/] : function(e) {
                let t = Object.create(null)
                  , O = Object.create(null);
                for (let {label: n} of e) {
                    t[n[0]] = !0;
                    for (let e = 1; e < n.length; e++)
                        O[n[e]] = !0
                }
                let n = o(t) + o(O) + "*$";
                return [RegExp("^" + n), new RegExp(n)]
            }(t);
            return e=>{
                let r = e.matchBefore(n);
                return r || e.explicit ? {
                    from: r ? r.from : e.pos,
                    options: t,
                    validFor: O
                } : null
            }
        }
        function l(e, t) {
            return O=>{
                for (let t = (0,
                i.qz)(O.state).resolveInner(O.pos, -1); t; t = t.parent) {
                    if (e.indexOf(t.name) > -1)
                        return null;
                    if (t.type.isTop)
                        break
                }
                return t(O)
            }
        }
        class c {
            constructor(e, t, O, n) {
                this.completion = e,
                this.source = t,
                this.match = O,
                this.score = n
            }
        }
        function u(e) {
            return e.selection.main.from
        }
        function p(e, t) {
            var O;
            let {source: n} = e
              , r = t && "^" != n[0]
              , i = "$" != n[n.length - 1];
            return r || i ? RegExp(`${r ? "^" : ""}(?:${n})${i ? "$" : ""}`, null !== (O = e.flags) && void 0 !== O ? O : e.ignoreCase ? "i" : "") : e
        }
        let d = n.q6.define();
        function f(e, t) {
            let O = t.completion.apply || t.completion.label
              , r = t.source;
            "string" == typeof O ? e.dispatch(Object.assign(Object.assign({}, function(e, t, O, r) {
                let {main: i} = e.selection
                  , a = O - i.from
                  , o = r - i.from;
                return Object.assign(Object.assign({}, e.changeByRange(s=>s != i && O != r && e.sliceDoc(s.from + a, s.from + o) != e.sliceDoc(O, r) ? {
                    range: s
                } : {
                    changes: {
                        from: s.from + a,
                        to: r == i.from ? s.to : s.from + o,
                        insert: t
                    },
                    range: n.jT.cursor(s.from + a + t.length)
                })), {
                    userEvent: "input.complete"
                })
            }(e.state, O, r.from, r.to)), {
                annotations: d.of(t.completion)
            })) : O(e, t.completion, r.from, r.to)
        }
        let h = new WeakMap;
        function m(e) {
            if (!Array.isArray(e))
                return e;
            let t = h.get(e);
            return t || h.set(e, t = s(e)),
            t
        }
        let Q = n.Py.define()
          , $ = n.Py.define();
        class g {
            constructor(e) {
                this.pattern = e,
                this.chars = [],
                this.folded = [],
                this.any = [],
                this.precise = [],
                this.byWord = [];
                for (let t = 0; t < e.length; ) {
                    let O = (0,
                    n.gm)(e, t)
                      , r = (0,
                    n.nZ)(O);
                    this.chars.push(O);
                    let i = e.slice(t, t + r)
                      , a = i.toUpperCase();
                    this.folded.push((0,
                    n.gm)(a == i ? i.toLowerCase() : a, 0)),
                    t += r
                }
                this.astral = e.length != this.chars.length
            }
            match(e) {
                if (0 == this.pattern.length)
                    return [0];
                if (e.length < this.pattern.length)
                    return null;
                let {chars: t, folded: O, any: r, precise: i, byWord: a} = this;
                if (1 == t.length) {
                    let r = (0,
                    n.gm)(e, 0)
                      , i = (0,
                    n.nZ)(r)
                      , a = i == e.length ? 0 : -100;
                    if (r == t[0])
                        ;
                    else {
                        if (r != O[0])
                            return null;
                        a += -200
                    }
                    return [a, 0, i]
                }
                let o = e.indexOf(this.pattern);
                if (0 == o)
                    return [e.length == this.pattern.length ? 0 : -100, 0, this.pattern.length];
                let s = t.length
                  , l = 0;
                if (o < 0) {
                    for (let i = 0, a = Math.min(e.length, 200); i < a && l < s; ) {
                        let a = (0,
                        n.gm)(e, i);
                        (a == t[l] || a == O[l]) && (r[l++] = i),
                        i += (0,
                        n.nZ)(a)
                    }
                    if (l < s)
                        return null
                }
                let c = 0
                  , u = 0
                  , p = !1
                  , d = 0
                  , f = -1
                  , h = -1
                  , m = /[a-z]/.test(e)
                  , Q = !0;
                for (let r = 0, l = Math.min(e.length, 200), $ = 0; r < l && u < s; ) {
                    let l = (0,
                    n.gm)(e, r);
                    o < 0 && (c < s && l == t[c] && (i[c++] = r),
                    d < s && (l == t[d] || l == O[d] ? (0 == d && (f = r),
                    h = r + 1,
                    d++) : d = 0));
                    let g, P = l < 255 ? l >= 48 && l <= 57 || l >= 97 && l <= 122 ? 2 : l >= 65 && l <= 90 ? 1 : 0 : (g = (0,
                    n.bg)(l)) != g.toLowerCase() ? 1 : g != g.toUpperCase() ? 2 : 0;
                    (!r || 1 == P && m || 0 == $ && 0 != P) && (t[u] == l || O[u] == l && (p = !0) ? a[u++] = r : a.length && (Q = !1)),
                    $ = P,
                    r += (0,
                    n.nZ)(l)
                }
                return u == s && 0 == a[0] && Q ? this.result(-100 + (p ? -200 : 0), a, e) : d == s && 0 == f ? [-200 - e.length + (h == e.length ? 0 : -100), 0, h] : o > -1 ? [-700 - e.length, o, o + this.pattern.length] : d == s ? [-900 - e.length, f, h] : u == s ? this.result(-100 + (p ? -200 : 0) + -700 + (Q ? 0 : -1100), a, e) : 2 == t.length ? null : this.result((r[0] ? -700 : 0) + -200 + -1100, r, e)
            }
            result(e, t, O) {
                let r = [e - O.length]
                  , i = 1;
                for (let e of t) {
                    let t = e + (this.astral ? (0,
                    n.nZ)((0,
                    n.gm)(O, e)) : 1);
                    i > 1 && r[i - 1] == e ? r[i - 1] = t : (r[i++] = e,
                    r[i++] = t)
                }
                return r
            }
        }
        let P = n.r$.define({
            combine: e=>(0,
            n.BO)(e, {
                activateOnTyping: !0,
                selectOnOpen: !0,
                override: null,
                closeOnBlur: !0,
                maxRenderedOptions: 100,
                defaultKeymap: !0,
                tooltipClass: ()=>"",
                optionClass: ()=>"",
                aboveCursor: !1,
                icons: !0,
                addToOptions: [],
                positionInfo: b,
                compareCompletions: (e,t)=>e.label.localeCompare(t.label),
                interactionDelay: 75
            }, {
                defaultKeymap: (e,t)=>e && t,
                closeOnBlur: (e,t)=>e && t,
                icons: (e,t)=>e && t,
                tooltipClass: (e,t)=>O=>S(e(O), t(O)),
                optionClass: (e,t)=>O=>S(e(O), t(O)),
                addToOptions: (e,t)=>e.concat(t)
            })
        });
        function S(e, t) {
            return e ? t ? e + " " + t : e : t
        }
        function b(e, t, O, n, i) {
            let a = e.textDirection == r.Nm.RTL, o = a, s = !1, l = "top", c, u, p = t.left - i.left, d = i.right - t.right, f = n.right - n.left, h = n.bottom - n.top;
            if (o && p < Math.min(f, d) ? o = !1 : !o && d < Math.min(f, p) && (o = !0),
            f <= (o ? p : d))
                c = Math.max(i.top, Math.min(O.top, i.bottom - h)) - t.top,
                u = Math.min(400, o ? p : d);
            else {
                s = !0,
                u = Math.min(400, (a ? t.right : i.right - t.left) - 30);
                let e = i.bottom - t.bottom;
                e >= h || e > t.top ? c = O.bottom - t.top : (l = "bottom",
                c = t.bottom - O.top)
            }
            return {
                style: `${l}: ${c}px; max-width: ${u}px`,
                class: "cm-completionInfo-" + (s ? a ? "left-narrow" : "right-narrow" : o ? "left" : "right")
            }
        }
        function y(e, t, O) {
            if (e <= O)
                return {
                    from: 0,
                    to: e
                };
            if (t < 0 && (t = 0),
            t <= e >> 1) {
                let e = Math.floor(t / O);
                return {
                    from: e * O,
                    to: (e + 1) * O
                }
            }
            let n = Math.floor((e - t) / O);
            return {
                from: e - (n + 1) * O,
                to: e - n * O
            }
        }
        class x {
            constructor(e, t) {
                let O;
                this.view = e,
                this.stateField = t,
                this.info = null,
                this.placeInfoReq = {
                    read: ()=>this.measureInfo(),
                    write: e=>this.placeInfo(e),
                    key: this
                },
                this.space = null,
                this.currentClass = "";
                let n = e.state.field(t)
                  , {options: r, selected: i} = n.open
                  , a = e.state.facet(P);
                this.optionContent = (O = a.addToOptions.slice(),
                a.icons && O.push({
                    render(e) {
                        let t = document.createElement("div");
                        return t.classList.add("cm-completionIcon"),
                        e.type && t.classList.add(...e.type.split(/\s+/g).map(e=>"cm-completionIcon-" + e)),
                        t.setAttribute("aria-hidden", "true"),
                        t
                    },
                    position: 20
                }),
                O.push({
                    render(e, t, O) {
                        let n = document.createElement("span");
                        n.className = "cm-completionLabel";
                        let {label: r} = e
                          , i = 0;
                        for (let e = 1; e < O.length; ) {
                            let t = O[e++]
                              , a = O[e++];
                            t > i && n.appendChild(document.createTextNode(r.slice(i, t)));
                            let o = n.appendChild(document.createElement("span"));
                            o.appendChild(document.createTextNode(r.slice(t, a))),
                            o.className = "cm-completionMatchedText",
                            i = a
                        }
                        return i < r.length && n.appendChild(document.createTextNode(r.slice(i))),
                        n
                    },
                    position: 50
                }, {
                    render(e) {
                        if (!e.detail)
                            return null;
                        let t = document.createElement("span");
                        return t.className = "cm-completionDetail",
                        t.textContent = e.detail,
                        t
                    },
                    position: 80
                }),
                O.sort((e,t)=>e.position - t.position).map(e=>e.render)),
                this.optionClass = a.optionClass,
                this.tooltipClass = a.tooltipClass,
                this.range = y(r.length, i, a.maxRenderedOptions),
                this.dom = document.createElement("div"),
                this.dom.className = "cm-tooltip-autocomplete",
                this.updateTooltipClass(e.state),
                this.dom.addEventListener("mousedown", t=>{
                    for (let O = t.target, n; O && O != this.dom; O = O.parentNode)
                        if ("LI" == O.nodeName && (n = /-(\d+)$/.exec(O.id)) && +n[1] < r.length) {
                            f(e, r[+n[1]]),
                            t.preventDefault();
                            return
                        }
                }
                ),
                this.dom.addEventListener("focusout", t=>{
                    let O = e.state.field(this.stateField, !1);
                    O && O.tooltip && e.state.facet(P).closeOnBlur && t.relatedTarget != e.contentDOM && e.dispatch({
                        effects: $.of(null)
                    })
                }
                ),
                this.list = this.dom.appendChild(this.createListBox(r, n.id, this.range)),
                this.list.addEventListener("scroll", ()=>{
                    this.info && this.view.requestMeasure(this.placeInfoReq)
                }
                )
            }
            mount() {
                this.updateSel()
            }
            update(e) {
                var t, O, n;
                let r = e.state.field(this.stateField)
                  , i = e.startState.field(this.stateField);
                this.updateTooltipClass(e.state),
                r != i && (this.updateSel(),
                (null === (t = r.open) || void 0 === t ? void 0 : t.disabled) != (null === (O = i.open) || void 0 === O ? void 0 : O.disabled) && this.dom.classList.toggle("cm-tooltip-autocomplete-disabled", !!(null === (n = r.open) || void 0 === n ? void 0 : n.disabled)))
            }
            updateTooltipClass(e) {
                let t = this.tooltipClass(e);
                if (t != this.currentClass) {
                    for (let e of this.currentClass.split(" "))
                        e && this.dom.classList.remove(e);
                    for (let e of t.split(" "))
                        e && this.dom.classList.add(e);
                    this.currentClass = t
                }
            }
            positioned(e) {
                this.space = e,
                this.info && this.view.requestMeasure(this.placeInfoReq)
            }
            updateSel() {
                let e = this.view.state.field(this.stateField)
                  , t = e.open;
                if ((t.selected > -1 && t.selected < this.range.from || t.selected >= this.range.to) && (this.range = y(t.options.length, t.selected, this.view.state.facet(P).maxRenderedOptions),
                this.list.remove(),
                this.list = this.dom.appendChild(this.createListBox(t.options, e.id, this.range)),
                this.list.addEventListener("scroll", ()=>{
                    this.info && this.view.requestMeasure(this.placeInfoReq)
                }
                )),
                this.updateSelectedOption(t.selected)) {
                    this.info && (this.info.remove(),
                    this.info = null);
                    let {completion: O} = t.options[t.selected]
                      , {info: n} = O;
                    if (!n)
                        return;
                    let i = "string" == typeof n ? document.createTextNode(n) : n(O);
                    if (!i)
                        return;
                    "then"in i ? i.then(t=>{
                        t && this.view.state.field(this.stateField, !1) == e && this.addInfoPane(t)
                    }
                    ).catch(e=>(0,
                    r.OO)(this.view.state, e, "completion info")) : this.addInfoPane(i)
                }
            }
            addInfoPane(e) {
                let t = this.info = document.createElement("div");
                t.className = "cm-tooltip cm-completionInfo",
                t.appendChild(e),
                this.dom.appendChild(t),
                this.view.requestMeasure(this.placeInfoReq)
            }
            updateSelectedOption(e) {
                var t, O;
                let n, r, i = null;
                for (let t = this.list.firstChild, O = this.range.from; t; t = t.nextSibling,
                O++)
                    "LI" == t.nodeName && t.id ? O == e ? t.hasAttribute("aria-selected") || (t.setAttribute("aria-selected", "true"),
                    i = t) : t.hasAttribute("aria-selected") && t.removeAttribute("aria-selected") : O--;
                return i && (t = this.list,
                O = i,
                n = t.getBoundingClientRect(),
                (r = O.getBoundingClientRect()).top < n.top ? t.scrollTop -= n.top - r.top : r.bottom > n.bottom && (t.scrollTop += r.bottom - n.bottom)),
                i
            }
            measureInfo() {
                let e = this.dom.querySelector("[aria-selected]");
                if (!e || !this.info)
                    return null;
                let t = this.dom.getBoundingClientRect()
                  , O = this.info.getBoundingClientRect()
                  , n = e.getBoundingClientRect()
                  , r = this.space;
                if (!r) {
                    let e = this.dom.ownerDocument.defaultView || window;
                    r = {
                        left: 0,
                        top: 0,
                        right: e.innerWidth,
                        bottom: e.innerHeight
                    }
                }
                return n.top > Math.min(r.bottom, t.bottom) - 10 || n.bottom < Math.max(r.top, t.top) + 10 ? null : this.view.state.facet(P).positionInfo(this.view, t, n, O, r)
            }
            placeInfo(e) {
                this.info && (e ? (e.style && (this.info.style.cssText = e.style),
                this.info.className = "cm-tooltip cm-completionInfo " + (e.class || "")) : this.info.style.cssText = "top: -1e6px")
            }
            createListBox(e, t, O) {
                let n = document.createElement("ul");
                n.id = t,
                n.setAttribute("role", "listbox"),
                n.setAttribute("aria-expanded", "true"),
                n.setAttribute("aria-label", this.view.state.phrase("Completions"));
                let r = null;
                for (let i = O.from; i < O.to; i++) {
                    let {completion: a, match: o} = e[i]
                      , {section: s} = a;
                    if (s) {
                        let e = "string" == typeof s ? s : s.name;
                        e != r && (i > O.from || 0 == O.from) && (r = e,
                        "string" != typeof s && s.header ? n.appendChild(s.header(s)) : n.appendChild(document.createElement("completion-section")).textContent = e)
                    }
                    let l = n.appendChild(document.createElement("li"));
                    l.id = t + "-" + i,
                    l.setAttribute("role", "option");
                    let c = this.optionClass(a);
                    for (let e of (c && (l.className = c),
                    this.optionContent)) {
                        let t = e(a, this.view.state, o);
                        t && l.appendChild(t)
                    }
                }
                return O.from && n.classList.add("cm-completionListIncompleteTop"),
                O.to < e.length && n.classList.add("cm-completionListIncompleteBottom"),
                n
            }
        }
        function X(e) {
            return 100 * (e.boost || 0) + (e.apply ? 10 : 0) + (e.info ? 5 : 0) + (e.type ? 1 : 0)
        }
        class v {
            constructor(e, t, O, n, r, i) {
                this.options = e,
                this.attrs = t,
                this.tooltip = O,
                this.timestamp = n,
                this.selected = r,
                this.disabled = i
            }
            setSelected(e, t) {
                return e == this.selected || e >= this.options.length ? this : new v(this.options,T(t, e),this.tooltip,this.timestamp,e,this.disabled)
            }
            static build(e, t, O, n, r) {
                let i = function(e, t) {
                    let O = []
                      , n = null
                      , r = e=>{
                        O.push(e);
                        let {section: t} = e.completion;
                        if (t) {
                            n || (n = []);
                            let e = "string" == typeof t ? t : t.name;
                            n.some(t=>t.name == e) || n.push("string" == typeof t ? {
                                name: e
                            } : t)
                        }
                    }
                    ;
                    for (let n of e)
                        if (n.hasResult()) {
                            if (!1 === n.result.filter) {
                                let e = n.result.getMatch;
                                for (let t of n.result.options) {
                                    let i = [1e9 - O.length];
                                    if (e)
                                        for (let O of e(t))
                                            i.push(O);
                                    r(new c(t,n,i,i[0]))
                                }
                            } else {
                                let e = new g(t.sliceDoc(n.from, n.to)), O;
                                for (let t of n.result.options)
                                    (O = e.match(t.label)) && r(new c(t,n,O,O[0] + (t.boost || 0)))
                            }
                        }
                    if (n) {
                        let e = Object.create(null)
                          , t = 0
                          , r = (e,t)=>{
                            var O, n;
                            return (null !== (O = e.rank) && void 0 !== O ? O : 1e9) - (null !== (n = t.rank) && void 0 !== n ? n : 1e9) || (e.name < t.name ? -1 : 1)
                        }
                        ;
                        for (let O of n.sort(r))
                            t -= 1e5,
                            e[O.name] = t;
                        for (let t of O) {
                            let {section: O} = t.completion;
                            O && (t.score += e["string" == typeof O ? O : O.name])
                        }
                    }
                    let i = []
                      , a = null
                      , o = t.facet(P).compareCompletions;
                    for (let e of O.sort((e,t)=>t.score - e.score || o(e.completion, t.completion)))
                        a && a.label == e.completion.label && a.detail == e.completion.detail && (null == a.type || null == e.completion.type || a.type == e.completion.type) && a.apply == e.completion.apply ? X(e.completion) > X(a) && (i[i.length - 1] = e) : i.push(e),
                        a = e.completion;
                    return i
                }(e, t);
                if (!i.length)
                    return n && e.some(e=>1 == e.state) ? new v(n.options,n.attrs,n.tooltip,n.timestamp,n.selected,!0) : null;
                let a = t.facet(P).selectOnOpen ? 0 : -1;
                if (n && n.selected != a && -1 != n.selected) {
                    let e = n.options[n.selected].completion;
                    for (let t = 0; t < i.length; t++)
                        if (i[t].completion == e) {
                            a = t;
                            break
                        }
                }
                return new v(i,T(O, a),{
                    pos: e.reduce((e,t)=>t.hasResult() ? Math.min(e, t.from) : e, 1e8),
                    create: e=>new x(e,R),
                    above: r.aboveCursor
                },n ? n.timestamp : Date.now(),a,!1)
            }
            map(e) {
                return new v(this.options,this.attrs,Object.assign(Object.assign({}, this.tooltip), {
                    pos: e.mapPos(this.tooltip.pos)
                }),this.timestamp,this.selected,this.disabled)
            }
        }
        class k {
            constructor(e, t, O) {
                this.active = e,
                this.id = t,
                this.open = O
            }
            static start() {
                return new k(_,"cm-ac-" + Math.floor(2e6 * Math.random()).toString(36),null)
            }
            update(e) {
                let {state: t} = e
                  , O = t.facet(P)
                  , n = (O.override || t.languageDataAt("autocomplete", u(t)).map(m)).map(t=>(this.active.find(e=>e.source == t) || new Z(t,this.active.some(e=>0 != e.state) ? 1 : 0)).update(e, O));
                n.length == this.active.length && n.every((e,t)=>e == this.active[t]) && (n = this.active);
                let r = this.open;
                for (let i of (r && e.docChanged && (r = r.map(e.changes)),
                e.selection || n.some(t=>t.hasResult() && e.changes.touchesRange(t.from, t.to)) || !function(e, t) {
                    if (e == t)
                        return !0;
                    for (let O = 0, n = 0; ; ) {
                        for (; O < e.length && !e[O].hasResult; )
                            O++;
                        for (; n < t.length && !t[n].hasResult; )
                            n++;
                        let r = O == e.length
                          , i = n == t.length;
                        if (r || i)
                            return r == i;
                        if (e[O++].result != t[n++].result)
                            return !1
                    }
                }(n, this.active) ? r = v.build(n, t, this.id, r, O) : r && r.disabled && !n.some(e=>1 == e.state) && (r = null),
                !r && n.every(e=>1 != e.state) && n.some(e=>e.hasResult()) && (n = n.map(e=>e.hasResult() ? new Z(e.source,0) : e)),
                e.effects))
                    i.is(Y) && (r = r && r.setSelected(i.value, this.id));
                return n == this.active && r == this.open ? this : new k(n,this.id,r)
            }
            get tooltip() {
                return this.open ? this.open.tooltip : null
            }
            get attrs() {
                return this.open ? this.open.attrs : w
            }
        }
        let w = {
            "aria-autocomplete": "list"
        };
        function T(e, t) {
            let O = {
                "aria-autocomplete": "list",
                "aria-haspopup": "listbox",
                "aria-controls": e
            };
            return t > -1 && (O["aria-activedescendant"] = e + "-" + t),
            O
        }
        let _ = [];
        function W(e) {
            return e.isUserEvent("input.type") ? "input" : e.isUserEvent("delete.backward") ? "delete" : null
        }
        class Z {
            constructor(e, t, O=-1) {
                this.source = e,
                this.state = t,
                this.explicitPos = O
            }
            hasResult() {
                return !1
            }
            update(e, t) {
                let O = W(e)
                  , n = this;
                for (let r of (O ? n = n.handleUserEvent(e, O, t) : e.docChanged ? n = n.handleChange(e) : e.selection && 0 != n.state && (n = new Z(n.source,0)),
                e.effects))
                    if (r.is(Q))
                        n = new Z(n.source,1,r.value ? u(e.state) : -1);
                    else if (r.is($))
                        n = new Z(n.source,0);
                    else if (r.is(q))
                        for (let e of r.value)
                            e.source == n.source && (n = e);
                return n
            }
            handleUserEvent(e, t, O) {
                return "delete" != t && O.activateOnTyping ? new Z(this.source,1) : this.map(e.changes)
            }
            handleChange(e) {
                return e.changes.touchesRange(u(e.startState)) ? new Z(this.source,0) : this.map(e.changes)
            }
            map(e) {
                return e.empty || this.explicitPos < 0 ? this : new Z(this.source,this.state,e.mapPos(this.explicitPos))
            }
        }
        class z extends Z {
            constructor(e, t, O, n, r) {
                super(e, 2, t),
                this.result = O,
                this.from = n,
                this.to = r
            }
            hasResult() {
                return !0
            }
            handleUserEvent(e, t, O) {
                var n;
                let r = e.changes.mapPos(this.from)
                  , i = e.changes.mapPos(this.to, 1)
                  , o = u(e.state);
                if ((this.explicitPos < 0 ? o <= r : o < this.from) || o > i || "delete" == t && u(e.startState) == this.from)
                    return new Z(this.source,"input" == t && O.activateOnTyping ? 1 : 0);
                let s = this.explicitPos < 0 ? -1 : e.changes.mapPos(this.explicitPos), l;
                return !function(e, t, O, n) {
                    if (!e)
                        return !1;
                    let r = t.sliceDoc(O, n);
                    return "function" == typeof e ? e(r, O, n, t) : p(e, !0).test(r)
                }(this.result.validFor, e.state, r, i) ? this.result.update && (l = this.result.update(this.result, r, i, new a(e.state,o,s >= 0))) ? new z(this.source,s,l,l.from,null !== (n = l.to) && void 0 !== n ? n : u(e.state)) : new Z(this.source,1,s) : new z(this.source,s,this.result,r,i)
            }
            handleChange(e) {
                return e.changes.touchesRange(this.from, this.to) ? new Z(this.source,0) : this.map(e.changes)
            }
            map(e) {
                return e.empty ? this : new z(this.source,this.explicitPos < 0 ? -1 : e.mapPos(this.explicitPos),this.result,e.mapPos(this.from),e.mapPos(this.to, 1))
            }
        }
        let q = n.Py.define({
            map: (e,t)=>e.map(e=>e.map(t))
        })
          , Y = n.Py.define()
          , R = n.QQ.define({
            create: ()=>k.start(),
            update: (e,t)=>e.update(t),
            provide: e=>[r.hJ.from(e, e=>e.tooltip), r.tk.contentAttributes.from(e, e=>e.attrs)]
        });
        function U(e, t="option") {
            return O=>{
                let n = O.state.field(R, !1);
                if (!n || !n.open || n.open.disabled || Date.now() - n.open.timestamp < O.state.facet(P).interactionDelay)
                    return !1;
                let i = 1, a;
                "page" == t && (a = (0,
                r.gB)(O, n.open.tooltip)) && (i = Math.max(2, Math.floor(a.dom.offsetHeight / a.dom.querySelector("li").offsetHeight) - 1));
                let {length: o} = n.open.options
                  , s = n.open.selected > -1 ? n.open.selected + i * (e ? 1 : -1) : e ? 0 : o - 1;
                return s < 0 ? s = "page" == t ? 0 : o - 1 : s >= o && (s = "page" == t ? o - 1 : 0),
                O.dispatch({
                    effects: Y.of(s)
                }),
                !0
            }
        }
        let V = e=>{
            let t = e.state.field(R, !1);
            return !(e.state.readOnly || !t || !t.open || t.open.selected < 0 || Date.now() - t.open.timestamp < e.state.facet(P).interactionDelay) && (t.open.disabled || f(e, t.open.options[t.open.selected]),
            !0)
        }
          , E = e=>!!e.state.field(R, !1) && (e.dispatch({
            effects: Q.of(!0)
        }),
        !0)
          , j = e=>{
            let t = e.state.field(R, !1);
            return !!(t && t.active.some(e=>0 != e.state)) && (e.dispatch({
                effects: $.of(null)
            }),
            !0)
        }
        ;
        class G {
            constructor(e, t) {
                this.active = e,
                this.context = t,
                this.time = Date.now(),
                this.updates = [],
                this.done = void 0
            }
        }
        let C = r.lg.fromClass(class {
            constructor(e) {
                for (let t of (this.view = e,
                this.debounceUpdate = -1,
                this.running = [],
                this.debounceAccept = -1,
                this.composing = 0,
                e.state.field(R).active))
                    1 == t.state && this.startQuery(t)
            }
            update(e) {
                let t = e.state.field(R);
                if (!e.selectionSet && !e.docChanged && e.startState.field(R) == t)
                    return;
                let O = e.transactions.some(e=>(e.selection || e.docChanged) && !W(e));
                for (let t = 0; t < this.running.length; t++) {
                    let n = this.running[t];
                    if (O || n.updates.length + e.transactions.length > 50 && Date.now() - n.time > 1e3) {
                        for (let e of n.context.abortListeners)
                            try {
                                e()
                            } catch (e) {
                                (0,
                                r.OO)(this.view.state, e)
                            }
                        n.context.abortListeners = null,
                        this.running.splice(t--, 1)
                    } else
                        n.updates.push(...e.transactions)
                }
                if (this.debounceUpdate > -1 && clearTimeout(this.debounceUpdate),
                this.debounceUpdate = t.active.some(e=>1 == e.state && !this.running.some(t=>t.active.source == e.source)) ? setTimeout(()=>this.startUpdate(), 50) : -1,
                0 != this.composing)
                    for (let t of e.transactions)
                        "input" == W(t) ? this.composing = 2 : 2 == this.composing && t.selection && (this.composing = 3)
            }
            startUpdate() {
                this.debounceUpdate = -1;
                let {state: e} = this.view;
                for (let t of e.field(R).active)
                    1 != t.state || this.running.some(e=>e.active.source == t.source) || this.startQuery(t)
            }
            startQuery(e) {
                let {state: t} = this.view
                  , O = u(t)
                  , n = new a(t,O,e.explicitPos == O)
                  , i = new G(e,n);
                this.running.push(i),
                Promise.resolve(e.source(n)).then(e=>{
                    i.context.aborted || (i.done = e || null,
                    this.scheduleAccept())
                }
                , e=>{
                    this.view.dispatch({
                        effects: $.of(null)
                    }),
                    (0,
                    r.OO)(this.view.state, e)
                }
                )
            }
            scheduleAccept() {
                this.running.every(e=>void 0 !== e.done) ? this.accept() : this.debounceAccept < 0 && (this.debounceAccept = setTimeout(()=>this.accept(), 50))
            }
            accept() {
                var e;
                this.debounceAccept > -1 && clearTimeout(this.debounceAccept),
                this.debounceAccept = -1;
                let t = []
                  , O = this.view.state.facet(P);
                for (let n = 0; n < this.running.length; n++) {
                    let r = this.running[n];
                    if (void 0 === r.done)
                        continue;
                    if (this.running.splice(n--, 1),
                    r.done) {
                        let n = new z(r.active.source,r.active.explicitPos,r.done,r.done.from,null !== (e = r.done.to) && void 0 !== e ? e : u(r.updates.length ? r.updates[0].startState : this.view.state));
                        for (let e of r.updates)
                            n = n.update(e, O);
                        if (n.hasResult()) {
                            t.push(n);
                            continue
                        }
                    }
                    let i = this.view.state.field(R).active.find(e=>e.source == r.active.source);
                    if (i && 1 == i.state) {
                        if (null == r.done) {
                            let e = new Z(r.active.source,0);
                            for (let t of r.updates)
                                e = e.update(t, O);
                            1 != e.state && t.push(e)
                        } else
                            this.startQuery(i)
                    }
                }
                t.length && this.view.dispatch({
                    effects: q.of(t)
                })
            }
        }
        , {
            eventHandlers: {
                blur(e) {
                    let t = this.view.state.field(R, !1);
                    if (t && t.tooltip && this.view.state.facet(P).closeOnBlur) {
                        let O = t.open && (0,
                        r.gB)(this.view, t.open.tooltip);
                        O && O.dom.contains(e.relatedTarget) || this.view.dispatch({
                            effects: $.of(null)
                        })
                    }
                },
                compositionstart() {
                    this.composing = 1
                },
                compositionend() {
                    3 == this.composing && setTimeout(()=>this.view.dispatch({
                        effects: Q.of(!1)
                    }), 20),
                    this.composing = 0
                }
            }
        })
          , A = r.tk.baseTheme({
            ".cm-tooltip.cm-tooltip-autocomplete": {
                "& > ul": {
                    fontFamily: "monospace",
                    whiteSpace: "nowrap",
                    overflow: "hidden auto",
                    maxWidth_fallback: "700px",
                    maxWidth: "min(700px, 95vw)",
                    minWidth: "250px",
                    maxHeight: "10em",
                    height: "100%",
                    listStyle: "none",
                    margin: 0,
                    padding: 0,
                    "& > li, & > completion-section": {
                        padding: "1px 3px",
                        lineHeight: 1.2
                    },
                    "& > li": {
                        overflowX: "hidden",
                        textOverflow: "ellipsis",
                        cursor: "pointer"
                    },
                    "& > completion-section": {
                        display: "list-item",
                        borderBottom: "1px solid silver",
                        paddingLeft: "0.5em",
                        opacity: .7
                    }
                }
            },
            "&light .cm-tooltip-autocomplete ul li[aria-selected]": {
                background: "#17c",
                color: "white"
            },
            "&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
                background: "#777"
            },
            "&dark .cm-tooltip-autocomplete ul li[aria-selected]": {
                background: "#347",
                color: "white"
            },
            "&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
                background: "#444"
            },
            ".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after": {
                content: '"\xb7\xb7\xb7"',
                opacity: .5,
                display: "block",
                textAlign: "center"
            },
            ".cm-tooltip.cm-completionInfo": {
                position: "absolute",
                padding: "3px 9px",
                width: "max-content",
                maxWidth: "400px",
                boxSizing: "border-box"
            },
            ".cm-completionInfo.cm-completionInfo-left": {
                right: "100%"
            },
            ".cm-completionInfo.cm-completionInfo-right": {
                left: "100%"
            },
            ".cm-completionInfo.cm-completionInfo-left-narrow": {
                right: "30px"
            },
            ".cm-completionInfo.cm-completionInfo-right-narrow": {
                left: "30px"
            },
            "&light .cm-snippetField": {
                backgroundColor: "#00000022"
            },
            "&dark .cm-snippetField": {
                backgroundColor: "#ffffff22"
            },
            ".cm-snippetFieldPosition": {
                verticalAlign: "text-top",
                width: 0,
                height: "1.15em",
                display: "inline-block",
                margin: "0 -0.7px -.7em",
                borderLeft: "1.4px dotted #888"
            },
            ".cm-completionMatchedText": {
                textDecoration: "underline"
            },
            ".cm-completionDetail": {
                marginLeft: "0.5em",
                fontStyle: "italic"
            },
            ".cm-completionIcon": {
                fontSize: "90%",
                width: ".8em",
                display: "inline-block",
                textAlign: "center",
                paddingRight: ".6em",
                opacity: "0.6",
                boxSizing: "content-box"
            },
            ".cm-completionIcon-function, .cm-completionIcon-method": {
                "&:after": {
                    content: "'ƒ'"
                }
            },
            ".cm-completionIcon-class": {
                "&:after": {
                    content: "'○'"
                }
            },
            ".cm-completionIcon-interface": {
                "&:after": {
                    content: "'◌'"
                }
            },
            ".cm-completionIcon-variable": {
                "&:after": {
                    content: "'\uD835\uDC65'"
                }
            },
            ".cm-completionIcon-constant": {
                "&:after": {
                    content: "'\uD835\uDC36'"
                }
            },
            ".cm-completionIcon-type": {
                "&:after": {
                    content: "'\uD835\uDC61'"
                }
            },
            ".cm-completionIcon-enum": {
                "&:after": {
                    content: "'∪'"
                }
            },
            ".cm-completionIcon-property": {
                "&:after": {
                    content: "'□'"
                }
            },
            ".cm-completionIcon-keyword": {
                "&:after": {
                    content: "'\uD83D\uDD11︎'"
                }
            },
            ".cm-completionIcon-namespace": {
                "&:after": {
                    content: "'▢'"
                }
            },
            ".cm-completionIcon-text": {
                "&:after": {
                    content: "'abc'",
                    fontSize: "50%",
                    verticalAlign: "middle"
                }
            }
        });
        class I {
            constructor(e, t, O, n) {
                this.field = e,
                this.line = t,
                this.from = O,
                this.to = n
            }
        }
        class J {
            constructor(e, t, O) {
                this.field = e,
                this.from = t,
                this.to = O
            }
            map(e) {
                let t = e.mapPos(this.from, -1, n.gc.TrackDel)
                  , O = e.mapPos(this.to, 1, n.gc.TrackDel);
                return null == t || null == O ? null : new J(this.field,t,O)
            }
        }
        class N {
            constructor(e, t) {
                this.lines = e,
                this.fieldPositions = t
            }
            instantiate(e, t) {
                let O = []
                  , n = [t]
                  , r = e.doc.lineAt(t)
                  , a = /^\s*/.exec(r.text)[0];
                for (let r of this.lines) {
                    if (O.length) {
                        let O = a
                          , o = /^\t*/.exec(r)[0].length;
                        for (let t = 0; t < o; t++)
                            O += e.facet(i.c);
                        n.push(t + O.length - o),
                        r = O + r.slice(o)
                    }
                    O.push(r),
                    t += r.length + 1
                }
                return {
                    text: O,
                    ranges: this.fieldPositions.map(e=>new J(e.field,n[e.line] + e.from,n[e.line] + e.to))
                }
            }
            static parse(e) {
                let t = [], O = [], n = [], r;
                for (let i of e.split(/\r\n?|\n/)) {
                    for (; r = /[#$]\{(?:(\d+)(?::([^}]*))?|([^}]*))\}/.exec(i); ) {
                        let e = r[1] ? +r[1] : null
                          , a = r[2] || r[3] || ""
                          , o = -1;
                        for (let O = 0; O < t.length; O++)
                            (null != e ? t[O].seq == e : a && t[O].name == a) && (o = O);
                        if (o < 0) {
                            let O = 0;
                            for (; O < t.length && (null == e || null != t[O].seq && t[O].seq < e); )
                                O++;
                            for (let r of (t.splice(O, 0, {
                                seq: e,
                                name: a
                            }),
                            o = O,
                            n))
                                r.field >= o && r.field++
                        }
                        n.push(new I(o,O.length,r.index,r.index + a.length)),
                        i = i.slice(0, r.index) + a + i.slice(r.index + r[0].length)
                    }
                    for (let e; e = /\\([{}])/.exec(i); )
                        for (let t of (i = i.slice(0, e.index) + e[1] + i.slice(e.index + e[0].length),
                        n))
                            t.line == O.length && t.from > e.index && (t.from--,
                            t.to--);
                    O.push(i)
                }
                return new N(O,n)
            }
        }
        let D = r.p.widget({
            widget: new class extends r.l9 {
                toDOM() {
                    let e = document.createElement("span");
                    return e.className = "cm-snippetFieldPosition",
                    e
                }
                ignoreEvent() {
                    return !1
                }
            }
        })
          , L = r.p.mark({
            class: "cm-snippetField"
        });
        class F {
            constructor(e, t) {
                this.ranges = e,
                this.active = t,
                this.deco = r.p.set(e.map(e=>(e.from == e.to ? D : L).range(e.from, e.to)))
            }
            map(e) {
                let t = [];
                for (let O of this.ranges) {
                    let n = O.map(e);
                    if (!n)
                        return null;
                    t.push(n)
                }
                return new F(t,this.active)
            }
            selectionInsideField(e) {
                return e.ranges.every(e=>this.ranges.some(t=>t.field == this.active && t.from <= e.from && t.to >= e.to))
            }
        }
        let M = n.Py.define({
            map: (e,t)=>e && e.map(t)
        })
          , B = n.Py.define()
          , H = n.QQ.define({
            create: ()=>null,
            update(e, t) {
                for (let O of t.effects) {
                    if (O.is(M))
                        return O.value;
                    if (O.is(B) && e)
                        return new F(e.ranges,O.value)
                }
                return e && t.docChanged && (e = e.map(t.changes)),
                e && t.selection && !e.selectionInsideField(t.selection) && (e = null),
                e
            },
            provide: e=>r.tk.decorations.from(e, e=>e ? e.deco : r.p.none)
        });
        function K(e, t) {
            return n.jT.create(e.filter(e=>e.field == t).map(e=>n.jT.range(e.from, e.to)))
        }
        function ee(e) {
            return ({state: t, dispatch: O})=>{
                let n = t.field(H, !1);
                if (!n || e < 0 && 0 == n.active)
                    return !1;
                let r = n.active + e
                  , i = e > 0 && !n.ranges.some(t=>t.field == r + e);
                return O(t.update({
                    selection: K(n.ranges, r),
                    effects: M.of(i ? null : new F(n.ranges,r))
                })),
                !0
            }
        }
        let et = ({state: e, dispatch: t})=>!!e.field(H, !1) && (t(e.update({
            effects: M.of(null)
        })),
        !0)
          , eO = ee(1)
          , en = ee(-1)
          , er = [{
            key: "Tab",
            run: eO,
            shift: en
        }, {
            key: "Escape",
            run: et
        }]
          , ei = n.r$.define({
            combine: e=>e.length ? e[0] : er
        })
          , ea = n.Wl.highest(r.$f.compute([ei], e=>e.facet(ei)));
        function eo(e, t) {
            let O;
            return Object.assign(Object.assign({}, t), {
                apply: (O = N.parse(e),
                (e,t,r,i)=>{
                    let {text: a, ranges: o} = O.instantiate(e.state, r)
                      , s = {
                        changes: {
                            from: r,
                            to: i,
                            insert: n.xv.of(a)
                        },
                        scrollIntoView: !0,
                        annotations: t ? d.of(t) : void 0
                    };
                    if (o.length && (s.selection = K(o, 0)),
                    o.length > 1) {
                        let t = new F(o,0)
                          , O = s.effects = [M.of(t)];
                        void 0 === e.state.field(H, !1) && O.push(n.Py.appendConfig.of([H, ea, es, A]))
                    }
                    e.dispatch(e.state.update(s))
                }
                )
            })
        }
        let es = r.tk.domEventHandlers({
            mousedown(e, t) {
                let O = t.state.field(H, !1), n;
                if (!O || null == (n = t.posAtCoords({
                    x: e.clientX,
                    y: e.clientY
                })))
                    return !1;
                let r = O.ranges.find(e=>e.from <= n && e.to >= n);
                return !!r && r.field != O.active && (t.dispatch({
                    selection: K(O.ranges, r.field),
                    effects: M.of(O.ranges.some(e=>e.field > r.field) ? new F(O.ranges,r.field) : null)
                }),
                !0)
            }
        })
          , el = {
            brackets: ["(", "[", "{", "'", '"'],
            before: ")]}:;>",
            stringPrefixes: []
        }
          , ec = n.Py.define({
            map(e, t) {
                let O = t.mapPos(e, -1, n.gc.TrackAfter);
                return null == O ? void 0 : O
            }
        })
          , eu = new class extends n.uU {
        }
        ;
        eu.startSide = 1,
        eu.endSide = -1;
        let ep = n.QQ.define({
            create: ()=>n.Xs.empty,
            update(e, t) {
                if (t.selection) {
                    let O = t.state.doc.lineAt(t.selection.main.head).from
                      , r = t.startState.doc.lineAt(t.startState.selection.main.head).from;
                    O != t.changes.mapPos(r, -1) && (e = n.Xs.empty)
                }
                for (let O of (e = e.map(t.changes),
                t.effects))
                    O.is(ec) && (e = e.update({
                        add: [eu.range(O.value, O.value + 1)]
                    }));
                return e
            }
        });
        function ed() {
            return [e$, ep]
        }
        let ef = "()[]{}<>";
        function eh(e) {
            for (let t = 0; t < ef.length; t += 2)
                if (ef.charCodeAt(t) == e)
                    return ef.charAt(t + 1);
            return (0,
            n.bg)(e < 128 ? e : e + 1)
        }
        function em(e, t) {
            return e.languageDataAt("closeBrackets", t)[0] || el
        }
        let eQ = "object" == typeof navigator && /Android\b/.test(navigator.userAgent)
          , e$ = r.tk.inputHandler.of((e,t,O,r)=>{
            if ((eQ ? e.composing : e.compositionStarted) || e.state.readOnly)
                return !1;
            let a = e.state.selection.main;
            if (r.length > 2 || 2 == r.length && 1 == (0,
            n.nZ)((0,
            n.gm)(r, 0)) || t != a.from || O != a.to)
                return !1;
            let o = function(e, t) {
                let O = em(e, e.selection.main.head)
                  , r = O.brackets || el.brackets;
                for (let a of r) {
                    let o = eh((0,
                    n.gm)(a, 0));
                    if (t == a)
                        return o == a ? function(e, t, O, r) {
                            let a = r.stringPrefixes || el.stringPrefixes
                              , o = null
                              , s = e.changeByRange(r=>{
                                if (!r.empty)
                                    return {
                                        changes: [{
                                            insert: t,
                                            from: r.from
                                        }, {
                                            insert: t,
                                            from: r.to
                                        }],
                                        effects: ec.of(r.to + t.length),
                                        range: n.jT.range(r.anchor + t.length, r.head + t.length)
                                    };
                                let s = r.head, l = eb(e.doc, s), c;
                                if (l == t) {
                                    if (ey(e, s))
                                        return {
                                            changes: {
                                                insert: t + t,
                                                from: s
                                            },
                                            effects: ec.of(s + t.length),
                                            range: n.jT.cursor(s + t.length)
                                        };
                                    if (eS(e, s)) {
                                        let r = O && e.sliceDoc(s, s + 3 * t.length) == t + t + t ? t + t + t : t;
                                        return {
                                            changes: {
                                                from: s,
                                                to: s + r.length,
                                                insert: r
                                            },
                                            range: n.jT.cursor(s + r.length)
                                        }
                                    }
                                } else if (O && e.sliceDoc(s - 2 * t.length, s) == t + t && (c = ex(e, s - 2 * t.length, a)) > -1 && ey(e, c))
                                    return {
                                        changes: {
                                            insert: t + t + t + t,
                                            from: s
                                        },
                                        effects: ec.of(s + t.length),
                                        range: n.jT.cursor(s + t.length)
                                    };
                                else if (e.charCategorizer(s)(l) != n.D0.Word && ex(e, s, a) > -1 && !function(e, t, O, n) {
                                    let r = (0,
                                    i.qz)(e).resolveInner(t, -1)
                                      , a = n.reduce((e,t)=>Math.max(e, t.length), 0);
                                    for (let i = 0; i < 5; i++) {
                                        let i = e.sliceDoc(r.from, Math.min(r.to, r.from + O.length + a))
                                          , o = i.indexOf(O);
                                        if (!o || o > -1 && n.indexOf(i.slice(0, o)) > -1) {
                                            let t = r.firstChild;
                                            for (; t && t.from == r.from && t.to - t.from > O.length + o; ) {
                                                if (e.sliceDoc(t.to - O.length, t.to) == O)
                                                    return !1;
                                                t = t.firstChild
                                            }
                                            return !0
                                        }
                                        let s = r.to == t && r.parent;
                                        if (!s)
                                            break;
                                        r = s
                                    }
                                    return !1
                                }(e, s, t, a))
                                    return {
                                        changes: {
                                            insert: t + t,
                                            from: s
                                        },
                                        effects: ec.of(s + t.length),
                                        range: n.jT.cursor(s + t.length)
                                    };
                                return {
                                    range: o = r
                                }
                            }
                            );
                            return o ? null : e.update(s, {
                                scrollIntoView: !0,
                                userEvent: "input.type"
                            })
                        }(e, a, r.indexOf(a + a + a) > -1, O) : function(e, t, O, r) {
                            let i = null
                              , a = e.changeByRange(a=>{
                                if (!a.empty)
                                    return {
                                        changes: [{
                                            insert: t,
                                            from: a.from
                                        }, {
                                            insert: O,
                                            from: a.to
                                        }],
                                        effects: ec.of(a.to + t.length),
                                        range: n.jT.range(a.anchor + t.length, a.head + t.length)
                                    };
                                let o = eb(e.doc, a.head);
                                return !o || /\s/.test(o) || r.indexOf(o) > -1 ? {
                                    changes: {
                                        insert: t + O,
                                        from: a.head
                                    },
                                    effects: ec.of(a.head + t.length),
                                    range: n.jT.cursor(a.head + t.length)
                                } : {
                                    range: i = a
                                }
                            }
                            );
                            return i ? null : e.update(a, {
                                scrollIntoView: !0,
                                userEvent: "input.type"
                            })
                        }(e, a, o, O.before || el.before);
                    if (t == o && eS(e, e.selection.main.from))
                        return function(e, t, O) {
                            let r = null
                              , i = e.changeByRange(t=>t.empty && eb(e.doc, t.head) == O ? {
                                changes: {
                                    from: t.head,
                                    to: t.head + O.length,
                                    insert: O
                                },
                                range: n.jT.cursor(t.head + O.length)
                            } : r = {
                                range: t
                            });
                            return r ? null : e.update(i, {
                                scrollIntoView: !0,
                                userEvent: "input.type"
                            })
                        }(e, 0, o)
                }
                return null
            }(e.state, r);
            return !!o && (e.dispatch(o),
            !0)
        }
        )
          , eg = ({state: e, dispatch: t})=>{
            if (e.readOnly)
                return !1;
            let O = em(e, e.selection.main.head).brackets || el.brackets
              , r = null
              , i = e.changeByRange(t=>{
                if (t.empty) {
                    var i, a;
                    let r;
                    let o = (i = e.doc,
                    a = t.head,
                    r = i.sliceString(a - 2, a),
                    (0,
                    n.nZ)((0,
                    n.gm)(r, 0)) == r.length ? r : r.slice(1));
                    for (let r of O)
                        if (r == o && eb(e.doc, t.head) == eh((0,
                        n.gm)(r, 0)))
                            return {
                                changes: {
                                    from: t.head - r.length,
                                    to: t.head + r.length
                                },
                                range: n.jT.cursor(t.head - r.length)
                            }
                }
                return {
                    range: r = t
                }
            }
            );
            return r || t(e.update(i, {
                scrollIntoView: !0,
                userEvent: "delete.backward"
            })),
            !r
        }
          , eP = [{
            key: "Backspace",
            run: eg
        }];
        function eS(e, t) {
            let O = !1;
            return e.field(ep).between(0, e.doc.length, e=>{
                e == t && (O = !0)
            }
            ),
            O
        }
        function eb(e, t) {
            let O = e.sliceString(t, t + 2);
            return O.slice(0, (0,
            n.nZ)((0,
            n.gm)(O, 0)))
        }
        function ey(e, t) {
            let O = (0,
            i.qz)(e).resolveInner(t + 1);
            return O.parent && O.from == t
        }
        function ex(e, t, O) {
            let r = e.charCategorizer(t);
            if (r(e.sliceDoc(t - 1, t)) != n.D0.Word)
                return t;
            for (let i of O) {
                let O = t - i.length;
                if (e.sliceDoc(O, t) == i && r(e.sliceDoc(O - 1, O)) != n.D0.Word)
                    return O
            }
            return -1
        }
        function eX(e={}) {
            return [R, P.of(e), C, ek, A]
        }
        let ev = [{
            key: "Ctrl-Space",
            run: E
        }, {
            key: "Escape",
            run: j
        }, {
            key: "ArrowDown",
            run: U(!0)
        }, {
            key: "ArrowUp",
            run: U(!1)
        }, {
            key: "PageDown",
            run: U(!0, "page")
        }, {
            key: "PageUp",
            run: U(!1, "page")
        }, {
            key: "Enter",
            run: V
        }]
          , ek = n.Wl.highest(r.$f.computeN([P], e=>e.facet(P).defaultKeymap ? [ev] : []))
    },
    3379: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            cpp: function() {
                return h
            },
            cppLanguage: function() {
                return f
            }
        });
        var n = O(2679)
          , r = O(5306);
        let i = new n.Jq(e=>{
            if (76 == e.next || 85 == e.next ? e.advance() : 117 == e.next && (e.advance(),
            56 == e.next && e.advance()),
            82 != e.next || (e.advance(),
            34 != e.next))
                return;
            e.advance();
            let t = "";
            for (; 40 != e.next; ) {
                if (32 == e.next || e.next <= 13 || 41 == e.next)
                    return;
                t += String.fromCharCode(e.next),
                e.advance()
            }
            for (e.advance(); ; ) {
                if (e.next < 0)
                    return e.acceptToken(1);
                if (41 == e.next) {
                    let O = !0;
                    for (let n = 0; O && n < t.length; n++)
                        e.peek(n + 1) != t.charCodeAt(n) && (O = !1);
                    if (O && 34 == e.peek(t.length + 1))
                        return e.acceptToken(1, 2 + t.length)
                }
                e.advance()
            }
        }
        )
          , a = new n.Jq(e=>{
            if (62 == e.next)
                62 == e.peek(1) && e.acceptToken(2, 1);
            else {
                let t = !1
                  , O = 0;
                for (; ; O++) {
                    if (e.next >= 65 && e.next <= 90)
                        t = !0;
                    else if (e.next >= 97 && e.next <= 122)
                        return;
                    else if (95 != e.next && !(e.next >= 48 && e.next <= 57))
                        break;
                    e.advance()
                }
                t && O > 1 && e.acceptToken(3)
            }
        }
        ,{
            extend: !0
        })
          , o = (0,
        r.Gv)({
            "typedef struct union enum class typename decltype auto template operator friend noexcept namespace using requires concept import export module __attribute__ __declspec __based": r.pJ.definitionKeyword,
            "extern MsCallModifier MsPointerModifier extern static register thread_local inline const volatile restrict _Atomic mutable constexpr constinit consteval virtual explicit VirtualSpecifier Access": r.pJ.modifier,
            "if else switch for while do case default return break continue goto throw try catch": r.pJ.controlKeyword,
            "co_return co_yield co_await": r.pJ.controlKeyword,
            "new sizeof delete static_assert": r.pJ.operatorKeyword,
            "NULL nullptr": r.pJ.null,
            this: r.pJ.self,
            "True False": r.pJ.bool,
            "TypeSize PrimitiveType": r.pJ.standard(r.pJ.typeName),
            TypeIdentifier: r.pJ.typeName,
            FieldIdentifier: r.pJ.propertyName,
            "CallExpression/FieldExpression/FieldIdentifier": r.pJ.function(r.pJ.propertyName),
            "ModuleName/Identifier": r.pJ.namespace,
            PartitionName: r.pJ.labelName,
            StatementIdentifier: r.pJ.labelName,
            "Identifier DestructorName": r.pJ.variableName,
            "CallExpression/Identifier": r.pJ.function(r.pJ.variableName),
            "CallExpression/ScopedIdentifier/Identifier": r.pJ.function(r.pJ.variableName),
            "FunctionDeclarator/Identifier FunctionDeclarator/DestructorName": r.pJ.function(r.pJ.definition(r.pJ.variableName)),
            NamespaceIdentifier: r.pJ.namespace,
            OperatorName: r.pJ.operator,
            ArithOp: r.pJ.arithmeticOperator,
            LogicOp: r.pJ.logicOperator,
            BitOp: r.pJ.bitwiseOperator,
            CompareOp: r.pJ.compareOperator,
            AssignOp: r.pJ.definitionOperator,
            UpdateOp: r.pJ.updateOperator,
            LineComment: r.pJ.lineComment,
            BlockComment: r.pJ.blockComment,
            Number: r.pJ.number,
            String: r.pJ.string,
            "RawString SystemLibString": r.pJ.special(r.pJ.string),
            CharLiteral: r.pJ.character,
            EscapeSequence: r.pJ.escape,
            "UserDefinedLiteral/Identifier": r.pJ.literal,
            PreProcArg: r.pJ.meta,
            "PreprocDirectiveName #include #ifdef #ifndef #if #define #else #endif #elif": r.pJ.processingInstruction,
            MacroName: r.pJ.special(r.pJ.name),
            "( )": r.pJ.paren,
            "[ ]": r.pJ.squareBracket,
            "{ }": r.pJ.brace,
            "< >": r.pJ.angleBracket,
            ". ->": r.pJ.derefOperator,
            ", ;": r.pJ.separator
        })
          , s = {
            __proto__: null,
            bool: 34,
            char: 34,
            int: 34,
            float: 34,
            double: 34,
            void: 34,
            size_t: 34,
            ssize_t: 34,
            intptr_t: 34,
            uintptr_t: 34,
            charptr_t: 34,
            int8_t: 34,
            int16_t: 34,
            int32_t: 34,
            int64_t: 34,
            uint8_t: 34,
            uint16_t: 34,
            uint32_t: 34,
            uint64_t: 34,
            char8_t: 34,
            char16_t: 34,
            char32_t: 34,
            char64_t: 34,
            const: 68,
            volatile: 70,
            restrict: 72,
            _Atomic: 74,
            mutable: 76,
            constexpr: 78,
            constinit: 80,
            consteval: 82,
            struct: 86,
            __declspec: 90,
            final: 148,
            override: 148,
            public: 152,
            private: 152,
            protected: 152,
            virtual: 154,
            extern: 160,
            static: 162,
            register: 164,
            inline: 166,
            thread_local: 168,
            __attribute__: 172,
            __based: 178,
            __restrict: 180,
            __uptr: 180,
            __sptr: 180,
            _unaligned: 180,
            __unaligned: 180,
            noexcept: 194,
            requires: 198,
            TRUE: 786,
            true: 786,
            FALSE: 788,
            false: 788,
            typename: 218,
            class: 220,
            template: 234,
            throw: 248,
            __cdecl: 256,
            __clrcall: 256,
            __stdcall: 256,
            __fastcall: 256,
            __thiscall: 256,
            __vectorcall: 256,
            try: 260,
            catch: 264,
            export: 284,
            import: 288,
            case: 298,
            default: 300,
            if: 310,
            else: 316,
            switch: 320,
            do: 324,
            while: 326,
            for: 332,
            return: 336,
            break: 340,
            continue: 344,
            goto: 348,
            co_return: 352,
            co_yield: 356,
            using: 364,
            typedef: 368,
            namespace: 382,
            new: 400,
            delete: 402,
            co_await: 404,
            concept: 408,
            enum: 412,
            static_assert: 416,
            friend: 424,
            union: 426,
            explicit: 432,
            operator: 446,
            module: 458,
            signed: 520,
            unsigned: 520,
            long: 520,
            short: 520,
            decltype: 530,
            auto: 532,
            sizeof: 568,
            NULL: 574,
            nullptr: 588,
            this: 590
        }
          , l = {
            __proto__: null,
            "<": 131
        }
          , c = {
            __proto__: null,
            ">": 135
        }
          , u = {
            __proto__: null,
            operator: 390,
            new: 578,
            delete: 584
        }
          , p = n.WQ.deserialize({
            version: 14,
            states: "$;fQ!QQVOOP'gOUOOO(XOWO'#CdO,RQUO'#CgO,]QUO'#FkO-sQbO'#CwO.UQUO'#CwO0TQUO'#K[O0[QUO'#CvO0gOpO'#DvO0oQ!dO'#D]OOQR'#JP'#JPO5XQVO'#GVO5fQUO'#JWOOQQ'#JW'#JWO8zQUO'#KnO<eQUO'#KnO>{QVO'#E^O?]QUO'#E^OOQQ'#Ed'#EdOOQQ'#Ee'#EeO?bQVO'#EfO@XQVO'#EiOBUQUO'#FPOBvQUO'#FiOOQR'#Fk'#FkOB{QUO'#FkOOQR'#LR'#LROOQR'#LQ'#LQOETQVO'#KROFxQUO'#LWOGVQUO'#KrOGkQUO'#LWOH]QUO'#LYOOQR'#HV'#HVOOQR'#HW'#HWOOQR'#HX'#HXOOQR'#K}'#K}OOQR'#J`'#J`Q!QQVOOOHkQVO'#F^OIWQUO'#EhOI_QUOOOKZQVO'#HhOKkQUO'#HhONVQUO'#KrONaQUO'#KrOOQQ'#Kr'#KrO!!_QUO'#KrOOQQ'#Jr'#JrO!!lQUO'#HyOOQQ'#K['#K[O!&^QUO'#K[O!&zQUO'#KRO!(zQVO'#I^O!(zQVO'#IaOCQQUO'#KROOQQ'#Iq'#IqOOQQ'#KR'#KRO!,}QUO'#K[OOQR'#KZ'#KZO!-UQUO'#DYO!/mQUO'#KoOOQQ'#Ko'#KoO!/tQUO'#KoO!/{QUO'#ETO!0QQUO'#EWO!0VQUO'#FRO8zQUO'#FPO!QQVO'#F_O!0[Q#vO'#FaO!0gQUO'#FlO!0oQUO'#FqO!0tQVO'#FsO!0oQUO'#FvO!3sQUO'#FwO!3xQVO'#FyO!4SQUO'#F{O!4XQUO'#F}O!4^QUO'#GPO!4cQVO'#GRO!(zQVO'#GTO!4jQUO'#GqO!4xQUO'#GZO!(zQVO'#FfO!6VQUO'#FfO!6[QVO'#GaO!6cQUO'#GbO!6nQUO'#GoO!6sQUO'#GsO!6xQUO'#G{O!7jQ&lO'#HjO!:mQUO'#GvO!:}QUO'#HYO!;YQUO'#H[O!;bQUO'#DWO!;bQUO'#HvO!;bQUO'#HwO!;yQUO'#HxO!<[QUO'#H}O!=PQUO'#IOO!>uQVO'#IcO!(zQVO'#IeO!?PQUO'#IhO!?WQVO'#IkP!@}{,UO'#CbP!6n{,UO'#CbP!AY{7[O'#CbP!6n{,UO'#CbP!A_{,UO'#CbP!AjOSO'#I{POOO)CEo)CEoOOOO'#I}'#I}O!AtOWO,59OOOQR,59O,59OO!(zQVO,59UOOQQ,59W,59WO!(zQVO,5;ROOQR,5<V,5<VO!BPQUO,59YO!(zQVO,5>rOOQR'#IY'#IYOOQR'#IZ'#IZOOQR'#I['#I[OOQR'#I]'#I]O!(zQVO,5>sO!(zQVO,5>sO!(zQVO,5>sO!(zQVO,5>sO!(zQVO,5>sO!(zQVO,5>sO!(zQVO,5>sO!(zQVO,5>sO!(zQVO,5>sO!(zQVO,5>sO!DOQVO,5>{OOQQ,5?X,5?XO!EqQVO'#ChO!IjQUO'#CyOOQQ,59c,59cOOQQ,59b,59bOOQQ,5=O,5=OO!IwQ&lO,5=nO!?PQUO,5?SO!LkQVO,5?VO!LrQbO,59cO!L}QVO'#FYOOQQ,5?Q,5?QO!M_QVO,59VO!MfO`O,5:bO!MkQbO'#D^O!M|QbO'#K_O!N[QbO,59wO!NdQbO'#CwO!NuQUO'#CwO!NzQUO'#K[O# UQUO'#CvOOQR-E<}-E<}O# aQUO,5ApO# hQVO'#EfO@XQVO'#EiOBUQUO,5;kOOQR,5<q,5<qO#$aQUO'#KRO#$hQUO'#KRO!(zQVO'#IVO8zQUO,5;kO#${Q&lO'#HjO#(SQUO'#CsO#*wQbO'#CwO#*|QUO'#CvO#.jQUO'#K[OOQQ-E=U-E=UO#0}QUO,5AYO#1XQUO'#K[O#1cQUO,5AYOOQR,5Ap,5ApOOQQ,5>m,5>mO#3gQUO'#CgO#4]QUO,5>qO#6OQUO'#IfOOQR'#JO'#JOO#6WQUO,5:xO#6tQUO,5:xO#7eQUO,5:xO#8YQUO'#CtO!0QQUO'#ClOOQQ'#JX'#JXO#6tQUO,5:xO#8bQUO,5;QO!4xQUO'#C}O#9kQUO,5;QO#9pQUO,5>RO#:|QUO'#C}O#;dQUO,5>|O#;iQUO'#KxO#<rQUO,5;TO#<zQVO,5;TO#=UQUO,5;TOOQQ,5;T,5;TO#>}QUO'#L]O#?UQUO,5>VO#?ZQbO'#CwO#?fQUO'#GdO#?kQUO'#E^O#@[QUO,5;kO#@sQUO'#LOO#@{QUO,5;rOKkQUO'#HgOBUQUO'#HhO#AQQUO'#KrO!6nQUO'#HkO#AxQUO'#CtO!0tQVO,5<TOOQQ'#Cg'#CgOOQR'#Ji'#JiO#A}QVO,5=aOOQQ,5?[,5?[O#DWQbO'#CwO#DcQUO'#GdOOQQ'#Jj'#JjOOQQ-E=h-E=hOGVQUO,5ArOGkQUO,5ArO#DhQUO,5AtO#DsQUO'#G}OOQR,5Ar,5ArO#DhQUO,5ArO#EOQUO'#HPO#EWQUO,5AtOOQR,5At,5AtOOQR,5Au,5AuO#EfQVO,5AuOOQR-E=^-E=^O#G`QVO,5;xOOQR,5;j,5;jO#IaQUO'#EjO#JfQUO'#EwO#K]QVO'#ExO#MoQUO'#EvO#MwQUO'#EyO#NvQUO'#EzOOQQ'#K{'#K{O$ mQUO,5;SO$!sQUO'#EvOOQQ,5;S,5;SO$#pQUO,5;SO$%cQUO,5:yO$'|QVO,5>QO$(WQUO'#E[O$(eQUO,5>SOOQQ,5>T,5>TO$,RQVO'#C{OOQQ-E=p-E=pOOQQ,5>e,5>eOOQQ,59`,59`O$,]QUO,5>xO$.]QUO,5>{O!6nQUO,59tO$.pQUO,5;qO$.}QUO,5<|O!0QQUO,5:oOOQQ,5:r,5:rO$/YQUO,5;mO$/_QUO'#KnOBUQUO,5;kOOQR,5;y,5;yO$0OQUO'#FcO$0^QUO'#FcO$0cQUO,5;{O$3|QVO'#FnO!0tQVO,5<WO!0oQUO,5<WO!0VQUO,5<]O$4TQVO'#GVO$7PQUO,5<_O!0tQVO,5<bO$:gQVO,5<cO$:tQUO,5<eOOQR,5<e,5<eO$;}QUO,5<eOOQR,5<g,5<gOOQR,5<i,5<iOOQQ'#Fj'#FjO$<SQUO,5<kO$<XQUO,5<mOOQR,5<m,5<mO$=_QUO,5<oO$>eQUO,5<sO$>pQUO,5=]O$>uQUO,5=]O!4xQUO,5<uO$>}QUO,5<uO$?cQUO,5<QO$@iQVO,5<QO$BzQUO,5<{OOQR,5<{,5<{O$DQQVO'#F^OOQR,5<|,5<|O$>uQUO,5<|O$DXQUO,5<|O$DdQUO,5=ZO!(zQVO,5=_O!(zQVO,5=gO#NeQUO,5=nOOQQ,5>U,5>UO$FiQUO,5>UO$FsQUO,5>UO$FxQUO,5>UO$F}QUO,5>UO!6nQUO,5>UO$H{QUO'#K[O$ISQUO,5=pO$I_QUO,5=bOKkQUO,5=pO$JXQUO,5=tOOQR,5=t,5=tO$JaQUO,5=tO$LlQVO'#H]OOQQ,5=v,5=vO!;]QUO,5=vO%#gQUO'#KkO%#nQUO'#K]O%$SQUO'#KkO%$^QUO'#DyO%$oQUO'#D|O%'lQUO'#K]OOQQ'#K]'#K]O%)_QUO'#K]O%#nQUO'#K]O%)dQUO'#K]OOQQ,59r,59rOOQQ,5>b,5>bOOQQ,5>c,5>cO%)lQUO'#H{O%)tQUO,5>dOOQQ,5>d,5>dO%-`QUO,5>dO%-kQUO,5>iO%1VQVO,5>jO%1^QUO,5>}O# hQVO'#EfO%4dQUO,5>}OOQQ,5>},5>}O%5TQUO,5?PO%7XQUO,5?SO!<[QUO,5?SO%9TQUO,5?VO%<pQVO,5?VP!A_{,UO,58|P%<w{,UO,58|P%=V{7[O,58|P%=]{,UO,58|PO{O'#Jv'#JvP%=b{,UO'#LdPOOO'#Ld'#LdP%=h{,UO'#LdPOOO,58|,58|POOO,5?g,5?gP%=mOSO,5?gOOOO-E<{-E<{OOQR1G.j1G.jO%=tQUO1G.pO%>zQUO1G0mOOQQ1G0m1G0mO%@WQUO'#CoO%BgQbO'#CwO%BrQUO'#CrO%BwQUO'#CrO%B|QUO1G.tO#AxQUO'#CqOOQQ1G.t1G.tO%EPQUO1G4^O%FVQUO1G4_O%GxQUO1G4_O%IkQUO1G4_O%K^QUO1G4_O%MPQUO1G4_O%NrQUO1G4_O&!eQUO1G4_O&$WQUO1G4_O&%yQUO1G4_O&'lQUO1G4_O&)_QUO1G4_O&+QQUO'#KQO&,ZQUO'#KQO&,cQUO,59SOOQQ,5=Q,5=QO&.kQUO,5=QO&.uQUO,5=QO&.zQUO,5=QO&/PQUO,5=QO!6nQUO,5=QO#NeQUO1G3YO&/ZQUO1G4nO!<[QUO1G4nO&1VQUO1G4qO&2xQVO1G4qOOQQ1G.}1G.}OOQQ1G.|1G.|OOQQ1G2j1G2jO!IwQ&lO1G3YO&3PQUO'#LPO@XQVO'#EiO&4YQUO'#F]OOQQ'#Jb'#JbO&4_QUO'#FZO&4jQUO'#LPO&4rQUO,5;tO&4wQUO1G.qOOQQ1G.q1G.qOOQR1G/|1G/|O&6jQ!dO'#JQO&6oQbO,59xO&9QQ!eO'#D`O&9XQ!dO'#JSO&9^QbO,5@yO&9^QbO,5@yOOQR1G/c1G/cO&9iQbO1G/cO&9nQ&lO'#GfO&:lQbO,59cOOQR1G7[1G7[O#@[QUO1G1VO&:wQUO1G1^OBUQUO1G1VO&=YQUO'#CyO#*wQbO,59cO&@{QUO1G6tOOQR-E<|-E<|O&B_QUO1G0dO#6WQUO1G0dOOQQ-E=V-E=VO#6tQUO1G0dOOQQ1G0l1G0lO&CSQUO,59iOOQQ1G3m1G3mO&CjQUO,59iO&DQQUO,59iO!M_QVO1G4hO!(zQVO'#JZO&DlQUO,5AdOOQQ1G0o1G0oO!(zQVO1G0oO!6nQUO'#JoO&DtQUO,5AwOOQQ1G3q1G3qOOQR1G1V1G1VO&J]QVO'#FOO!M_QVO,5;sOOQQ,5;s,5;sOBUQUO'#JdO&JmQUO,5AjO&JuQVO'#E[OOQR1G1^1G1^O&MdQUO'#L]OOQR1G1o1G1oOOQR-E=g-E=gOOQR1G7^1G7^O#DhQUO1G7^OGVQUO1G7^O#DhQUO1G7`OOQR1G7`1G7`O&MlQUO'#HOO&MtQUO'#LXOOQQ,5=i,5=iO&NSQUO,5=kO&NXQUO,5=lOOQR1G7a1G7aO#EfQVO1G7aO&N^QUO1G7aO' dQVO,5=lOOQR1G1U1G1UO$.vQUO'#E]O'!YQUO'#E]OOQQ'#Kz'#KzO'!sQUO'#KyO'#OQUO,5;UO'#WQUO'#ElO'#kQUO'#ElO'$OQUO'#EtOOQQ'#J]'#J]O'$TQUO,5;cO'$zQUO,5;cO'%uQUO,5;dO'&{QVO,5;dOOQQ,5;d,5;dO''VQVO,5;dO'&{QVO,5;dO''^QUO,5;bO'(ZQUO,5;eO'(fQUO'#KqO'(nQUO,5:vO'(sQUO,5;fOOQQ1G0n1G0nOOQQ'#J^'#J^O''^QUO,5;bO!4xQUO'#E}OOQQ,5;b,5;bO')nQUO'#E`O'+hQUO'#E{OHrQUO1G0nO'+mQUO'#EbOOQQ'#JY'#JYO'-VQUO'#KsOOQQ'#Ks'#KsO'.PQUO1G0eO'.wQUO1G3lO'/}QVO1G3lOOQQ1G3l1G3lO'0XQVO1G3lO'0`QUO'#L`O'1lQUO'#KYO'1zQUO'#KXO'2VQUO,59gO'2_QUO1G/`O'2dQUO'#FPOOQR1G1]1G1]OOQR1G2h1G2hO$>uQUO1G2hO'2nQUO1G2hO'2yQUO1G0ZOOQR'#Ja'#JaO'3OQVO1G1XO'8wQUO'#FTO'8|QUO1G1VO!6nQUO'#JeO'9[QUO,5;}O$0^QUO,5;}OOQQ'#Fd'#FdOOQQ,5;},5;}O'9jQUO1G1gOOQR1G1g1G1gO'9rQUO,5<YO$.vQUO'#FWOBUQUO'#FWO'9yQUO,5<YO!(zQVO,5<YO':RQUO,5<YO':WQVO1G1rO!0tQVO1G1rOOQR1G1w1G1wO'?vQUO1G1yOOQR1G1|1G1|O'?{QUO1G1}OBUQUO1G2^O'AUQVO1G1}O'CjQUO1G1}O'CoQUO'#GXO8zQUO1G2^OOQR1G2P1G2POOQR1G2V1G2VOOQR1G2X1G2XOOQR1G2Z1G2ZO'CtQUO1G2_O!4xQUO1G2_OOQR1G2w1G2wO'C|QUO1G2wO$>}QUO1G2aOOQQ'#Cu'#CuO'DRQUO'#G]O'D|QUO'#G]O'ERQUO'#LSO'EaQUO'#G`OOQQ'#LT'#LTO'EoQUO1G2aO'EtQVO1G1lO'HVQVO'#GVOBUQUO'#FWOOQR'#Jf'#JfO'EtQVO1G1lO'HaQUO'#FwOOQR1G2g1G2gOOQR,5;x,5;xO'HfQVO,5;xO'HmQUO1G2hO'HrQUO'#JhO'2nQUO1G2hO!(zQVO1G2uO'HzQUO1G2yO'JTQUO1G3RO'KZQUO1G3YOOQQ1G3p1G3pO'KoQUO1G3pOOQR1G3[1G3[O'KtQUO'#K[O'2dQUO'#LUOGkQUO'#LWOOQR'#Gz'#GzO#DhQUO'#LYOOQR'#HR'#HRO'LOQUO'#GwO'$OQUO'#GvOOQR1G2|1G2|O'L{QUO1G2|O'MrQUO1G3[O'M}QUO1G3`O'NSQUO1G3`OOQR1G3`1G3`O'N[QUO'#H^OOQR'#H^'#H^O( eQUO'#H^O!(zQVO'#HaO!(zQVO'#H`OOQR'#L['#L[O( jQUO'#L[OOQR'#Jl'#JlO( oQVO,5=wOOQQ,5=w,5=wO( vQUO'#H_O(!OQUO'#H[OOQQ1G3b1G3bO(!YQUO,5@wOOQQ,5@w,5@wO%)_QUO,5@wO%)dQUO,5@wO%$^QUO,5:eO(%wQUO'#KlO(&VQUO'#KlOOQQ,5:e,5:eOOQQ'#JT'#JTO(&bQUO'#D}O(&lQUO'#KrOGkQUO'#LWO('hQUO'#D}OOQQ'#Hq'#HqOOQQ'#Hs'#HsOOQQ'#Ht'#HtOOQQ'#Km'#KmOOQQ'#JV'#JVO('rQUO,5:hOOQQ,5:h,5:hO((oQUO'#LWO((|QUO'#HuO()dQUO,5@wO()kQUO'#H|O()vQUO'#L_O(*OQUO,5>gO(*TQUO'#L^OOQQ1G4O1G4OO(-zQUO1G4OO(.RQUO1G4OO(.YQUO1G4UO(/`QUO1G4UO(/eQUO,5A}O!6nQUO1G4iO!(zQVO'#IjOOQQ1G4n1G4nO(/jQUO1G4nO(1mQVO1G4qPOOO1G.h1G.hP!A_{,UO1G.hP(3mQUO'#LfP(3x{,UO1G.hP(3}{7[O1G.hPO{O-E=t-E=tPOOO,5BO,5BOP(4V{,UO,5BOPOOO1G5R1G5RO!(zQVO7+$[O(4[QUO'#CyOOQQ,59^,59^O(4gQbO,59cO(4rQbO,59^OOQQ,59],59]OOQQ7+)x7+)xO!M_QVO'#JuO(4}QUO,5@lOOQQ1G.n1G.nOOQQ1G2l1G2lO(5VQUO1G2lO(5[QUO7+(tOOQQ7+*Y7+*YO(7pQUO7+*YO(7wQUO7+*YO(1mQVO7+*]O#NeQUO7+(tO(8UQVO'#JcO(8iQUO,5AkO(8qQUO,5;vOOQQ'#Co'#CoOOQQ,5;w,5;wO!(zQVO'#F[OOQQ-E=`-E=`O!M_QVO,5;uOOQQ1G1`1G1`OOQQ,5?l,5?lOOQQ-E=O-E=OOOQR'#Dg'#DgOOQR'#Di'#DiOOQR'#Dl'#DlO(9zQ!eO'#K`O(:RQMkO'#K`O(:YQ!eO'#K`OOQR'#K`'#K`OOQR'#JR'#JRO(:aQ!eO,59zOOQQ,59z,59zO(:hQbO,5?nOOQQ-E=Q-E=QO(:vQbO1G6eOOQR7+$}7+$}OOQR7+&q7+&qOOQR7+&x7+&xO'8|QUO7+&qO(;RQUO7+&OO#6WQUO7+&OO(;vQUO1G/TO(<^QUO1G/TO(<xQUO7+*SOOQQ7+*W7+*WO(>kQUO,5?uOOQQ-E=X-E=XO(?tQUO7+&ZOOQQ,5@Z,5@ZOOQQ-E=m-E=mO(?yQUO'#LPO@XQVO'#EiO(AVQUO1G1_OOQQ1G1_1G1_O(B`QUO,5@OOOQQ,5@O,5@OOOQQ-E=b-E=bO(BtQUO'#KqOOQR7+,x7+,xO#DhQUO7+,xOOQR7+,z7+,zO(CRQUO,5=jO#DsQUO'#JkO(CdQUO,5AsOOQR1G3V1G3VOOQR1G3W1G3WO(CrQUO7+,{OOQR7+,{7+,{O(EjQUO,5:wO(GXQUO'#EwO!(zQVO,5;VO(GzQUO,5:wO(HUQUO'#EpO(HgQUO'#EzOOQQ,5;Z,5;ZO#K]QVO'#ExO(H}QUO,5:wO(IUQUO'#EyO#GgQUO'#J[O(JnQUO,5AeOOQQ1G0p1G0pO(JyQUO,5;WO!<[QUO,5;^O(KdQUO,5;_O(KrQUO,5;WO(NUQUO,5;`OOQQ-E=Z-E=ZO(N^QUO1G0}OOQQ1G1O1G1OO) XQUO1G1OO)!_QVO1G1OO)!fQVO1G1OO)!pQUO1G0|OOQQ1G0|1G0|OOQQ1G1P1G1PO)#mQUO'#JpO)#wQUO,5A]OOQQ1G0b1G0bOOQQ-E=[-E=[O)$PQUO,5;iO!<[QUO,5;iO)$|QVO,5:zO)%TQUO,5;gO$ mQUO7+&YOOQQ7+&Y7+&YO!(zQVO'#EfO)%[QUO,5:|OOQQ'#Kt'#KtOOQQ-E=W-E=WOOQQ,5A_,5A_OOQQ'#Jm'#JmO))PQUO7+&PPOQQ7+&P7+&POOQQ7+)W7+)WO))wQUO7+)WO)*}QVO7+)WOOQQ,5>n,5>nO$)YQVO'#JtO)+UQUO,5@sOOQQ1G/R1G/ROOQQ7+$z7+$zO)+aQUO7+(SO)+fQUO7+(SOOQR7+(S7+(SO$>uQUO7+(SOOQQ7+%u7+%uOOQR-E=_-E=_O!0VQUO,5;oOOQQ,5@P,5@POOQQ-E=c-E=cO$0^QUO1G1iOOQQ1G1i1G1iOOQR7+'R7+'ROOQR1G1t1G1tOBUQUO,5;rO),SQUO,5<ZO),ZQUO1G1tO)-dQUO1G1tO!0tQVO7+'^O)-iQVO7+'^O)3XQUO7+'eO)3^QVO7+'iO)5rQUO7+'xO)5|QUO7+'iO)7SQVO7+'iOKkQUO7+'xO$>hQUO,5<sO!4xQUO7+'yO)7ZQUO7+'yOOQR7+(c7+(cO)7`QUO7+'{O)7eQUO,5<wO'DRQUO,5<wO)8]QUO,5<wO'DRQUO,5<wOOQQ,5<x,5<xO)8nQVO,5<yO'EaQUO'#JgO)8xQUO,5AnO)9QQUO,5<zOOQR7+'{7+'{O)9]QVO7+'WO)5uQUO'#LOOOQR-E=d-E=dO);nQVO,5<cOOQR1G1d1G1dOOQQ,5@S,5@SO!6nQUO,5@SOOQQ-E=f-E=fO)>VQUO7+(aO)?]QUO7+(eO)?bQVO7+(eOOQQ7+(m7+(mOOQQ7+)[7+)[O)?jQUO'#KkO)?tQUO'#KkOOQR,5=c,5=cO)@RQUO,5=cO!;bQUO,5=cO!;bQUO,5=cO!;bQUO,5=cOOQR7+(h7+(hOOQR7+(v7+(vOOQR7+(z7+(zOOQR,5=x,5=xO)@WQUO,5={O)A^QUO,5=zOOQR,5Av,5AvOOQR-E=j-E=jOOQQ1G3c1G3cO)BdQUO,5=yO)BiQVO'#EfOOQQ1G6c1G6cO%)_QUO1G6cO%)dQUO1G6cOOQQ1G0P1G0POOQQ-E=R-E=RO)EQQUO,5AWO(%wQUO'#JUO)E]QUO,5AWO)E]QUO,5AWO)EeQUO,5:iO8zQUO,5:iOOQQ,5>^,5>^O)EoQUO,5ArO)EvQUO'#EVO)GQQUO'#EVO)GkQUO,5:iO)GuQUO'#HmO)GuQUO'#HnOOQQ'#Kp'#KpO)HdQUO'#KpO!(zQVO'#HoOOQQ,5:i,5:iO)IUQUO,5:iO!M_QVO,5:iOOQQ-E=T-E=TOOQQ1G0S1G0SOOQQ,5>a,5>aO)IZQUO1G6cO!(zQVO,5>hO)LxQUO'#JsO)MTQUO,5AyOOQQ1G4R1G4RO)M]QUO,5AxOOQQ,5Ax,5AxOOQQ7+)j7+)jO*!zQUO7+)jOOQQ7+)p7+)pO*'yQVO1G7iO*){QUO7+*TO**QQUO,5?UO*+WQUO7+*]POOO7+$S7+$SP*,yQUO'#LgP*-RQUO,5BQP*-W{,UO7+$SPOOO1G7j1G7jO*-]QUO<<GvOOQQ1G.x1G.xOOQQ'#IU'#IUO*/OQUO,5@aOOQQ,5@a,5@aOOQQ-E=s-E=sOOQQ7+(W7+(WOOQQ<<Mt<<MtO*0XQUO<<MtO*2[QUO<<MwO*3}QUO<<L`O*4cQUO,5?}OOQQ,5?},5?}OOQQ-E=a-E=aOOQQ1G1b1G1bO*5lQUO,5;vO*6rQUO1G1aOOQQ1G1a1G1aOOQR,5@z,5@zO*7{Q!eO,5@zO*8SQMkO,5@zO*8ZQ!eO,5@zOOQR-E=P-E=POOQQ1G/f1G/fO*8bQ!eO'#DwOOQQ1G5Y1G5YOOQR<<J]<<J]O*8iQUO<<IjO*9^QUO7+$oOOQQ<<Iu<<IuO(8UQVO,5;ROOQR<=!d<=!dOOQQ1G3U1G3UOOQQ,5@V,5@VOOQQ-E=i-E=iOOQR<=!g<=!gO*:ZQUO1G0cO*:bQUO'#EzO*:rQUO1G0cO*:yQUO'#JOO*<aQUO1G0qO!(zQVO1G0qOOQQ,5;[,5;[OOQQ,5;],5;]OOQQ,5?v,5?vOOQQ-E=Y-E=YO!<[QUO1G0xO*=pQUO1G0xOOQQ1G0y1G0yO*>RQUO'#ElOOQQ1G0z1G0zOOQQ7+&j7+&jO*>gQUO7+&jO*?mQVO7+&jOOQQ7+&h7+&hOOQQ,5@[,5@[OOQQ-E=n-E=nO*@iQUO1G1TO*@sQUO1G1TO*A^QUO1G0fOOQQ1G0f1G0fO*BdQUO'#K|O*BlQUO1G1ROOQQ<<It<<ItOOQQ'#Hc'#HcO'+mQUO,5=|OOQQ'#He'#HeO'+mQUO,5>OOOQQ-E=k-E=kPOQQ<<Ik<<IkPOQQ-E=l-E=lOOQQ<<Lr<<LrO*BqQUO'#LbO*C}QUO'#LaOOQQ,5@`,5@`OOQQ-E=r-E=rOOQR<<Kn<<KnO$>uQUO<<KnO*D]QUO<<KnOOQR1G1Z1G1ZOOQQ7+'T7+'TO!M_QVO1G1uO*DbQUO1G1uOOQR7+'`7+'`OOQR<<Jx<<JxO!0tQVO<<JxOOQR<<KP<<KPO*DmQUO<<KTO*EsQVO<<KTOKkQUO<<KdO!M_QVO<<KdO*EzQUO<<KTO!0tQVO<<KTO*GTQUO<<KTO*GYQUO<<KdO*GeQUO<<KeOOQR<<Ke<<KeOOQR<<Kg<<KgO*GjQUO1G2cO)7eQUO1G2cO'DRQUO1G2cO*G{QUO1G2eO*IRQVO1G2eOOQQ1G2e1G2eO*I]QVO1G2eO*IdQUO,5@ROOQQ-E=e-E=eOOQQ1G2f1G2fO*IrQUO1G1}O*J{QVO1G1}O*KSQUO1G1}OOQQ1G5n1G5nOOQR<<K{<<K{OOQR<<LP<<LPO*KXQVO<<LPO*KdQUO<<LPOOQR1G2}1G2}O*KiQUO1G2}O*KpQUO1G3fOOQR1G3e1G3eOOQQ7++}7++}O%)_QUO7++}O*K{QUO1G6rO*K{QUO1G6rO(%wQUO,5?pO*LTQUO,5?pOOQQ-E=S-E=SO*L`QUO1G0TOOQQ1G0T1G0TO*LjQUO1G0TO!M_QVO1G0TO*LoQUO1G0TOOQQ1G3x1G3xO*LyQUO,5:qO)EvQUO,5:qO*MgQUO,5:qO)EvQUO,5:qO$#uQUO,5:uO*NUQVO,5>WO)GuQUO'#JqO*N`QUO1G0TO*NqQVO1G0TOOQQ1G3v1G3vO*NxQUO,5>XO+ TQUO,5>YO+ rQUO,5>ZO+!xQUO1G0TO%)dQUO7++}O+$OQUO1G4SOOQQ,5@_,5@_OOQQ-E=q-E=qOOQQ<<MU<<MUOOQQ<<Mo<<MoO+%XQUO1G4pP+'[QUO'#JwP+'dQUO,5BRPO{O1G7l1G7lPOOO<<Gn<<GnOOQQANC`ANC`OOQR1G6f1G6fO+'lQ!eO,5:cOOQQ,5:c,5:cO+'sQUO1G0mO+)PQUO7+&]O+*`QUO7+&dO+*qQUO,5;WOOQQ<<JU<<JUO++PQUO7+&oOOQQ7+&Q7+&QO!4xQUO'#J_O++zQUO,5AhOOQQ7+&m7+&mOOQQ1G3h1G3hO+,SQUO1G3jOOQQ,5>o,5>oO+/wQUOANAYOOQRANAYANAYO+/|QUO7+'aOOQRAN@dAN@dO+1YQVOAN@oO+1aQUOAN@oO!0tQVOAN@oO+2jQUOAN@oO+2oQUOANAOO+2zQUOANAOO+4QQUOANAOOOQRAN@oAN@oO!M_QVOANAOOOQRANAPANAPO+4VQUO7+'}O)7eQUO7+'}OOQQ7+(P7+(PO+4hQUO7+(PO+5nQVO7+(PO+5uQVO7+'iO+5|QUOANAkOOQR7+(i7+(iOOQR7+)Q7+)QO+6RQUO7+)QO+6WQUO7+)QOOQQ<= i<= iO+6`QUO7+,^O+6hQUO1G5[OOQQ1G5[1G5[O+6sQUO7+%oOOQQ7+%o7+%oO+7UQUO7+%oO*NqQVO7+%oOOQQ7+)b7+)bO+7ZQUO7+%oO+8aQUO7+%oO!M_QVO7+%oO+8kQUO1G0]O*LyQUO1G0]O)EvQUO1G0]OOQQ1G0a1G0aO+9YQUO1G3rO+:`QVO1G3rOOQQ1G3r1G3rO+:jQVO1G3rO+:qQUO,5@]OOQQ-E=o-E=oOOQQ1G3s1G3sO%)_QUO<= iOOQQ7+*[7+*[POQQ,5@c,5@cPOQQ-E=u-E=uOOQQ1G/}1G/}OOQQ,5?y,5?yOOQQ-E=]-E=]OOQRG26tG26tO+;YQUOG26ZO!0tQVOG26ZO+<cQUOG26ZOOQRG26ZG26ZO!M_QVOG26jO!0tQVOG26jO+<hQUOG26jO+=nQUOG26jO+=sQUO<<KiOOQQ<<Kk<<KkOOQRG27VG27VOOQR<<Ll<<LlO+>UQUO<<LlOOQQ7+*v7+*vOOQQ<<IZ<<IZO+>ZQUO<<IZO!M_QVO<<IZO+>`QUO<<IZO+?fQUO<<IZO*NqQVO<<IZOOQQ<<L|<<L|O+?wQUO7+%wO*LyQUO7+%wOOQQ7+)^7+)^O+@fQUO7+)^O+AlQVO7+)^OOQQANETANETO!0tQVOLD+uOOQRLD+uLD+uO+AsQUOLD,UO+ByQUOLD,UOOQRLD,ULD,UO!0tQVOLD,UOOQRANBWANBWOOQQAN>uAN>uO+COQUOAN>uO+DUQUOAN>uO!M_QVOAN>uO+DZQUO<<IcOOQQ<<Lx<<LxOOQR!$( a!$( aO!0tQVO!$( pOOQR!$( p!$( pOOQQG24aG24aO+DxQUOG24aO+FOQUOG24aOOQR!)9E[!)9E[OOQQLD){LD){O+FTQUO'#CgO(dQUO'#CgO+JQQUO'#CyO+LqQUO'#CyO!E{QUO'#CyO+MjQUO'#CyO+M}QUO'#CyO,#pQUO'#CyO,$QQUO'#CyO,$_QUO'#CyO,$jQbO,59cO,$uQbO,59cO,%QQbO,59cO,%]QbO'#CwO,%nQbO'#CwO,&PQbO'#CwO,&bQUO'#CgO,(uQUO'#CgO,)SQUO'#CgO,+wQUO'#CgO,.zQUO'#CgO,/[QUO'#CgO,3TQUO'#CgO,3[QUO'#CgO,4[QUO'#CgO,6eQUO,5:xO#?kQUO,5:xO#?kQUO,5:xO#=ZQUO'#L]O,7RQbO'#CwO,7^QbO'#CwO,7iQbO'#CwO,7tQbO'#CwO#6tQUO'#E^O,8PQUO'#E^O,9^QUO'#HhO,:OQbO'#CwO,:ZQbO'#CwO,:fQUO'#CvO,:kQUO'#CvO,:pQUO'#CoO,;OQbO,59cO,;ZQbO,59cO,;fQbO,59cO,;qQbO,59cO,;|QbO,59cO,<XQbO,59cO,<dQbO,59cO,6eQUO1G0dO,<oQUO1G0dO#?kQUO1G0dO,8PQUO1G0dO,>|QUO'#K[O,?^QUO'#CyO,?lQbO,59cO,6eQUO7+&OO,<oQUO7+&OO,?wQUO'#EwO,@jQUO'#EzO,AZQUO'#E^O,A`QUO'#GdO,AeQUO'#CvO,AjQUO'#CwO,AoQUO'#CwO,AtQUO'#CvO,AyQUO'#GdO,BOQUO'#K[O,BlQUO'#K[O,BvQUO'#CvO,CRQUO'#CvO,C^QUO'#CvO,<oQUO,5:xO,8PQUO,5:xO,8PQUO,5:xO,CiQUO'#K[O,C|QbO'#CwO,DXQUO'#CrO,D^QUO'#E^",
            stateData: ",ES~O(oOSSOSTOSRPQVPQ'fPQ'hPQ'iPQ'jPQ'kPQ'lPQ'mPQ'nPQ~O*[OS~OPmO]eOa!]Od!POlTOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O{#RO}!_O!TxO!VfO!X!XO!Y!WO!i!YO!opO!r!`O!s!aO!t!aO!u!bO!v!aO!x!cO!{!dO#V#QO#a#VO#b#TO#i#OO#p!xO#t!fO#v!eO$S!gO$U!hO$Z!vO$[!wO$a!iO$f!jO$h!kO$i!lO$l!mO$n!nO$p!oO$r!pO$t!qO$v!rO$x!sO$|!tO%O!uO%V!yO%`#ZO%a#[O%b#YO%d!zO%f#UO%h!{O%m#SO%p!|O%w!}O%}#PO&n!RO&s#WO&t!TO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(sRO)QYO)TaO)V|O)W{O)XiO)Y!ZO)ZXO)icO)jdO~OR#bOV#]O'f#^O'h#_O'i#`O'j#`O'k#aO'l#aO'm#_O'n#_O~OX#dO(q#dO(r#fO~O]ZX]iXdiXlgXpZXpiXriXsiXtiXuiXviXwiXxiXyiX}iX!TiX!VZX!ViX!XZX!YZX![ZX!^ZX!_ZX!aZX!bZX!cZX!eZX!fZX!gZX!hZX!riX!siX!tiX!uiX!viX!xiX!{iX%wiX&siX&tiX(siX(vZX(w$^X(xZX(yZX)TZX)TiX)UZX)VZX)ViX)WZX)WiX)XZX)YZX)kZX~O)XiX!UZX~P(dO]#}O!V#lO!X#{O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h#iO(v#gO(x#kO(y#kO)T#mO)U#oO)V#nO)W#pO)X#jO)Y#|O~Od$RO%Z$SO']$TO'`$UO(z$OO~Ol$VO~O!T$WO])OXd)OXr)OXs)OXt)OXu)OXv)OXw)OXx)OXy)OX})OX!V)OX!r)OX!s)OX!t)OX!u)OX!v)OX!x)OX!{)OX%w)OX&s)OX&t)OX(s)OX)T)OX)V)OX)W)OX)X)OX~Ol$VO~P.ZOl$VO!g$YO)k$YO~OX$ZO)[$ZO~O!R$[O)Y)RP)^)RP~OPmO]$eOa!]Or!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O{#RO}!_O!TxO!V$fO!X!XO!Y!WO!i!YO!r!aO!s!aO!t!aO!u!aO!v!aO!x!cO#V#QO#a#VO#b#TO#v!eO$Z!vO$[!wO$a!iO$f!jO$h!kO$i!lO$l!mO$n!nO$p!oO$r!pO$t!qO$v!rO$x!sO%`#ZO%a#[O%b#YO%f#UO%m#SO%w$mO&n!RO&s#WO&t!TO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO)QYO)T$kO)W$kO)XiO)Y!ZO)ZXO)icO)jdO~Ol$_O#t$lO(sRO~P0zO](^Xa'zXd(^Xl'zXl(^Xr'zXr(^Xs'zXs(^Xt'zXt(^Xu'zXu(^Xv'zXv(^Xw'zXw(^Xx'zXx(^Xy'zXy(^X{'zX}'zX!V(^X!o(^X!r'zX!r(^X!s'zX!s(^X!t'zX!t(^X!u'zX!u(^X!v'zX!v(^X!x'zX!x(^X!{(^X#a'zX#b'zX%f'zX%m'zX%p(^X%w(^X&n'zX&s'zX&t'zX(s'zX(s(^X)T(^X)V(^X)W(^X~Oa!TOl$oOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O{#RO}!_O!r!aO!s!aO!t!aO!u!aO!v!aO!x!cO#a#VO#b#TO%f#UO%m#SO&n!RO&s#WO&t!TO(s$nO~Or!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O}!_O!r!aO!s!aO!t!aO!u!aO!v!aO!x!cO&s#WO&t$wO])bXd)bXl)bX!V)bX!{)bX%w)bX(s)bX)T)bX)V)bX)W)bX~O)X$vO~P:nOPmO]eOd!POr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!VfO!X!XO!Y!WO!i!YO!{!dO#V#QO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO)TaO)V|O)W{O)Y!ZO)ZXO)icO)jdO~Oa%QOl;OO!|%RO(s$xO~P<lO)T%SO~Oa!]Ol$_O{#RO#a#VO#b#TO%f#UO%m#SO&n!RO&s#WO&t!TO(s;RO~P<lOPmO]$eOa%QOl;OO!V$fO!W%_O!X!XO!Y!WO!i!YO#V#QO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s$xO)T$kO)W%]O)Y!ZO)ZXO)icO)jdO)k%[O~O]%hOd!POl%bO!V%kO!{!dO%w$mO(s;SO)T%dO)V%iO)W%iO~O(w%mO~O)X#jO~O(s%nO](uX!V(uX!X(uX!Y(uX![(uX!^(uX!_(uX!a(uX!b(uX!c(uX!e(uX!f(uX!h(uX(v(uX(x(uX(y(uX)T(uX)U(uX)V(uX)W(uX)X(uX)Y(uX!g(uX)k(uX!O(uX!W(uX(w(uX!U(uXQ(uX!d(uX~OP%oO(pQO~PCQO]%hOd!POr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!V%kO!r!aO!s!aO!t!aO!u!aO!v!aO!x!cO!{!dO%p!|O%w!}O)T;dO)V|O)W|O~Ol%rO!o%wO(s$xO~PE_O!TxO#v!eO(w%yO)k%|O])fX!V)fX~O]%hOd!POl%rO!V%kO!{!dO%w!}O(s$xO)T;dO)V|O)W|O~O!TxO#v!eO)X&PO)k&QO~O!U&TO~P!QO]&YO!TxO!V&WO)T&VO)V&ZO)W&ZO~Op&UO~PHrO]&cO!V&bO~OPmO]eOd!PO!VfO!X!XO!Y!WO!i!YO!{!dO#V#QO%`#ZO%a#[O%b#YO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO)TaO)V|O)W{O)Y!ZO)ZXO)icO)jdO~Oa%QOl;OO%w$mO(s$xO~PIgO]%hOd!POl;`O!V%kO!{!dO%w$mO(s$xO)T;dO)V|O)W|O~Op&fO](uX])fX!V(uX!V)fX!X(uX!Y(uX![(uX!^(uX!_(uX!a(uX!b(uX!c(uX!e(uX!f(uX!h(uX(v(uX(x(uX(y(uX)T(uX)U(uX)V(uX)W(uX)X(uX)Y(uX!O(uX!O)fX!U(uX~O!g$YO)k$YO~PL]O!g(uX)k(uX~PL]O](uX!V(uX!X(uX!Y(uX![(uX!^(uX!_(uX!a(uX!b(uX!c(uX!e(uX!f(uX!h(uX(v(uX(x(uX(y(uX)T(uX)U(uX)V(uX)W(uX)X(uX)Y(uX!g(uX)k(uX!O(uX!U(uX~O])fX!V)fX!O)fX~PNkOa&hO&n!RO]&mXd&mXl&mXr&mXs&mXt&mXu&mXv&mXw&mXx&mXy&mX}&mX!V&mX!r&mX!s&mX!t&mX!u&mX!v&mX!x&mX!{&mX%w&mX&s&mX&t&mX(s&mX)T&mX)V&mX)W&mX)X&mX!O&mX!T&mX!X&mX!Y&mX![&mX!^&mX!_&mX!a&mX!b&mX!c&mX!e&mX!f&mX!h&mX(v&mX(x&mX(y&mX)U&mX)Y&mX!g&mX)k&mX!W&mXQ&mX!d&mX(w&mX!U&mX#v&mX~Op&fOl)OX!O)OXQ)OX!d)OX!h)OX)Y)OX)k)OX~P.ZO!g$YO)k$YO](uX!V(uX!X(uX!Y(uX![(uX!^(uX!_(uX!a(uX!b(uX!c(uX!e(uX!f(uX!h(uX(v(uX(x(uX(y(uX)T(uX)U(uX)V(uX)W(uX)X(uX)Y(uX!O(uX!W(uX(w(uX!U(uXQ(uX!d(uX~OPmO]$eOa%QOl;OO!V$fO!X!XO!Y!WO!i!YO#V#QO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s$xO)T$kO)W$kO)Y!ZO)ZXO)icO)jdO~O])OXd)OXl)OXr)OXs)OXt)OXu)OXv)OXw)OXx)OXy)OX})OX!V)OX!r)OX!s)OX!t)OX!u)OX!v)OX!x)OX!{)OX%w)OX&s)OX&t)OX(s)OX)T)OX)V)OX)W)OX)X)OX!O)OXQ)OX!d)OX!h)OX)Y)OX)k)OX~O]#}O~P!*qO]&lO~O])cXa)cXd)cXl)cXr)cXs)cXt)cXu)cXv)cXw)cXx)cXy)cX{)cX})cX!V)cX!o)cX!r)cX!s)cX!t)cX!u)cX!v)cX!x)cX!{)cX#a)cX#b)cX%f)cX%m)cX%p)cX%w)cX&n)cX&s)cX&t)cX(s)cX)T)cX)V)cX)W)cX~O(pQO~P!-ZO%V&nO~P!-ZO]&oO~O]#}O~O!TxO~O$X&wO(s%nO(w&vO~O]&xOw&zO~O]&xO~OPmO]$eOa%QOl;OO!TxO!V$fO!X!XO!Y!WO!i!YO#V#QO#p!xO#v!eO$Z!vO$[!wO$a!iO$f!jO$h!kO$i!lO$l!mO$n!nO$p!oO$r!pO$t!qO$v!rO$x!sO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s:qO)QYO)T$kO)W$kO)XiO)Y!ZO)ZXO)icO)jdO~O]'PO~O!T$WO)X'RO~P!(zO)X'TO~O)X'UO~O(s'VO~O)X'YO~P!(zOl;bO%V'^O%f'^O(s;TO~Oa!TOl$oOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O{#RO#a#VO#b#TO%f#UO%m#SO&n!RO&s#WO&t!TO(s$nO~O(w'bO~O)X'dO~P!(zO!T'eO(s%nO)k'gO~O(s%nO~O]'jO~O]'kOd%oXl%oX!V%oX!{%oX%w%oX(s%oX)T%oX)V%oX)W%oX~O]'oO!V'pO!X'mO!g'mO%['mO%]'mO%^'mO%_'mO%`'qO%a'qO%b'mO(y'nO)k'mO)y'rO~P8zO]%hOa!TOd!POr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O{#RO}!_O!V%kO!r!aO!s!aO!t!aO!u!aO!v!aO!x!cO!{!dO#a#VO#b#TO%f#UO%m#SO&n!RO&s#WO&t!TO)T;dO)V|O)W|O~Ol;cOp&UO%w$mO(s;UO~P!8jO(s%nO(w'wO)X'xO~O]&cO!T'zO~Ol$oO}!_O!T(RO!l(WO(s$nO(w(QO)QYO~Ol$oO{(_O!T([O#b(_O(s$nO~Oa!TOl$oO{#RO#a#VO#b#TO%f#UO%m#SO&n!RO&s#WO&t!TO(s$nO~O](aO~OPmOa%QOl;OO!V$fO!X!XO!Y!WO!i!YO#V#QO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s$xO)T$kO)W$kO)ZXO)icO)jdO~O](cO)Y(dO~P!=UO]#}O~P!<[OPmO]$eOa%QOl;OO!V(jO!X!XO!Y!WO!i!YO#V#QO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s$xO)T$kO)W$kO)Y!ZO)ZXO)icO)jdO~OY(kO(pQO(s%nO~O'g(nO~OS(rOT(oO*X(qO~O]#}O(o(uO~Q'oXX#dO(q#dO(r(wO~Od)ROl(|O&s#WO(s({O~O!Y'Ta!['Ta!^'Ta!_'Ta!a'Ta!b'Ta!c'Ta!e'Ta!f'Ta!h'Ta(v'Ta)T'Ta)U'Ta)V'Ta)W'Ta)X'Ta)Y'Ta!g'Ta)k'Ta!O'Ta!W'Ta(w'Ta!U'TaQ'Ta!d'Ta~OPmOa%QOl;OO!i!YO#V#QO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s$xO)ZXO)icO)jdO]'Ta!V'Ta!X'Ta(x'Ta(y'Ta~P!B_O!T$WO!O(tP~P!(zO]nX]%XXdnXlmXpnXp%XXrnXsnXtnXunXvnXwnXxnXynX}nX!TnX!VnX!V%XX!X%XX!Y%XX![%XX!^%XX!_%XX!a%XX!b%XX!c%XX!e%XX!f%XX!gmX!h%XX!rnX!snX!tnX!unX!vnX!xnX!{nX%wnX&snX&tnX(snX(v%XX(x%XX(y%XX)TnX)T%XX)U%XX)VnX)V%XX)WnX)W%XX)X%XX)Y%XX)kmX!O%XX~O)XnX!OnX!U%XX~P!E{O])eO!V)fO!X)cO!g)cO%[)cO%])cO%^)cO%_)cO%`)gO%a)gO%b)cO(y)dO)k)cO)y)hO~P8zOPmO]$eOa%QOl;OO!X!XO!Y!WO!i!YO#V#QO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s$xO)T$kO)W$kO)Y!ZO)ZXO)icO)jdO~O!V)mO~P!JwOd)pO%Z)qO(z$OO~O!T$WO!V)sO(x)tO!U)sP~P!JwO!T$WO~P!(zO)]){O~Ol)|O]!QX!h!QX)Y!QX)^!QX~O]*OO!h*PO)Y)RX)^)RX~O)Y*TO)^*SO~Od$RO%Z*UO']$TO'`$UO(z$OO~Ol*VO~Ol*VO!O)OX~P.ZOl*VO!g$YO)k$YO~O)X*WO~P:nOPmO]$eOa!]Ol$_Or!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O{#RO!V$fO!X!XO!Y!WO!i!YO#V#QO#a#VO#b#TO%`#ZO%a#[O%b#YO%f#UO%m#SO%w$mO&n!RO&s#WO&t!TO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s;RO)T$kO)W$kO)Y!ZO)ZXO)icO)jdO~Op&fO~P!&zOp&fO!W(uX(w(uXQ(uX!d(uX~PNkO]'oO!V'pO!X'mO!g'mO%['mO%]'mO%^'mO%_'mO%`'qO%a'qO%b'mO(y'nO)k'mO)y'rO~O]iXdiXlgXpiXriXsiXtiXuiXviXwiXxiXyiX}iX!ViX!riX!siX!tiX!uiX!viX!xiX!{iX%wiX&siX&tiX(siX)TiX)ViX)WiX!TiX!hiX)YiX)kiX!OiX~O!liX(wiX)XiX!XiX!YiX![iX!^iX!_iX!aiX!biX!ciX!eiX!fiX(viX(xiX(yiX)UiX!giX!WiXQiX!diX!UiX#viX#TiX#ViX#piXaiX{iX!oiX#aiX#biX#iiX#tiX$|iX%diX%fiX%liX%miX%piX&niX)QiX~P#%yO(z*[O~Ol*]O~O])OXd)OXr)OXs)OXt)OXu)OXv)OXw)OXx)OXy)OX})OX!V)OX!r)OX!s)OX!t)OX!u)OX!v)OX!x)OX!{)OX%w)OX&s)OX&t)OX(s)OX)T)OX)V)OX)W)OX)X)OX!T)OX!X)OX!Y)OX![)OX!^)OX!_)OX!a)OX!b)OX!c)OX!e)OX!f)OX!h)OX(v)OX(x)OX(y)OX)U)OX)Y)OX!g)OX)k)OX!O)OX!W)OXQ)OX!d)OX(w)OX!U)OX#v)OX~Ol*]O~P#+ROr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O}!_O!r!aO!s!aO!t!aO!u!aO!v!aO!x!cO])bad)bal)ba!V)ba!{)ba%w)ba(s)ba)T)ba)V)ba)W)baQ)ba!d)ba!h)ba)Y)ba)k)ba!O)ba!T)ba(w)ba)X)ba~O&s#WO&t$wO~P#.qOp&fOl)OX~P#+RO&s)ba~P#.qO]ZXlgXpZXpiX!TiX!VZX!XZX!YZX![ZX!^ZX!_ZX!aZX!bZX!cZX!eZX!fZX!gZX!hZX(vZX(xZX(yZX)TZX)UZX)VZX)WZX)XZX)YZX)kZX!OZX~O!WZX(wZX!UZXQZX!dZX~P#1jO]#}O!V#lO!X#{O(x#kO(y#kO~O!Y&ya![&ya!^&ya!_&ya!a&ya!b&ya!c&ya!e&ya!f&ya!g&ya!h&ya(v&ya)T&ya)U&ya)V&ya)W&ya)X&ya)Y&ya)k&ya!O&ya!W&ya(w&ya!U&yaQ&ya!d&ya~P#3zOl;lO!T$WO~Or!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O~PKkOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!|%RO~PKkO]&cO!V&bO!O#Qa!T#Qa!h#Qa#v#Qa)X#Qa)k#QaQ#Qa!d#Qa(w#Qa~Op&fO!T$WO~O!O*dO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h#iO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!O*dO~O]&cO!O*fO!V&bO~O]&YOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!V&WO&s#WO&t$wO)T&VO)V&ZO)W&ZO~O!OqXQqX!dqX!hqX)YqX)XqX~P#9{O!O*iO~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h*jO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!W)lX~P#3zO!W*lO!h*mO~O!W*lO!h*mO~P!(zO!W*lO~Op&fO!g$YO!h*nO)k$YO](uX!V(uX!W(uX!W*PX!X(uX!Y(uX![(uX!^(uX!_(uX!a(uX!b(uX!c(uX!e(uX!f(uX(v(uX(x(uX(y(uX)T(uX)U(uX)V(uX)W(uX)Y(uX~O!h(uX~P#=ZO!W*pO~Od$RO%Z*UO(z:vO~Ol;oO~Or!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!|%RO~PBUO]*wO!T*rO!V&bO!h*uO#v!eO)k*sO)X)rX~O!h*uO)X)rX~O)X*xO~Op&fO])fX!T)fX!V)fX!h)fX#v)fX)X)fX)k)fX!O)fXQ)fX!d)fX(w)fX~Op&fO~OP%oO(pQO]%ia!V%ia!X%ia!Y%ia![%ia!^%ia!_%ia!a%ia!b%ia!c%ia!e%ia!f%ia!h%ia(s%ia(v%ia(x%ia(y%ia)T%ia)U%ia)V%ia)W%ia)X%ia)Y%ia!g%ia)k%ia!O%ia!W%ia(w%ia!U%iaQ%ia!d%ia~Od$RO%Z$SO(z:sO~Ol:{O~O!TxO#v!eO)k%|O~Ol<`O&s#WO(s;kO~O$[+UO%a+VO~O!TxO#v!eO)X+WO)k+XO~OPmO]$eOa%QOl;OO!V$fO!X!XO!Y!WO!i!YO#V#QO$[+UO%`#ZO%a+ZO%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s$xO)T$kO)W$kO)Y!ZO)ZXO)icO)jdO~O!U+[O~P!QOa!TOl$oOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O{#RO}!_O!r!aO!s!aO!t!aO!u!aO!v!aO!x!cO#a+bO#b+cO#i+dO%f#UO%m#SO&n!RO&s#WO&t!TO(s$nO)QYO~OQ)mP!d)mP~P#GgO]&YOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!V&WO)T&VO)V&ZO)W&ZO~O!O#kX!T#kX#v#kX)X#kX)k#kXQ#kX!d#kX!h#kX)Y#kX!x#kX(w#kX~P#IkOPmO]$eOa%QOl;OOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!V$fO!W+jO!X!XO!Y!WO!i!YO#V#QO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s$xO)T+kO)W$kO)Y!ZO)ZXO)icO)jdO~O]&cO!V+lO~O]&YO!V&WO)QYO)T&VO)V&ZO)W&ZO)Y+oO!O)eP~P8zO]&YO!V&WO)T&VO)V&ZO)W&ZO~O!O#nX!T#nX#v#nX)X#nX)k#nXQ#nX!d#nX!h#nX)Y#nX!x#nX(w#nX~P#NeO!TxO])oX!V)oX~Or!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O#T+wO#p+xO(y+uO)V+sO)W+sO~O]#jX!T#jX!V#jX!O#jX#v#jX)X#jX)k#jXQ#jX!d#jX!h#jX)Y#jX!x#jX(w#jX~P$ xO#V+zO~Or!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!l+{O#T+wO#V+zO#p+xO(y+uO)V+{O)W+{O])gP!T)gP!V)gP#v)gP(w)gP)k)gP!O)gP!h)gP)X)gP~O!x)gPQ)gP!d)gP~P$#uOPmO]$eOa%QOl;OOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!V$fO!X!XO!Y!WO!i!YO#V#QO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s$xO)W$kO)Y!ZO)ZXO)icO)jdO~O!W,RO)T,SO~P$%pO)QYO)Y+oO!O)eP~P8zO]&cO!V&bO!O&[a!T&[a!h&[a#v&[a)X&[a)k&[aQ&[a!d&[a(w&[a~OPmO]$eOa!]Ol;QOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O{#RO!V$fO!X!XO!Y!WO!i!YO#V#QO#a#VO#b#TO%`#ZO%a#[O%b#YO%f#UO%m#SO%w$mO&n!RO&s#WO&t!TO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s;VO)T$kO)W$kO)Y!ZO)ZXO)icO)jdO~OQ({P!d({P~P$)YO]#}O!V#lO(x#kO(y#kO!X'Qa!Y'Qa!['Qa!^'Qa!_'Qa!a'Qa!b'Qa!c'Qa!e'Qa!f'Qa!h'Qa(v'Qa)T'Qa)U'Qa)V'Qa)W'Qa)X'Qa)Y'Qa!g'Qa)k'Qa!O'Qa!W'Qa(w'Qa!U'QaQ'Qa!d'Qa~O]#}O!V#lO!X#{O(x#kO(y#kO~P!B_O!T'eO#t!fO)QYO~P8zO!T'eO(s%nO)k,]O~O#x,bO~OQ)bX!d)bX!h)bX)Y)bX)k)bX!O)bX!T)bX(w)bX)X)bX~P:nO(w,fO(x,dO)Q$VX)X$VX~O(s,gO~O)QYO)X,jO~OPmO]$eOa!]Ol;POr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O{#RO}!_O!V$fO!X!XO!Y!WO!i!YO!r!aO!s!aO!t!aO!u!aO!v!aO!x!cO#V#QO#a#VO#b#TO%`#ZO%a#[O%b#YO%f#UO%m#SO%w$mO&n!RO&s#WO&t!TO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO)QYO)T$kO)W$kO)XiO)Y!ZO)ZXO)icO)jdO~O(s;WO~P$0kOPmO]$eOa%QOl;OO!TxO!V$fO!X!XO!Y!WO!i!YO#V#QO#v!eO$Z!vO$[!wO$a!iO$f!jO$h!kO$i!lO$l!mO$n!nO$p!oO$r!pO$t!qO$v!rO$x!sO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s:qO)QYO)T$kO)W$kO)XiO)Y!ZO)ZXO)icO)jdO~O$i,tO~OPmO]$eOa!]Ol;POr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O{#RO}!_O!V$fO!X!XO!Y!WO!i!YO!r!aO!s!aO!t!aO!u!aO!v!aO!x!cO#V#QO#a#VO#b#TO%O!uO%`#ZO%a#[O%b#YO%f#UO%m#SO%w$mO&n!RO&s#WO&t!TO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO)QYO)T$kO)W$kO)Y!ZO)ZXO)icO)jdO~O$|,zO(s;RO)X,xO~P$7UO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h#iO(v#gO)T#mO)U#oO)V#nO)W#pO)X,|O)Y#|O~P#3zO)X,|O~O)X,}O~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)X-OO)Y#|O~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)X-PO)Y#|O~P#3zOp&fO)QYO)k-RO~O)X-SO~Ol;bO(s;TO~O]-ZO!{!dO&s#WO&t$wO(s-VO)T-WO~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO(w-^O)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!TxO$a!iO$f!jO$h!kO$i!lO$l-cO$n!nO$p!oO$r!pO$t!qO$v!rO$x!sO%O!uO(s:rOd$Ya!o$Ya!{$Ya#i$Ya#p$Ya#t$Ya#v$Ya$S$Ya$U$Ya$Z$Ya$[$Ya$|$Ya%V$Ya%d$Ya%h$Ya%p$Ya%}$Ya(l$Ya)V$Ya!U$Ya$d$Ya~P$0kO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)X-dO)Y#|O~P#3zO!U-eO~P!QOl-hO!T'eO)k,]O~O)k-jO~O]&^a!X&^a!Y&^a![&^a!^&^a!_&^a!a&^a!b&^a!c&^a!e&^a!f&^a!h&^a(v&^a(x&^a(y&^a)U&^a)V&^a)W&^a)X&^a)Y&^a!g&^a)k&^a!O&^a!W&^a!T&^a#v&^a(w&^a!U&^aQ&^a!d&^a~O)T-nO!V&^a~P$DiO!O-nO~O!W-nO~O!V-oO)T&^a~P$DiO])OXd)OXr)OXs)OXt)OXu)OXv)OXw)OXx)OXy)OX})OX!V)OX!r)OX!s)OX!t)OX!u)OX!v)OX!x)OX!{)OX%w)OX&s)OX&t)OX(s)OX)T)OX)V)OX)W)OX~Ol;qO~P$GXO]&cO!V&bO)X-pO~Ol;gO!o-sO#V+zO#i-xO#t!fO$|,zO%d!zO%l-wO%p!|O%w!}O(s;XO)QYO~P!8jO!n-|O(s,gO~O)QYO)X.OO~OPmO]$eOa%QOl;OO!T.TO!V$fO!X!XO!Y!WO!i!YO#V.[O#a.ZO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s$xO(y.SO)T$kO)W$kO)X.QO)Y!ZO)ZXO)icO)jdO~O!U.YO~P$JiO])_Xd)_Xr)_Xs)_Xt)_Xu)_Xv)_Xw)_Xx)_Xy)_X})_X!T)_X!V)_X!l)_X!r)_X!s)_X!t)_X!u)_X!v)_X!x)_X!{)_X%w)_X&s)_X&t)_X(s)_X(w)_X)T)_X)V)_X)W)_X)X)_X!O)_X!h)_X)Y)_X!X)_X!Y)_X![)_X!^)_X!_)_X!a)_X!b)_X!c)_X!e)_X!f)_X(v)_X(x)_X(y)_X)U)_X!g)_X)k)_X!W)_XQ)_X!d)_X#T)_X#V)_X#p)_X#v)_Xa)_X{)_X!o)_X#a)_X#b)_X#i)_X#t)_X$|)_X%d)_X%f)_X%l)_X%m)_X%p)_X&n)_X)Q)_X!U)_X~Ol*]O~P$LsOl$oO!T(RO!l.aO(s$nO(w(QO)QYO~Op&fOl)_X~P$LsOl$oO!n.fO!o.fO(s$nO)QYO~Ol;hO!U.qO!n.sO!o.rO#i-xO$|!tO%O!uO%h!{O%l-wO%p!|O%w!}O(s;ZO)QYO~P!8jO!T(RO!l.aO(w(QO])PXd)PXl)PXr)PXs)PXt)PXu)PXv)PXw)PXx)PXy)PX})PX!V)PX!r)PX!s)PX!t)PX!u)PX!v)PX!x)PX!{)PX%w)PX&s)PX&t)PX(s)PX)T)PX)V)PX)W)PX~O)X)PX!O)PX!X)PX!Y)PX![)PX!^)PX!_)PX!a)PX!b)PX!c)PX!e)PX!f)PX!h)PX(v)PX(x)PX(y)PX)U)PX)Y)PX!g)PX)k)PX!W)PXQ)PX!d)PX!U)PX#v)PX~P%%lO!T(RO~O!T(RO(w(QO~O(s%nO!U*RP~O!T([O(w.xO]&lad&lal&lar&las&lat&lau&lav&law&lax&lay&la}&la!V&la!r&la!s&la!t&la!u&la!v&la!x&la!{&la%w&la&s&la&t&la(s&la)T&la)V&la)W&la)X&la!O&la!X&la!Y&la![&la!^&la!_&la!a&la!b&la!c&la!e&la!f&la!h&la(v&la(x&la(y&la)U&la)Y&la!g&la)k&la!W&laQ&la!d&la!U&la#v&la~Ol$oO!T([O(s$nO~O&s#WO&t$wO]&qad&qal&qar&qas&qat&qau&qav&qaw&qax&qay&qa}&qa!V&qa!r&qa!s&qa!t&qa!u&qa!v&qa!x&qa!{&qa%w&qa(s&qa)T&qa)V&qa)W&qa)X&qa!O&qa!T&qa!X&qa!Y&qa![&qa!^&qa!_&qa!a&qa!b&qa!c&qa!e&qa!f&qa!h&qa(v&qa(x&qa(y&qa)U&qa)Y&qa!g&qa)k&qa!W&qaQ&qa!d&qa(w&qa!U&qa#v&qa~O&t.}O~P!(zO!Y#qO![#rO!f#zO)T#mO!^'Va!_'Va!a'Va!b'Va!c'Va!e'Va!h'Va(v'Va)U'Va)V'Va)W'Va)X'Va)Y'Va!g'Va)k'Va!O'Va!W'Va(w'Va!U'VaQ'Va!d'Va~P#3zO!V'eX!X'eX!Y'eX!['eX!^'eX!_'eX!a'eX!b'eX!c'eX!e'eX!f'eX!h'eX(v'eX(x'eX(y'eX)T'eX)U'eX)V'eX)W'eX)Y'eX!O'eX~O]/PO)X'eX!g'eX)k'eX!W'eX(w'eX!U'eXQ'eX!d'eX~P%3PO!Y#qO![#rO!f#zO)T#mO!^'Xa!_'Xa!a'Xa!b'Xa!c'Xa!e'Xa!h'Xa(v'Xa)U'Xa)V'Xa)W'Xa)X'Xa)Y'Xa!g'Xa)k'Xa!O'Xa!W'Xa(w'Xa!U'XaQ'Xa!d'Xa~P#3zO]#}O!T$WO!V/QO&s#WO&t$wO~O!X'[a!Y'[a!['[a!^'[a!_'[a!a'[a!b'[a!c'[a!e'[a!f'[a!h'[a(v'[a(x'[a(y'[a)T'[a)U'[a)V'[a)W'[a)X'[a)Y'[a!g'[a)k'[a!O'[a!W'[a(w'[a!U'[aQ'[a!d'[a~P%6vO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!h'_a)X'_a!g'_a)k'_a!O'_a!W'_a(w'_a!U'_aQ'_a!d'_a~P#3zOPmO]$eOa%QOl;OO!V$fO!X!XO!Y!WO!i!YO#V#QO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s$xO)T$kO)W%]O)Y!ZO)ZXO)icO)jdO)k%[O~O!W/TO~P%:vOS(rOT(oO]#}O*X(qO~O]/WO'g/XO*X/UO~OS/]OT(oO*X/[O~O]#}O~Q'oa!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO(w/_O)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h#iO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O)X#Zi!O#Zi~P#3zO]cXlgXpcXpiX!VcX!XcX!YcX![cX!^cX!_cX!acX!bcX!ccX!ecX!fcX!gcX!hcX(vcX(xcX(ycX)TcX)UcX)VcX)WcX)XcX)YcX)kcX!OcX!WcX(wcX!TcX#vcX!UcXQcX!dcX~Od/aO%Z*UO(z/`O~Ol/bO~Ol/cO~Op&fO]bi!Vbi!Xbi!Ybi![bi!^bi!_bi!abi!bbi!cbi!ebi!fbi!gbi!hbi(vbi(xbi(ybi)Tbi)Ubi)Vbi)Wbi)Xbi)Ybi)kbi!Obi!Wbi(wbi!UbiQbi!dbi~O!W/eO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO![#rO)T#mO!Y&{i!^&{i!_&{i!a&{i!b&{i!c&{i!e&{i!f&{i!h&{i(v&{i)U&{i)V&{i)W&{i)X&{i)Y&{i!g&{i)k&{i!O&{i!W&{i(w&{i!U&{iQ&{i!d&{i~P#3zO!Y&{i![&{i!^&{i!_&{i!a&{i!b&{i!c&{i!e&{i!f&{i!h&{i(v&{i)T&{i)U&{i)V&{i)W&{i)X&{i)Y&{i!g&{i)k&{i!O&{i!W&{i(w&{i!U&{iQ&{i!d&{i~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO)T#mO)W#pO!h&{i(v&{i)U&{i)V&{i)X&{i)Y&{i!g&{i)k&{i!O&{i!W&{i(w&{i!U&{iQ&{i!d&{i~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO)T#mO)V#nO)W#pO!h&{i(v&{i)U&{i)X&{i)Y&{i!g&{i)k&{i!O&{i!W&{i(w&{i!U&{iQ&{i!d&{i~P#3zO!Y#qO![#rO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO)T#mO)W#pO!^&{i!h&{i(v&{i)U&{i)V&{i)X&{i)Y&{i!g&{i)k&{i!O&{i!W&{i(w&{i!U&{iQ&{i!d&{i~P#3zO!Y#qO![#rO!a#xO!b#yO!c#yO!e#yO!f#zO)T#mO)W#pO!^&{i!_&{i!h&{i(v&{i)U&{i)V&{i)X&{i)Y&{i!g&{i)k&{i!O&{i!W&{i(w&{i!U&{iQ&{i!d&{i~P#3zO!Y#qO![#rO!a#xO!b#yO!c#yO!e#yO!f#zO)T#mO!^&{i!_&{i!h&{i(v&{i)U&{i)V&{i)W&{i)X&{i)Y&{i!g&{i)k&{i!O&{i!W&{i(w&{i!U&{iQ&{i!d&{i~P#3zO!Y#qO![#rO!b#yO!c#yO!e#yO!f#zO)T#mO!^&{i!_&{i!a&{i!h&{i(v&{i)U&{i)V&{i)W&{i)X&{i)Y&{i!g&{i)k&{i!O&{i!W&{i(w&{i!U&{iQ&{i!d&{i~P#3zO!Y#qO![#rO!f#zO)T#mO!^&{i!_&{i!a&{i!b&{i!c&{i!e&{i!h&{i(v&{i)U&{i)V&{i)W&{i)X&{i)Y&{i!g&{i)k&{i!O&{i!W&{i(w&{i!U&{iQ&{i!d&{i~P#3zO!Y#qO![#rO)T#mO!^&{i!_&{i!a&{i!b&{i!c&{i!e&{i!f&{i!h&{i(v&{i)U&{i)V&{i)W&{i)X&{i)Y&{i!g&{i)k&{i!O&{i!W&{i(w&{i!U&{iQ&{i!d&{i~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO)T#mO)U#oO)V#nO)W#pO!h&{i(v&{i)X&{i)Y&{i!g&{i)k&{i!O&{i!W&{i(w&{i!U&{iQ&{i!d&{i~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h/fO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!O(tX~P#3zO!h/fO!O(tX~O!O/hO~O]%Yap%Ya!X%Ya!Y%Ya![%Ya!^%Ya!_%Ya!a%Ya!b%Ya!c%Ya!e%Ya!f%Ya!h%Ya(v%Ya(x%Ya(y%Ya)U%Ya)V%Ya)W%Ya)X%Ya)Y%Ya!g%Ya)k%Ya!O%Ya!W%Ya!T%Ya#v%Ya(w%Ya!U%YaQ%Ya!d%Ya~O)T/iO!V%Ya~P&,hO!O/iO~O!W/iO~O!V/jO)T%Ya~P&,hO!X'[i!Y'[i!['[i!^'[i!_'[i!a'[i!b'[i!c'[i!e'[i!f'[i!h'[i(v'[i(x'[i(y'[i)T'[i)U'[i)V'[i)W'[i)X'[i)Y'[i!g'[i)k'[i!O'[i!W'[i(w'[i!U'[iQ'[i!d'[i~P%6vO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!h'_i)X'_i!g'_i)k'_i!O'_i!W'_i(w'_i!U'_iQ'_i!d'_i~P#3zO!W/oO~P%:vO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h/qO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!U)sX~P#3zO(s/tO~O!V/vO(x)tO)k/xO~O!h/qO!U)sX~O!U/yO~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO)T#mO)U#oO)V#nO)W#pO)Y#|O!h_i(v_i)X_i!g_i)k_i!O_i!W_i(w_i!U_iQ_i!d_i~P#3zO!R/zO~Ol)|O]!Qa!h!Qa)Y!Qa)^!Qa~OP0SO]0ROl0SO!R0SO!T0PO!V0QO!X0SO!Y0SO![0SO!^0SO!_0SO!a0SO!b0SO!c0SO!e0SO!f0SO!g0SO!h0SO!i0SO(pQO(w0SO(x0SO(y0SO)T/|O)U/}O)V/}O)W0OO)X0SO)Y0SO)ZXO~O!O0VO~P&7QO!R$[O~O!h*PO)Y)Ra)^)Ra~O)^0ZO~O])eO!V)fO!X)cO!g)cO%[)cO%])cO%^)cO%_)cO%`)gO%a)gO%b)cO(y)dO)k)cO)y)hO~Od)pO%Z*UO(z$OO~O)X0]O~O]nXdnXlmXpnXrnXsnXtnXunXvnXwnXxnXynX}nX!VnX!rnX!snX!tnX!unX!vnX!xnX!{nX%wnX&snX&tnX(snX)TnX)VnX)WnX!TnX!hnX)YnX!OnXQnX!dnX~O!lnX(wnX)XnX!XnX!YnX![nX!^nX!_nX!anX!bnX!cnX!enX!fnX(vnX(xnX(ynX)UnX!gnX)knX!WnX!UnX#vnX#TnX#VnX#pnXanX{nX!onX#anX#bnX#inX#tnX$|nX%dnX%fnX%lnX%mnX%pnX&nnX)QnX~P&:|Or!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O}!_O!r!aO!s!aO!t!aO!u!aO!v!aO!x!cO~O])bid)bil)bi!V)bi!{)bi%w)bi(s)bi)T)bi)V)bi)W)biQ)bi!d)bi!h)bi)Y)bi)k)bi!O)bi!T)bi&s)bi(w)bi)X)bi~P&?zO]&cO!V&bO!O#Qi!T#Qi!h#Qi#v#Qi)X#Qi)k#QiQ#Qi!d#Qi(w#Qi~O!OqaQqa!dqa!hqa)Yqa)Xqa~P#9{O!OqaQqa!dqa!hqa)Yqa)Xqa~P#IkO]&cO!V+lO!OqaQqa!dqa!hqa)Yqa)Xqa~O!h*jO!W)la~O!h*nO!W*Pa~OPmO]eOa!]Od!POlTOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O{#RO}!_O!X!XO!Y!WO!i!YO!opO!r!`O!s!aO!t!aO!u!bO!v!aO!x!cO!{!dO#V#QO#a#VO#b#TO#i#OO#p!xO#t!fO#v!eO$S!gO$U!hO$Z!vO$[!wO$a!iO$f!jO$h!kO$i!lO$l!mO$n!nO$p!oO$r!pO$t!qO$v!rO$x!sO$|!tO%O!uO%V!yO%`#ZO%a#[O%b#YO%d!zO%f#UO%h!{O%m#SO%p!|O%w!}O%}#PO&n!RO&s#WO&t!TO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(sRO)QYO)TaO)V|O)W{O)XiO)Y!ZO)ZXO)icO)jdO~O!T*rO!U&TO!V0kO(x)tO~P&D|O!h*uO)X)ra~OPmO]$eOa!]Ol;QO{#RO!T$WO!V$fO!X!XO!Y!WO!i!YO#V#QO#a#VO#b#TO%`#ZO%a#[O%b#YO%f#UO%m#SO%w$mO&n!RO&s#WO&t!TO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s;YO)QYO)T$kO)W$kO)Y0qO)ZXO)icO)jdO!O(tP!O)eP~P&?zO!h*nO!W*PX~O]#}O!T$WO~O!h0vO!T){X#v){X)k){X~O)X0xO~O)X0yO~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)X0{O)Y#|O~P#3zO)X0yO~P!?WO]1VOd!POl%bO!V1TO!{!dO%w$mO(s$xO)T0}O)Y1QO~O)V1RO)W1RO)k1OOQ#PX!d#PX!h#PX!O#PX~P' kO!h1WOQ)mX!d)mX~OQ1YO!d1YO~O)Y1]O)k1[OQ#`X!d#`X!h#`X~P!<[O)Y1]O)k1[OQ#`X!d#`X!h#`X~P!;bOp&UO~O!O#ka!T#ka#v#ka)X#ka)k#kaQ#ka!d#ka!h#ka)Y#ka!x#ka(w#ka~P#IkO]&cO!V+lO!O#ka!T#ka#v#ka)X#ka)k#kaQ#ka!d#ka!h#ka)Y#ka!x#ka(w#ka~O!W1bO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!W1bO)T1dO~P$%pO!W1bO~P!(zO]#ja!T#ja!V#ja!O#ja#v#ja)X#ja)k#jaQ#ja!d#ja!h#ja)Y#ja!x#ja(w#ja~P$ xO]&cO!O1hO!V+lO~O!h1iO!O)eX~O!O1kO~O]&cO!V+lO!O#na!T#na#v#na)X#na)k#naQ#na!d#na!h#na)Y#na!x#na(w#na~O]1oOr#SXs#SXt#SXu#SXv#SXw#SXx#SXy#SX!T#SX!V#SX#T#SX#p#SX(y#SX)V#SX)W#SX!l#SX!x#SX#V#SX#v#SX(w#SX)k#SX!O#SX!h#SX)X#SXQ#SX!d#SX)Y#SX~O]1pO~O]1sOl$oO!V$fO#V#QO(s$nO)icO)jdO~Or!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!l+{O#T+wO#V+zO#p+xO(y+uO)V+{O)W+{O~O])gX!T)gX!V)gX!x)gX#v)gX(w)gX)k)gX!O)gX!h)gX)X)gXQ)gX!d)gX~P',UO!x!cO]#Ri!T#Ri!V#Ri#v#Ri(w#Ri)k#Ri!O#Ri!h#Ri)X#RiQ#Ri!d#Ri~O!W1{O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!W1{O)T1}O~P$%pO!W1{O~P!(zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|OQ*SX!d*SX!h*SX~P#3zO)Y2OOQ(|X!d(|X!h(|X~O!h2POQ({X!d({X~OQ2RO!d2RO~O!O2SO~O#t$lO)QYO~P8zOl-hO!T'eO)k2WO~O!O2XO~O#x,bOP#ui]#uia#uid#uil#uir#uis#uit#uiu#uiv#uiw#uix#uiy#ui{#ui}#ui!T#ui!V#ui!X#ui!Y#ui!i#ui!o#ui!r#ui!s#ui!t#ui!u#ui!v#ui!x#ui!{#ui#V#ui#a#ui#b#ui#i#ui#p#ui#t#ui#v#ui$S#ui$U#ui$Z#ui$[#ui$a#ui$f#ui$h#ui$i#ui$l#ui$n#ui$p#ui$r#ui$t#ui$v#ui$x#ui$|#ui%O#ui%V#ui%`#ui%a#ui%b#ui%d#ui%f#ui%h#ui%m#ui%p#ui%w#ui%}#ui&n#ui&s#ui&t#ui'R#ui'S#ui'W#ui'Z#ui'b#ui'c#ui(l#ui(p#ui(s#ui)Q#ui)T#ui)V#ui)W#ui)X#ui)Y#ui)Z#ui)i#ui)j#ui!U#ui$d#ui!n#ui%l#ui~O]&cO~O]&cO!TxO!V&bO#v!eO~O(w2^O(x,dO)Q$Va)X$Va~O)QYO)X2`O~O!O2aO~P,]O!O2aO)X#jO~O!O2aO~O$d2fOP$`i]$`ia$`id$`il$`ir$`is$`it$`iu$`iv$`iw$`ix$`iy$`i{$`i}$`i!T$`i!V$`i!X$`i!Y$`i!i$`i!o$`i!r$`i!s$`i!t$`i!u$`i!v$`i!x$`i!{$`i#V$`i#a$`i#b$`i#i$`i#p$`i#t$`i#v$`i$S$`i$U$`i$Z$`i$[$`i$a$`i$f$`i$h$`i$i$`i$l$`i$n$`i$p$`i$r$`i$t$`i$v$`i$x$`i$|$`i%O$`i%V$`i%`$`i%a$`i%b$`i%d$`i%f$`i%h$`i%m$`i%p$`i%w$`i%}$`i&n$`i&s$`i&t$`i'R$`i'S$`i'W$`i'Z$`i'b$`i'c$`i(l$`i(p$`i(s$`i)Q$`i)T$`i)V$`i)W$`i)X$`i)Y$`i)Z$`i)i$`i)j$`i!U$`i~O]1sO~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h#iO(v#gO)T#mO)U#oO)V#nO)W#pO)X2iO)Y#|O~P#3zOPmO]$eOa!]Ol;PO{#RO!V$fO!X!XO!Y!WO!i!YO#V#QO#a#VO#b#TO%`#ZO%a#[O%b#YO%f#UO%m#SO%w$mO&n!RO&s#WO&t!TO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s;RO)T$kO)W$kO)X2lO)Y!ZO)ZXO)icO)jdO~P&?zO)X2iO~O(s-VO~O)QYO)k2oO~O)X2qO~O]-ZOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!{!dO!|%RO(s-VO)T-WO~O)T2vO~O]&cO!V2xO!h2yO)X)vX~O]-ZO!{!dO(s-VO)T-WO~O)X2|O~O!TxO$a!iO$f!jO$h!kO$i!lO$l-cO$n!nO$p!oO$r!pO$t!qO$v!rO$x!sO%O!uO(s:rOd$Yi!o$Yi!{$Yi#i$Yi#p$Yi#t$Yi#v$Yi$S$Yi$U$Yi$Z$Yi$[$Yi$|$Yi%V$Yi%d$Yi%h$Yi%p$Yi%}$Yi(l$Yi)V$Yi!U$Yi$d$Yi~P$0kOl;PO(s:rO~P0zO]3QO~O!U3RO~P!QO)X2VO~O!u3TO(s%nO~O!O3WO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h3XO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!O3YO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO]&cO!V+lO!T%vi#v%vi)X%vi)k%vi~O!W3ZO~Ol:}O)X)OX~P$GXOa!TOl$oO{3aO#a#VO#b3`O#t!fO%f#UO%m3bO&n!RO&s#WO&t!TO(s$nO)QYO~P&?zOl;gO!o-sO#i-xO#t!fO$|,zO%d!zO%l-wO%p!|O%w!}O(s;XO)QYO~P!8jO]&cO!V&bO)X3dO~O)X3eO~O)QYO)X3eO~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h#iO(v#gO)T#mO)U#oO)V#nO)W#pO)X3fO)Y#|O~P#3zO)X3fO~O)X3iO~O!U3kO~P$JiOl$oO(s$nO~O]3mO!T'zO~P'+pO!T(RO!l3pO(w(QO])Pad)Pal)Par)Pas)Pat)Pau)Pav)Paw)Pax)Pay)Pa})Pa!V)Pa!r)Pa!s)Pa!t)Pa!u)Pa!v)Pa!x)Pa!{)Pa%w)Pa&s)Pa&t)Pa(s)Pa)T)Pa)V)Pa)W)Pa)X)Pa!O)Pa!X)Pa!Y)Pa![)Pa!^)Pa!_)Pa!a)Pa!b)Pa!c)Pa!e)Pa!f)Pa!h)Pa(v)Pa(x)Pa(y)Pa)U)Pa)Y)Pa!g)Pa)k)Pa!W)PaQ)Pa!d)Pa!U)Pa#v)Pa~Ol$oO!n.fO!o.fO(s$nO~O!h3tO)Y3vO!T)`X~O!o3xO)QYO~P8zO)X3yO~PGVO]4OOl(|O!T$WO!{!dO%w$mO&s#WO(s({O(w4SO)T3{O)V4PO)W4PO~O)X4TO)k4VO~P(&sOl;hO!U4XO!n.sO!o.rO#i-xO$|!tO%O!uO%h!{O%l-wO%p!|O%w!}O(s;ZO)QYO~P!8jOl;hO%w!}O(s;ZO~P!8jO(w4YO~Ol$oO!T(RO(s$nO(w(QO)QYO~O!l3pO~P()RO)k4[O!U&pX!h&pX~O!h4]O!U*RX~O!U4_O~Oa4aOl$oO&n!RO(s$nO~O!T([O]&lid&lil&lir&lis&lit&liu&liv&liw&lix&liy&li}&li!V&li!r&li!s&li!t&li!u&li!v&li!x&li!{&li%w&li&s&li&t&li(s&li)T&li)V&li)W&li)X&li!O&li!X&li!Y&li![&li!^&li!_&li!a&li!b&li!c&li!e&li!f&li!h&li(v&li(x&li(y&li)U&li)Y&li!g&li)k&li!W&liQ&li!d&li!U&li#v&li~O(w&li~P(*cO(w.xO~P(*cO!O4dO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!O4dO~O!O4eO~O]#}O!T$WO!V'[i!X'[i!Y'[i!['[i!^'[i!_'[i!a'[i!b'[i!c'[i!e'[i!f'[i!h'[i(v'[i(x'[i(y'[i)T'[i)U'[i)V'[i)W'[i)X'[i)Y'[i!g'[i)k'[i!O'[i!W'[i(w'[i!U'[iQ'[i!d'[i~OPmOa%QOl;OO!X!XO!Y!WO!i!YO#V#QO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s$xO)Y!ZO)ZXO)icO)jdO]#]ap#]a!T#]a!V#]a)T#]a)V#]a)W#]a~O(s%nO)Y4jO!O*ZP~O*X4iO~O'g4lO*X4iO~O*X4mO~OlmXpnXp&xX~Od4oO%Z*UO(z/`O~Od4oO%Z*UO(z4pO~O!h/fO!O(ta~O!W4tO~O]&cO!V+lO!T%vq#v%vq)X%vq)k%vq~O]#}O!T$WO!X'[q!Y'[q!['[q!^'[q!_'[q!a'[q!b'[q!c'[q!e'[q!f'[q!h'[q(v'[q(x'[q(y'[q)T'[q)U'[q)V'[q)W'[q)X'[q)Y'[q!g'[q)k'[q!O'[q!W'[q(w'[q!U'[qQ'[q!d'[q~O!V'[q~P(5pO!V/QO&s#WO&t$wO~P(5pO!T$WO!V)sO(x)tO!U(VX!h(VX~P!JwO!h/qO!U)sa~O!W4|O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h*jO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!U5QO~P&7QO!W5QO~P&7QO!O5QO~P&7QO!O5VO~P&7QO]5WO!h'va)Y'va)^'va~O!h*PO)Y)Ri)^)Ri~O]&cO!V&bO!O#Qq!T#Qq!h#Qq#v#Qq)X#Qq)k#QqQ#Qq!d#Qq(w#Qq~O!OqiQqi!dqi!hqi)Yqi)Xqi~P#IkO]&cO!V+lO!OqiQqi!dqi!hqi)Yqi)Xqi~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!h'Uq)X'Uq!g'Uq)k'Uq!O'Uq!W'Uq(w'Uq!U'UqQ'Uq!d'Uq~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!W'}a!h'}a~P#3zO!W5]O~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h5^O(v#gO)T#mO)U#oO)V#nO)W#pO)X#jO)Y#|O!U)sX~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!h#{i)X#{i~P#3zO]*wO!T$WO!V&bO)k*sO!h(Wa)X(Wa~O!h1iO]'eX!O)eX~P%3PO)Y5`O!T%ra!h%ra#v%ra)k%ra~O!h0vO!T){a#v){a)k){a~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)X5cO)Y#|O~P#3zO]1VOd!POl;`O!V1TO!{!dO%w$mO(s$xO)T;|O)V5eO)W5eO~OQ#Pa!d#Pa!h#Pa!O#Pa~P(DxO]1VOd!POr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!V1TO!{!dO!|%RO%w$mO(s$xOQ#kX!d#kX!h#kX!O#kX~Ol%bO)T0}O)V;}O)W;}O~P(EzO]&cOQ#Pa!d#Pa!h#Pa!O#Pa~O!V&bO)k5iO~P(GiO(s%nOQ#dX!d#dX!h#dX!O#dX~O)V;}O)W;}OQ#nX!d#nX!h#nX!O#nX~P' kO!V+lO~P(GiO]1VOa!TOd!POl;aO{#RO!V1TO!{!dO#a#VO#b#TO%f#UO%m#SO%w$mO&n!RO&s#WO&t!TO(s;UO)QYO)T;|O)V5eO)W5eO)Y+oO!O)eP~P&?zO!h1WOQ)ma!d)ma~Op&fO)k5nOQ#`al)OX!d#`a!h#`a)Y)OX~P$GXO(s-VOQ#ga!d#ga!h#ga~Op&fO)k5nOQ#`a])_Xd)_Xl)_Xr)_Xs)_Xt)_Xu)_Xv)_Xw)_Xx)_Xy)_X})_X!T)_X!V)_X!d#`a!h#`a!l)_X!r)_X!s)_X!t)_X!u)_X!v)_X!x)_X!{)_X%w)_X&s)_X&t)_X(s)_X(w)_X)T)_X)V)_X)W)_X)Y)_X~O#a5qO#b5qO~O]&cO!V+lO!O#ki!T#ki#v#ki)X#ki)k#kiQ#ki!d#ki!h#ki)Y#ki!x#ki(w#ki~O!W5sO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!W5sO~P!(zO!W5sO)T5uO~P$%pO]#ji!T#ji!V#ji!O#ji#v#ji)X#ji)k#jiQ#ji!d#ji!h#ji)Y#ji!x#ji(w#ji~P$ xO)QYO)Y5wO~P8zO!h1iO!O)ea~O&s#WO&t$wO!T#qa!x#qa#v#qa(w#qa)k#qa!O#qa!h#qa)X#qaQ#qa!d#qa)Y#qa~P#NeO!O5|O~P!(zO!O)pP~P!4xO)U6SO)V6QO]#Ua!T#Ua!V#Ua)T#Ua)W#Uar#Uas#Uat#Uau#Uav#Uaw#Uax#Uay#Ua!l#Ua!x#Ua#T#Ua#V#Ua#p#Ua#v#Ua(w#Ua(y#Ua)k#Uaa#Uad#Ual#Ua{#Ua}#Ua!o#Ua!r#Ua!s#Ua!t#Ua!u#Ua!v#Ua!{#Ua#a#Ua#b#Ua#i#Ua#t#Ua$|#Ua%d#Ua%f#Ua%l#Ua%m#Ua%p#Ua%w#Ua&n#Ua&s#Ua&t#Ua(s#Ua)Q#Ua)X#Ua!O#Ua!h#UaQ#Ua!d#Ua~O!x!cO]#Rq!T#Rq!V#Rq#v#Rq(w#Rq)k#Rq!O#Rq!h#Rq)X#RqQ#Rq!d#Rq~O!W6XO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!W6XO~P!(zO!h2POQ({a!d({a~O)X6^O~Ol-hO!T'eO)k6_O~O]*wO!T$WO!V&bO!h*uO)X)rX~O)k6cO~P)+qO!O6eO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h#iO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!O6eO~O$d6gOP$`q]$`qa$`qd$`ql$`qr$`qs$`qt$`qu$`qv$`qw$`qx$`qy$`q{$`q}$`q!T$`q!V$`q!X$`q!Y$`q!i$`q!o$`q!r$`q!s$`q!t$`q!u$`q!v$`q!x$`q!{$`q#V$`q#a$`q#b$`q#i$`q#p$`q#t$`q#v$`q$S$`q$U$`q$Z$`q$[$`q$a$`q$f$`q$h$`q$i$`q$l$`q$n$`q$p$`q$r$`q$t$`q$v$`q$x$`q$|$`q%O$`q%V$`q%`$`q%a$`q%b$`q%d$`q%f$`q%h$`q%m$`q%p$`q%w$`q%}$`q&n$`q&s$`q&t$`q'R$`q'S$`q'W$`q'Z$`q'b$`q'c$`q(l$`q(p$`q(s$`q)Q$`q)T$`q)V$`q)W$`q)X$`q)Y$`q)Z$`q)i$`q)j$`q!U$`q~O)X6hO~OPmO]$eOa!]Ol;PO{#RO!V$fO!X!XO!Y!WO!i!YO#V#QO#a#VO#b#TO%`#ZO%a#[O%b#YO%f#UO%m#SO%w$mO&n!RO&s#WO&t!TO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s;RO)T$kO)W$kO)X6jO)Y!ZO)ZXO)icO)jdO~P&?zO(w6lO)k*sO~P)+qO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)X6jO)Y#|O~P#3zO!O6nO~P!(zO)X6rO~O)X6sO~O]-ZOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!{!dO(s-VO)T-WO~O]&cO!V2xO!h%Pa)X%Pa!O%Pa~O!W6yO)T6zO~P$%pO!h2yO)X)va~O]&cO!O6}O!V2xO~O!TxO$a!iO$f!jO$h!kO$i!lO$l-cO$n!nO$p!oO$r!pO$t!qO$v!rO$x!sO%O!uO(s:rOd$Yq!o$Yq!{$Yq#i$Yq#p$Yq#t$Yq#v$Yq$S$Yq$U$Yq$Z$Yq$[$Yq$|$Yq%V$Yq%d$Yq%h$Yq%p$Yq%}$Yq(l$Yq)V$Yq!U$Yq$d$Yq~P$0kOPmO]$eOa!]Ol;PO{#RO!V$fO!X!XO!Y!WO!i!YO#V#QO#a#VO#b#TO%`#ZO%a#[O%b#YO%f#UO%m#SO%w$mO&n!RO&s#WO&t!TO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s;RO)QYO)T$kO)W$kO)X7PO)Y!ZO)ZXO)icO)jdO~P&?zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)X7SO)Y#|O~P#3zO)X7TO~OP7UO(pQO~Ol*]O)X)_X~P$GXOp&fOl)OX)X)_X~P$GXO)X7WO~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O)X&Ta~P#3zO!U7YO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO)X7ZO~OPmO]$eOa!]Ol;QO{#RO!V$fO!X!XO!Y!WO!i!YO#V#QO#a#VO#b#TO%`#ZO%a#[O%b#YO%f#UO%m#SO%w$mO&n!RO&s#WO&t!TO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s;YO)QYO)T$kO)W$kO)Y0qO)ZXO)icO)jdO!O)eP~P&?zO!h3tO)Y7_O!T)`a~O!h3tO!T)`a~O)X7dO)k7fO~P(&sO)X7hO~PGVO]4OOl(|Or!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!{!dO!|%RO%w$mO&s#WO(s({O)T3{O)V4PO)W4PO~O)T7lO~O]&cO!T*rO!V7nO!h7oO#v!eO(w4SO~O)X7dO)k7qO~P)GVO]4OOl(|O!{!dO%w$mO&s#WO(s({O)T3{O)V4PO)W4PO~Op&fO])dX!T)dX!V)dX!h)dX#v)dX(w)dX)X)dX)k)dX!O)dX~O)X7dO~O!T(RO!l7wO(w(QO])Pid)Pil)Pir)Pis)Pit)Piu)Piv)Piw)Pix)Piy)Pi})Pi!V)Pi!r)Pi!s)Pi!t)Pi!u)Pi!v)Pi!x)Pi!{)Pi%w)Pi&s)Pi&t)Pi(s)Pi)T)Pi)V)Pi)W)Pi)X)Pi!O)Pi!X)Pi!Y)Pi![)Pi!^)Pi!_)Pi!a)Pi!b)Pi!c)Pi!e)Pi!f)Pi!h)Pi(v)Pi(x)Pi(y)Pi)U)Pi)Y)Pi!g)Pi)k)Pi!W)PiQ)Pi!d)Pi!U)Pi#v)Pi~O(s%nO!U(gX!h(gX~O!h4]O!U*Ra~Op&fO]*Qad*Qal*Qar*Qas*Qat*Qau*Qav*Qaw*Qax*Qay*Qa}*Qa!T*Qa!V*Qa!r*Qa!s*Qa!t*Qa!u*Qa!v*Qa!x*Qa!{*Qa%w*Qa&s*Qa&t*Qa(s*Qa)T*Qa)V*Qa)W*Qa)X*Qa!O*Qa!X*Qa!Y*Qa![*Qa!^*Qa!_*Qa!a*Qa!b*Qa!c*Qa!e*Qa!f*Qa!h*Qa(v*Qa(x*Qa(y*Qa)U*Qa)Y*Qa!g*Qa)k*Qa!W*QaQ*Qa!d*Qa(w*Qa!U*Qa#v*Qa~O!T([O]&lqd&lql&lqr&lqs&lqt&lqu&lqv&lqw&lqx&lqy&lq}&lq!V&lq!r&lq!s&lq!t&lq!u&lq!v&lq!x&lq!{&lq%w&lq&s&lq&t&lq(s&lq)T&lq)V&lq)W&lq)X&lq!O&lq!X&lq!Y&lq![&lq!^&lq!_&lq!a&lq!b&lq!c&lq!e&lq!f&lq!h&lq(v&lq(x&lq(y&lq)U&lq)Y&lq!g&lq)k&lq!W&lqQ&lq!d&lq(w&lq!U&lq#v&lq~OPmOa%QOl;OO!T$WO!i!YO#V#QO%`#ZO%a#[O%b#YO%w$mO'R!WO'S!WO'W#XO'Z![O'b![O'c![O(pQO(s$xO)ZXO)icO)jdO~O]*Vi!V*Vi!X*Vi!Y*Vi![*Vi!^*Vi!_*Vi!a*Vi!b*Vi!c*Vi!e*Vi!f*Vi!h*Vi(v*Vi(x*Vi(y*Vi)T*Vi)U*Vi)V*Vi)W*Vi)X*Vi)Y*Vi!g*Vi)k*Vi!O*Vi!W*Vi(w*Vi!U*ViQ*Vi!d*Vi~P*&fO!O7|O~O!W7}O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!h'_q)X'_q!g'_q)k'_q!O'_q!W'_q(w'_q!U'_qQ'_q!d'_q~P#3zO!h8OO!O*ZX~O!O8QO~O*X8RO~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!h^y)X^y!g^y)k^y!O^y!W^y(w^y!U^yQ^y!d^y~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!O(ia!h(ia~P#3zO]#}O!T$WO!V'[y!X'[y!Y'[y!['[y!^'[y!_'[y!a'[y!b'[y!c'[y!e'[y!f'[y!h'[y(v'[y(x'[y(y'[y)T'[y)U'[y)V'[y)W'[y)X'[y)Y'[y!g'[y)k'[y!O'[y!W'[y(w'[y!U'[yQ'[y!d'[y~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!h'_y)X'_y!g'_y)k'_y!O'_y!W'_y(w'_y!U'_yQ'_y!d'_y~P#3zO]&cO!V+lO!T%vy#v%vy)X%vy)k%vy~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!U(Va!h(Va~P#3zO!W4|O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!U#}i!h#}i~P#3zO!U8TO~P&7QO!W8TO~P&7QO!O8TO~P&7QO!O8VO~P&7QO]&cO!V&bO!O#Qy!T#Qy!h#Qy#v#Qy)X#Qy)k#QyQ#Qy!d#Qy(w#Qy~O]&cO!V+lO!OqqQqq!dqq!hqq)Yqq)Xqq~O]&cOQ#Pi!d#Pi!h#Pi!O#Pi~O!V+lO~P*9xOQ#nX!d#nX!h#nX!O#nX~P(DxO!V&bO~P*9xOQ(PX](PXd'rXl'rXr(PXs(PXt(PXu(PXv(PXw(PXx(PXy(PX!V(PX!d(PX!h(PX!{'rX%w'rX(s'rX)T(PX)V(PX)W(PX!O(PX~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|OQ#_i!d#_i!h#_i!O#_i~P#3zO&s#WO&t$wOQ#fi!d#fi!h#fi~O(s-VO)Y1]O)k1[OQ#`X!d#`X!h#`X~O!W8[O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!W8[O~P!(zO!T#qi!x#qi#v#qi(w#qi)k#qi!O#qi!h#qi)X#qiQ#qi!d#qi)Y#qi~O]&cO!V+lO~P*?tO]&YO!V&WO&s#WO&t$wO)T&VO)V&ZO)W&ZO~P*?tO!O8^O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!h8_O!O)pX~O!O8aO~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|OQ*UX!d*UX!h*UX~P#3zO)Y8dOQ*TX!d*TX!h*TX~O)X8fO~O!O$ci!h#{a)X#{a~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)X8iO)Y#|O~P#3zO!O8kO~P!(zO!O8kO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h#iO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!O8kO~O]&cO!V&bO(w8qO~O)X8rO~O]&cO!V2xO!h%Pi)X%Pi!O%Pi~O!W8uO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!W8uO)T8wO~P$%pO!W8uO~P!(zO]&cO!V2xO!h(Za)X(Za~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h#iO(v#gO)T#mO)U#oO)V#nO)W#pO)X8xO)Y#|O~P#3zO)X2lO~P!(zO)X8xO~OP%oO!O8yO(pQO~O!O8yO~O)X8zO~P%%lO#T8}O(y.SO)X8{O~O!h3tO!T)`i~O)Y9RO!T'xa!h'xa~O)X9TO)k9VO~P)GVO)X9TO~O)X9TO)k9ZO~P(&sOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O~P)GuO]&cO!V7nO!T!ya!h!ya#v!ya(w!ya)X!ya)k!ya!O!ya~O!W9bO)T9cO~P$%pO!T$WO!h7oO(w4SO)X9TO)k9ZO~O!T$WO~P#EfO]&cO!O9fO!V7nO~O]&cO!V7nO!T&ba!h&ba#v&ba(w&ba)X&ba)k&ba!O&ba~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O)X&ca~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)X9TO)Y#|O~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!U&pi!h&pi~P#3zO!V/QO]'^i!T'^i!X'^i!Y'^i!['^i!^'^i!_'^i!a'^i!b'^i!c'^i!e'^i!f'^i!h'^i(v'^i(x'^i(y'^i)T'^i)U'^i)V'^i)W'^i)X'^i)Y'^i!g'^i)k'^i!O'^i!W'^i(w'^i!U'^iQ'^i!d'^i~O(s%nO)Y9iO~O!h8OO!O*Za~O!O9kO~P&7QO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h#iO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!U(Va)X#Zi~P#3zO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|OQ#_q!d#_q!h#_q!O#_q~P#3zO&s#WO&t$wOQ#fq!d#fq!h#fq~O)k5nOQ#`a!d#`a!h#`a~O]&cO!V+lO!T#qq!x#qq#v#qq(w#qq)k#qq!O#qq!h#qq)X#qqQ#qq!d#qq)Y#qq~O!h8_O!O)pa~O)V6QO]&Wi!T&Wi!V&Wi)T&Wi)U&Wi)W&Wir&Wis&Wit&Wiu&Wiv&Wiw&Wix&Wiy&Wi!l&Wi!x&Wi#T&Wi#V&Wi#p&Wi#v&Wi(w&Wi(y&Wi)k&Wia&Wid&Wil&Wi{&Wi}&Wi!o&Wi!r&Wi!s&Wi!t&Wi!u&Wi!v&Wi!{&Wi#a&Wi#b&Wi#i&Wi#t&Wi$|&Wi%d&Wi%f&Wi%l&Wi%m&Wi%p&Wi%w&Wi&n&Wi&s&Wi&t&Wi(s&Wi)Q&Wi)X&Wi!O&Wi!h&WiQ&Wi!d&Wi~O)X9nO~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O!O$cq!h#{i)X#{i~P#3zO!O9pO~P!(zO!O9pO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h#iO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!O9pO~O]&cO!V&bO(w9sO~O!O9tO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!O9tO~O]&cO!V2xO!h%Pq)X%Pq!O%Pq~O!W9xO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!W9xO~P!(zO)X6jO~P!(zO)X9yO~O)X9zO~O(y.SO)X9zO~O!h3tO!T)`q~O)Y9|O!T'xi!h'xi~O!T$WO!h7oO(w4SO)X9}O)k:PO~O)X9}O~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)X9}O)Y#|O~P#3zO)X9}O)k:SO~P)GVO]&cO!V7nO!T!yi!h!yi#v!yi(w!yi)X!yi)k!yi!O!yi~O!W:WO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!W:WO)T:YO~P$%pO!W:WO~P!(zO]&cO!V7nO!T(ea!h(ea(w(ea)X(ea)k(ea~O!O:[O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO!h#iO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!O:[O~O!O:aO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!O:aO~O]&cO!V2xO!h%Py)X%Py!O%Py~O)X:bO~O)X:cO~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)X:cO)Y#|O~P#3zO!T$WO!h7oO(w4SO)X:cO)k:fO~O]&cO!V7nO!T!yq!h!yq#v!yq(w!yq)X!yq)k!yq!O!yq~O!W:hO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!W:hO~P!(zO!O:jO!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)Y#|O~P#3zO!O:jO~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)X:lO)Y#|O~P#3zO)X:lO~O]&cO!V7nO!T!yy!h!yy#v!yy(w!yy)X!yy)k!yy!O!yy~O!Y#qO![#rO!^#uO!_#vO!a#xO!b#yO!c#yO!e#yO!f#zO(v#gO)T#mO)U#oO)V#nO)W#pO)X:pO)Y#|O~P#3zO)X:pO~O]ZXlgXpZXpiX!TiX!VZX!XZX!YZX![ZX!^ZX!_ZX!aZX!bZX!cZX!eZX!fZX!gZX!hZX(vZX(w$^X(xZX(yZX)TZX)UZX)VZX)WZX)XZX)YZX)kZX~O]%XXlmXpnXp%XX!TnX!V%XX!X%XX!Y%XX![%XX!^%XX!_%XX!a%XX!b%XX!c%XX!e%XX!f%XX!gmX!h%XX(v%XX(x%XX(y%XX)T%XX)U%XX)V%XX)W%XX)Y%XX)kmX!O%XXQ%XX!d%XX~O)X%XX!W%XX(w%XX!U%XX~P+HQO]nX]%XXdnXlmXpnXp%XXrnXsnXtnXunXvnXwnXxnXynX}nX!VnX!V%XX!rnX!snX!tnX!unX!vnX!xnX!{nX%wnX&snX&tnX(snX)TnX)VnX)WnX!OnX!O%XX!hnX)YnX~O)XnX)knX~P+JbO]%XXlmXpnXp%XX!V%XX!h%XXQ%XX!d%XX!O%XX~O!T%XX#v%XX)X%XX)k%XX(w%XX~P+L{OQnXQ%XX!TnX!X%XX!Y%XX![%XX!^%XX!_%XX!a%XX!b%XX!c%XX!dnX!d%XX!e%XX!f%XX!gmX!h%XX(v%XX(x%XX(y%XX)T%XX)U%XX)V%XX)W%XX)Y%XX)kmX~P+JbO]nX]%XXlmXpnXp%XXrnXsnXtnXunXvnXwnXxnXynX}nX!V%XX!rnX!snX!tnX!unX!vnX!xnX!{nX%wnX&snX&tnX(snX)TnX)VnX)WnX~O!TnX(wnX)XnX)knX~P, sOdnX!VnX)X%XX~P, sOlmXpnX)X%XX~Od)pO%Z)qO(z:sO~Od)pO%Z)qO(z:xO~Od)pO%Z)qO(z:tO~Od$RO%Z*UO']$TO'`$UO(z:sO~Od$RO%Z*UO']$TO'`$UO(z:uO~Od$RO%Z*UO']$TO'`$UO(z:wO~O]iXriXsiXtiXuiXviXwiXxiXyiX!OiX!ViX&siX&tiX)TiX)ViX)WiXdiX}iX!riX!siX!tiX!uiX!viX!xiX!{iX%wiX(siX~P#1jO]ZXlgXpZXpiX!VZX!hZX)XZX)kZX~O!TZX#vZX(wZX~P,(ZOlgXpiX)QiX)XZX)kiX~O]ZX]iXdiXlgXpZXpiXriXsiXtiXuiXviXwiXxiXyiX}iX!VZX!ViX!riX!siX!tiX!uiX!viX!xiX!{iX%wiX&siX&tiX(siX)TiX)ViX)WiX!OZX!OiX!hiX)YiX)kiX~O)XZX~P,)eO]ZX]iXlgXpZXpiXriXsiXtiXuiXviXwiXxiXyiX!TiX!VZX!ViX!XZX!YZX![ZX!^ZX!_ZX!aZX!bZX!cZX!eZX!fZX!gZX!hZX!hiX&siX&tiX(vZX(xZX(yZX)TZX)TiX)UZX)VZX)ViX)WZX)WiX)YZX)YiX)kZX~OQZXQiX!dZX!diX~P,,OO]iXdiXriXsiXtiXuiXviXwiXxiXyiX}iX!ViX!riX!siX!tiX!uiX!viX!xiX!{iX%wiX&siX&tiX(siX)TiX)ViX)WiX~P#1jO]ZX]iXdiXlgXpZXpiXriXsiXtiXuiXviXwiXxiXyiX}iX!VZX!ViX!riX!siX!tiX!uiX!viX!xiX!{iX%wiX&siX&tiX(siX)TiX)ViX)WiX~O)XiX~P,1QOdiX}iX!OZX!OiX!riX!siX!tiX!uiX!viX!xiX!{iX%wiX(siX)kiX~P,,OO]ZX]iXlgXpZXpiXriXsiXtiXuiXviXwiXxiXyiX}iX!TiX!VZX!riX!siX!tiX!uiX!viX!xiX!{iX%wiX&siX&tiX(siX(wiX)TiX)ViX)WiX)XiX)kiX~Or!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O~PBUOd$RO%Z*UO(z:sO~Od$RO%Z*UO(z:tO~Od$RO%Z*UO(z:zO~Od$RO%Z*UO(z:yO~O]%hOd!POl%bOr!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O!V%kO!{!dO!|%RO%w$mO(s$xO)T;eO)V;fO)W;fO~O]%hOd!POl%bO!V%kO!{!dO%w$mO(s$xO)T;eO)V;fO)W;fO~Od$RO%Z$SO(z:tO~Od$RO%Z$SO(z:xO~Ol:}O~Ol:|O~O]cXlgXpiX!TcX~Od)pO%Z*UO(z:sO~Od)pO%Z*UO(z:tO~Od)pO%Z*UO(z:uO~Od)pO%Z*UO(z:vO~Od)pO%Z*UO(z:wO~Od)pO%Z*UO(z:yO~Od)pO%Z*UO(z:zO~Or!^Os!^Ot!^Ou!^Ov!^Ow!^Ox!^Oy!^O~P,9^O])OXr)OXs)OXt)OXu)OXv)OXw)OXx)OXy)OX})OX!r)OX!s)OX!t)OX!u)OX!v)OX!x)OX!{)OX%w)OX&s)OX&t)OX(s)OX)T)OX)V)OX)W)OX)k)OX~Ol:|O!T)OX(w)OX)X)OX~P,=]O]&xXlmXpnX!T&xX~Od4oO%Z*UO(z;xO~Ol;`O)T;|O)V5eO)W5eO~P(EzOd!POl%bO!{!dO%w$mO(s$xO~O]1VO!V1TO)T0}O)V;}O)W;}OQ#nX!d#nX!h#nX!O#nX~P,@XO)T;^O~Ol;lO~Ol;mO~Ol;nO~Ol;pO~Ol;qO~Ol;rO~Ol;pO!T$WOQ)OX!d)OX!h)OX)Y)OX!O)OX)k)OX~P$GXOl;nO!T$WO~P$GXOl;lO!g$YO)k$YO~Ol;nO!g$YO)k$YO~Ol;pO!g$YO)k$YO~Ol;mO!O)OX!h)OX)Y)OX)k)OX~P$GXOd/aO%Z*UO(z;xO~Ol;yO~O)T<^O~OV'f'i'j'h(p)Z!R(sST%[!Y!['kd%]!i'S!f]'g*['l(x!^!_'m'n'm~",
            goto: "%8]*[PPPPPP*]P*`PP.W4nP7o7o:{P:{>XP>r?U?jFdMf!&l!-UP!4Q!4u!5jP!6UPPPPPPPP!6oP!8ZPP!9n!;YP!;`PPPPPP!;cP!;cPP!;cPPPPPPPPP!;o!?XP!?[PP!?x!@mPPPPP!@qP>u!BUPP>u!D_!F`!Fn!HV!IxP!JTP!Jd!Jd!Mv##X#$q#(P#+]!F`#+gPP!F`#+n#+t#+g#+g#+wP#+{#,j#,j#,j#,j!IxP#-T#-f#/lP#0SP#1qP#1u#2P#2v#3R#5a#5i#5i#5p#1uP#1uP#6U#6[P#6fPP#7T#7t#8h#7TP#9[#9hP#7TP#7TPP#7T#7TP#7TP#7TP#7TP#7TP#7TP#7TP#9k#6f#:ZP#:rP#;Z#;Z#;Z#;Z#;h#1uP#<Q#AO#AmPPPPPPPP#BeP#BuP#BuP#CT#Fd#:hPP#Bo#FxP#G_#Gj#Gp#Gp#Bo#HfP#1u#1u#1u#1u#1uP!Jd#IS#IZ#IZ#IZ#I_!Mp#Ii!Mp#Im!Fn!Fn!Fn#Ip#N[!Fn>u>u>u$%V!@m!@m!@m!@m!@m!@m!6o!6o!6o$%jP$'X$'g!6o$'mPP!6o$)}$*Q#B[$*T:{7o$-]$/W$0w$2g7oPP7o$4Z7oP7o7oP7oP$7c7oP7oPP7o$7oPPPPPPPPP*]P$:y$;P$=h$?p$?v$@^$@h$@s$AS$AY$Bj$Ci$Cp$Cw$C}$DV$Da$Dg$Dv$D|$EV$E_$Ej$Ep$Ez$FQ$F[$Fc$Ft$Fz$GQP$GW$G`$Gg$Gu$Ie$Ik$Iq$Ix$JRPPPPPPPP$JX$J]PPPPP%#a$)}%#d%&n%(xP%)V%)YPPPPPPPPPP%)f%*i%*o%*s%,l%-{%.n%.u%1W%1^PPP%1h%1s%1v%1|%3T%3W%3d%3n%3r%4x%5m%5s#BeP%6^%6p%6s%7V%7e%7i%7o%7u$)}$*Q$*Q%7x%7{P%8V%8YR#cP'dmO[aefwx{!W!X!g!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$e$f$k%]%m&Q&S&W&b&f&x&y&|'O'P'b'e'j'k'z(a(c(j)m)s*i*j*m*r*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-f-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:jU%om%p7UQ&m!`Q(k#]d0S*O0P0Q0R0U5R5S5T5W8UR7U3Xf}Oaewx{!g&S'e*r-f&v$i[!W!X!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$e$f$k%]%m&Q&W&b&f&x&y&|'O'P'b'j'k'z(a(c(j)m)s*i*j*m*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-j.S.T.X/Q/T/_/f/o/q/v/x1O1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:jS%`f0k#d%jgnp|#O$g$|$}%S%d%h%i%w&s'u'v(R*Z*a*c*u+^,m,w-`-s-z.i.p.r0`0|0}1R1V2b2m5e6k;[;];^;d;e;f;s;t;u;v;z;{;|;}<[<]<^S%qm!YS&u!h#PQ']!tQ'h!yQ'i!zQ(k#`Q(l#]Q(m#^Q*y%kQ,X&lQ,^&nQ-T'^Q-g'gQ-n'rS.u([4]Q/i)hQ0h*nQ2T,]Q2[,dQ3S-hQ4f/PQ4j/WQ5j1QQ6`2WQ7R3TQ8e6_Q9i8OR;_1T$|#hS!]$y%Q%T%Z&j&k'Q'X'Z'a'c(b(f(i(x(y)S)T)U)V)W)X)Y)Z)[)])^)_)`)l)r)y+Y+h,P,T,k,v-k-l.P.|/s0c0e0j0l0z1c1|2d2k3V3g3h4g4h4n4q4w4y4}5O5h5t5{6Y6i6m6w7O7u7v7x8W8X8g8j8n8v9X9`9o9u:Q:X:^:d:mQ&p!dQ(h#ZQ(t#bQ)k$T[*t%e*X0n2c2j3OQ,_&oQ/R(gQ/V(lQ/^(uS/l)j/SQ0u+RS4u/m/nR8S4v'e![O[aefwx{!W!X!g!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$e$f$k%]%m&Q&S&W&b&f&x&y&|'O'P'b'e'j'k'z(a(c(j)m)s*i*j*m*r*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-f-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:j'e!VO[aefwx{!W!X!g!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$e$f$k%]%m&Q&S&W&b&f&x&y&|'O'P'b'e'j'k'z(a(c(j)m)s*i*j*m*r*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-f-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:jQ)P#kS+R%y0vQ/u)tk4R.j3w3{4O4P7g7i7j7l7o9]9^:VQ)R#kk4Q.j3w3{4O4P7g7i7j7l7o9]9^:Vl)Q#k.j3w3{4O4P7g7i7j7l7o9]9^:VT+R%y0v`UOwx!g&S'e*r-fW$`[e$e(c#l$p_!f!u!}#R#S#T#U#V#Z$S$T$l%U&U&Y&c&m'_(O(Q(V(_(h)k)q+]+b+c+u+z,Y,l,{-R-r-w.Z.[.b.c.g.t.x1W1[1i1n1p2o3`3a3b3t3x5n6R6T7`8_![%cg$g%d%i&s*Z*u+^,m,w-`0}1R2b;[;];^;e;f;s;t;u;v;z;{;}<[<]<^Y%snp%w-s.il(}#k.j3w3{4O4P7g7i7j7l7o9]9^:VS;i'u-zU;j(R.p.r&|<Paf{|!W!X!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$f$k$|$}%S%]%h%m&Q&W&b&y&|'O'j'k'v'z(a(j)m)s*a*c*i*j*m*s+X+Z+i+k+l,Q,S,o,r-j.S.T.X/Q/T/_/f/o/q/v/x0`0k0|1O1T1d1e1o1s1}2f2l2m2x4S4V4[4e5^5e5i5u6c6g6j6k6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:j;d;|Q<Q1Vd<R&x'P'b,x-^-_-b2i2}3QW<S&f*w2P3mQ<T#O[<U!t'^'g,]2W6_T<a%y0v`VOwx!g&S'e*r-fW$a[e$e(cQ$p.x!j$q_!f!u!}#V#Z$S$T$l%U&U&Y&c&m'_(h)k)q+]+b+u,Y,l,{-R-r.g1W1[1i1n1p2o3x5n8_&^$zaf{!W!X!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$f$k%]%m&Q&W&b&y&|'O'j'k'z(a(j)m)s*i*j*m*s+X+Z+i+k+l,Q,S,o,r-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2f2l2x4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:j![%cg$g%d%i&s*Z*u+^,m,w-`0}1R2b;[;];^;e;f;s;t;u;v;z;{;}<[<]<^Y%snp%w-s.iQ's#O|'}#R#S#T#U(O(Q(V(_+c+z.Z.[.b.c.t3`3a3b3t6R6T7`l(}#k.j3w3{4O4P7g7i7j7l7o9]9^:VS-q'u-zQ3[-wU;w(R.p.rn<P|$|$}%S%h'v*a*c0`0|2m5e6k;d;|[<U!t'^'g,]2W6_W<V&f*w2P3md<W&x'P'b,x-^-_-b2i2}3QQ<_1VT<a%y0v!U!UO[ewx!g$e&S&f&x'P'b'e(c*r*w,x-^-_-b-f2P2i2}3Q3m!v$t_!f!u!}#O#V#Z$S$T$l%U&U&Y&c&m'_'u(R(h)k)q+]+u,Y,l,{-R-r-z.g.p.r1V1W1[1i1n1p2o3x5n8_&^%Paf{!W!X!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$f$k%]%m&Q&W&b&y&|'O'j'k'z(a(j)m)s*i*j*m*s+X+Z+i+k+l,Q,S,o,r-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2f2l2x4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:j$Q%lgnp|#k$g$|$}%S%d%h%i%w%y&s'^'g'v*Z*a*c*u+^,],m,w-`-s.i.j0`0v0|0}1R2W2b2m3w3{4O4P5e6_6k7g7i7j7l7o9]9^:V;[;];^;d;e;f;s;t;u;v;z;{;|;}<[<]<^Q'[!tz(P#R#S#T#U(O(Q(V(_+z.Z.[.b.c.t3`3a3b3t6R6T7`f-['`-U-W-Z2s2t2v2y6u6v8tQ1Z+bQ1^+cQ2n,zQ3]-wQ4`.xQ5p1]R8Z5q!U!UO[ewx!g$e&S&f&x'P'b'e(c*r*w,x-^-_-b-f2P2i2}3Q3m!x$t_!f!u!}#O#V#Z$S$T$l%U&U&Y&c&m'_'u(R(h)k)q+]+b+u,Y,l,{-R-r-z.g.p.r1V1W1[1i1n1p2o3x5n8_&^%Paf{!W!X!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$f$k%]%m&Q&W&b&y&|'O'j'k'z(a(j)m)s*i*j*m*s+X+Z+i+k+l,Q,S,o,r-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2f2l2x4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:j$S%lgnp|!t#k$g$|$}%S%d%h%i%w%y&s'^'g'v*Z*a*c*u+^,],m,w-`-s.i.j0`0v0|0}1R2W2b2m3w3{4O4P5e6_6k7g7i7j7l7o9]9^:V;[;];^;d;e;f;s;t;u;v;z;{;|;}<[<]<^|(P#R#S#T#U(O(Q(V(_+c+z.Z.[.b.c.t3`3a3b3t6R6T7`Q3]-wR4`.x`WOwx!g&S'e*r-fW$b[e$e(c#l$p_!f!u!}#R#S#T#U#V#Z$S$T$l%U&U&Y&c&m'_(O(Q(V(_(h)k)q+]+b+c+u+z,Y,l,{-R-r-w.Z.[.b.c.g.t.x1W1[1i1n1p2o3`3a3b3t3x5n6R6T7`8_![%cg$g%d%i&s*Z*u+^,m,w-`0}1R2b;[;];^;e;f;s;t;u;v;z;{;}<[<]<^Y%snp%w-s.il(}#k.j3w3{4O4P7g7i7j7l7o9]9^:VS;i'u-zU;j(R.p.rn<P|$|$}%S%h'v*a*c0`0|2m5e6k;d;|Q<Q1VQ<T#O[<U!t'^'g,]2W6_&^<Xaf{!W!X!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$f$k%]%m&Q&W&b&y&|'O'j'k'z(a(j)m)s*i*j*m*s+X+Z+i+k+l,Q,S,o,r-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2f2l2x4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:jd<Y&x'P'b,x-^-_-b2i2}3QW<Z&f*w2P3mT<a%y0vp$PT$_$o%b%r(|;O;P;Q;`;a;b;c;g;h<`o)n$V*V*]/b:{:|:};l;m;n;o;p;q;r;yp$QT$_$o%b%r(|;O;P;Q;`;a;b;c;g;h<`o)o$V*V*]/b:{:|:};l;m;n;o;p;q;r;y^&e}!O$i$j%`%j;_d&i!U$t%P%l'[(P1Z1^3]4`V/d)P)Q4RS%Ye$eQ,U&fQ/O(cQ2p-RQ5}1pQ6Z2PQ6q2oR9l8_$R!TO[_ewx!f!g!u!}#O#V#Z$S$T$e$l%U&S&U&Y&c&f&m&x'P'_'b'e'u(R(c(h)k)q*r*w+]+b+u,Y,l,x,{-R-^-_-b-f-r-w-z.g.p.r1V1W1[1i1n1p2P2i2o2}3Q3m3x5n8_#`^O[_`wx!f!g!}#O$S$d$l$s$u&S&U&Y&c&m&r&x'P'b'e'u(R)q*^*r*w+],Y,l,x,{-^-_-b-f-r-w-z.g.p.r1V1W1i2i2}3Q3m3x_(V#R#S#T+c3`3a3b$RZO[wx!g!k#R#S#T%m&S&U&Y&c&m&w&x&y&|'O'P'['b'e'u'y(O(Q(R(V*r*w+]+c,Y,i,l,r-Q-^-_-b-f-r-w-z-}.b.g.p.t1V1W1i2f2n2}3Q3`3a3b3m6g6n8k9p9t:[:a:jQ$]YR0W*PR*R$]e0S*O0P0Q0R0U5R5S5T5W8U'd!YO[aefwx{!W!X!g!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$e$f$k%]%m&Q&S&W&b&f&x&y&|'O'P'b'e'j'k'z(a(c(j)m)s*i*j*m*r*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-f-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:je0S*O0P0Q0R0U5R5S5T5W8UR5X0W^(U#R#S#T+c3`3a3bY.`(O(S(V(W7XU3o.^.a.tS7]3p4ZR9g7w^(T#R#S#T+c3`3a3b[._(O(S(U(V(W7XW3n.^.`.a.tU7[3o3p4ZS9O7]7wR:Z9gT.n(R.ph]Owx!g&S'e'u(R*r-f-z.p!v^[_`!f!}#O$S$d$l$s$u&U&Y&c&m&r&x'P'b)q*^*w+],Y,l,x,{-^-_-b-r-w.g.r1V1W1i2i2}3Q3m3xQ%tnT1x,O1y!nbOaenpwx{|!g#O$|$}%S%h%w&S'e'u'v(R*a*c*r-f-s-z.i.p.r0`0|1V2m5e6k;d;|f-X'`-U-W-Z2s2t2v2y6u6v8tj3|.j3w3{4O4P7g7i7j7l7o9]9^:Vr<Og$g%d%i&s*Z*u,m,w-`2b;[;];^;s;u;zi<b+^0}1R;e;f;t;v;{;}<[<]<^!O&^y%X&V&Y&Z'l)i*e*g+^+f+y/p0a0|0}1R1V1m5e5z;|;}z&az%O%W%e&d't*X*`,c-{0^0_0n1P2c2j3O5Z5f6p8mS'|#Q.[n+m&X*h+g+n+q-m/k0b1U1a4x5[5d5y8]Q2Z,b^2w-Y2u2{6t6{8s9we7m3}7c7k7s7t9Y9[9d:U:gS+_&U1WY+o&Y&c*w1V3mR5w1i#{!POaegnpwx{|!g#O$g$|$}%S%d%h%i%w&S&s'e'u'v(R*Z*a*c*r*u+^,m,w-`-f-s-z.i.p.r0`0|0}1R1V2b2m5e6k;[;];^;d;e;f;s;t;u;v;z;{;|;}<[<]<^doOwx!g&S'e'u*r-f-z#U!Paeg{|#O$g$|$}%S%d%h%i&s'v*Z*a*c*u+^,m,w-`0`0|0}1R1V2b2m5e6k;[;];^;d;e;f;s;t;u;v;z;{;|;}<[<]<^U%vnp-sQ+O%wS.h(R.pT3z.i.rW+s&^+m+t1fV+{&a+|7mQ+y&`U+{&a+|7mQ-z'uT.V'z.X'd![O[aefwx{!W!X!g!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$e$f$k%]%m&Q&S&W&b&f&x&y&|'O'P'b'e'j'k'z(a(c(j)m)s*i*j*m*r*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-f-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:jX1u+z.[6R6T'[!VO[aefwx{!W!X!g!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#}$U$W$Y$e$f$k%]%m&Q&S&W&b&f&x&y&|'O'P'b'e'j'k'z(a(c(j)m)s*i*j*m*r*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-f-j.S.T.X/Q/_/f/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:jW1u+z.[6R6TR2h,t![jO[wx!g!k%m&S&y&|'O'b'e*r,r-^-_-b-f2f2}6g6n8k9p9t:[:a:jY%Ve$e(c1s3mQ'S!nS(z#i5^Q,n&xQ,y'PS.R'z.XQ2e,oQ6o2lQ7Q3QQ8l6jR9q8i'[![O[aefwx{!W!X!g!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#}$U$W$Y$e$f$k%]%m&Q&S&W&b&f&x&y&|'O'P'b'e'j'k'z(a(c(j)m)s*i*j*m*r*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-f-j.S.T.X/Q/_/f/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:jX1u+z.[6R6T'eyO[aefwx{!W!X!g!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#}$U$W$Y$e$f$k%]%m&Q&S&W&b&f&x&y&|'O'P'b'e'j'k'z(a(c(j)m)s*i*j*m*r*s*w+X+Z+i+k+l+z,Q,S,o,r,x-^-_-b-f-j.S.T.X.[/Q/_/f/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[5^5i5u6R6T6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:jQ&`yS'u#O-xR1_+dS+_&U1WR5r1_Q1S+^R5k1RR1S+^T+_&U1Wz&[%X&V&Y&Z'l)i*e*g+^+f/p0a0|0}1R1V1m5e5z;|;}Q&]yR1q+y!P&[y%X&V&Y&Z'l)i*e*g+^+f+y/p0a0|0}1R1V1m5e5z;|;}Q+v&^S+}&a7mS1g+m+tQ1w+|R5v1f![kO[wx!g!k%m&S&y&|'O'b'e*r,r-^-_-b-f2f2}6g6n8k9p9t:[:a:jS%zo.hS&Oq-uQ&_yQ&q!eQ*q%eU*|%v%{3zS+Q%x%}Q+r&]Q,s&{S0[*X,cS0r*}+OQ0t+PQ1r+yQ5Y0^Q5_0sQ6P1qQ6a2ZQ7r3}Q9W7cR:T9Y`uOwx!g&S'e*r-fQ,Z&mQ-y'uQ3^-wR3c-z|lOwx!g!k%m&S&y'O'e*r,r-f2f6g6n8k9p9t:[:a:jU$h[&|-_S%zo.hS&Oq-uQ*q%eU*|%v%{3zS+Q%x%}S0[*X,cS0r*}+OQ0t+PQ5Y0^Q5_0sQ7r3}Q9W7cR:T9YT,`&q,aauOwx!g&S'e*r-f`uOwx!g&S'e*r-fQ,Z&mQ,o&xQ,x'PW-a'b-^-b2}Q-y'uQ3^-wQ3c-zR7P3Q[%fg$g,m,w-`2bR0o*u^$XV!U$a$z%P<V<WQ'S!nS)a#}*wS)w$W*rQ)z$YY*t%e*X0n2j3OQ/R(gS/l)j/SS0d*i4eS0m*s6cQ0u+RQ4U.jQ4r/fS4u/m/nS4z/q5^Q5P/xQ6d2cU7e3w3}4VQ8S4vQ8o6lY9U7c7f7g7p7qQ9v8qW:O9S9V9Y9ZQ:_9sU:e:P:R:SR:n:fS)w$W*rT4z/q5^Z)u$W)v*r/q5^Q&t!gQ'f!yQ,Z&mS,[&n'hS2V,^-iR6^2UQ&w!hR'y#PS,h&v'wQ2_,fR6b2^|lOwx!g!k%m&S&y'O'e*r,r-f2f6g6n8k9p9t:[:a:jV$h[&|-_!]kO[wx!g!k%m&S&y&|'O'b'e*r,r-^-_-b-f2f2}6g6n8k9p9t:[:a:j![hO[wx!g!k%m&S&y&|'O'b'e*r,r-^-_-b-f2f2}6g6n8k9p9t:[:a:jR'W!q![kO[wx!g!k%m&S&y&|'O'b'e*r,r-^-_-b-f2f2}6g6n8k9p9t:[:a:jR,o&xQ&y!iQ&{!jQ'O!lR,r&zR,p&x|lOwx!g!k%m&S&y'O'e*r,r-f2f6g6n8k9p9t:[:a:jX-a'b-^-b2}`uOwx!g&S'e*r-fQ,{'PQ-y'uS.n(R.pR3c-z`uOwx!g&S'e*r-fQ,{'PW-a'b-^-b2}T.n(R.pg-['`-U-W-Z2s2t2v2y6u6v8t}lOwx!g!k%m&S&y'O'e*r,r-f2f6g6n8k9p9t:[:a:jf!OOaewx{!g&S'e*r-f&|$j[f!W!X!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$e$f$k%]%m&Q&W&b&f&x&y&|'O'P'b'j'k'z(a(c(j)m)s*i*j*m*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:j#d%jgnp|#O$g$|$}%S%d%h%i%w&s'u'v(R*Z*a*c*u+^,m,w-`-s-z.i.p.r0`0|0}1R1V2b2m5e6k;[;];^;d;e;f;s;t;u;v;z;{;|;}<[<]<^Q']!tQ-T'^Q-g'gQ2T,]Q6`2WR8e6_j$RT$_%b%r;O;P;Q;`;a;b;c;g;hi)p$V*V:{:|:};l;m;n;o;p;q;rj$RT$_%b%r;O;P;Q;`;a;b;c;g;hh)p$V*V:{:|:};l;m;n;o;p;q;rS/a(|<`V4o/b/c;y`uOwx!g&S'e*r-fQ-y'uR3c-z`uOwx!g&S'e*r-fT.n(R.p'd!YO[aefwx{!W!X!g!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$e$f$k%]%m&Q&S&W&b&f&x&y&|'O'P'b'e'j'k'z(a(c(j)m)s*i*j*m*r*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-f-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:jR7V3X`uOwx!g&S'e*r-fQ-y'uS.n(R.pR3c-z`pOwx!g&S'e*r-fQ%wnS-s'u-zT.i(R.pS%{o.hS*}%v3zR0s+OQ+S%yR5a0vS%zo.hS&Oq-uU*|%v%{3zS+Q%x%}S0r*}+OQ0t+PQ5_0sQ7r3}Q9W7cR:T9YdqOwx!g&S'e(R*r-f.pS%xn-sU%}p.i.rQ+P%wT-u'u-zS'{#Q.[R.]'|T.U'z.XS.V'z.XQ8|7YR9{8}T6R1t8cR6T1t#d!Pgnp|#O$g$|$}%S%d%h%i%w&s'u'v(R*Z*a*c*u+^,m,w-`-s-z.i.p.r0`0|0}1R1V2b2m5e6k;[;];^;d;e;f;s;t;u;v;z;{;|;}<[<]<^f!QOaewx{!g&S'e*r-f&}![[f!W!X!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$e$f$k%]%m&Q&W&b&f&x&y&|'O'P'b'j'k'z(a(c(j)m)s*i*j*m*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:j#d!Pgnp|#O$g$|$}%S%d%h%i%w&s'u'v(R*Z*a*c*u+^,m,w-`-s-z.i.p.r0`0|0}1R1V2b2m5e6k;[;];^;d;e;f;s;t;u;v;z;{;|;}<[<]<^f!QOaewx{!g&S'e*r-f&|![[f!W!X!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#{#}$U$W$Y$e$f$k%]%m&Q&W&b&f&x&y&|'O'P'b'j'k'z(a(c(j)m)s*i*j*m*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[4e5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:jk4Q.j3w3{4O4P7g7i7j7l7o9]9^:VQ4U.jS7e3w3}U9U7c7g7pS:O9S9YR:e:R$Q!TO[_ewx!f!g!u!}#O#V#Z$S$T$e$l%U&S&U&Y&c&f&m&x'P'_'b'e'u(R(c(h)k)q*r*w+]+b+u,Y,l,x,{-R-^-_-b-f-r-w-z.g.p.r1V1W1[1i1n1p2P2i2o2}3Q3m3x5n8_R4a.xQ(^#US.y(](_S4b.z.{R7{4cQ.v([R7y4]$Q!TO[_ewx!f!g!u!}#O#V#Z$S$T$e$l%U&S&U&Y&c&f&m&x'P'_'b'e'u(R(c(h)k)q*r*w+]+b+u,Y,l,x,{-R-^-_-b-f-r-w-z.g.p.r1V1W1[1i1n1p2P2i2o2}3Q3m3x5n8_p$w`$d$s%X&r'`(`(g)j*e-U/n1m5o5z8Yq)O#k%y.j0v3w3{4O4P7g7i7j7l7o9]9^:VR,V&fR6[2P']!VO[aefwx{!W!X!g!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#}$U$W$Y$e$f$k%]%m&Q&S&W&b&f&x&y&|'O'P'b'e'j'k'z(a(c(j)m)s*i*j*m*r*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-f-j.S.T.X/Q/_/f/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:j$q#rS%T%Z'Q'X'Z'a'c(b(f(i(x(y)S)T)V)W)X)Y)Z)[)])^)_)`)l)r)y+Y+h,P,T,k,v-k-l.P.|/s0c0e0j0l0z1c1|2d2k3V3g3h4g4h4n4q4w4y4}5O5h5t5{6Y6i6m6w7O7u7v7x8W8X8g8j8n8v9X9`9o9u:Q:X:^:d:m$]#sS%T%Z'Q'X'Z'a'c(i(x(y)S)W)_)`)l)r)y+Y+h,P,T,k,v-k-l.P.|/s0c0e0j0l0z1c1|2d2k3V3g3h4g4h4n4q4w4y4}5O5h5t5{6Y6i6m6w7O7u7v7x8W8X8g8j8n8v9X9`9o9u:Q:X:^:d:m$Z#tS%T%Z'Q'X'Z'a'c(i(x(y)S)_)`)l)r)y+Y+h,P,T,k,v-k-l.P.|/s0c0e0j0l0z1c1|2d2k3V3g3h4g4h4n4q4w4y4}5O5h5t5{6Y6i6m6w7O7u7v7x8W8X8g8j8n8v9X9`9o9u:Q:X:^:d:m$c#wS%T%Z'Q'X'Z'a'c(i(x(y)S)V)W)X)Y)_)`)l)r)y+Y+h,P,T,k,v-k-l.P.|/s0c0e0j0l0z1c1|2d2k3V3g3h4g4h4n4q4w4y4}5O5h5t5{6Y6i6m6w7O7u7v7x8W8X8g8j8n8v9X9`9o9u:Q:X:^:d:m']![O[aefwx{!W!X!g!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#}$U$W$Y$e$f$k%]%m&Q&S&W&b&f&x&y&|'O'P'b'e'j'k'z(a(c(j)m)s*i*j*m*r*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-f-j.S.T.X/Q/_/f/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:jQ/S(gQ/m)jQ4v/nR9h7}'a![O[aefwx{!W!X!g!k!n!r!s!v!x#X#Y#[#g#i#l#q#r#s#t#u#v#w#x#y#z#}$U$W$Y$e$f$k%]%m&Q&S&W&b&f&x&y&|'O'P'b'e'j'k'z(a(c(j)m)s*i*j*m*r*s*w+X+Z+i+k+l,Q,S,o,r,x-^-_-b-f-j.S.T.X/Q/T/_/f/o/q/v/x0k1O1T1d1e1o1s1}2P2f2i2l2x2}3Q3m4S4V4[5^5i5u6c6g6j6l6n6x6z7P7f7n7q8i8k8q8w8x9V9Z9a9c9p9s9t:P:S:Y:[:a:f:jQ#eQR(v#eU$|a;d;|b%Ue$e&f(c-R1p2P2o8_Q'_!u!Q*_$|%U'_*a*g+i,Q0`0a1e2s6u6x7i8t9]9a:V;[;s;t;z;{<[S*a$}%SQ*g%XS+i&W1TQ,Q&bQ0`*cQ0a*eQ1e+lQ2s-WS6u2t2vQ6x2xQ7i3{Q8t6vS9]7j7lQ9a7nQ:V9^Q;[%dS;s;];^S;t<]<^Q;z;uQ;{;vT<[0};e`[Owx!g&S'e*r-fl$c[&|(O+],Y,i,l-Q-_-r-}.b.g.tl&|!k%m&y'O,r2f6g6n8k9p9t:[:a:j^(O#R#S#T+c3`3a3b`+]&U&Y&c*w1V1W1i3mS,Y&m-wQ,i&wU,l&x'P3QS-Q'[2nW-_'b-^-b2}S-r'u-zQ-}'yQ.b(QS.g(R.pR.t(VQ)}$[R/{)}Q0U*OQ5R0PQ5S0QQ5T0RY5U0U5R5S5T8UR8U5WQ*Q$]S0X*Q0YR0Y*RS.c(Q.bS3r.c7`R7`3tQ3u.dS7^3s3vU7b3u7^9PR9P7_Q.p(RR4W.p#Q_O[wx!f!g!}#O$S$l&S&U&Y&c&m&x'P'b'e'u(R)q*r*w+],Y,l,x,{-^-_-b-f-r-w-z.g.p.r1V1W1i2i2}3Q3m3xU$r_$u*^U$u`$d&rR*^$sU$}a;d;|d*b$}*c2t6v7j9^;];u;v<]Q*c%SQ2t-WQ6v2vQ7j3{Q9^7lQ;]%dQ;u;^Q;v<^T<]0};eS+|&a7mR1v+|S*k%Z/sR0f*kQ1X+`R5m1XU+f&V0};|R1`+fQ+t&^Q1f+mT1l+t1fQ8`5}R9m8`QwOU&Rw&S-fS&Sx*rR-f'eQ,a&qR2Y,aW)v$W*r/q5^R/w)vU/r)r)w0jR4{/r[*v%e%f*X2c2j3OR0p*vQ,e&uR2],eQ-b'bQ2}-^T3P-b2}Q2z-YR6|2zQ-i'hQ2U,^T3U-i2US%pm7UR*{%phnOwx!g&S'e'u(R*r-f-z.pR%unQ0w+SR5b0wQ.X'zR3j.XQ1y,OR6U1yU*o%`*y;_R0i*oS1j+o0qR5x1jQ7p3}Q9S7cU9e7p9S:RR:R9Y$S!SO[_ewx!f!g!u!}#O#V#Z$S$T$e$l%U&S&U&Y&c&f&m&x'P'_'b'e'u(R(c(h)k)q*r*w+]+b+u,Y,l,x,{-R-^-_-b-f-r-w-z.g.p.r.x1V1W1[1i1n1p2P2i2o2}3Q3m3x5n8_R&g!SQ4^.vR7z4^Q2Q,VR6]2QS/g)`)aR4s/gW(p#a(k(l/VR/Z(pQ8P4jR9j8PT)b#}*w!YSO[wx!g!k%m&S&y&|'O'b'e,r-^-_-b-f2f2}6g6n8k9p9t:[:a:jj$ya{$k%]+k,S1d1}5u6z8w9c:YY%Te$e(c1s3mY%Zf$f(j)m*mQ&j!WQ&k!XQ'Q!nQ'X!rQ'Z!sQ'a!vQ'c!xQ(b#XQ(f#YS(i#[+ZQ(x#gQ(y#iQ)S#lQ)T#qQ)U#rQ)V#sQ)W#tQ)X#uQ)Y#vQ)Z#wQ)[#xQ)]#yQ)^#zQ)_#{S)`#}*wQ)l$UQ)r$WQ)y$YQ+Y&QS+h&W1TQ,P&bQ,T&fQ,k&xQ,v'PQ-k'jQ-l'kS.P'z.XQ.|(aS/s)s0kS0c*i4eQ0e*jQ0j*rQ0l*sQ0z+XS1c+i+lQ1|,QQ2d,oS2k,x7PQ3V-jQ3g.SQ3h.TQ4g/QQ4h/TQ4n/_Q4q/fQ4w/oQ4y/qQ4}/vQ5O/xQ5h1OQ5t1eQ5{1oQ6Y2PS6i2i8xQ6m2lQ6w2xQ7O3QQ7u4SQ7v4VQ7x4[Q8W5^Q8X5iQ8g6cQ8j6jQ8n6lQ8v6xS9X7f7qQ9`7nQ9o8iQ9u8qS:Q9V9ZQ:X9aQ:^9sS:d:P:SR:m:fR,W&fh]Owx!g&S'e'u(R*r-f-z.p!v^[_`!f!}#O$S$d$l$s$u&U&Y&c&m&r&x'P'b)q*^*w+],Y,l,x,{-^-_-b-r-w.g.r1V1W1i2i2}3Q3m3x#r${ae!u$e$|$}%S%U%X%d&W&b&f'_(c*a*c*e*g+i+l,Q-R-W0`0a1T1e1p2P2o2s2t2v2x3{6u6v6x7i7j7l7n8_8t9]9^9a:V;[;];^;d;e;s;t;u;v;z;{<[<]<^Q%tnS+e&V+fW+s&^+m+t1fU+{&a+|7mQ1n+uT5g0};|d`Owx!g&S'e'u*r-f-zS$d[-rQ$s_b%Xe$e&f(c-R1p2P2o8_!h&r!f!}#O$S$l&U&Y&c&m&x'P'b(R)q*w+],Y,l,x,{-^-_-b-w.g.p.r1V1W1i2i2}3Q3m3xQ'`!uS(`#V+bQ(g#ZS)j$T(hQ*e%UQ-U'_Q/n)kQ1m+uQ5o1[Q5z1nR8Y5nS(X#R3aS(Y#S3bV(Z#T+c3`R$^Ye0T*O0P0Q0R0U5R5S5T5W8UW(S#R#S#T+cQ(]#US.^(O(VS.d(Q.bQ.{(_W1u+z.[6R6TQ3_-wQ3l.ZQ3s.cQ4Z.tU7X3`3a3bQ7a3tR9Q7`Q.e(QR3q.bT.o(R.phgOwx!g&S&m'e'u*r-f-w-zU$g[,Y-rQ&s!fQ'l!}Q'v#OQ)i$SQ*Z$l`+^&U&Y&c*w1V1W1i3mQ,m&xQ,w'PY-`'b-^-b2}3QS.j(R.pQ/p)qQ0|+]S2b,l-_S2m,x,{S3w.g.rQ6k2iR7g3xh]Owx!g&S'e'u(R*r-f-z.p!v^[_`!f!}#O$S$d$l$s$u&U&Y&c&m&r&x'P'b)q*^*w+],Y,l,x,{-^-_-b-r-w.g.r1V1W1i2i2}3Q3m3xR%tnQ3}.jQ7c3wQ7k3{Q7s4OQ7t4PQ9Y7gU9[7i7j7lQ9d7oS:U9]9^R:g:VZ+p&Y&c*w1V3mtzOnpwx!g%w&S'e'u(R*r-f-s-z.i.p.r[%Oa%d0};d;e;|U%We%h1VQ%eg^&d{|%i1R5e;f;}Q't#OQ*X$gb*`$|$}%S;[;];^<[<]<^Q,c&sQ-{'vQ0^*Z[0_*a*c;s;t;u;vQ0n*uQ1P+^Q2c,mQ2j,wS3O-`2bU5Z0`;z;{Q5f0|Q6p2mR8m6kQ,O&aR9_7mS1t+z.[Q8b6RR8c6T[%^f$f(j)m)s0kR0g*mR+a&UQ+`&UR5l1WS&Xy+yQ*h%XU+g&V0};|S+n&Y1VW+q&Z1R5e;}Q-m'lQ/k)iS0b*e*gQ1U+^Q1a+fQ4x/pQ5[0aQ5d0|Q5y1mR8]5zR6O1p^vOwx&S'e*r-fR&t!gW%gg,m,w-`T*Y$g2bT)x$W*r`uOwx!g&S'e*r-fQ&}!kQ*z%mQ,q&yQ,u'OQ2g,rQ6f2fQ8h6gQ8p6nQ9r8kQ:]9pQ:`9tQ:i:[Q:k:aR:o:j|lOwx!g!k%m&S&y'O'e*r,r-f2f6g6n8k9p9t:[:a:jU$h[&|-_X-a'b-^-b2}Q-]'`R2r-US-Y'`-UQ2u-WQ2{-ZU6t2s2t2vQ6{2yS8s6u6vR9w8t`rOwx!g&S'e*r-fS-t'u-zT.k(R.pR+T%y`sOwx!g&S'e*r-fS-v'u-zT.l(R.p`tOwx!g&S'e*r-fT.m(R.pT.W'z.XX%af%k0k1TQ.z(]R4c.{R.w([R(e#XQ(s#aS/U(k(lR4i/VR/Y(mR4k/W",
            nodeNames: "⚠ RawString > MacroName LineComment BlockComment PreprocDirective #include String EscapeSequence SystemLibString Identifier ArgumentList ( ConditionalExpression AssignmentExpression CallExpression PrimitiveType FieldExpression FieldIdentifier DestructorName TemplateMethod ScopedFieldIdentifier NamespaceIdentifier TemplateType TypeIdentifier ScopedTypeIdentifier ScopedNamespaceIdentifier :: NamespaceIdentifier TypeIdentifier TemplateArgumentList < TypeDescriptor const volatile restrict _Atomic mutable constexpr constinit consteval StructSpecifier struct MsDeclspecModifier __declspec ) Attribute AttributeName Identifier AttributeArgs { } [ ] UpdateOp ArithOp ArithOp ArithOp LogicOp BitOp BitOp BitOp CompareOp CompareOp CompareOp > CompareOp BitOp UpdateOp , Number CharLiteral AttributeArgs VirtualSpecifier BaseClassClause Access virtual FieldDeclarationList FieldDeclaration extern static register inline thread_local AttributeSpecifier __attribute__ PointerDeclarator MsBasedModifier __based MsPointerModifier FunctionDeclarator ParameterList ParameterDeclaration PointerDeclarator FunctionDeclarator Noexcept noexcept RequiresClause requires True False ParenthesizedExpression CommaExpression LambdaExpression LambdaCaptureSpecifier TemplateParameterList OptionalParameterDeclaration TypeParameterDeclaration typename class VariadicParameterDeclaration VariadicDeclarator ReferenceDeclarator OptionalTypeParameterDeclaration VariadicTypeParameterDeclaration TemplateTemplateParameterDeclaration template AbstractFunctionDeclarator AbstractPointerDeclarator AbstractArrayDeclarator AbstractParenthesizedDeclarator AbstractReferenceDeclarator ThrowSpecifier throw TrailingReturnType CompoundStatement FunctionDefinition MsCallModifier TryStatement try CatchClause catch LinkageSpecification Declaration InitDeclarator InitializerList InitializerPair SubscriptDesignator FieldDesignator DeclarationList ExportDeclaration export ImportDeclaration import ModuleName PartitionName HeaderName CaseStatement case default LabeledStatement StatementIdentifier ExpressionStatement IfStatement if ConditionClause Declaration else SwitchStatement switch DoStatement do while WhileStatement ForStatement for ReturnStatement return BreakStatement break ContinueStatement continue GotoStatement goto CoReturnStatement co_return CoYieldStatement co_yield AttributeStatement ForRangeLoop AliasDeclaration using TypeDefinition typedef PointerDeclarator FunctionDeclarator ArrayDeclarator ParenthesizedDeclarator ThrowStatement NamespaceDefinition namespace ScopedIdentifier Identifier OperatorName operator ArithOp BitOp CompareOp LogicOp new delete co_await ConceptDefinition concept UsingDeclaration enum StaticAssertDeclaration static_assert ConcatenatedString TemplateDeclaration FriendDeclaration friend union FunctionDefinition ExplicitFunctionSpecifier explicit FieldInitializerList FieldInitializer DefaultMethodClause DeleteMethodClause FunctionDefinition OperatorCast operator TemplateInstantiation FunctionDefinition FunctionDefinition Declaration ModuleDeclaration module RequiresExpression RequirementList SimpleRequirement TypeRequirement CompoundRequirement ReturnTypeRequirement ConstraintConjuction LogicOp ConstraintDisjunction LogicOp ArrayDeclarator ParenthesizedDeclarator ReferenceDeclarator TemplateFunction OperatorName StructuredBindingDeclarator ArrayDeclarator ParenthesizedDeclarator ReferenceDeclarator BitfieldClause FunctionDefinition FunctionDefinition Declaration FunctionDefinition Declaration AccessSpecifier UnionSpecifier ClassSpecifier EnumSpecifier SizedTypeSpecifier TypeSize EnumeratorList Enumerator DependentType Decltype decltype auto PlaceholderTypeSpecifier ParameterPackExpansion ParameterPackExpansion FieldIdentifier PointerExpression SubscriptExpression BinaryExpression ArithOp LogicOp LogicOp BitOp UnaryExpression LogicOp BitOp UpdateExpression CastExpression SizeofExpression sizeof CoAwaitExpression CompoundLiteralExpression NULL NewExpression new NewDeclarator DeleteExpression delete ParameterPackExpansion nullptr this UserDefinedLiteral ParamPack #define PreprocArg #if #ifdef #ifndef #else #endif #elif PreprocDirectiveName Macro Program",
            maxTerm: 426,
            nodeProps: [["group", -35, 1, 8, 11, 14, 15, 16, 18, 71, 72, 100, 101, 102, 104, 192, 209, 230, 243, 244, 271, 272, 273, 278, 281, 282, 283, 285, 286, 287, 288, 291, 293, 294, 295, 296, 297, "Expression", -13, 17, 24, 25, 26, 42, 256, 257, 258, 259, 263, 264, 266, 267, "Type", -19, 126, 129, 148, 151, 153, 154, 159, 161, 164, 165, 167, 169, 171, 173, 175, 177, 179, 180, 189, "Statement"]],
            propSources: [o],
            skippedNodes: [0, 3, 4, 5, 6, 7, 10, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 348, 349],
            repeatNodeCount: 41,
            tokenData: "&*r7ZR!UOX$eXY({YZ.gZ]$e]^+P^p$epq({qr.}rs0}st2ktu$euv!7dvw!9bwx!;exy!<Yyz!=Tz{!>O{|!?R|}!AV}!O!BQ!O!P!DX!P!Q#+y!Q!R#Az!R![$(x![!]$Ag!]!^$Cc!^!_$D^!_!`%1W!`!a%2X!a!b%5_!b!c$e!c!n%6Y!n!o%7q!o!w%6Y!w!x%7q!x!}%6Y!}#O%:n#O#P%<g#P#Q%Kz#Q#R%Ms#R#S%6Y#S#T$e#T#i%6Y#i#j%Nv#j#o%6Y#o#p&!e#p#q&#`#q#r&%f#r#s&&a#s;'S$e;'S;=`(u<%lO$e&t$nY)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e&r%eW)[W'g&jOY%^Zw%^wx%}x#O%^#O#P&f#P;'S%^;'S;=`'x<%lO%^&j&SU'g&jOY%}Z#O%}#O#P&f#P;'S%};'S;=`'r<%lO%}&j&kX'g&jOY%}YZ%}Z]%}]^'W^#O%}#O#P&f#P;'S%};'S;=`'r<%lO%}&j']V'g&jOY%}YZ%}Z#O%}#O#P&f#P;'S%};'S;=`'r<%lO%}&j'uP;=`<%l%}&r'{P;=`<%l%^&l(VW(qQ'g&jOY(OZr(Ors%}s#O(O#O#P&f#P;'S(O;'S;=`(o<%lO(O&l(rP;=`<%l(O&t(xP;=`<%l$e7Z)Y`)[W(qQ(o.o'g&j*[)`OX$eXY({YZ*[Z]$e]^+P^p$epq({qr$ers%^sw$ewx(Ox#O$e#O#P,^#P;'S$e;'S;=`(u<%lO$e.o*aT(o.oXY*[YZ*[]^*[pq*[#O#P*p.o*sQYZ*[]^*y.o*|PYZ*[4e+[`)[W(qQ(o.o'g&jOX$eXY+PYZ*[Z]$e]^+P^p$epq+Pqr$ers%^sw$ewx(Ox#O$e#O#P,^#P;'S$e;'S;=`(u<%lO$e4Z,cX'g&jOY%}YZ-OZ]%}]^-{^#O%}#O#P&f#P;'S%};'S;=`'r<%lO%}4Z-V[(o.o'g&jOX%}XY-OYZ*[Z]%}]^-O^p%}pq-Oq#O%}#O#P,^#P;'S%};'S;=`'r<%lO%}4Z.QV'g&jOY%}YZ-OZ#O%}#O#P&f#P;'S%};'S;=`'r<%lO%}7P.nT*X)`(o.oXY*[YZ*[]^*[pq*[#O#P*p3o/[[%_!b'RP)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox!_$e!_!`0Q!`#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o0_Y%^!b!a,g)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e6e1YY)[W(rQ(p/]'g&jOY%^Zr%^rs1xsw%^wx%}x#O%^#O#P&f#P;'S%^;'S;=`'x<%lO%^(U2RW)y!b)[W'g&jOY%^Zw%^wx%}x#O%^#O#P&f#P;'S%^;'S;=`'x<%lO%^4e2tf)[W(qQ'g&jOX$eXY2kZp$epq2kqr$ers%^sw$ewx(Ox!c$e!c!}4Y!}#O$e#O#P&f#P#T$e#T#W4Y#W#X5m#X#Y>u#Y#]4Y#]#^NZ#^#o4Y#o;'S$e;'S;=`(u<%lO$e4e4eb)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#o4Y#o;'S$e;'S;=`(u<%lO$e4e5xd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#X4Y#X#Y7W#Y#o4Y#o;'S$e;'S;=`(u<%lO$e4e7cd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#Y4Y#Y#Z8q#Z#o4Y#o;'S$e;'S;=`(u<%lO$e4e8|d)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#]4Y#]#^:[#^#o4Y#o;'S$e;'S;=`(u<%lO$e4e:gd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#b4Y#b#c;u#c#o4Y#o;'S$e;'S;=`(u<%lO$e4e<Qd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#X4Y#X#Y=`#Y#o4Y#o;'S$e;'S;=`(u<%lO$e4e=mb)[W(qQ'f.o'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#o4Y#o;'S$e;'S;=`(u<%lO$e4e?Qf)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#`4Y#`#a@f#a#b4Y#b#cHV#c#o4Y#o;'S$e;'S;=`(u<%lO$e4e@qf)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#]4Y#]#^BV#^#g4Y#g#hEV#h#o4Y#o;'S$e;'S;=`(u<%lO$e4eBbd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#Y4Y#Y#ZCp#Z#o4Y#o;'S$e;'S;=`(u<%lO$e4eC}b)[W(qQ'g&j'm.o'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#o4Y#o;'S$e;'S;=`(u<%lO$e4eEbd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#X4Y#X#YFp#Y#o4Y#o;'S$e;'S;=`(u<%lO$e4eF}b)[W(qQ'k.o'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#o4Y#o;'S$e;'S;=`(u<%lO$e4eHbd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#W4Y#W#XIp#X#o4Y#o;'S$e;'S;=`(u<%lO$e4eI{d)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#]4Y#]#^KZ#^#o4Y#o;'S$e;'S;=`(u<%lO$e4eKfd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#Y4Y#Y#ZLt#Z#o4Y#o;'S$e;'S;=`(u<%lO$e4eMRb)[W(qQ'g&j'l.o'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#o4Y#o;'S$e;'S;=`(u<%lO$e4eNff)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#Y4Y#Y#Z! z#Z#b4Y#b#c!.[#c#o4Y#o;'S$e;'S;=`(u<%lO$e4e!!Xf)[W(qQ'h.o'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#W4Y#W#X!#m#X#b4Y#b#c!(W#c#o4Y#o;'S$e;'S;=`(u<%lO$e4e!#xd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#X4Y#X#Y!%W#Y#o4Y#o;'S$e;'S;=`(u<%lO$e4e!%cd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#Y4Y#Y#Z!&q#Z#o4Y#o;'S$e;'S;=`(u<%lO$e4e!'Ob)[W(qQ'i.o'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#o4Y#o;'S$e;'S;=`(u<%lO$e4e!(cd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#W4Y#W#X!)q#X#o4Y#o;'S$e;'S;=`(u<%lO$e4e!)|d)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#X4Y#X#Y!+[#Y#o4Y#o;'S$e;'S;=`(u<%lO$e4e!+gd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#Y4Y#Y#Z!,u#Z#o4Y#o;'S$e;'S;=`(u<%lO$e4e!-Sb)[W(qQ'j.o'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#o4Y#o;'S$e;'S;=`(u<%lO$e4e!.gd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#V4Y#V#W!/u#W#o4Y#o;'S$e;'S;=`(u<%lO$e4e!0Qd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#`4Y#`#a!1`#a#o4Y#o;'S$e;'S;=`(u<%lO$e4e!1kd)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#i4Y#i#j!2y#j#o4Y#o;'S$e;'S;=`(u<%lO$e4e!3Ud)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#W4Y#W#X!4d#X#o4Y#o;'S$e;'S;=`(u<%lO$e4e!4od)[W(qQ'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#X4Y#X#Y!5}#Y#o4Y#o;'S$e;'S;=`(u<%lO$e4e!6[b)[W(qQV.o'g&j'n.oOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![4Y![!c$e!c!}4Y!}#O$e#O#P&f#P#R$e#R#S4Y#S#T$e#T#o4Y#o;'S$e;'S;=`(u<%lO$e3o!7q[)[W(qQ%[!b![,g'g&jOY$eZr$ers%^sw$ewx(Ox!_$e!_!`!8g!`#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o!8rY!g-y)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o!9o])W,g)[W(qQ%]!b'g&jOY$eZr$ers%^sv$evw!:hwx(Ox!_$e!_!`!8g!`#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o!:uY)V,g%_!b)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e2X!;pW)]S(qQ)Z,g'g&jOY(OZr(Ors%}s#O(O#O#P&f#P;'S(O;'S;=`(o<%lO(O6i!<eY)[W(qQ]6_'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e'V!=`Y!Oa)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o!>][)T,g)[W(qQ%[!b'g&jOY$eZr$ers%^sw$ewx(Ox!_$e!_!`!8g!`#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o!?`^)[W(qQ%[!b!Y,g'g&jOY$eZr$ers%^sw$ewx(Ox{$e{|!@[|!_$e!_!`!8g!`#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o!@gY)[W!X-y(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e2a!AbY!h,k)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o!B__)[W(qQ%[!b!Y,g'g&jOY$eZr$ers%^sw$ewx(Ox}$e}!O!@[!O!_$e!_!`!8g!`!a!C^!a#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o!CiY(y-y)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e2a!Dd^)[W(qQ'g&j(x,gOY$eZr$ers%^sw$ewx(Ox!O$e!O!P!E`!P!Q$e!Q![!GY![#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e2a!Ei[)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox!O$e!O!P!F_!P#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e2a!FjY)Y,k)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e2]!Gen)[W(qQ!i,g'g&jOY$eZr$ers%^sw$ewx!Icx!Q$e!Q![!GY![!g$e!g!h#$w!h!i#*Y!i!n$e!n!o#*Y!o!r$e!r!s#$w!s!w$e!w!x#*Y!x#O$e#O#P&f#P#X$e#X#Y#$w#Y#Z#*Y#Z#`$e#`#a#*Y#a#d$e#d#e#$w#e#i$e#i#j#*Y#j;'S$e;'S;=`(u<%lO$e2T!IjY(qQ'g&jOY(OZr(Ors%}s!Q(O!Q![!JY![#O(O#O#P&f#P;'S(O;'S;=`(o<%lO(O2T!Jcn(qQ!i,g'g&jOY(OZr(Ors%}sw(Owx!Icx!Q(O!Q![!JY![!g(O!g!h!La!h!i##`!i!n(O!n!o##`!o!r(O!r!s!La!s!w(O!w!x##`!x#O(O#O#P&f#P#X(O#X#Y!La#Y#Z##`#Z#`(O#`#a##`#a#d(O#d#e!La#e#i(O#i#j##`#j;'S(O;'S;=`(o<%lO(O2T!Ljl(qQ!i,g'g&jOY(OZr(Ors%}s{(O{|!Nb|}(O}!O!Nb!O!Q(O!Q![# e![!c(O!c!h# e!h!i# e!i!n(O!n!o##`!o!w(O!w!x##`!x#O(O#O#P&f#P#T(O#T#Y# e#Y#Z# e#Z#`(O#`#a##`#a#i(O#i#j##`#j;'S(O;'S;=`(o<%lO(O2T!Ni^(qQ'g&jOY(OZr(Ors%}s!Q(O!Q![# e![!c(O!c!i# e!i#O(O#O#P&f#P#T(O#T#Z# e#Z;'S(O;'S;=`(o<%lO(O2T# nj(qQ!i,g'g&jOY(OZr(Ors%}sw(Owx!Nbx!Q(O!Q![# e![!c(O!c!h# e!h!i# e!i!n(O!n!o##`!o!w(O!w!x##`!x#O(O#O#P&f#P#T(O#T#Y# e#Y#Z# e#Z#`(O#`#a##`#a#i(O#i#j##`#j;'S(O;'S;=`(o<%lO(O2T##id(qQ!i,g'g&jOY(OZr(Ors%}s!h(O!h!i##`!i!n(O!n!o##`!o!w(O!w!x##`!x#O(O#O#P&f#P#Y(O#Y#Z##`#Z#`(O#`#a##`#a#i(O#i#j##`#j;'S(O;'S;=`(o<%lO(O2]#%Sn)[W(qQ!i,g'g&jOY$eZr$ers%^sw$ewx(Ox{$e{|#'Q|}$e}!O#'Q!O!Q$e!Q![#(]![!c$e!c!h#(]!h!i#(]!i!n$e!n!o#*Y!o!w$e!w!x#*Y!x#O$e#O#P&f#P#T$e#T#Y#(]#Y#Z#(]#Z#`$e#`#a#*Y#a#i$e#i#j#*Y#j;'S$e;'S;=`(u<%lO$e2]#'Z`)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![#(]![!c$e!c!i#(]!i#O$e#O#P&f#P#T$e#T#Z#(]#Z;'S$e;'S;=`(u<%lO$e2]#(hj)[W(qQ!i,g'g&jOY$eZr$ers%^sw$ewx!Nbx!Q$e!Q![#(]![!c$e!c!h#(]!h!i#(]!i!n$e!n!o#*Y!o!w$e!w!x#*Y!x#O$e#O#P&f#P#T$e#T#Y#(]#Y#Z#(]#Z#`$e#`#a#*Y#a#i$e#i#j#*Y#j;'S$e;'S;=`(u<%lO$e2]#*ef)[W(qQ!i,g'g&jOY$eZr$ers%^sw$ewx(Ox!h$e!h!i#*Y!i!n$e!n!o#*Y!o!w$e!w!x#*Y!x#O$e#O#P&f#P#Y$e#Y#Z#*Y#Z#`$e#`#a#*Y#a#i$e#i#j#*Y#j;'S$e;'S;=`(u<%lO$e7Z#,W`)[W(qQ%[!b![,g'g&jOY$eZr$ers%^sw$ewx(Oxz$ez{#-Y{!P$e!P!Q#:s!Q!_$e!_!`!8g!`#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e7Z#-c])[W(qQ'g&jOY#-YYZ#.[Zr#-Yrs#/csw#-Ywx#5wxz#-Yz{#8j{#O#-Y#O#P#2`#P;'S#-Y;'S;=`#:m<%lO#-Y1e#._TOz#.[z{#.n{;'S#.[;'S;=`#/]<%lO#.[1e#.qVOz#.[z{#.n{!P#.[!P!Q#/W!Q;'S#.[;'S;=`#/]<%lO#.[1e#/]OT1e1e#/`P;=`<%l#.[7X#/jZ)[W'g&jOY#/cYZ#.[Zw#/cwx#0]xz#/cz{#4O{#O#/c#O#P#2`#P;'S#/c;'S;=`#5q<%lO#/c7P#0bX'g&jOY#0]YZ#.[Zz#0]z{#0}{#O#0]#O#P#2`#P;'S#0];'S;=`#3x<%lO#0]7P#1SZ'g&jOY#0]YZ#.[Zz#0]z{#0}{!P#0]!P!Q#1u!Q#O#0]#O#P#2`#P;'S#0];'S;=`#3x<%lO#0]7P#1|UT1e'g&jOY%}Z#O%}#O#P&f#P;'S%};'S;=`'r<%lO%}7P#2eZ'g&jOY#0]YZ#0]Z]#0]]^#3W^z#0]z{#0}{#O#0]#O#P#2`#P;'S#0];'S;=`#3x<%lO#0]7P#3]X'g&jOY#0]YZ#0]Zz#0]z{#0}{#O#0]#O#P#2`#P;'S#0];'S;=`#3x<%lO#0]7P#3{P;=`<%l#0]7X#4V])[W'g&jOY#/cYZ#.[Zw#/cwx#0]xz#/cz{#4O{!P#/c!P!Q#5O!Q#O#/c#O#P#2`#P;'S#/c;'S;=`#5q<%lO#/c7X#5XW)[WT1e'g&jOY%^Zw%^wx%}x#O%^#O#P&f#P;'S%^;'S;=`'x<%lO%^7X#5tP;=`<%l#/c7R#6OZ(qQ'g&jOY#5wYZ#.[Zr#5wrs#0]sz#5wz{#6q{#O#5w#O#P#2`#P;'S#5w;'S;=`#8d<%lO#5w7R#6x](qQ'g&jOY#5wYZ#.[Zr#5wrs#0]sz#5wz{#6q{!P#5w!P!Q#7q!Q#O#5w#O#P#2`#P;'S#5w;'S;=`#8d<%lO#5w7R#7zW(qQT1e'g&jOY(OZr(Ors%}s#O(O#O#P&f#P;'S(O;'S;=`(o<%lO(O7R#8gP;=`<%l#5w7Z#8s_)[W(qQ'g&jOY#-YYZ#.[Zr#-Yrs#/csw#-Ywx#5wxz#-Yz{#8j{!P#-Y!P!Q#9r!Q#O#-Y#O#P#2`#P;'S#-Y;'S;=`#:m<%lO#-Y7Z#9}Y)[W(qQT1e'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e7Z#:pP;=`<%l#-Y7Z#;OY)[W(qQS1e'g&jOY#:sZr#:srs#;nsw#:swx#@{x#O#:s#O#P#<z#P;'S#:s;'S;=`#At<%lO#:s7X#;wW)[WS1e'g&jOY#;nZw#;nwx#<ax#O#;n#O#P#<z#P;'S#;n;'S;=`#@u<%lO#;n7P#<hUS1e'g&jOY#<aZ#O#<a#O#P#<z#P;'S#<a;'S;=`#>[<%lO#<a7P#=RXS1e'g&jOY#<aYZ%}Z]#<a]^#=n^#O#<a#O#P#>b#P;'S#<a;'S;=`#>[<%lO#<a7P#=uVS1e'g&jOY#<aYZ%}Z#O#<a#O#P#<z#P;'S#<a;'S;=`#>[<%lO#<a7P#>_P;=`<%l#<a7P#>i]S1e'g&jOY#<aYZ%}Z]#<a]^#=n^#O#<a#O#P#>b#P#b#<a#b#c#<a#c#f#<a#f#g#?b#g;'S#<a;'S;=`#>[<%lO#<a7P#?iUS1e'g&jOY#<aZ#O#<a#O#P#?{#P;'S#<a;'S;=`#>[<%lO#<a7P#@SZS1e'g&jOY#<aYZ%}Z]#<a]^#=n^#O#<a#O#P#>b#P#b#<a#b#c#<a#c;'S#<a;'S;=`#>[<%lO#<a7X#@xP;=`<%l#;n7R#AUW(qQS1e'g&jOY#@{Zr#@{rs#<as#O#@{#O#P#<z#P;'S#@{;'S;=`#An<%lO#@{7R#AqP;=`<%l#@{7Z#AwP;=`<%l#:s2]#BVt)[W(qQ!i,g'g&jOY$eZr$ers%^sw$ewx#Dgx!O$e!O!P$ m!P!Q$e!Q![$(x![!g$e!g!h#$w!h!i#*Y!i!n$e!n!o#*Y!o!r$e!r!s#$w!s!w$e!w!x#*Y!x#O$e#O#P&f#P#U$e#U#V$+X#V#X$e#X#Y#$w#Y#Z#*Y#Z#`$e#`#a#*Y#a#d$e#d#e#$w#e#i$e#i#j#*Y#j#l$e#l#m$=`#m;'S$e;'S;=`(u<%lO$e2T#DnY(qQ'g&jOY(OZr(Ors%}s!Q(O!Q![#E^![#O(O#O#P&f#P;'S(O;'S;=`(o<%lO(O2T#Egp(qQ!i,g'g&jOY(OZr(Ors%}sw(Owx#Dgx!O(O!O!P#Gk!P!Q(O!Q![#E^![!g(O!g!h!La!h!i##`!i!n(O!n!o##`!o!r(O!r!s!La!s!w(O!w!x##`!x#O(O#O#P&f#P#X(O#X#Y!La#Y#Z##`#Z#`(O#`#a##`#a#d(O#d#e!La#e#i(O#i#j##`#j;'S(O;'S;=`(o<%lO(O2T#Gtn(qQ!i,g'g&jOY(OZr(Ors%}s!Q(O!Q![#Ir![!c(O!c!g#Ir!g!h#MS!h!i#Ir!i!n(O!n!o##`!o!r(O!r!s!La!s!w(O!w!x##`!x#O(O#O#P&f#P#T(O#T#X#Ir#X#Y#MS#Y#Z#Ir#Z#`(O#`#a##`#a#d(O#d#e!La#e#i(O#i#j##`#j;'S(O;'S;=`(o<%lO(O2T#I{p(qQ!i,g'g&jOY(OZr(Ors%}sw(Owx#LPx!Q(O!Q![#Ir![!c(O!c!g#Ir!g!h#MS!h!i#Ir!i!n(O!n!o##`!o!r(O!r!s!La!s!w(O!w!x##`!x#O(O#O#P&f#P#T(O#T#X#Ir#X#Y#MS#Y#Z#Ir#Z#`(O#`#a##`#a#d(O#d#e!La#e#i(O#i#j##`#j;'S(O;'S;=`(o<%lO(O2T#LW^(qQ'g&jOY(OZr(Ors%}s!Q(O!Q![#Ir![!c(O!c!i#Ir!i#O(O#O#P&f#P#T(O#T#Z#Ir#Z;'S(O;'S;=`(o<%lO(O2T#M]t(qQ!i,g'g&jOY(OZr(Ors%}sw(Owx#LPx{(O{|!Nb|}(O}!O!Nb!O!Q(O!Q![#Ir![!c(O!c!g#Ir!g!h#MS!h!i#Ir!i!n(O!n!o##`!o!r(O!r!s!La!s!w(O!w!x##`!x#O(O#O#P&f#P#T(O#T#X#Ir#X#Y#MS#Y#Z#Ir#Z#`(O#`#a##`#a#d(O#d#e!La#e#i(O#i#j##`#j;'S(O;'S;=`(o<%lO(O2]$ xp)[W(qQ!i,g'g&jOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![$#|![!c$e!c!g$#|!g!h$&]!h!i$#|!i!n$e!n!o#*Y!o!r$e!r!s#$w!s!w$e!w!x#*Y!x#O$e#O#P&f#P#T$e#T#X$#|#X#Y$&]#Y#Z$#|#Z#`$e#`#a#*Y#a#d$e#d#e#$w#e#i$e#i#j#*Y#j;'S$e;'S;=`(u<%lO$e2]$$Xp)[W(qQ!i,g'g&jOY$eZr$ers%^sw$ewx#LPx!Q$e!Q![$#|![!c$e!c!g$#|!g!h$&]!h!i$#|!i!n$e!n!o#*Y!o!r$e!r!s#$w!s!w$e!w!x#*Y!x#O$e#O#P&f#P#T$e#T#X$#|#X#Y$&]#Y#Z$#|#Z#`$e#`#a#*Y#a#d$e#d#e#$w#e#i$e#i#j#*Y#j;'S$e;'S;=`(u<%lO$e2]$&ht)[W(qQ!i,g'g&jOY$eZr$ers%^sw$ewx#LPx{$e{|#'Q|}$e}!O#'Q!O!Q$e!Q![$#|![!c$e!c!g$#|!g!h$&]!h!i$#|!i!n$e!n!o#*Y!o!r$e!r!s#$w!s!w$e!w!x#*Y!x#O$e#O#P&f#P#T$e#T#X$#|#X#Y$&]#Y#Z$#|#Z#`$e#`#a#*Y#a#d$e#d#e#$w#e#i$e#i#j#*Y#j;'S$e;'S;=`(u<%lO$e2]$)Tp)[W(qQ!i,g'g&jOY$eZr$ers%^sw$ewx#Dgx!O$e!O!P$ m!P!Q$e!Q![$(x![!g$e!g!h#$w!h!i#*Y!i!n$e!n!o#*Y!o!r$e!r!s#$w!s!w$e!w!x#*Y!x#O$e#O#P&f#P#X$e#X#Y#$w#Y#Z#*Y#Z#`$e#`#a#*Y#a#d$e#d#e#$w#e#i$e#i#j#*Y#j;'S$e;'S;=`(u<%lO$e2]$+b_)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox!O$e!O!P$,a!P!Q$e!Q!R$-`!R![$(x![#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e2]$,j[)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![!GY![#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e2]$-kt)[W(qQ!i,g'g&jOY$eZr$ers%^sw$ewx#Dgx!O$e!O!P$ m!P!Q$e!Q![$(x![!g$e!g!h#$w!h!i#*Y!i!n$e!n!o#*Y!o!r$e!r!s#$w!s!w$e!w!x#*Y!x#O$e#O#P&f#P#U$e#U#V$/{#V#X$e#X#Y#$w#Y#Z#*Y#Z#`$e#`#a#*Y#a#d$e#d#e#$w#e#i$e#i#j#*Y#j#l$e#l#m$0z#m;'S$e;'S;=`(u<%lO$e2]$0U[)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![$(x![#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e2]$1T`)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![$2V![!c$e!c!i$2V!i#O$e#O#P&f#P#T$e#T#Z$2V#Z;'S$e;'S;=`(u<%lO$e2]$2br)[W(qQ!i,g'g&jOY$eZr$ers%^sw$ewx$4lx!O$e!O!P$ m!P!Q$e!Q![$2V![!c$e!c!g$2V!g!h$:p!h!i$2V!i!n$e!n!o#*Y!o!r$e!r!s#$w!s!w$e!w!x#*Y!x#O$e#O#P&f#P#T$e#T#X$2V#X#Y$:p#Y#Z$2V#Z#`$e#`#a#*Y#a#d$e#d#e#$w#e#i$e#i#j#*Y#j;'S$e;'S;=`(u<%lO$e2T$4s^(qQ'g&jOY(OZr(Ors%}s!Q(O!Q![$5o![!c(O!c!i$5o!i#O(O#O#P&f#P#T(O#T#Z$5o#Z;'S(O;'S;=`(o<%lO(O2T$5xr(qQ!i,g'g&jOY(OZr(Ors%}sw(Owx$4lx!O(O!O!P#Gk!P!Q(O!Q![$5o![!c(O!c!g$5o!g!h$8S!h!i$5o!i!n(O!n!o##`!o!r(O!r!s!La!s!w(O!w!x##`!x#O(O#O#P&f#P#T(O#T#X$5o#X#Y$8S#Y#Z$5o#Z#`(O#`#a##`#a#d(O#d#e!La#e#i(O#i#j##`#j;'S(O;'S;=`(o<%lO(O2T$8]u(qQ!i,g'g&jOY(OZr(Ors%}sw(Owx$4lx{(O{|!Nb|}(O}!O!Nb!O!P#Gk!P!Q(O!Q![$5o![!c(O!c!g$5o!g!h$8S!h!i$5o!i!n(O!n!o##`!o!r(O!r!s!La!s!w(O!w!x##`!x#O(O#O#P&f#P#T(O#T#X$5o#X#Y$8S#Y#Z$5o#Z#`(O#`#a##`#a#d(O#d#e!La#e#i(O#i#j##`#j;'S(O;'S;=`(o<%lO(O2]$:{u)[W(qQ!i,g'g&jOY$eZr$ers%^sw$ewx$4lx{$e{|#'Q|}$e}!O#'Q!O!P$ m!P!Q$e!Q![$2V![!c$e!c!g$2V!g!h$:p!h!i$2V!i!n$e!n!o#*Y!o!r$e!r!s#$w!s!w$e!w!x#*Y!x#O$e#O#P&f#P#T$e#T#X$2V#X#Y$:p#Y#Z$2V#Z#`$e#`#a#*Y#a#d$e#d#e#$w#e#i$e#i#j#*Y#j;'S$e;'S;=`(u<%lO$e2]$=ic)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox!O$e!O!P$,a!P!Q$e!Q!R$>t!R![$2V![!c$e!c!i$2V!i#O$e#O#P&f#P#T$e#T#Z$2V#Z;'S$e;'S;=`(u<%lO$e2]$?Pv)[W(qQ!i,g'g&jOY$eZr$ers%^sw$ewx$4lx!O$e!O!P$ m!P!Q$e!Q![$2V![!c$e!c!g$2V!g!h$:p!h!i$2V!i!n$e!n!o#*Y!o!r$e!r!s#$w!s!w$e!w!x#*Y!x#O$e#O#P&f#P#T$e#T#U$2V#U#V$2V#V#X$2V#X#Y$:p#Y#Z$2V#Z#`$e#`#a#*Y#a#d$e#d#e#$w#e#i$e#i#j#*Y#j#l$e#l#m$0z#m;'S$e;'S;=`(u<%lO$e4e$Ar[(w-X)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox![$e![!]$Bh!]#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3s$BsYl-})[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e2]$CnY)X,g)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e7V$Dk_p,g%^!b)[W(qQ'g&jOY$EjYZ$FlZr$Ejrs$GZsw$Ejwx%)Px!^$Ej!^!_%+w!_!`%.U!`!a%0]!a#O$Ej#O#P$Ib#P;'S$Ej;'S;=`%+q<%lO$Ej*[$Es])[W(qQ'g&jOY$EjYZ$FlZr$Ejrs$GZsw$Ejwx%)Px!`$Ej!`!a%*t!a#O$Ej#O#P$Ib#P;'S$Ej;'S;=`%+q<%lO$Ejp$FoTO!`$Fl!`!a$GO!a;'S$Fl;'S;=`$GT<%lO$Flp$GTO$Xpp$GWP;=`<%l$Fl*Y$GbZ)[W'g&jOY$GZYZ$FlZw$GZwx$HTx!`$GZ!`!a%(U!a#O$GZ#O#P$Ib#P;'S$GZ;'S;=`%(y<%lO$GZ*Q$HYX'g&jOY$HTYZ$FlZ!`$HT!`!a$Hu!a#O$HT#O#P$Ib#P;'S$HT;'S;=`$Mx<%lO$HT*Q$IOU$XpY#t'g&jOY%}Z#O%}#O#P&f#P;'S%};'S;=`'r<%lO%}*Q$Ig['g&jOY$HTYZ$HTZ]$HT]^$J]^!`$HT!`!a$NO!a#O$HT#O#P%&n#P;'S$HT;'S;=`%'f;=`<%l%$z<%lO$HT*Q$JbX'g&jOY$HTYZ$J}Z!`$HT!`!a$Hu!a#O$HT#O#P$Ib#P;'S$HT;'S;=`$Mx<%lO$HT'[$KSX'g&jOY$J}YZ$FlZ!`$J}!`!a$Ko!a#O$J}#O#P$LY#P;'S$J};'S;=`$Mr<%lO$J}'[$KvU$Xp'g&jOY%}Z#O%}#O#P&f#P;'S%};'S;=`'r<%lO%}'[$L_Z'g&jOY$J}YZ$J}Z]$J}]^$MQ^!`$J}!`!a$Ko!a#O$J}#O#P$LY#P;'S$J};'S;=`$Mr<%lO$J}'[$MVX'g&jOY$J}YZ$J}Z!`$J}!`!a$Ko!a#O$J}#O#P$LY#P;'S$J};'S;=`$Mr<%lO$J}'[$MuP;=`<%l$J}*Q$M{P;=`<%l$HT*Q$NVW$Xp'g&jOY$NoZ!`$No!`!a% ^!a#O$No#O#P% w#P;'S$No;'S;=`%#^<%lO$No)`$NtW'g&jOY$NoZ!`$No!`!a% ^!a#O$No#O#P% w#P;'S$No;'S;=`%#^<%lO$No)`% eUY#t'g&jOY%}Z#O%}#O#P&f#P;'S%};'S;=`'r<%lO%})`% |Y'g&jOY$NoYZ$NoZ]$No]^%!l^#O$No#O#P%#d#P;'S$No;'S;=`%$[;=`<%l%$z<%lO$No)`%!qX'g&jOY$NoYZ%}Z!`$No!`!a% ^!a#O$No#O#P% w#P;'S$No;'S;=`%#^<%lO$No)`%#aP;=`<%l$No)`%#iZ'g&jOY$NoYZ%}Z]$No]^%!l^!`$No!`!a% ^!a#O$No#O#P% w#P;'S$No;'S;=`%#^<%lO$No)`%$_XOY%$zZ!`%$z!`!a%%g!a#O%$z#O#P%%l#P;'S%$z;'S;=`%&h;=`<%l$No<%lO%$z#t%$}WOY%$zZ!`%$z!`!a%%g!a#O%$z#O#P%%l#P;'S%$z;'S;=`%&h<%lO%$z#t%%lOY#t#t%%oRO;'S%$z;'S;=`%%x;=`O%$z#t%%{XOY%$zZ!`%$z!`!a%%g!a#O%$z#O#P%%l#P;'S%$z;'S;=`%&h;=`<%l%$z<%lO%$z#t%&kP;=`<%l%$z*Q%&sZ'g&jOY$HTYZ$J}Z]$HT]^$J]^!`$HT!`!a$Hu!a#O$HT#O#P$Ib#P;'S$HT;'S;=`$Mx<%lO$HT*Q%'iXOY%$zZ!`%$z!`!a%%g!a#O%$z#O#P%%l#P;'S%$z;'S;=`%&h;=`<%l$HT<%lO%$z*Y%(aW$XpY#t)[W'g&jOY%^Zw%^wx%}x#O%^#O#P&f#P;'S%^;'S;=`'x<%lO%^*Y%(|P;=`<%l$GZ*S%)WZ(qQ'g&jOY%)PYZ$FlZr%)Prs$HTs!`%)P!`!a%)y!a#O%)P#O#P$Ib#P;'S%)P;'S;=`%*n<%lO%)P*S%*UW$XpY#t(qQ'g&jOY(OZr(Ors%}s#O(O#O#P&f#P;'S(O;'S;=`(o<%lO(O*S%*qP;=`<%l%)P*[%+RY$XpY#t)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e*[%+tP;=`<%l$Ej7V%,U^)[W(qQ%]!b!f,g'g&jOY$EjYZ$FlZr$Ejrs$GZsw$Ejwx%)Px!_$Ej!_!`%-Q!`!a%*t!a#O$Ej#O#P$Ib#P;'S$Ej;'S;=`%+q<%lO$Ej7V%-]]!g-y)[W(qQ'g&jOY$EjYZ$FlZr$Ejrs$GZsw$Ejwx%)Px!`$Ej!`!a%*t!a#O$Ej#O#P$Ib#P;'S$Ej;'S;=`%+q<%lO$Ej7V%.c]%^!b!b,g)[W(qQ'g&jOY$EjYZ$FlZr$Ejrs$GZsw$Ejwx%)Px!`$Ej!`!a%/[!a#O$Ej#O#P$Ib#P;'S$Ej;'S;=`%+q<%lO$Ej7V%/mY%^!b!b,g$XpY#t)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e)j%0hYY#t)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o%1c[)k!c)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox!_$e!_!`0Q!`#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o%2f]%^!b)[W(qQ!d,g'g&jOY$eZr$ers%^sw$ewx(Ox!_$e!_!`%3_!`!a%4[!a#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o%3lY%^!b!b,g)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o%4i[)[W(qQ%]!b!f,g'g&jOY$eZr$ers%^sw$ewx(Ox!_$e!_!`!8g!`#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e&u%5jY(vP)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e7Z%6ib)[W(zS(qQ!R,f(s%y'g&jOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![%6Y![!c$e!c!}%6Y!}#O$e#O#P&f#P#R$e#R#S%6Y#S#T$e#T#o%6Y#o;'S$e;'S;=`(u<%lO$e7Z%8Qb)[W(zS(qQ!R,f(s%y'g&jOY$eZr$ers%9Ysw$ewx%9{x!Q$e!Q![%6Y![!c$e!c!}%6Y!}#O$e#O#P&f#P#R$e#R#S%6Y#S#T$e#T#o%6Y#o;'S$e;'S;=`(u<%lO$e5P%9cW)[W(p/]'g&jOY%^Zw%^wx%}x#O%^#O#P&f#P;'S%^;'S;=`'x<%lO%^2T%:UW(qQ)Z,g'g&jOY(OZr(Ors%}s#O(O#O#P&f#P;'S(O;'S;=`(o<%lO(O3o%:yZ!V-y)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox!}$e!}#O%;l#O#P&f#P;'S$e;'S;=`(u<%lO$e&u%;wY)QP)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e4e%<la'g&jOY%=qYZ%>[Z]%=q]^%?Z^!Q%=q!Q![%?w![!w%=q!w!x%AX!x#O%=q#O#P%H_#P#i%=q#i#j%Ds#j#l%=q#l#m%IR#m;'S%=q;'S;=`%Kt<%lO%=q&t%=xUXY'g&jOY%}Z#O%}#O#P&f#P;'S%};'S;=`'r<%lO%}4e%>e[XY(o.o'g&jOX%}XY-OYZ*[Z]%}]^-O^p%}pq-Oq#O%}#O#P,^#P;'S%};'S;=`'r<%lO%}4e%?bVXY'g&jOY%}YZ-OZ#O%}#O#P&f#P;'S%};'S;=`'r<%lO%}&t%@OWXY'g&jOY%}Z!Q%}!Q![%@h![#O%}#O#P&f#P;'S%};'S;=`'r<%lO%}&t%@oWXY'g&jOY%}Z!Q%}!Q![%=q![#O%}#O#P&f#P;'S%};'S;=`'r<%lO%}&t%A^['g&jOY%}Z!Q%}!Q![%BS![!c%}!c!i%BS!i#O%}#O#P&f#P#T%}#T#Z%BS#Z;'S%};'S;=`'r<%lO%}&t%BX['g&jOY%}Z!Q%}!Q![%B}![!c%}!c!i%B}!i#O%}#O#P&f#P#T%}#T#Z%B}#Z;'S%};'S;=`'r<%lO%}&t%CS['g&jOY%}Z!Q%}!Q![%Cx![!c%}!c!i%Cx!i#O%}#O#P&f#P#T%}#T#Z%Cx#Z;'S%};'S;=`'r<%lO%}&t%C}['g&jOY%}Z!Q%}!Q![%Ds![!c%}!c!i%Ds!i#O%}#O#P&f#P#T%}#T#Z%Ds#Z;'S%};'S;=`'r<%lO%}&t%Dx['g&jOY%}Z!Q%}!Q![%En![!c%}!c!i%En!i#O%}#O#P&f#P#T%}#T#Z%En#Z;'S%};'S;=`'r<%lO%}&t%Es['g&jOY%}Z!Q%}!Q![%Fi![!c%}!c!i%Fi!i#O%}#O#P&f#P#T%}#T#Z%Fi#Z;'S%};'S;=`'r<%lO%}&t%Fn['g&jOY%}Z!Q%}!Q![%Gd![!c%}!c!i%Gd!i#O%}#O#P&f#P#T%}#T#Z%Gd#Z;'S%};'S;=`'r<%lO%}&t%Gi['g&jOY%}Z!Q%}!Q![%=q![!c%}!c!i%=q!i#O%}#O#P&f#P#T%}#T#Z%=q#Z;'S%};'S;=`'r<%lO%}&t%HfXXY'g&jOY%}YZ%}Z]%}]^'W^#O%}#O#P&f#P;'S%};'S;=`'r<%lO%}&t%IW['g&jOY%}Z!Q%}!Q![%I|![!c%}!c!i%I|!i#O%}#O#P&f#P#T%}#T#Z%I|#Z;'S%};'S;=`'r<%lO%}&t%JR['g&jOY%}Z!Q%}!Q![%Jw![!c%}!c!i%Jw!i#O%}#O#P&f#P#T%}#T#Z%Jw#Z;'S%};'S;=`'r<%lO%}&t%KO[XY'g&jOY%}Z!Q%}!Q![%Jw![!c%}!c!i%Jw!i#O%}#O#P&f#P#T%}#T#Z%Jw#Z;'S%};'S;=`'r<%lO%}&t%KwP;=`<%l%=q2a%LVZ!W,V)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P#Q%Lx#Q;'S$e;'S;=`(u<%lO$e'Y%MTY)^d)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o%NQ[)[W(qQ%]!b'g&j!_,gOY$eZr$ers%^sw$ewx(Ox!_$e!_!`!8g!`#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e7Z& Vd)[W(zS(qQ!R,f(s%y'g&jOY$eZr$ers%9Ysw$ewx%9{x!Q$e!Q!Y%6Y!Y!Z%7q!Z![%6Y![!c$e!c!}%6Y!}#O$e#O#P&f#P#R$e#R#S%6Y#S#T$e#T#o%6Y#o;'S$e;'S;=`(u<%lO$e2]&!pY!T,g)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e3o&#m^)[W(qQ%]!b'g&j!^,gOY$eZr$ers%^sw$ewx(Ox!_$e!_!`!8g!`#O$e#O#P&f#P#p$e#p#q&$i#q;'S$e;'S;=`(u<%lO$e3o&$vY)U,g%_!b)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e'V&%qY!Ua)[W(qQ'g&jOY$eZr$ers%^sw$ewx(Ox#O$e#O#P&f#P;'S$e;'S;=`(u<%lO$e(]&&nc)[W(qQ%]!b'SP'g&jOX$eXY&'yZp$epq&'yqr$ers%^sw$ewx(Ox!c$e!c!}&)_!}#O$e#O#P&f#P#R$e#R#S&)_#S#T$e#T#o&)_#o;'S$e;'S;=`(u<%lO$e&y&(Sc)[W(qQ'g&jOX$eXY&'yZp$epq&'yqr$ers%^sw$ewx(Ox!c$e!c!}&)_!}#O$e#O#P&f#P#R$e#R#S&)_#S#T$e#T#o&)_#o;'S$e;'S;=`(u<%lO$e&y&)jb)[W(qQdT'g&jOY$eZr$ers%^sw$ewx(Ox!Q$e!Q![&)_![!c$e!c!}&)_!}#O$e#O#P&f#P#R$e#R#S&)_#S#T$e#T#o&)_#o;'S$e;'S;=`(u<%lO$e",
            tokenizers: [i, a, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
            topRules: {
                Program: [0, 308]
            },
            dynamicPrecedences: {
                87: 1,
                94: 1,
                119: 1,
                185: 1,
                188: -10,
                241: -10,
                242: 1,
                245: -1,
                247: -10,
                248: 1,
                263: -1,
                268: 2,
                269: 2,
                307: -10,
                366: 3,
                418: 1,
                419: 3,
                420: 1,
                421: 1
            },
            specialized: [{
                term: 357,
                get: e=>s[e] || -1
            }, {
                term: 32,
                get: e=>l[e] || -1
            }, {
                term: 66,
                get: e=>c[e] || -1
            }, {
                term: 364,
                get: e=>u[e] || -1
            }],
            tokenPrec: 24905
        });
        var d = O(168);
        let f = d.qp.define({
            name: "cpp",
            parser: p.configure({
                props: [d.uj.add({
                    IfStatement: (0,
                    d.tC)({
                        except: /^\s*({|else\b)/
                    }),
                    TryStatement: (0,
                    d.tC)({
                        except: /^\s*({|catch)\b/
                    }),
                    LabeledStatement: d.ze,
                    CaseStatement: e=>e.baseIndent + e.unit,
                    BlockComment: ()=>null,
                    CompoundStatement: (0,
                    d.vw)({
                        closing: "}"
                    }),
                    Statement: (0,
                    d.tC)({
                        except: /^{/
                    })
                }), d.x0.add({
                    "DeclarationList CompoundStatement EnumeratorList FieldDeclarationList InitializerList": d.Dv,
                    BlockComment: e=>({
                        from: e.from + 2,
                        to: e.to - 2
                    })
                })]
            }),
            languageData: {
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                },
                indentOnInput: /^\s*(?:case |default:|\{|\})$/,
                closeBrackets: {
                    stringPrefixes: ["L", "u", "U", "u8", "LR", "UR", "uR", "u8R", "R"]
                }
            }
        });
        function h() {
            return new d.ri(f)
        }
    },
    8662: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            css: function() {
                return T
            },
            cssCompletionSource: function() {
                return k
            },
            cssLanguage: function() {
                return w
            },
            defineCSSCompletionSource: function() {
                return v
            }
        });
        var n = O(2679)
          , r = O(5306);
        let i = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];
        function a(e) {
            return e >= 65 && e <= 90 || e >= 97 && e <= 122 || e >= 161
        }
        let o = new n.Jq((e,t)=>{
            for (let n = !1, r = 0, i = 0; ; i++) {
                var O;
                let {next: o} = e;
                if (a(o) || 45 == o || 95 == o || n && (O = o) >= 48 && O <= 57)
                    !n && (45 != o || i > 0) && (n = !0),
                    r === i && 45 == o && r++,
                    e.advance();
                else {
                    n && e.acceptToken(40 == o ? 95 : 2 == r && t.canShift(2) ? 2 : 96);
                    break
                }
            }
        }
        )
          , s = new n.Jq(e=>{
            if (i.includes(e.peek(-1))) {
                let {next: t} = e;
                (a(t) || 95 == t || 35 == t || 46 == t || 91 == t || 58 == t || 45 == t) && e.acceptToken(94)
            }
        }
        )
          , l = new n.Jq(e=>{
            if (!i.includes(e.peek(-1))) {
                let {next: t} = e;
                if (37 == t && (e.advance(),
                e.acceptToken(1)),
                a(t)) {
                    do
                        e.advance();
                    while (a(e.next));
                    e.acceptToken(1)
                }
            }
        }
        )
          , c = (0,
        r.Gv)({
            "AtKeyword import charset namespace keyframes media supports": r.pJ.definitionKeyword,
            "from to selector": r.pJ.keyword,
            NamespaceName: r.pJ.namespace,
            KeyframeName: r.pJ.labelName,
            TagName: r.pJ.tagName,
            ClassName: r.pJ.className,
            PseudoClassName: r.pJ.constant(r.pJ.className),
            IdName: r.pJ.labelName,
            "FeatureName PropertyName": r.pJ.propertyName,
            AttributeName: r.pJ.attributeName,
            NumberLiteral: r.pJ.number,
            KeywordQuery: r.pJ.keyword,
            UnaryQueryOp: r.pJ.operatorKeyword,
            "CallTag ValueName": r.pJ.atom,
            VariableName: r.pJ.variableName,
            Callee: r.pJ.operatorKeyword,
            Unit: r.pJ.unit,
            "UniversalSelector NestingSelector": r.pJ.definitionOperator,
            MatchOp: r.pJ.compareOperator,
            "ChildOp SiblingOp, LogicOp": r.pJ.logicOperator,
            BinOp: r.pJ.arithmeticOperator,
            Important: r.pJ.modifier,
            Comment: r.pJ.blockComment,
            ParenthesizedContent: r.pJ.special(r.pJ.name),
            ColorLiteral: r.pJ.color,
            StringLiteral: r.pJ.string,
            ":": r.pJ.punctuation,
            "PseudoOp #": r.pJ.derefOperator,
            "; ,": r.pJ.separator,
            "( )": r.pJ.paren,
            "[ ]": r.pJ.squareBracket,
            "{ }": r.pJ.brace
        })
          , u = {
            __proto__: null,
            lang: 32,
            "nth-child": 32,
            "nth-last-child": 32,
            "nth-of-type": 32,
            "nth-last-of-type": 32,
            dir: 32,
            "host-context": 32,
            url: 60,
            "url-prefix": 60,
            domain: 60,
            regexp: 60,
            selector: 134
        }
          , p = {
            __proto__: null,
            "@import": 114,
            "@media": 138,
            "@charset": 142,
            "@namespace": 146,
            "@keyframes": 152,
            "@supports": 164
        }
          , d = {
            __proto__: null,
            not: 128,
            only: 128,
            from: 158,
            to: 160
        }
          , f = n.WQ.deserialize({
            version: 14,
            states: "7WQYQ[OOO#_Q[OOOOQP'#Cd'#CdOOQP'#Cc'#CcO#fQ[O'#CfO$YQXO'#CaO$aQ[O'#ChO$lQ[O'#DPO$qQ[O'#DTOOQP'#Ed'#EdO$vQdO'#DeO%bQ[O'#DrO$vQdO'#DtO%sQ[O'#DvO&OQ[O'#DyO&TQ[O'#EPO&cQ[O'#EROOQS'#Ec'#EcOOQS'#ET'#ETQYQ[OOO&jQXO'#CdO'_QWO'#DaO'dQWO'#EjO'oQ[O'#EjQOQWOOOOQP'#Cg'#CgOOQP,59Q,59QO#fQ[O,59QO'yQ[O'#EWO(eQWO,58{O(mQ[O,59SO$lQ[O,59kO$qQ[O,59oO'yQ[O,59sO'yQ[O,59uO'yQ[O,59vO(xQ[O'#D`OOQS,58{,58{OOQP'#Ck'#CkOOQO'#C}'#C}OOQP,59S,59SO)PQWO,59SO)UQWO,59SOOQP'#DR'#DROOQP,59k,59kOOQO'#DV'#DVO)ZQ`O,59oOOQS'#Cp'#CpO$vQdO'#CqO)cQvO'#CsO*pQtO,5:POOQO'#Cx'#CxO)UQWO'#CwO+UQWO'#CyOOQS'#Eg'#EgOOQO'#Dh'#DhO+ZQ[O'#DoO+iQWO'#EkO&TQ[O'#DmO+wQWO'#DpOOQO'#El'#ElO(hQWO,5:^O+|QpO,5:`OOQS'#Dx'#DxO,UQWO,5:bO,ZQ[O,5:bOOQO'#D{'#D{O,cQWO,5:eO,hQWO,5:kO,pQWO,5:mOOQS-E8R-E8RO$vQdO,59{O,xQ[O'#EYO-VQWO,5;UO-VQWO,5;UOOQP1G.l1G.lO-|QXO,5:rOOQO-E8U-E8UOOQS1G.g1G.gOOQP1G.n1G.nO)PQWO1G.nO)UQWO1G.nOOQP1G/V1G/VO.ZQ`O1G/ZO.tQXO1G/_O/[QXO1G/aO/rQXO1G/bO0YQWO,59zO0_Q[O'#DOO0fQdO'#CoOOQP1G/Z1G/ZO$vQdO1G/ZO0mQpO,59]OOQS,59_,59_O$vQdO,59aO0uQWO1G/kOOQS,59c,59cO0zQ!bO,59eO1SQWO'#DhO1_QWO,5:TO1dQWO,5:ZO&TQ[O,5:VO&TQ[O'#EZO1lQWO,5;VO1wQWO,5:XO'yQ[O,5:[OOQS1G/x1G/xOOQS1G/z1G/zOOQS1G/|1G/|O2YQWO1G/|O2_QdO'#D|OOQS1G0P1G0POOQS1G0V1G0VOOQS1G0X1G0XO2mQtO1G/gOOQO,5:t,5:tO3TQ[O,5:tOOQO-E8W-E8WO3bQWO1G0pOOQP7+$Y7+$YOOQP7+$u7+$uO$vQdO7+$uOOQS1G/f1G/fO3mQXO'#EiO3tQWO,59jO3yQtO'#EUO4nQdO'#EfO4xQWO,59ZO4}QpO7+$uOOQS1G.w1G.wOOQS1G.{1G.{OOQS7+%V7+%VO5VQWO1G/PO$vQdO1G/oOOQO1G/u1G/uOOQO1G/q1G/qO5[QWO,5:uOOQO-E8X-E8XO5jQXO1G/vOOQS7+%h7+%hO5qQYO'#CsO(hQWO'#E[O5yQdO,5:hOOQS,5:h,5:hO6XQtO'#EXO$vQdO'#EXO7VQdO7+%ROOQO7+%R7+%ROOQO1G0`1G0`O7jQpO<<HaO7rQWO,5;TOOQP1G/U1G/UOOQS-E8S-E8SO$vQdO'#EVO7zQWO,5;QOOQT1G.u1G.uOOQP<<Ha<<HaOOQS7+$k7+$kO8SQdO7+%ZOOQO7+%b7+%bOOQS,5:v,5:vOOQS-E8Y-E8YOOQS1G0S1G0SO8ZQtO,5:sOOQS-E8V-E8VOOQO<<Hm<<HmOOQPAN={AN={O9XQdO,5:qOOQO-E8T-E8TOOQO<<Hu<<Hu",
            stateData: "9i~O#UOSROS~OUXOXXO]UO^UOtVOxWO!Y`O!ZYO!gZO!i[O!k]O!n^O!t_O#SQO#XSO~OQeOUXOXXO]UO^UOtVOxWO!Y`O!ZYO!gZO!i[O!k]O!n^O!t_O#SdO#XSO~O#P#^P~P!ZO#SiO~O]nO^nOplOtoOxpO|qO!PsO#QrO#XkO~O!RtO~P#kO`zO#RwO#SvO~O#S{O~O#S}O~OQ!WOb!QOf!WOh!WOn!VO#R!TO#S!PO#[!RO~Ob!YO!b![O!e!]O#S!XO!R#_P~Oh!bOn!VO#S!aO~O#S!dO~Ob!YO!b![O!e!]O#S!XO~O!W#_P~P%bO]WX]!UX^WXpWXtWXxWX|WX!PWX!RWX#QWX#XWX~O]!iO~O!W!jO#P#^X!Q#^X~O#P#^X!Q#^X~P!ZOUXOXXO]UO^UOtVOxWO#SQO#XSO~OplO!RtO~O`!sO#RwO#SvO~O!Q#^P~P!ZOb!zO~Ob!{O~Ov!|Oz!}O~OP#PObgXjgX!WgX!bgX!egX#SgXagXQgXfgXhgXngXpgX!VgX#PgX#RgX#[gXvgX!QgX~Ob!YOj#QO!b![O!e!]O#S!XO!W#_P~Ob#TO~Ob!YO!b![O!e!]O#S#UO~Op#YO!`#XO!R#_X!W#_X~Ob#]O~Oj#QO!W#_O~O!W#`O~Oh#aOn!VO~O!R#bO~O!RtO!`#XO~O!RtO!W#eO~O!W!|X#P!|X!Q!|X~P!ZO!W!jO#P#^a!Q#^a~O]nO^nOtoOxpO|qO!PsO#QrO#XkO~Op!za!R!zaa!za~P-bOv#lOz#mO~O]nO^nOtoOxpO#XkO~Op{i|{i!P{i!R{i#Q{ia{i~P.cOp}i|}i!P}i!R}i#Q}ia}i~P.cOp!Oi|!Oi!P!Oi!R!Oi#Q!Oia!Oi~P.cO!Q#nO~Oa#]P~P'yOa#YP~P$vOa#uOj#QO~O!W#wO~Oh#xOo#xO~O]!^Xa![X!`![X~O]#yO~Oa#zO!`#XO~Op#YO!R#_a!W#_a~O!`#XOp!aa!R!aa!W!aaa!aa~O!W$PO~O!Q$TO!q$RO!r$RO#[$QO~Oj#QOp$VO!V$XO!W!Ti#P!Ti!Q!Ti~P$vO!W!|a#P!|a!Q!|a~P!ZO!W!jO#P#^i!Q#^i~Oa#]X~P#kOa$]O~Oj#QOQ!xXa!xXb!xXf!xXh!xXn!xXp!xX#R!xX#S!xX#[!xX~Op$_Oa#YX~P$vOa$aO~Oj#QOv$bO~Oa$cO~O!`#XOp!}a!R!}a!W!}a~Oa$eO~P-bOP#PO!RgX~O!Q$hO!q$RO!r$RO#[$QO~Oj#QOQ!{Xb!{Xf!{Xh!{Xn!{Xp!{X!V!{X!W!{X#P!{X#R!{X#S!{X#[!{X!Q!{X~Op$VO!V$kO!W!Tq#P!Tq!Q!Tq~P$vOj#QOv$lO~OplOa#]a~Op$_Oa#Ya~Oa$oO~P$vOj#QOQ!{ab!{af!{ah!{an!{ap!{a!V!{a!W!{a#P!{a#R!{a#S!{a#[!{a!Q!{a~Oa!yap!ya~P$vOo#[j!Pj~",
            goto: ",`#aPPPPP#bP#k#zP#k$Z#kPP$aPPP$g$p$pP%SP$pP$p%j%|PPP&f&l#kP&rP#kP&xP#kP#k#kPPP'O'b'oPP#bPP'v'v(Q'vP'vP'v'vP#bP#bP#bP(T#bP(W(ZPP#bP#bP(^(m({)R)])c)m)sPPPPPP)y*SP*o*rP+h+k+q+z_aOPcgt!j#hkXOPcglqrst!j!z#]#hkROPcglqrst!j!z#]#hQjSR!mkQxUR!qnQ!qzQ#S!UR#k!sq!WY[!Q!i!{!}#Q#f#m#r#y$V$W$_$d$mp!WY[!Q!i!{!}#Q#f#m#r#y$V$W$_$d$mT$R#b$Sq!UY[!Q!i!{!}#Q#f#m#r#y$V$W$_$d$mp!WY[!Q!i!{!}#Q#f#m#r#y$V$W$_$d$mQ!b]R#a!cQyUR!rnQ!qyR#k!rQ|VR!toQ!OWR!upQuTQ!pmQ#^!_Q#d!fQ#e!gR$f$RSfPtQ!lgQ#g!jR$Y#hZePgt!j#ha!^Z_`!S!Y![#X#YR#V!YR!c]R!e^R#c!eQcOSgPtU!hcg#hR#h!jQ#r!{U$^#r$d$mQ$d#yR$m$_Q$`#rR$n$`QmTS!om$[R$[#oQ$W#fR$j$WQ!kfS#i!k#jR#j!lQ#Z!ZR#}#ZQ$S#bR$g$S_bOPcgt!j#h^TOPcgt!j#hQ!nlQ!vqQ!wrQ!xsQ#o!zR$O#]R#s!{Q!SYQ!`[Q#O!QQ#f!i[#q!{#r#y$_$d$mQ#t!}Q#v#QS$U#f$WQ$Z#mR$i$VR#p!zQhPR!ytQ!_ZQ!g`R#R!SU!ZZ`!SQ!f_Q#W!YQ#[![Q#{#XR#|#Y",
            nodeNames: "⚠ Unit VariableName Comment StyleSheet RuleSet UniversalSelector TagSelector TagName NestingSelector ClassSelector ClassName PseudoClassSelector : :: PseudoClassName PseudoClassName ) ( ArgList ValueName ParenthesizedValue ColorLiteral NumberLiteral StringLiteral BinaryExpression BinOp CallExpression Callee CallLiteral CallTag ParenthesizedContent , PseudoClassName ArgList IdSelector # IdName ] AttributeSelector [ AttributeName MatchOp ChildSelector ChildOp DescendantSelector SiblingSelector SiblingOp } { Block Declaration PropertyName Important ; ImportStatement AtKeyword import KeywordQuery FeatureQuery FeatureName BinaryQuery LogicOp UnaryQuery UnaryQueryOp ParenthesizedQuery SelectorQuery selector MediaStatement media CharsetStatement charset NamespaceStatement namespace NamespaceName KeyframesStatement keyframes KeyframeName KeyframeList from to SupportsStatement supports AtRule Styles",
            maxTerm: 108,
            nodeProps: [["openedBy", 17, "(", 48, "{"], ["closedBy", 18, ")", 49, "}"]],
            propSources: [c],
            skippedNodes: [0, 3],
            repeatNodeCount: 8,
            tokenData: "Lq~R!^OX$}X^%u^p$}pq%uqr)Xrs.Rst/utu6duv$}vw7^wx7oxy9^yz9oz{9t{|:_|}?Q}!O?c!O!P@Q!P!Q@i!Q![Cu![!]Dp!]!^El!^!_$}!_!`E}!`!aF`!a!b$}!b!cG[!c!}$}!}#OHt#O#P$}#P#QIV#Q#R6d#R#T$}#T#UIh#U#c$}#c#dJy#d#o$}#o#pK`#p#q6d#q#rKq#r#sLS#s#y$}#y#z%u#z$f$}$f$g%u$g#BY$}#BY#BZ%u#BZ$IS$}$IS$I_%u$I_$I|$}$I|$JO%u$JO$JT$}$JT$JU%u$JU$KV$}$KV$KW%u$KW&FU$}&FU&FV%u&FV;'S$};'S;=`Lk<%lO$}W%QSOy%^z;'S%^;'S;=`%o<%lO%^W%cSoWOy%^z;'S%^;'S;=`%o<%lO%^W%rP;=`<%l%^~%zh#U~OX%^X^'f^p%^pq'fqy%^z#y%^#y#z'f#z$f%^$f$g'f$g#BY%^#BY#BZ'f#BZ$IS%^$IS$I_'f$I_$I|%^$I|$JO'f$JO$JT%^$JT$JU'f$JU$KV%^$KV$KW'f$KW&FU%^&FU&FV'f&FV;'S%^;'S;=`%o<%lO%^~'mh#U~oWOX%^X^'f^p%^pq'fqy%^z#y%^#y#z'f#z$f%^$f$g'f$g#BY%^#BY#BZ'f#BZ$IS%^$IS$I_'f$I_$I|%^$I|$JO'f$JO$JT%^$JT$JU'f$JU$KV%^$KV$KW'f$KW&FU%^&FU&FV'f&FV;'S%^;'S;=`%o<%lO%^^)[UOy%^z#]%^#]#^)n#^;'S%^;'S;=`%o<%lO%^^)sUoWOy%^z#a%^#a#b*V#b;'S%^;'S;=`%o<%lO%^^*[UoWOy%^z#d%^#d#e*n#e;'S%^;'S;=`%o<%lO%^^*sUoWOy%^z#c%^#c#d+V#d;'S%^;'S;=`%o<%lO%^^+[UoWOy%^z#f%^#f#g+n#g;'S%^;'S;=`%o<%lO%^^+sUoWOy%^z#h%^#h#i,V#i;'S%^;'S;=`%o<%lO%^^,[UoWOy%^z#T%^#T#U,n#U;'S%^;'S;=`%o<%lO%^^,sUoWOy%^z#b%^#b#c-V#c;'S%^;'S;=`%o<%lO%^^-[UoWOy%^z#h%^#h#i-n#i;'S%^;'S;=`%o<%lO%^^-uS!VUoWOy%^z;'S%^;'S;=`%o<%lO%^~.UWOY.RZr.Rrs.ns#O.R#O#P.s#P;'S.R;'S;=`/o<%lO.R~.sOh~~.vRO;'S.R;'S;=`/P;=`O.R~/SXOY.RZr.Rrs.ns#O.R#O#P.s#P;'S.R;'S;=`/o;=`<%l.R<%lO.R~/rP;=`<%l.R_/zYtPOy%^z!Q%^!Q![0j![!c%^!c!i0j!i#T%^#T#Z0j#Z;'S%^;'S;=`%o<%lO%^^0oYoWOy%^z!Q%^!Q![1_![!c%^!c!i1_!i#T%^#T#Z1_#Z;'S%^;'S;=`%o<%lO%^^1dYoWOy%^z!Q%^!Q![2S![!c%^!c!i2S!i#T%^#T#Z2S#Z;'S%^;'S;=`%o<%lO%^^2ZYfUoWOy%^z!Q%^!Q![2y![!c%^!c!i2y!i#T%^#T#Z2y#Z;'S%^;'S;=`%o<%lO%^^3QYfUoWOy%^z!Q%^!Q![3p![!c%^!c!i3p!i#T%^#T#Z3p#Z;'S%^;'S;=`%o<%lO%^^3uYoWOy%^z!Q%^!Q![4e![!c%^!c!i4e!i#T%^#T#Z4e#Z;'S%^;'S;=`%o<%lO%^^4lYfUoWOy%^z!Q%^!Q![5[![!c%^!c!i5[!i#T%^#T#Z5[#Z;'S%^;'S;=`%o<%lO%^^5aYoWOy%^z!Q%^!Q![6P![!c%^!c!i6P!i#T%^#T#Z6P#Z;'S%^;'S;=`%o<%lO%^^6WSfUoWOy%^z;'S%^;'S;=`%o<%lO%^Y6gUOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^Y7QSzQoWOy%^z;'S%^;'S;=`%o<%lO%^X7cSXPOy%^z;'S%^;'S;=`%o<%lO%^~7rWOY7oZw7owx.nx#O7o#O#P8[#P;'S7o;'S;=`9W<%lO7o~8_RO;'S7o;'S;=`8h;=`O7o~8kXOY7oZw7owx.nx#O7o#O#P8[#P;'S7o;'S;=`9W;=`<%l7o<%lO7o~9ZP;=`<%l7o_9cSbVOy%^z;'S%^;'S;=`%o<%lO%^~9tOa~_9{UUPjSOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^_:fWjS!PPOy%^z!O%^!O!P;O!P!Q%^!Q![>T![;'S%^;'S;=`%o<%lO%^^;TUoWOy%^z!Q%^!Q![;g![;'S%^;'S;=`%o<%lO%^^;nYoW#[UOy%^z!Q%^!Q![;g![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^^<cYoWOy%^z{%^{|=R|}%^}!O=R!O!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^^=WUoWOy%^z!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^^=qUoW#[UOy%^z!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^^>[[oW#[UOy%^z!O%^!O!P;g!P!Q%^!Q![>T![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^_?VSpVOy%^z;'S%^;'S;=`%o<%lO%^^?hWjSOy%^z!O%^!O!P;O!P!Q%^!Q![>T![;'S%^;'S;=`%o<%lO%^_@VU#XPOy%^z!Q%^!Q![;g![;'S%^;'S;=`%o<%lO%^~@nTjSOy%^z{@}{;'S%^;'S;=`%o<%lO%^~ASUoWOy@}yzAfz{Bm{;'S@};'S;=`Co<%lO@}~AiTOzAfz{Ax{;'SAf;'S;=`Bg<%lOAf~A{VOzAfz{Ax{!PAf!P!QBb!Q;'SAf;'S;=`Bg<%lOAf~BgOR~~BjP;=`<%lAf~BrWoWOy@}yzAfz{Bm{!P@}!P!QC[!Q;'S@};'S;=`Co<%lO@}~CcSoWR~Oy%^z;'S%^;'S;=`%o<%lO%^~CrP;=`<%l@}^Cz[#[UOy%^z!O%^!O!P;g!P!Q%^!Q![>T![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^XDuU]POy%^z![%^![!]EX!];'S%^;'S;=`%o<%lO%^XE`S^PoWOy%^z;'S%^;'S;=`%o<%lO%^_EqS!WVOy%^z;'S%^;'S;=`%o<%lO%^YFSSzQOy%^z;'S%^;'S;=`%o<%lO%^XFeU|POy%^z!`%^!`!aFw!a;'S%^;'S;=`%o<%lO%^XGOS|PoWOy%^z;'S%^;'S;=`%o<%lO%^XG_WOy%^z!c%^!c!}Gw!}#T%^#T#oGw#o;'S%^;'S;=`%o<%lO%^XHO[!YPoWOy%^z}%^}!OGw!O!Q%^!Q![Gw![!c%^!c!}Gw!}#T%^#T#oGw#o;'S%^;'S;=`%o<%lO%^XHySxPOy%^z;'S%^;'S;=`%o<%lO%^^I[SvUOy%^z;'S%^;'S;=`%o<%lO%^XIkUOy%^z#b%^#b#cI}#c;'S%^;'S;=`%o<%lO%^XJSUoWOy%^z#W%^#W#XJf#X;'S%^;'S;=`%o<%lO%^XJmS!`PoWOy%^z;'S%^;'S;=`%o<%lO%^XJ|UOy%^z#f%^#f#gJf#g;'S%^;'S;=`%o<%lO%^XKeS!RPOy%^z;'S%^;'S;=`%o<%lO%^_KvS!QVOy%^z;'S%^;'S;=`%o<%lO%^ZLXU!PPOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^WLnP;=`<%l$}",
            tokenizers: [s, l, o, 0, 1, 2, 3],
            topRules: {
                StyleSheet: [0, 4],
                Styles: [1, 84]
            },
            specialized: [{
                term: 95,
                get: e=>u[e] || -1
            }, {
                term: 56,
                get: e=>p[e] || -1
            }, {
                term: 96,
                get: e=>d[e] || -1
            }],
            tokenPrec: 1123
        });
        var h = O(168)
          , m = O(770);
        let Q = null;
        function $() {
            if (!Q && "object" == typeof document && document.body) {
                let {style: e} = document.body
                  , t = []
                  , O = new Set;
                for (let n in e)
                    "cssText" == n || "cssFloat" == n || "string" != typeof e[n] || (/[A-Z]/.test(n) && (n = n.replace(/[A-Z]/g, e=>"-" + e.toLowerCase())),
                    O.has(n) || (t.push(n),
                    O.add(n)));
                Q = t.sort().map(e=>({
                    type: "property",
                    label: e
                }))
            }
            return Q || []
        }
        let g = ["active", "after", "any-link", "autofill", "backdrop", "before", "checked", "cue", "default", "defined", "disabled", "empty", "enabled", "file-selector-button", "first", "first-child", "first-letter", "first-line", "first-of-type", "focus", "focus-visible", "focus-within", "fullscreen", "has", "host", "host-context", "hover", "in-range", "indeterminate", "invalid", "is", "lang", "last-child", "last-of-type", "left", "link", "marker", "modal", "not", "nth-child", "nth-last-child", "nth-last-of-type", "nth-of-type", "only-child", "only-of-type", "optional", "out-of-range", "part", "placeholder", "placeholder-shown", "read-only", "read-write", "required", "right", "root", "scope", "selection", "slotted", "target", "target-text", "valid", "visited", "where"].map(e=>({
            type: "class",
            label: e
        }))
          , P = ["above", "absolute", "activeborder", "additive", "activecaption", "after-white-space", "ahead", "alias", "all", "all-scroll", "alphabetic", "alternate", "always", "antialiased", "appworkspace", "asterisks", "attr", "auto", "auto-flow", "avoid", "avoid-column", "avoid-page", "avoid-region", "axis-pan", "background", "backwards", "baseline", "below", "bidi-override", "blink", "block", "block-axis", "bold", "bolder", "border", "border-box", "both", "bottom", "break", "break-all", "break-word", "bullets", "button", "button-bevel", "buttonface", "buttonhighlight", "buttonshadow", "buttontext", "calc", "capitalize", "caps-lock-indicator", "caption", "captiontext", "caret", "cell", "center", "checkbox", "circle", "cjk-decimal", "clear", "clip", "close-quote", "col-resize", "collapse", "color", "color-burn", "color-dodge", "column", "column-reverse", "compact", "condensed", "contain", "content", "contents", "content-box", "context-menu", "continuous", "copy", "counter", "counters", "cover", "crop", "cross", "crosshair", "currentcolor", "cursive", "cyclic", "darken", "dashed", "decimal", "decimal-leading-zero", "default", "default-button", "dense", "destination-atop", "destination-in", "destination-out", "destination-over", "difference", "disc", "discard", "disclosure-closed", "disclosure-open", "document", "dot-dash", "dot-dot-dash", "dotted", "double", "down", "e-resize", "ease", "ease-in", "ease-in-out", "ease-out", "element", "ellipse", "ellipsis", "embed", "end", "ethiopic-abegede-gez", "ethiopic-halehame-aa-er", "ethiopic-halehame-gez", "ew-resize", "exclusion", "expanded", "extends", "extra-condensed", "extra-expanded", "fantasy", "fast", "fill", "fill-box", "fixed", "flat", "flex", "flex-end", "flex-start", "footnotes", "forwards", "from", "geometricPrecision", "graytext", "grid", "groove", "hand", "hard-light", "help", "hidden", "hide", "higher", "highlight", "highlighttext", "horizontal", "hsl", "hsla", "hue", "icon", "ignore", "inactiveborder", "inactivecaption", "inactivecaptiontext", "infinite", "infobackground", "infotext", "inherit", "initial", "inline", "inline-axis", "inline-block", "inline-flex", "inline-grid", "inline-table", "inset", "inside", "intrinsic", "invert", "italic", "justify", "keep-all", "landscape", "large", "larger", "left", "level", "lighter", "lighten", "line-through", "linear", "linear-gradient", "lines", "list-item", "listbox", "listitem", "local", "logical", "loud", "lower", "lower-hexadecimal", "lower-latin", "lower-norwegian", "lowercase", "ltr", "luminosity", "manipulation", "match", "matrix", "matrix3d", "medium", "menu", "menutext", "message-box", "middle", "min-intrinsic", "mix", "monospace", "move", "multiple", "multiple_mask_images", "multiply", "n-resize", "narrower", "ne-resize", "nesw-resize", "no-close-quote", "no-drop", "no-open-quote", "no-repeat", "none", "normal", "not-allowed", "nowrap", "ns-resize", "numbers", "numeric", "nw-resize", "nwse-resize", "oblique", "opacity", "open-quote", "optimizeLegibility", "optimizeSpeed", "outset", "outside", "outside-shape", "overlay", "overline", "padding", "padding-box", "painted", "page", "paused", "perspective", "pinch-zoom", "plus-darker", "plus-lighter", "pointer", "polygon", "portrait", "pre", "pre-line", "pre-wrap", "preserve-3d", "progress", "push-button", "radial-gradient", "radio", "read-only", "read-write", "read-write-plaintext-only", "rectangle", "region", "relative", "repeat", "repeating-linear-gradient", "repeating-radial-gradient", "repeat-x", "repeat-y", "reset", "reverse", "rgb", "rgba", "ridge", "right", "rotate", "rotate3d", "rotateX", "rotateY", "rotateZ", "round", "row", "row-resize", "row-reverse", "rtl", "run-in", "running", "s-resize", "sans-serif", "saturation", "scale", "scale3d", "scaleX", "scaleY", "scaleZ", "screen", "scroll", "scrollbar", "scroll-position", "se-resize", "self-start", "self-end", "semi-condensed", "semi-expanded", "separate", "serif", "show", "single", "skew", "skewX", "skewY", "skip-white-space", "slide", "slider-horizontal", "slider-vertical", "sliderthumb-horizontal", "sliderthumb-vertical", "slow", "small", "small-caps", "small-caption", "smaller", "soft-light", "solid", "source-atop", "source-in", "source-out", "source-over", "space", "space-around", "space-between", "space-evenly", "spell-out", "square", "start", "static", "status-bar", "stretch", "stroke", "stroke-box", "sub", "subpixel-antialiased", "svg_masks", "super", "sw-resize", "symbolic", "symbols", "system-ui", "table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row", "table-row-group", "text", "text-bottom", "text-top", "textarea", "textfield", "thick", "thin", "threeddarkshadow", "threedface", "threedhighlight", "threedlightshadow", "threedshadow", "to", "top", "transform", "translate", "translate3d", "translateX", "translateY", "translateZ", "transparent", "ultra-condensed", "ultra-expanded", "underline", "unidirectional-pan", "unset", "up", "upper-latin", "uppercase", "url", "var", "vertical", "vertical-text", "view-box", "visible", "visibleFill", "visiblePainted", "visibleStroke", "visual", "w-resize", "wait", "wave", "wider", "window", "windowframe", "windowtext", "words", "wrap", "wrap-reverse", "x-large", "x-small", "xor", "xx-large", "xx-small"].map(e=>({
            type: "keyword",
            label: e
        })).concat(["aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "grey", "green", "greenyellow", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "rebeccapurple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen"].map(e=>({
            type: "constant",
            label: e
        })))
          , S = ["a", "abbr", "address", "article", "aside", "b", "bdi", "bdo", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "figcaption", "figure", "footer", "form", "header", "hgroup", "h1", "h2", "h3", "h4", "h5", "h6", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "meter", "nav", "ol", "output", "p", "pre", "ruby", "section", "select", "small", "source", "span", "strong", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "tr", "u", "ul"].map(e=>({
            type: "type",
            label: e
        }))
          , b = /^(\w[\w-]*|-\w[\w-]*|)$/
          , y = /^-(-[\w-]*)?$/
          , x = new m.hr
          , X = ["Declaration"]
          , v = e=>t=>{
            let {state: O, pos: n} = t
              , r = (0,
            h.qz)(O).resolveInner(n, -1)
              , i = r.type.isError && r.from == r.to - 1 && "-" == O.doc.sliceString(r.from, r.to);
            if ("PropertyName" == r.name || (i || "TagName" == r.name) && /^(Block|Styles)$/.test(r.resolve(r.to).name))
                return {
                    from: r.from,
                    options: $(),
                    validFor: b
                };
            if ("ValueName" == r.name)
                return {
                    from: r.from,
                    options: P,
                    validFor: b
                };
            if ("PseudoClassName" == r.name)
                return {
                    from: r.from,
                    options: g,
                    validFor: b
                };
            if (e(r) || (t.explicit || i) && function(e, t) {
                var O;
                if (("(" == e.name || e.type.isError) && (e = e.parent || e),
                "ArgList" != e.name)
                    return !1;
                let n = null === (O = e.parent) || void 0 === O ? void 0 : O.firstChild;
                return (null == n ? void 0 : n.name) == "Callee" && "var" == t.sliceString(n.from, n.to)
            }(r, O.doc))
                return {
                    from: e(r) || i ? r.from : n,
                    options: function e(t, O, n) {
                        if (O.to - O.from > 4096) {
                            let r = x.get(O);
                            if (r)
                                return r;
                            let i = []
                              , a = new Set
                              , o = O.cursor(m.vj.IncludeAnonymous);
                            if (o.firstChild())
                                do
                                    for (let O of e(t, o.node, n))
                                        a.has(O.label) || (a.add(O.label),
                                        i.push(O));
                                while (o.nextSibling());
                            return x.set(O, i),
                            i
                        }
                        {
                            let e = []
                              , r = new Set;
                            return O.cursor().iterate(O=>{
                                var i;
                                if (n(O) && O.matchContext(X) && (null === (i = O.node.nextSibling) || void 0 === i ? void 0 : i.name) == ":") {
                                    let n = t.sliceString(O.from, O.to);
                                    r.has(n) || (r.add(n),
                                    e.push({
                                        label: n,
                                        type: "variable"
                                    }))
                                }
                            }
                            ),
                            e
                        }
                    }(O.doc, function(e) {
                        for (let t = e; ; ) {
                            if (t.type.isTop)
                                return t;
                            if (!(t = t.parent))
                                return e
                        }
                    }(r), e),
                    validFor: y
                };
            if ("TagName" == r.name) {
                for (let {parent: e} = r; e; e = e.parent)
                    if ("Block" == e.name)
                        return {
                            from: r.from,
                            options: $(),
                            validFor: b
                        };
                return {
                    from: r.from,
                    options: S,
                    validFor: b
                }
            }
            if (!t.explicit)
                return null;
            let a = r.resolve(n)
              , o = a.childBefore(n);
            return o && ":" == o.name && "PseudoClassSelector" == a.name ? {
                from: n,
                options: g,
                validFor: b
            } : o && ":" == o.name && "Declaration" == a.name || "ArgList" == a.name ? {
                from: n,
                options: P,
                validFor: b
            } : "Block" == a.name || "Styles" == a.name ? {
                from: n,
                options: $(),
                validFor: b
            } : null
        }
          , k = v(e=>"VariableName" == e.name)
          , w = h.qp.define({
            name: "css",
            parser: f.configure({
                props: [h.uj.add({
                    Declaration: (0,
                    h.tC)()
                }), h.x0.add({
                    Block: h.Dv
                })]
            }),
            languageData: {
                commentTokens: {
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                },
                indentOnInput: /^\s*\}$/,
                wordChars: "-"
            }
        });
        function T() {
            return new h.ri(w,w.data.of({
                autocomplete: k
            }))
        }
    },
    1303: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            autoCloseTags: function() {
                return el
            },
            html: function() {
                return eo
            },
            htmlCompletionSource: function() {
                return et
            },
            htmlCompletionSourceWith: function() {
                return eO
            },
            htmlLanguage: function() {
                return ea
            },
            htmlPlain: function() {
                return ei
            }
        });
        var n = O(2679)
          , r = O(5306)
          , i = O(770);
        let a = {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            command: !0,
            embed: !0,
            frame: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0,
            menuitem: !0
        }
          , o = {
            dd: !0,
            li: !0,
            optgroup: !0,
            option: !0,
            p: !0,
            rp: !0,
            rt: !0,
            tbody: !0,
            td: !0,
            tfoot: !0,
            th: !0,
            tr: !0
        }
          , s = {
            dd: {
                dd: !0,
                dt: !0
            },
            dt: {
                dd: !0,
                dt: !0
            },
            li: {
                li: !0
            },
            option: {
                option: !0,
                optgroup: !0
            },
            optgroup: {
                optgroup: !0
            },
            p: {
                address: !0,
                article: !0,
                aside: !0,
                blockquote: !0,
                dir: !0,
                div: !0,
                dl: !0,
                fieldset: !0,
                footer: !0,
                form: !0,
                h1: !0,
                h2: !0,
                h3: !0,
                h4: !0,
                h5: !0,
                h6: !0,
                header: !0,
                hgroup: !0,
                hr: !0,
                menu: !0,
                nav: !0,
                ol: !0,
                p: !0,
                pre: !0,
                section: !0,
                table: !0,
                ul: !0
            },
            rp: {
                rp: !0,
                rt: !0
            },
            rt: {
                rp: !0,
                rt: !0
            },
            tbody: {
                tbody: !0,
                tfoot: !0
            },
            td: {
                td: !0,
                th: !0
            },
            tfoot: {
                tbody: !0
            },
            th: {
                td: !0,
                th: !0
            },
            thead: {
                tbody: !0,
                tfoot: !0
            },
            tr: {
                tr: !0
            }
        };
        function l(e) {
            return 9 == e || 10 == e || 13 == e || 32 == e
        }
        let c = null
          , u = null
          , p = 0;
        function d(e, t) {
            var O;
            let n = e.pos + t;
            if (p == n && u == e)
                return c;
            let r = e.peek(t);
            for (; l(r); )
                r = e.peek(++t);
            let i = "";
            for (; 45 == (O = r) || 46 == O || 58 == O || O >= 65 && O <= 90 || 95 == O || O >= 97 && O <= 122 || O >= 161; )
                i += String.fromCharCode(r),
                r = e.peek(++t);
            return u = e,
            p = n,
            c = i ? i.toLowerCase() : r == f || r == h ? void 0 : null
        }
        let f = 63
          , h = 33;
        function m(e, t) {
            this.name = e,
            this.parent = t,
            this.hash = t ? t.hash : 0;
            for (let t = 0; t < e.length; t++)
                this.hash += (this.hash << 4) + e.charCodeAt(t) + (e.charCodeAt(t) << 8)
        }
        let Q = [6, 10, 7, 8, 9]
          , $ = new n.IK({
            start: null,
            shift: (e,t,O,n)=>Q.indexOf(t) > -1 ? new m(d(n, 1) || "",e) : e,
            reduce: (e,t)=>20 == t && e ? e.parent : e,
            reuse(e, t, O, n) {
                let r = t.type.id;
                return 6 == r || 36 == r ? new m(d(n, 1) || "",e) : e
            },
            hash: e=>e ? e.hash : 0,
            strict: !1
        })
          , g = new n.Jq((e,t)=>{
            if (60 != e.next) {
                e.next < 0 && t.context && e.acceptToken(57);
                return
            }
            e.advance();
            let O = 47 == e.next;
            O && e.advance();
            let n = d(e, 0);
            if (void 0 === n)
                return;
            if (!n)
                return e.acceptToken(O ? 14 : 6);
            let r = t.context ? t.context.name : null;
            if (O) {
                if (n == r)
                    return e.acceptToken(11);
                if (r && o[r])
                    return e.acceptToken(57, -2);
                if (t.dialectEnabled(0))
                    return e.acceptToken(12);
                for (let e = t.context; e; e = e.parent)
                    if (e.name == n)
                        return;
                e.acceptToken(13)
            } else {
                if ("script" == n)
                    return e.acceptToken(7);
                if ("style" == n)
                    return e.acceptToken(8);
                if ("textarea" == n)
                    return e.acceptToken(9);
                if (a.hasOwnProperty(n))
                    return e.acceptToken(10);
                r && s[r] && s[r][n] ? e.acceptToken(57, -1) : e.acceptToken(6)
            }
        }
        ,{
            contextual: !0
        })
          , P = new n.Jq(e=>{
            for (let t = 0, O = 0; ; O++) {
                if (e.next < 0) {
                    O && e.acceptToken(58);
                    break
                }
                if (45 == e.next)
                    t++;
                else if (62 == e.next && t >= 2) {
                    O > 3 && e.acceptToken(58, -2);
                    break
                } else
                    t = 0;
                e.advance()
            }
        }
        )
          , S = new n.Jq((e,t)=>{
            if (47 == e.next && 62 == e.peek(1)) {
                let O = t.dialectEnabled(1) || function(e) {
                    for (; e; e = e.parent)
                        if ("svg" == e.name || "math" == e.name)
                            return !0;
                    return !1
                }(t.context);
                e.acceptToken(O ? 5 : 4, 2)
            } else
                62 == e.next && e.acceptToken(4, 1)
        }
        );
        function b(e, t, O) {
            let r = 2 + e.length;
            return new n.Jq(n=>{
                for (let i = 0, a = 0, o = 0; ; o++) {
                    if (n.next < 0) {
                        o && n.acceptToken(t);
                        break
                    }
                    if (0 == i && 60 == n.next || 1 == i && 47 == n.next || i >= 2 && i < r && n.next == e.charCodeAt(i - 2))
                        i++,
                        a++;
                    else if ((2 == i || i == r) && l(n.next))
                        a++;
                    else if (i == r && 62 == n.next) {
                        o > a ? n.acceptToken(t, -a) : n.acceptToken(O, -(a - 2));
                        break
                    } else if ((10 == n.next || 13 == n.next) && o) {
                        n.acceptToken(t, 1);
                        break
                    } else
                        i = a = 0;
                    n.advance()
                }
            }
            )
        }
        let y = b("script", 54, 1)
          , x = b("style", 55, 2)
          , X = b("textarea", 56, 3)
          , v = (0,
        r.Gv)({
            "Text RawText": r.pJ.content,
            "StartTag StartCloseTag SelfClosingEndTag EndTag": r.pJ.angleBracket,
            TagName: r.pJ.tagName,
            "MismatchedCloseTag/TagName": [r.pJ.tagName, r.pJ.invalid],
            AttributeName: r.pJ.attributeName,
            "AttributeValue UnquotedAttributeValue": r.pJ.attributeValue,
            Is: r.pJ.definitionOperator,
            "EntityReference CharacterReference": r.pJ.character,
            Comment: r.pJ.blockComment,
            ProcessingInst: r.pJ.processingInstruction,
            DoctypeDecl: r.pJ.documentMeta
        })
          , k = n.WQ.deserialize({
            version: 14,
            states: ",xOVO!rOOO!WQ#tO'#CqO!]Q#tO'#CzO!bQ#tO'#C}O!gQ#tO'#DQO!lQ#tO'#DSO!qOaO'#CpO!|ObO'#CpO#XOdO'#CpO$eO!rO'#CpOOO`'#Cp'#CpO$lO$fO'#DTO$tQ#tO'#DVO$yQ#tO'#DWOOO`'#Dk'#DkOOO`'#DY'#DYQVO!rOOO%OQ&rO,59]O%WQ&rO,59fO%`Q&rO,59iO%hQ&rO,59lO%sQ&rO,59nOOOa'#D^'#D^O%{OaO'#CxO&WOaO,59[OOOb'#D_'#D_O&`ObO'#C{O&kObO,59[OOOd'#D`'#D`O&sOdO'#DOO'OOdO,59[OOO`'#Da'#DaO'WO!rO,59[O'_Q#tO'#DROOO`,59[,59[OOOp'#Db'#DbO'dO$fO,59oOOO`,59o,59oO'lQ#|O,59qO'qQ#|O,59rOOO`-E7W-E7WO'vQ&rO'#CsOOQW'#DZ'#DZO(UQ&rO1G.wOOOa1G.w1G.wO(^Q&rO1G/QOOOb1G/Q1G/QO(fQ&rO1G/TOOOd1G/T1G/TO(nQ&rO1G/WOOO`1G/W1G/WOOO`1G/Y1G/YO(yQ&rO1G/YOOOa-E7[-E7[O)RQ#tO'#CyOOO`1G.v1G.vOOOb-E7]-E7]O)WQ#tO'#C|OOOd-E7^-E7^O)]Q#tO'#DPOOO`-E7_-E7_O)bQ#|O,59mOOOp-E7`-E7`OOO`1G/Z1G/ZOOO`1G/]1G/]OOO`1G/^1G/^O)gQ,UO,59_OOQW-E7X-E7XOOOa7+$c7+$cOOOb7+$l7+$lOOOd7+$o7+$oOOO`7+$r7+$rOOO`7+$t7+$tO)rQ#|O,59eO)wQ#|O,59hO)|Q#|O,59kOOO`1G/X1G/XO*RO7[O'#CvO*dOMhO'#CvOOQW1G.y1G.yOOO`1G/P1G/POOO`1G/S1G/SOOO`1G/V1G/VOOOO'#D['#D[O*uO7[O,59bOOQW,59b,59bOOOO'#D]'#D]O+WOMhO,59bOOOO-E7Y-E7YOOQW1G.|1G.|OOOO-E7Z-E7Z",
            stateData: "+s~O!^OS~OUSOVPOWQOXROYTO[]O][O^^O`^Oa^Ob^Oc^Ox^O{_O!dZO~OfaO~OfbO~OfcO~OfdO~OfeO~O!WfOPlP!ZlP~O!XiOQoP!ZoP~O!YlORrP!ZrP~OUSOVPOWQOXROYTOZqO[]O][O^^O`^Oa^Ob^Oc^Ox^O!dZO~O!ZrO~P#dO![sO!euO~OfvO~OfwO~OS|OhyO~OS!OOhyO~OS!QOhyO~OS!SOT!TOhyO~OS!TOhyO~O!WfOPlX!ZlX~OP!WO!Z!XO~O!XiOQoX!ZoX~OQ!ZO!Z!XO~O!YlORrX!ZrX~OR!]O!Z!XO~O!Z!XO~P#dOf!_O~O![sO!e!aO~OS!bO~OS!cO~Oi!dOSgXhgXTgX~OS!fOhyO~OS!gOhyO~OS!hOhyO~OS!iOT!jOhyO~OS!jOhyO~Of!kO~Of!lO~Of!mO~OS!nO~Ok!qO!`!oO!b!pO~OS!rO~OS!sO~OS!tO~Oa!uOb!uOc!uO!`!wO!a!uO~Oa!xOb!xOc!xO!b!wO!c!xO~Oa!uOb!uOc!uO!`!{O!a!uO~Oa!xOb!xOc!xO!b!{O!c!xO~OT~bac!dx{!d~",
            goto: "%p!`PPPPPPPPPPPPPPPPPPPP!a!gP!mPP!yP!|#P#S#Y#]#`#f#i#l#r#x!aP!a!aP$O$U$l$r$x%O%U%[%bPPPPPPPP%hX^OX`pXUOX`pezabcde{}!P!R!UR!q!dRhUR!XhXVOX`pRkVR!XkXWOX`pRnWR!XnXXOX`pQrXR!XpXYOX`pQ`ORx`Q{aQ}bQ!PcQ!RdQ!UeZ!e{}!P!R!UQ!v!oR!z!vQ!y!pR!|!yQgUR!VgQjVR!YjQmWR![mQpXR!^pQtZR!`tS_O`ToXp",
            nodeNames: "⚠ StartCloseTag StartCloseTag StartCloseTag EndTag SelfClosingEndTag StartTag StartTag StartTag StartTag StartTag StartCloseTag StartCloseTag StartCloseTag IncompleteCloseTag Document Text EntityReference CharacterReference InvalidEntity Element OpenTag TagName Attribute AttributeName Is AttributeValue UnquotedAttributeValue ScriptText CloseTag OpenTag StyleText CloseTag OpenTag TextareaText CloseTag OpenTag CloseTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag CloseTag DoctypeDecl",
            maxTerm: 67,
            context: $,
            nodeProps: [["closedBy", -10, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, "EndTag", 6, "EndTag SelfClosingEndTag", -4, 21, 30, 33, 36, "CloseTag"], ["openedBy", 4, "StartTag StartCloseTag", 5, "StartTag", -4, 29, 32, 35, 37, "OpenTag"], ["group", -9, 14, 17, 18, 19, 20, 39, 40, 41, 42, "Entity", 16, "Entity TextContent", -3, 28, 31, 34, "TextContent Entity"]],
            propSources: [v],
            skippedNodes: [0],
            repeatNodeCount: 9,
            tokenData: "#%g!aR!YOX$qXY,QYZ,QZ[$q[]&X]^,Q^p$qpq,Qqr-_rs4ysv-_vw5iwxJ^x}-_}!OKP!O!P-_!P!Q$q!Q![-_![!]!!O!]!^-_!^!_!&W!_!`#$o!`!a&X!a!c-_!c!}!!O!}#R-_#R#S!!O#S#T3V#T#o!!O#o#s-_#s$f$q$f%W-_%W%o!!O%o%p-_%p&a!!O&a&b-_&b1p!!O1p4U-_4U4d!!O4d4e-_4e$IS!!O$IS$I`-_$I`$Ib!!O$Ib$Kh-_$Kh%#t!!O%#t&/x-_&/x&Et!!O&Et&FV-_&FV;'S!!O;'S;:j!&Q;:j;=`4s<%l?&r-_?&r?Ah!!O?Ah?BY$q?BY?Mn!!O?MnO$q!Z$|c`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr$qrs&}sv$qvw+Pwx(tx!^$q!^!_*V!_!a&X!a#S$q#S#T&X#T;'S$q;'S;=`+z<%lO$q!R&bX`P!a`!cpOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&Xq'UV`P!cpOv&}wx'kx!^&}!^!_(V!_;'S&};'S;=`(n<%lO&}P'pT`POv'kw!^'k!_;'S'k;'S;=`(P<%lO'kP(SP;=`<%l'kp([S!cpOv(Vx;'S(V;'S;=`(h<%lO(Vp(kP;=`<%l(Vq(qP;=`<%l&}a({W`P!a`Or(trs'ksv(tw!^(t!^!_)e!_;'S(t;'S;=`*P<%lO(t`)jT!a`Or)esv)ew;'S)e;'S;=`)y<%lO)e`)|P;=`<%l)ea*SP;=`<%l(t!Q*^V!a`!cpOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!Q*vP;=`<%l*V!R*|P;=`<%l&XW+UYkWOX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+PW+wP;=`<%l+P!Z+}P;=`<%l$q!a,]``P!a`!cp!^^OX&XXY,QYZ,QZ]&X]^,Q^p&Xpq,Qqr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X!_-ljhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx!P-_!P!Q$q!Q!^-_!^!_1n!_!a&X!a#S-_#S#T3V#T#s-_#s$f$q$f;'S-_;'S;=`4s<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q[/echSkWOX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!^!_0p!a#S/^#S#T0p#T#s/^#s$f+P$f;'S/^;'S;=`1h<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+PS0uXhSqr0psw0px!P0p!Q!_0p!a#s0p$f;'S0p;'S;=`1b<%l?Ah0p?BY?Mn0pS1eP;=`<%l0p[1kP;=`<%l/^!U1wbhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!U3SP;=`<%l1n!V3bchS`P!a`!cpOq&Xqr3Vrs&}sv3Vvw0pwx(tx!P3V!P!Q&X!Q!^3V!^!_1n!_!a&X!a#s3V#s$f&X$f;'S3V;'S;=`4m<%l?Ah3V?Ah?BY&X?BY?Mn3V?MnO&X!V4pP;=`<%l3V!_4vP;=`<%l-_!Z5SV!`h`P!cpOv&}wx'kx!^&}!^!_(V!_;'S&};'S;=`(n<%lO&}!_5rjhSkWc!ROX7dXZ8qZ[7d[^8q^p7dqr:crs8qst@Ttw:cwx8qx!P:c!P!Q7d!Q!]:c!]!^/^!^!_=p!_!a8q!a#S:c#S#T=p#T#s:c#s$f7d$f;'S:c;'S;=`?}<%l?Ah:c?Ah?BY7d?BY?Mn:c?MnO7d!Z7ibkWOX7dXZ8qZ[7d[^8q^p7dqr7drs8qst+Ptw7dwx8qx!]7d!]!^9f!^!a8q!a#S7d#S#T8q#T;'S7d;'S;=`:]<%lO7d!R8tVOp8qqs8qt!]8q!]!^9Z!^;'S8q;'S;=`9`<%lO8q!R9`Oa!R!R9cP;=`<%l8q!Z9mYkWa!ROX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+P!Z:`P;=`<%l7d!_:jjhSkWOX7dXZ8qZ[7d[^8q^p7dqr:crs8qst/^tw:cwx8qx!P:c!P!Q7d!Q!]:c!]!^<[!^!_=p!_!a8q!a#S:c#S#T=p#T#s:c#s$f7d$f;'S:c;'S;=`?}<%l?Ah:c?Ah?BY7d?BY?Mn:c?MnO7d!_<echSkWa!ROX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!^!_0p!a#S/^#S#T0p#T#s/^#s$f+P$f;'S/^;'S;=`1h<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+P!V=udhSOp8qqr=prs8qst0ptw=pwx8qx!P=p!P!Q8q!Q!]=p!]!^?T!^!_=p!_!a8q!a#s=p#s$f8q$f;'S=p;'S;=`?w<%l?Ah=p?Ah?BY8q?BY?Mn=p?MnO8q!V?[XhSa!Rqr0psw0px!P0p!Q!_0p!a#s0p$f;'S0p;'S;=`1b<%l?Ah0p?BY?Mn0p!V?zP;=`<%l=p!_@QP;=`<%l:c!_@[ihSkWOXAyXZCTZ[Ay[^CT^pAyqrDrrsCTswDrwxCTx!PDr!P!QAy!Q!]Dr!]!^/^!^!_G|!_!aCT!a#SDr#S#TG|#T#sDr#s$fAy$f;'SDr;'S;=`JW<%l?AhDr?Ah?BYAy?BY?MnDr?MnOAy!ZBOakWOXAyXZCTZ[Ay[^CT^pAyqrAyrsCTswAywxCTx!]Ay!]!^Cu!^!aCT!a#SAy#S#TCT#T;'SAy;'S;=`Dl<%lOAy!RCWUOpCTq!]CT!]!^Cj!^;'SCT;'S;=`Co<%lOCT!RCoOb!R!RCrP;=`<%lCT!ZC|YkWb!ROX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+P!ZDoP;=`<%lAy!_DyihSkWOXAyXZCTZ[Ay[^CT^pAyqrDrrsCTswDrwxCTx!PDr!P!QAy!Q!]Dr!]!^Fh!^!_G|!_!aCT!a#SDr#S#TG|#T#sDr#s$fAy$f;'SDr;'S;=`JW<%l?AhDr?Ah?BYAy?BY?MnDr?MnOAy!_FqchSkWb!ROX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!^!_0p!a#S/^#S#T0p#T#s/^#s$f+P$f;'S/^;'S;=`1h<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+P!VHRchSOpCTqrG|rsCTswG|wxCTx!PG|!P!QCT!Q!]G|!]!^I^!^!_G|!_!aCT!a#sG|#s$fCT$f;'SG|;'S;=`JQ<%l?AhG|?Ah?BYCT?BY?MnG|?MnOCT!VIeXhSb!Rqr0psw0px!P0p!Q!_0p!a#s0p$f;'S0p;'S;=`1b<%l?Ah0p?BY?Mn0p!VJTP;=`<%lG|!_JZP;=`<%lDr!ZJgW!bx`P!a`Or(trs'ksv(tw!^(t!^!_)e!_;'S(t;'S;=`*P<%lO(t!aK^lhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx}-_}!OMU!O!P-_!P!Q$q!Q!^-_!^!_1n!_!a&X!a#S-_#S#T3V#T#s-_#s$f$q$f;'S-_;'S;=`4s<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q!aMckhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx!P-_!P!Q$q!Q!^-_!^!_1n!_!`&X!`!a! W!a#S-_#S#T3V#T#s-_#s$f$q$f;'S-_;'S;=`4s<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q!T! cX`P!a`!cp!eQOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X!a!!_!ZhSfQ`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx}-_}!O!!O!O!P!!O!P!Q$q!Q![!!O![!]!!O!]!^-_!^!_1n!_!a&X!a!c-_!c!}!!O!}#R-_#R#S!!O#S#T3V#T#o!!O#o#s-_#s$f$q$f$}-_$}%O!!O%O%W-_%W%o!!O%o%p-_%p&a!!O&a&b-_&b1p!!O1p4U!!O4U4d!!O4d4e-_4e$IS!!O$IS$I`-_$I`$Ib!!O$Ib$Je-_$Je$Jg!!O$Jg$Kh-_$Kh%#t!!O%#t&/x-_&/x&Et!!O&Et&FV-_&FV;'S!!O;'S;:j!&Q;:j;=`4s<%l?&r-_?&r?Ah!!O?Ah?BY$q?BY?Mn!!O?MnO$q!a!&TP;=`<%l!!O!V!&achS!a`!cpOq*Vqr!'lrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!b!Ey!b#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!'uhhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex}1n}!O!)a!O!P1n!P!Q*V!Q!_1n!_!a*V!a!f1n!f!g!,]!g#W1n#W#X!<y#X#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!)jdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex}1n}!O!*x!O!P1n!P!Q*V!Q!_1n!_!a*V!a#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!+TbhS!a`!cp!dPOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!,fdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!q1n!q!r!-t!r#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!-}dhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!e1n!e!f!/]!f#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!/fdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!v1n!v!w!0t!w#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!0}dhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!{1n!{!|!2]!|#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!2fdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!r1n!r!s!3t!s#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!3}dhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!g1n!g!h!5]!h#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!5fchS!a`!cpOq!6qqr!5]rs!7hsv!5]vw!;`wx!9[x!P!5]!P!Q!6q!Q!_!5]!_!`!6q!`!a!:j!a#s!5]#s$f!6q$f;'S!5];'S;=`!<s<%l?Ah!5]?Ah?BY!6q?BY?Mn!5]?MnO!6q!R!6xY!a`!cpOr!6qrs!7hsv!6qvw!8Swx!9[x!`!6q!`!a!:j!a;'S!6q;'S;=`!;Y<%lO!6qq!7mV!cpOv!7hvx!8Sx!`!7h!`!a!8q!a;'S!7h;'S;=`!9U<%lO!7hP!8VTO!`!8S!`!a!8f!a;'S!8S;'S;=`!8k<%lO!8SP!8kO{PP!8nP;=`<%l!8Sq!8xS!cp{POv(Vx;'S(V;'S;=`(h<%lO(Vq!9XP;=`<%l!7ha!9aX!a`Or!9[rs!8Ssv!9[vw!8Sw!`!9[!`!a!9|!a;'S!9[;'S;=`!:d<%lO!9[a!:TT!a`{POr)esv)ew;'S)e;'S;=`)y<%lO)ea!:gP;=`<%l!9[!R!:sV!a`!cp{POr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!;]P;=`<%l!6qT!;ebhSOq!8Sqr!;`rs!8Ssw!;`wx!8Sx!P!;`!P!Q!8S!Q!_!;`!_!`!8S!`!a!8f!a#s!;`#s$f!8S$f;'S!;`;'S;=`!<m<%l?Ah!;`?Ah?BY!8S?BY?Mn!;`?MnO!8ST!<pP;=`<%l!;`!V!<vP;=`<%l!5]!V!=SdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#c1n#c#d!>b#d#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!>kdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#V1n#V#W!?y#W#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!@SdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#h1n#h#i!Ab#i#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!AkdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#m1n#m#n!By#n#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!CSdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#d1n#d#e!Db#e#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!DkdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#X1n#X#Y!5]#Y#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!FSchS!a`!cpOq!G_qr!Eyrs!HUsv!Eyvw!Ncwx!Jvx!P!Ey!P!Q!G_!Q!_!Ey!_!a!G_!a!b##T!b#s!Ey#s$f!G_$f;'S!Ey;'S;=`#$i<%l?Ah!Ey?Ah?BY!G_?BY?Mn!Ey?MnO!G_!R!GfY!a`!cpOr!G_rs!HUsv!G_vw!Hpwx!Jvx!a!G_!a!b!Lv!b;'S!G_;'S;=`!N]<%lO!G_q!HZV!cpOv!HUvx!Hpx!a!HU!a!b!Iq!b;'S!HU;'S;=`!Jp<%lO!HUP!HsTO!a!Hp!a!b!IS!b;'S!Hp;'S;=`!Ik<%lO!HpP!IVTO!`!Hp!`!a!If!a;'S!Hp;'S;=`!Ik<%lO!HpP!IkOxPP!InP;=`<%l!Hpq!IvV!cpOv!HUvx!Hpx!`!HU!`!a!J]!a;'S!HU;'S;=`!Jp<%lO!HUq!JdS!cpxPOv(Vx;'S(V;'S;=`(h<%lO(Vq!JsP;=`<%l!HUa!J{X!a`Or!Jvrs!Hpsv!Jvvw!Hpw!a!Jv!a!b!Kh!b;'S!Jv;'S;=`!Lp<%lO!Jva!KmX!a`Or!Jvrs!Hpsv!Jvvw!Hpw!`!Jv!`!a!LY!a;'S!Jv;'S;=`!Lp<%lO!Jva!LaT!a`xPOr)esv)ew;'S)e;'S;=`)y<%lO)ea!LsP;=`<%l!Jv!R!L}Y!a`!cpOr!G_rs!HUsv!G_vw!Hpwx!Jvx!`!G_!`!a!Mm!a;'S!G_;'S;=`!N]<%lO!G_!R!MvV!a`!cpxPOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!N`P;=`<%l!G_T!NhbhSOq!Hpqr!Ncrs!Hpsw!Ncwx!Hpx!P!Nc!P!Q!Hp!Q!_!Nc!_!a!Hp!a!b# p!b#s!Nc#s$f!Hp$f;'S!Nc;'S;=`#!}<%l?Ah!Nc?Ah?BY!Hp?BY?Mn!Nc?MnO!HpT# ubhSOq!Hpqr!Ncrs!Hpsw!Ncwx!Hpx!P!Nc!P!Q!Hp!Q!_!Nc!_!`!Hp!`!a!If!a#s!Nc#s$f!Hp$f;'S!Nc;'S;=`#!}<%l?Ah!Nc?Ah?BY!Hp?BY?Mn!Nc?MnO!HpT##QP;=`<%l!Nc!V##^chS!a`!cpOq!G_qr!Eyrs!HUsv!Eyvw!Ncwx!Jvx!P!Ey!P!Q!G_!Q!_!Ey!_!`!G_!`!a!Mm!a#s!Ey#s$f!G_$f;'S!Ey;'S;=`#$i<%l?Ah!Ey?Ah?BY!G_?BY?Mn!Ey?MnO!G_!V#$lP;=`<%l!Ey!V#$zXiS`P!a`!cpOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X",
            tokenizers: [y, x, X, S, g, P, 0, 1, 2, 3, 4, 5],
            topRules: {
                Document: [0, 15]
            },
            dialects: {
                noMatch: 0,
                selfClosing: 485
            },
            tokenPrec: 487
        });
        function w(e, t) {
            let O = Object.create(null);
            for (let n of e.getChildren(23)) {
                let e = n.getChild(24)
                  , r = n.getChild(26) || n.getChild(27);
                e && (O[t.read(e.from, e.to)] = r ? 26 == r.type.id ? t.read(r.from + 1, r.to - 1) : t.read(r.from, r.to) : "")
            }
            return O
        }
        function T(e, t) {
            let O = e.getChild(22);
            return O ? t.read(O.from, O.to) : " "
        }
        function _(e, t, O) {
            let n;
            for (let r of O)
                if (!r.attrs || r.attrs(n || (n = w(e.node.parent.firstChild, t))))
                    return {
                        parser: r.parser
                    };
            return null
        }
        function W(e=[], t=[]) {
            let O = []
              , n = []
              , r = []
              , a = [];
            for (let t of e)
                ("script" == t.tag ? O : "style" == t.tag ? n : "textarea" == t.tag ? r : a).push(t);
            let o = t.length ? Object.create(null) : null;
            for (let e of t)
                (o[e.name] || (o[e.name] = [])).push(e);
            return (0,
            i.FE)((e,t)=>{
                let i = e.type.id;
                if (28 == i)
                    return _(e, t, O);
                if (31 == i)
                    return _(e, t, n);
                if (34 == i)
                    return _(e, t, r);
                if (20 == i && a.length) {
                    let O = e.node, n = O.firstChild, r = n && T(n, t), i;
                    if (r) {
                        for (let e of a)
                            if (e.tag == r && (!e.attrs || e.attrs(i || (i = w(O, t))))) {
                                let t = O.lastChild;
                                return {
                                    parser: e.parser,
                                    overlay: [{
                                        from: n.to,
                                        to: 37 == t.type.id ? t.from : O.to
                                    }]
                                }
                            }
                    }
                }
                if (o && 23 == i) {
                    let O = e.node, n;
                    if (n = O.firstChild) {
                        let e = o[t.read(n.from, n.to)];
                        if (e)
                            for (let n of e) {
                                if (n.tagName && n.tagName != T(O.parent, t))
                                    continue;
                                let e = O.lastChild;
                                if (26 == e.type.id) {
                                    let t = e.from + 1
                                      , O = e.lastChild
                                      , r = e.to - (O && O.isError ? 0 : 1);
                                    if (r > t)
                                        return {
                                            parser: n.parser,
                                            overlay: [{
                                                from: t,
                                                to: r
                                            }]
                                        }
                                } else if (27 == e.type.id)
                                    return {
                                        parser: n.parser,
                                        overlay: [{
                                            from: e.from,
                                            to: e.to
                                        }]
                                    }
                            }
                    }
                }
                return null
            }
            )
        }
        var Z = O(8662)
          , z = O(4695)
          , q = O(6470)
          , Y = O(4091)
          , R = O(168);
        let U = ["_blank", "_self", "_top", "_parent"]
          , V = ["ascii", "utf-8", "utf-16", "latin1", "latin1"]
          , E = ["get", "post", "put", "delete"]
          , j = ["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]
          , G = ["true", "false"]
          , C = {}
          , A = {
            a: {
                attrs: {
                    href: null,
                    ping: null,
                    type: null,
                    media: null,
                    target: U,
                    hreflang: null
                }
            },
            abbr: C,
            address: C,
            area: {
                attrs: {
                    alt: null,
                    coords: null,
                    href: null,
                    target: null,
                    ping: null,
                    media: null,
                    hreflang: null,
                    type: null,
                    shape: ["default", "rect", "circle", "poly"]
                }
            },
            article: C,
            aside: C,
            audio: {
                attrs: {
                    src: null,
                    mediagroup: null,
                    crossorigin: ["anonymous", "use-credentials"],
                    preload: ["none", "metadata", "auto"],
                    autoplay: ["autoplay"],
                    loop: ["loop"],
                    controls: ["controls"]
                }
            },
            b: C,
            base: {
                attrs: {
                    href: null,
                    target: U
                }
            },
            bdi: C,
            bdo: C,
            blockquote: {
                attrs: {
                    cite: null
                }
            },
            body: C,
            br: C,
            button: {
                attrs: {
                    form: null,
                    formaction: null,
                    name: null,
                    value: null,
                    autofocus: ["autofocus"],
                    disabled: ["autofocus"],
                    formenctype: j,
                    formmethod: E,
                    formnovalidate: ["novalidate"],
                    formtarget: U,
                    type: ["submit", "reset", "button"]
                }
            },
            canvas: {
                attrs: {
                    width: null,
                    height: null
                }
            },
            caption: C,
            center: C,
            cite: C,
            code: C,
            col: {
                attrs: {
                    span: null
                }
            },
            colgroup: {
                attrs: {
                    span: null
                }
            },
            command: {
                attrs: {
                    type: ["command", "checkbox", "radio"],
                    label: null,
                    icon: null,
                    radiogroup: null,
                    command: null,
                    title: null,
                    disabled: ["disabled"],
                    checked: ["checked"]
                }
            },
            data: {
                attrs: {
                    value: null
                }
            },
            datagrid: {
                attrs: {
                    disabled: ["disabled"],
                    multiple: ["multiple"]
                }
            },
            datalist: {
                attrs: {
                    data: null
                }
            },
            dd: C,
            del: {
                attrs: {
                    cite: null,
                    datetime: null
                }
            },
            details: {
                attrs: {
                    open: ["open"]
                }
            },
            dfn: C,
            div: C,
            dl: C,
            dt: C,
            em: C,
            embed: {
                attrs: {
                    src: null,
                    type: null,
                    width: null,
                    height: null
                }
            },
            eventsource: {
                attrs: {
                    src: null
                }
            },
            fieldset: {
                attrs: {
                    disabled: ["disabled"],
                    form: null,
                    name: null
                }
            },
            figcaption: C,
            figure: C,
            footer: C,
            form: {
                attrs: {
                    action: null,
                    name: null,
                    "accept-charset": V,
                    autocomplete: ["on", "off"],
                    enctype: j,
                    method: E,
                    novalidate: ["novalidate"],
                    target: U
                }
            },
            h1: C,
            h2: C,
            h3: C,
            h4: C,
            h5: C,
            h6: C,
            head: {
                children: ["title", "base", "link", "style", "meta", "script", "noscript", "command"]
            },
            header: C,
            hgroup: C,
            hr: C,
            html: {
                attrs: {
                    manifest: null
                }
            },
            i: C,
            iframe: {
                attrs: {
                    src: null,
                    srcdoc: null,
                    name: null,
                    width: null,
                    height: null,
                    sandbox: ["allow-top-navigation", "allow-same-origin", "allow-forms", "allow-scripts"],
                    seamless: ["seamless"]
                }
            },
            img: {
                attrs: {
                    alt: null,
                    src: null,
                    ismap: null,
                    usemap: null,
                    width: null,
                    height: null,
                    crossorigin: ["anonymous", "use-credentials"]
                }
            },
            input: {
                attrs: {
                    alt: null,
                    dirname: null,
                    form: null,
                    formaction: null,
                    height: null,
                    list: null,
                    max: null,
                    maxlength: null,
                    min: null,
                    name: null,
                    pattern: null,
                    placeholder: null,
                    size: null,
                    src: null,
                    step: null,
                    value: null,
                    width: null,
                    accept: ["audio/*", "video/*", "image/*"],
                    autocomplete: ["on", "off"],
                    autofocus: ["autofocus"],
                    checked: ["checked"],
                    disabled: ["disabled"],
                    formenctype: j,
                    formmethod: E,
                    formnovalidate: ["novalidate"],
                    formtarget: U,
                    multiple: ["multiple"],
                    readonly: ["readonly"],
                    required: ["required"],
                    type: ["hidden", "text", "search", "tel", "url", "email", "password", "datetime", "date", "month", "week", "time", "datetime-local", "number", "range", "color", "checkbox", "radio", "file", "submit", "image", "reset", "button"]
                }
            },
            ins: {
                attrs: {
                    cite: null,
                    datetime: null
                }
            },
            kbd: C,
            keygen: {
                attrs: {
                    challenge: null,
                    form: null,
                    name: null,
                    autofocus: ["autofocus"],
                    disabled: ["disabled"],
                    keytype: ["RSA"]
                }
            },
            label: {
                attrs: {
                    for: null,
                    form: null
                }
            },
            legend: C,
            li: {
                attrs: {
                    value: null
                }
            },
            link: {
                attrs: {
                    href: null,
                    type: null,
                    hreflang: null,
                    media: null,
                    sizes: ["all", "16x16", "16x16 32x32", "16x16 32x32 64x64"]
                }
            },
            map: {
                attrs: {
                    name: null
                }
            },
            mark: C,
            menu: {
                attrs: {
                    label: null,
                    type: ["list", "context", "toolbar"]
                }
            },
            meta: {
                attrs: {
                    content: null,
                    charset: V,
                    name: ["viewport", "application-name", "author", "description", "generator", "keywords"],
                    "http-equiv": ["content-language", "content-type", "default-style", "refresh"]
                }
            },
            meter: {
                attrs: {
                    value: null,
                    min: null,
                    low: null,
                    high: null,
                    max: null,
                    optimum: null
                }
            },
            nav: C,
            noscript: C,
            object: {
                attrs: {
                    data: null,
                    type: null,
                    name: null,
                    usemap: null,
                    form: null,
                    width: null,
                    height: null,
                    typemustmatch: ["typemustmatch"]
                }
            },
            ol: {
                attrs: {
                    reversed: ["reversed"],
                    start: null,
                    type: ["1", "a", "A", "i", "I"]
                },
                children: ["li", "script", "template", "ul", "ol"]
            },
            optgroup: {
                attrs: {
                    disabled: ["disabled"],
                    label: null
                }
            },
            option: {
                attrs: {
                    disabled: ["disabled"],
                    label: null,
                    selected: ["selected"],
                    value: null
                }
            },
            output: {
                attrs: {
                    for: null,
                    form: null,
                    name: null
                }
            },
            p: C,
            param: {
                attrs: {
                    name: null,
                    value: null
                }
            },
            pre: C,
            progress: {
                attrs: {
                    value: null,
                    max: null
                }
            },
            q: {
                attrs: {
                    cite: null
                }
            },
            rp: C,
            rt: C,
            ruby: C,
            samp: C,
            script: {
                attrs: {
                    type: ["text/javascript"],
                    src: null,
                    async: ["async"],
                    defer: ["defer"],
                    charset: V
                }
            },
            section: C,
            select: {
                attrs: {
                    form: null,
                    name: null,
                    size: null,
                    autofocus: ["autofocus"],
                    disabled: ["disabled"],
                    multiple: ["multiple"]
                }
            },
            slot: {
                attrs: {
                    name: null
                }
            },
            small: C,
            source: {
                attrs: {
                    src: null,
                    type: null,
                    media: null
                }
            },
            span: C,
            strong: C,
            style: {
                attrs: {
                    type: ["text/css"],
                    media: null,
                    scoped: null
                }
            },
            sub: C,
            summary: C,
            sup: C,
            table: C,
            tbody: C,
            td: {
                attrs: {
                    colspan: null,
                    rowspan: null,
                    headers: null
                }
            },
            template: C,
            textarea: {
                attrs: {
                    dirname: null,
                    form: null,
                    maxlength: null,
                    name: null,
                    placeholder: null,
                    rows: null,
                    cols: null,
                    autofocus: ["autofocus"],
                    disabled: ["disabled"],
                    readonly: ["readonly"],
                    required: ["required"],
                    wrap: ["soft", "hard"]
                }
            },
            tfoot: C,
            th: {
                attrs: {
                    colspan: null,
                    rowspan: null,
                    headers: null,
                    scope: ["row", "col", "rowgroup", "colgroup"]
                }
            },
            thead: C,
            time: {
                attrs: {
                    datetime: null
                }
            },
            title: C,
            tr: C,
            track: {
                attrs: {
                    src: null,
                    label: null,
                    default: null,
                    kind: ["subtitles", "captions", "descriptions", "chapters", "metadata"],
                    srclang: null
                }
            },
            ul: {
                children: ["li", "script", "template", "ul", "ol"]
            },
            var: C,
            video: {
                attrs: {
                    src: null,
                    poster: null,
                    width: null,
                    height: null,
                    crossorigin: ["anonymous", "use-credentials"],
                    preload: ["auto", "metadata", "none"],
                    autoplay: ["autoplay"],
                    mediagroup: ["movie"],
                    muted: ["muted"],
                    controls: ["controls"]
                }
            },
            wbr: C
        }
          , I = {
            accesskey: null,
            class: null,
            contenteditable: G,
            contextmenu: null,
            dir: ["ltr", "rtl", "auto"],
            draggable: ["true", "false", "auto"],
            dropzone: ["copy", "move", "link", "string:", "file:"],
            hidden: ["hidden"],
            id: null,
            inert: ["inert"],
            itemid: null,
            itemprop: null,
            itemref: null,
            itemscope: ["itemscope"],
            itemtype: null,
            lang: ["ar", "bn", "de", "en-GB", "en-US", "es", "fr", "hi", "id", "ja", "pa", "pt", "ru", "tr", "zh"],
            spellcheck: G,
            autocorrect: G,
            autocapitalize: G,
            style: null,
            tabindex: null,
            title: null,
            translate: ["yes", "no"],
            rel: ["stylesheet", "alternate", "author", "bookmark", "help", "license", "next", "nofollow", "noreferrer", "prefetch", "prev", "search", "tag"],
            role: "alert application article banner button cell checkbox complementary contentinfo dialog document feed figure form grid gridcell heading img list listbox listitem main navigation region row rowgroup search switch tab table tabpanel textbox timer".split(" "),
            "aria-activedescendant": null,
            "aria-atomic": G,
            "aria-autocomplete": ["inline", "list", "both", "none"],
            "aria-busy": G,
            "aria-checked": ["true", "false", "mixed", "undefined"],
            "aria-controls": null,
            "aria-describedby": null,
            "aria-disabled": G,
            "aria-dropeffect": null,
            "aria-expanded": ["true", "false", "undefined"],
            "aria-flowto": null,
            "aria-grabbed": ["true", "false", "undefined"],
            "aria-haspopup": G,
            "aria-hidden": G,
            "aria-invalid": ["true", "false", "grammar", "spelling"],
            "aria-label": null,
            "aria-labelledby": null,
            "aria-level": null,
            "aria-live": ["off", "polite", "assertive"],
            "aria-multiline": G,
            "aria-multiselectable": G,
            "aria-owns": null,
            "aria-posinset": null,
            "aria-pressed": ["true", "false", "mixed", "undefined"],
            "aria-readonly": G,
            "aria-relevant": null,
            "aria-required": G,
            "aria-selected": ["true", "false", "undefined"],
            "aria-setsize": null,
            "aria-sort": ["ascending", "descending", "none", "other"],
            "aria-valuemax": null,
            "aria-valuemin": null,
            "aria-valuenow": null,
            "aria-valuetext": null
        }
          , J = "beforeunload copy cut dragstart dragover dragleave dragenter dragend drag paste focus blur change click load mousedown mouseenter mouseleave mouseup keydown keyup resize scroll unload".split(" ").map(e=>"on" + e);
        for (let e of J)
            I[e] = null;
        class N {
            constructor(e, t) {
                this.tags = Object.assign(Object.assign({}, A), e),
                this.globalAttrs = Object.assign(Object.assign({}, I), t),
                this.allTags = Object.keys(this.tags),
                this.globalAttrNames = Object.keys(this.globalAttrs)
            }
        }
        function D(e, t, O=e.length) {
            if (!t)
                return "";
            let n = t.firstChild
              , r = n && n.getChild("TagName");
            return r ? e.sliceString(r.from, Math.min(r.to, O)) : ""
        }
        function L(e, t=!1) {
            for (let O = e.parent; O; O = O.parent)
                if ("Element" == O.name) {
                    if (!t)
                        return O;
                    t = !1
                }
            return null
        }
        function F(e, t, O) {
            let n = O.tags[D(e, L(t, !0))];
            return (null == n ? void 0 : n.children) || O.allTags
        }
        function M(e, t) {
            let O = [];
            for (let n = t; n = L(n); ) {
                let r = D(e, n);
                if (r && "CloseTag" == n.lastChild.name)
                    break;
                r && 0 > O.indexOf(r) && ("EndTag" == t.name || t.from >= n.firstChild.to) && O.push(r)
            }
            return O
        }
        N.default = new N;
        let B = /^[:\-\.\w\u00b7-\uffff]*$/;
        function H(e, t, O, n, r) {
            let i = /\s*>/.test(e.sliceDoc(r, r + 5)) ? "" : ">";
            return {
                from: n,
                to: r,
                options: F(e.doc, O, t).map(e=>({
                    label: e,
                    type: "type"
                })).concat(M(e.doc, O).map((e,t)=>({
                    label: "/" + e,
                    apply: "/" + e + i,
                    type: "type",
                    boost: 99 - t
                }))),
                validFor: /^\/?[:\-\.\w\u00b7-\uffff]*$/
            }
        }
        function K(e, t, O, n) {
            let r = /\s*>/.test(e.sliceDoc(n, n + 5)) ? "" : ">";
            return {
                from: O,
                to: n,
                options: M(e.doc, t).map((e,t)=>({
                    label: e,
                    apply: e + r,
                    type: "type",
                    boost: 99 - t
                })),
                validFor: B
            }
        }
        function ee(e, t) {
            let {state: O, pos: n} = t
              , r = (0,
            R.qz)(O).resolveInner(n)
              , i = r.resolve(n, -1);
            for (let e = n, t; r == i && (t = i.childBefore(e)); ) {
                let O = t.lastChild;
                if (!O || !O.type.isError || O.from < O.to)
                    break;
                r = i = t,
                e = O.from
            }
            if ("TagName" == i.name)
                return i.parent && /CloseTag$/.test(i.parent.name) ? K(O, i, i.from, n) : H(O, e, i, i.from, n);
            if ("StartTag" == i.name)
                return H(O, e, i, n, n);
            if ("StartCloseTag" == i.name || "IncompleteCloseTag" == i.name)
                return K(O, i, n, n);
            if (t.explicit && ("OpenTag" == i.name || "SelfClosingTag" == i.name) || "AttributeName" == i.name) {
                var a, o;
                let t, r, s;
                return a = i,
                o = "AttributeName" == i.name ? i.from : n,
                s = (r = (t = L(a)) ? e.tags[D(O.doc, t)] : null) && r.attrs ? Object.keys(r.attrs) : [],
                {
                    from: o,
                    to: n,
                    options: (r && !1 === r.globalAttrs ? s : s.length ? s.concat(e.globalAttrNames) : e.globalAttrNames).map(e=>({
                        label: e,
                        type: "property"
                    })),
                    validFor: B
                }
            }
            return "Is" == i.name || "AttributeValue" == i.name || "UnquotedAttributeValue" == i.name ? function(e, t, O, n, r) {
                var i;
                let a = null === (i = O.parent) || void 0 === i ? void 0 : i.getChild("AttributeName"), o = [], s;
                if (a) {
                    let i = e.sliceDoc(a.from, a.to)
                      , l = t.globalAttrs[i];
                    if (!l) {
                        let n = L(O)
                          , r = n ? t.tags[D(e.doc, n)] : null;
                        l = (null == r ? void 0 : r.attrs) && r.attrs[i]
                    }
                    if (l) {
                        let t = e.sliceDoc(n, r).toLowerCase()
                          , O = '"'
                          , i = '"';
                        for (let a of (/^['"]/.test(t) ? (s = '"' == t[0] ? /^[^"]*$/ : /^[^']*$/,
                        O = "",
                        i = e.sliceDoc(r, r + 1) == t[0] ? "" : t[0],
                        t = t.slice(1),
                        n++) : s = /^[^\s<>='"]*$/,
                        l))
                            o.push({
                                label: a,
                                apply: O + a + i,
                                type: "constant"
                            })
                    }
                }
                return {
                    from: n,
                    to: r,
                    options: o,
                    validFor: s
                }
            }(O, e, i, "Is" == i.name ? n : i.from, n) : t.explicit && ("Element" == r.name || "Text" == r.name || "Document" == r.name) ? function(e, t, O, n) {
                let r = []
                  , i = 0;
                for (let n of F(e.doc, O, t))
                    r.push({
                        label: "<" + n,
                        type: "type"
                    });
                for (let t of M(e.doc, O))
                    r.push({
                        label: "</" + t + ">",
                        type: "type",
                        boost: 99 - i++
                    });
                return {
                    from: n,
                    to: n,
                    options: r,
                    validFor: /^<\/?[:\-\.\w\u00b7-\uffff]*$/
                }
            }(O, e, i, n) : null
        }
        function et(e) {
            return ee(N.default, e)
        }
        function eO(e) {
            let {extraTags: t, extraGlobalAttributes: O} = e
              , n = O || t ? new N(t,O) : N.default;
            return e=>ee(n, e)
        }
        let en = [{
            tag: "script",
            attrs: e=>"text/typescript" == e.type || "ts" == e.lang,
            parser: z.typescriptLanguage.parser
        }, {
            tag: "script",
            attrs: e=>"text/babel" == e.type || "text/jsx" == e.type,
            parser: z.jsxLanguage.parser
        }, {
            tag: "script",
            attrs: e=>"text/typescript-jsx" == e.type,
            parser: z.tsxLanguage.parser
        }, {
            tag: "script",
            attrs: e=>!e.type || /^(?:text|application)\/(?:x-)?(?:java|ecma)script$|^module$|^$/i.test(e.type),
            parser: z.javascriptLanguage.parser
        }, {
            tag: "style",
            attrs: e=>(!e.lang || "css" == e.lang) && (!e.type || /^(text\/)?(x-)?(stylesheet|css)$/i.test(e.type)),
            parser: Z.cssLanguage.parser
        }]
          , er = [{
            name: "style",
            parser: Z.cssLanguage.parser.configure({
                top: "Styles"
            })
        }].concat(J.map(e=>({
            name: e,
            parser: z.javascriptLanguage.parser
        })))
          , ei = R.qp.define({
            name: "html",
            parser: k.configure({
                props: [R.uj.add({
                    Element(e) {
                        let t = /^(\s*)(<\/)?/.exec(e.textAfter);
                        return e.node.to <= e.pos + t[0].length ? e.continue() : e.lineIndent(e.node.from) + (t[2] ? 0 : e.unit)
                    },
                    "OpenTag CloseTag SelfClosingTag": e=>e.column(e.node.from) + e.unit,
                    Document(e) {
                        if (e.pos + /\s*/.exec(e.textAfter)[0].length < e.node.to)
                            return e.continue();
                        let t = null, O;
                        for (let O = e.node; ; ) {
                            let e = O.lastChild;
                            if (!e || "Element" != e.name || e.to != O.to)
                                break;
                            t = O = e
                        }
                        return t && !((O = t.lastChild) && ("CloseTag" == O.name || "SelfClosingTag" == O.name)) ? e.lineIndent(t.from) + e.unit : null
                    }
                }), R.x0.add({
                    Element(e) {
                        let t = e.firstChild
                          , O = e.lastChild;
                        return t && "OpenTag" == t.name ? {
                            from: t.to,
                            to: "CloseTag" == O.name ? O.from : e.to
                        } : null
                    }
                }), R.a0.add({
                    "OpenTag CloseTag": e=>e.getChild("TagName")
                })]
            }),
            languageData: {
                commentTokens: {
                    block: {
                        open: "<!--",
                        close: "-->"
                    }
                },
                indentOnInput: /^\s*<\/\w+\W$/,
                wordChars: "-._"
            }
        })
          , ea = ei.configure({
            wrap: W(en, er)
        });
        function eo(e={}) {
            let t = "", O;
            !1 === e.matchClosingTags && (t = "noMatch"),
            !0 === e.selfClosingTags && (t = (t ? t + " " : "") + "selfClosing"),
            (e.nestedLanguages && e.nestedLanguages.length || e.nestedAttributes && e.nestedAttributes.length) && (O = W((e.nestedLanguages || []).concat(en), (e.nestedAttributes || []).concat(er)));
            let n = O ? ei.configure({
                wrap: O,
                dialect: t
            }) : t ? ea.configure({
                dialect: t
            }) : ea;
            return new R.ri(n,[ea.data.of({
                autocomplete: eO(e)
            }), !1 !== e.autoCloseTags ? el : [], (0,
            z.javascript)().support, (0,
            Z.css)().support])
        }
        let es = new Set("area base br col command embed frame hr img input keygen link meta param source track wbr menuitem".split(" "))
          , el = q.tk.inputHandler.of((e,t,O,n)=>{
            if (e.composing || e.state.readOnly || t != O || ">" != n && "/" != n || !ea.isActiveAt(e.state, t, -1))
                return !1;
            let {state: r} = e
              , i = r.changeByRange(t=>{
                var O, i, a;
                let {head: o} = t, s = (0,
                R.qz)(r).resolveInner(o, -1), l;
                if (("TagName" == s.name || "StartTag" == s.name) && (s = s.parent),
                ">" == n && "OpenTag" == s.name) {
                    if ((null === (i = null === (O = s.parent) || void 0 === O ? void 0 : O.lastChild) || void 0 === i ? void 0 : i.name) != "CloseTag" && (l = D(r.doc, s.parent, o)) && !es.has(l)) {
                        let t = ">" === e.state.doc.sliceString(o, o + 1)
                          , O = `${t ? "" : ">"}</${l}>`;
                        return {
                            range: Y.jT.cursor(o + 1),
                            changes: {
                                from: o + (t ? 1 : 0),
                                insert: O
                            }
                        }
                    }
                } else if ("/" == n && "OpenTag" == s.name) {
                    let t = s.parent
                      , O = null == t ? void 0 : t.parent;
                    if (t.from == o - 1 && (null === (a = O.lastChild) || void 0 === a ? void 0 : a.name) != "CloseTag" && (l = D(r.doc, O, o)) && !es.has(l)) {
                        let t = ">" === e.state.doc.sliceString(o, o + 1)
                          , O = `/${l}${t ? "" : ">"}`
                          , n = o + O.length + (t ? 1 : 0);
                        return {
                            range: Y.jT.cursor(n),
                            changes: {
                                from: o,
                                insert: O
                            }
                        }
                    }
                }
                return {
                    range: t
                }
            }
            );
            return !i.changes.empty && (e.dispatch(i, {
                userEvent: "input.type",
                scrollIntoView: !0
            }),
            !0)
        }
        )
    },
    1952: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            java: function() {
                return c
            },
            javaLanguage: function() {
                return l
            }
        });
        var n = O(2679)
          , r = O(5306);
        let i = (0,
        r.Gv)({
            null: r.pJ.null,
            instanceof: r.pJ.operatorKeyword,
            this: r.pJ.self,
            "new super assert open to with void": r.pJ.keyword,
            "class interface extends implements enum var": r.pJ.definitionKeyword,
            "module package import": r.pJ.moduleKeyword,
            "switch while for if else case default do break continue return try catch finally throw": r.pJ.controlKeyword,
            "requires exports opens uses provides public private protected static transitive abstract final strictfp synchronized native transient volatile throws": r.pJ.modifier,
            IntegerLiteral: r.pJ.integer,
            FloatingPointLiteral: r.pJ.float,
            "StringLiteral TextBlock": r.pJ.string,
            CharacterLiteral: r.pJ.character,
            LineComment: r.pJ.lineComment,
            BlockComment: r.pJ.blockComment,
            BooleanLiteral: r.pJ.bool,
            PrimitiveType: r.pJ.standard(r.pJ.typeName),
            TypeName: r.pJ.typeName,
            Identifier: r.pJ.variableName,
            "MethodName/Identifier": r.pJ.function(r.pJ.variableName),
            Definition: r.pJ.definition(r.pJ.variableName),
            ArithOp: r.pJ.arithmeticOperator,
            LogicOp: r.pJ.logicOperator,
            BitOp: r.pJ.bitwiseOperator,
            CompareOp: r.pJ.compareOperator,
            AssignOp: r.pJ.definitionOperator,
            UpdateOp: r.pJ.updateOperator,
            Asterisk: r.pJ.punctuation,
            Label: r.pJ.labelName,
            "( )": r.pJ.paren,
            "[ ]": r.pJ.squareBracket,
            "{ }": r.pJ.brace,
            ".": r.pJ.derefOperator,
            ", ;": r.pJ.separator
        })
          , a = {
            __proto__: null,
            true: 34,
            false: 34,
            null: 42,
            void: 46,
            byte: 48,
            short: 48,
            int: 48,
            long: 48,
            char: 48,
            float: 48,
            double: 48,
            boolean: 48,
            extends: 62,
            super: 64,
            class: 76,
            this: 78,
            new: 84,
            public: 100,
            protected: 102,
            private: 104,
            abstract: 106,
            static: 108,
            final: 110,
            strictfp: 112,
            default: 114,
            synchronized: 116,
            native: 118,
            transient: 120,
            volatile: 122,
            throws: 150,
            implements: 160,
            interface: 166,
            enum: 176,
            instanceof: 236,
            open: 265,
            module: 267,
            requires: 272,
            transitive: 274,
            exports: 276,
            to: 278,
            opens: 280,
            uses: 282,
            provides: 284,
            with: 286,
            package: 290,
            import: 294,
            if: 306,
            else: 308,
            while: 312,
            for: 316,
            var: 323,
            assert: 330,
            switch: 334,
            case: 340,
            do: 344,
            break: 348,
            continue: 352,
            return: 356,
            throw: 362,
            try: 366,
            catch: 370,
            finally: 378
        }
          , o = n.WQ.deserialize({
            version: 14,
            states: "#!hQ]QPOOO&tQQO'#H[O(xQQO'#CbOOQO'#Cb'#CbO)PQPO'#CaO)XOSO'#CpOOQO'#Ha'#HaOOQO'#Cu'#CuO*tQPO'#D_O+_QQO'#HkOOQO'#Hk'#HkO-sQQO'#HfO-zQQO'#HfOOQO'#Hf'#HfOOQO'#He'#HeO0OQPO'#DUO0]QPO'#GlO3TQPO'#D_O3[QPO'#DzO)PQPO'#E[O3}QPO'#E[OOQO'#DV'#DVO5]QQO'#H_O7dQQO'#EeO7kQPO'#EdO7pQPO'#EfOOQO'#H`'#H`O5sQQO'#H`O8sQQO'#FgO8zQPO'#EwO9PQPO'#E|O9PQPO'#FOOOQO'#H_'#H_OOQO'#HW'#HWOOQO'#Gf'#GfOOQO'#HV'#HVO:aQPO'#FhOOQO'#HU'#HUOOQO'#Ge'#GeQ]QPOOOOQO'#Hq'#HqO:fQPO'#HqO:kQPO'#D{O:kQPO'#EVO:kQPO'#EQO:sQPO'#HnO;UQQO'#EfO)PQPO'#C`O;^QPO'#C`O)PQPO'#FbO;cQPO'#FdO;nQPO'#FjO;nQPO'#FmO:kQPO'#FrO;sQPO'#FoO9PQPO'#FvO;nQPO'#FxO]QPO'#F}O;xQPO'#GPO<TQPO'#GRO<`QPO'#GTO;nQPO'#GVO9PQPO'#GWO<gQPO'#GYOOQO'#H['#H[O=WQQO,58{OOQO'#HY'#HYOOOO'#Gg'#GgO>yOSO,59[OOQO,59[,59[OOQO'#Hg'#HgO?jQPO,59eO@lQPO,59yOOQO-E:d-E:dO)PQPO,58zOA`QPO,58zO)PQPO,5;|OAeQPO'#DQOAjQPO'#DQOOQO'#Gi'#GiOBjQQO,59jOOQO'#Dm'#DmODRQPO'#HsOD]QPO'#DlODkQPO'#HrODsQPO,5<^ODxQPO,59^OEcQPO'#CxOOQO,59c,59cOEjQPO,59bOGrQQO'#H[OJVQQO'#CbOJmQPO'#D_OKrQQO'#HkOLSQQO,59pOLZQPO'#DvOLiQPO'#HzOLqQPO,5:`OLvQPO,5:`OM^QPO,5;mOMiQPO'#IROMtQPO,5;dOMyQPO,5=WOOQO-E:j-E:jOOQO,5:f,5:fO! aQPO,5:fO! hQPO,5:vO! mQPO,5<^O)PQPO,5:vO:kQPO,5:gO:kQPO,5:qO:kQPO,5:lO:kQPO,5<^O!!^QPO,59qO9PQPO,5:}O!!eQPO,5;QO9PQPO,59TO!!sQPO'#DXOOQO,5;O,5;OOOQO'#El'#ElOOQO'#En'#EnO9PQPO,5;UO9PQPO,5;UO9PQPO,5;UO9PQPO,5;UO9PQPO,5;UO9PQPO,5;UO9PQPO,5;eOOQO,5;h,5;hOOQO,5<R,5<RO!!zQPO,5;aO!#]QPO,5;cO!!zQPO'#CyO!#dQQO'#HkO!#rQQO,5;jO]QPO,5<SOOQO-E:c-E:cOOQO,5>],5>]O!%SQPO,5:gO!%bQPO,5:qO!%jQPO,5:lO!%uQPO,5>YOLZQPO,5>YO! {QPO,59UO!&QQQO,58zO!&YQQO,5;|O!&bQQO,5<OO)PQPO,5<OO9PQPO'#DUO]QPO,5<UO]QPO,5<XO!&jQPO'#FqO]QPO,5<ZO]QPO,5<`O!&zQQO,5<bO!'UQPO,5<dO!'ZQPO,5<iOOQO'#Fi'#FiOOQO,5<k,5<kO!'`QPO,5<kOOQO,5<m,5<mO!'eQPO,5<mO!'jQQO,5<oOOQO,5<o,5<oO<jQPO,5<qO!'qQQO,5<rO!'xQPO'#GcO!)OQPO,5<tO<jQPO,5<|O)PQPO,58}O!,|QPO'#ChOOQO1G.k1G.kOOOO-E:e-E:eOOQO1G.v1G.vO!-WQPO,59jO!&QQQO1G.fO)PQPO1G.fO!-eQQO1G1hOOQO,59l,59lO!-mQPO,59lOOQO-E:g-E:gO!-rQPO,5>_O!.ZQPO,5:WO:kQPO'#GnO!.bQPO,5>^OOQO1G1x1G1xOOQO1G.x1G.xO!.{QPO'#CyO!/kQPO'#HkO!/uQPO'#CzO!0TQPO'#HjO!0]QPO,59dOOQO1G.|1G.|OEjQPO1G.|O!0sQPO,59eO!1QQQO'#H[O!1cQQO'#CbOOQO,5:b,5:bO:kQPO,5:cOOQO,5:a,5:aO!1tQQO,5:aOOQO1G/[1G/[O!1yQPO,5:bO!2[QPO'#GqO!2oQPO,5>fOOQO1G/z1G/zO!2wQPO'#DvO!3YQPO'#D_O!3aQPO1G/zO!!zQPO'#GoO!3fQPO1G1XO9PQPO1G1XO:kQPO'#GwO!3nQPO,5>mOOQO1G1O1G1OOOQO1G0Q1G0QO!3vQPO'#E]OOQO1G0b1G0bO!4gQPO1G1xO! hQPO1G0bO!%SQPO1G0RO!%bQPO1G0]O!%jQPO1G0WOOQO1G/]1G/]O!4lQQO1G.pO7kQPO1G0jO)PQPO1G0jO:sQPO'#HnO!6`QQO1G.pOOQO1G.p1G.pO!6eQQO1G0iOOQO1G0l1G0lO!6lQPO1G0lO!6wQQO1G.oO!7_QQO'#HoO!7lQPO,59sO!8{QQO1G0pO!:dQQO1G0pO!;rQQO1G0pO!<PQQO1G0pO!=UQQO1G0pO!=lQQO1G0pO!=vQQO1G1PO!=}QQO'#HkOOQO1G0{1G0{O!?QQQO1G0}OOQO1G0}1G0}OOQO1G1n1G1nO! pQPO'#DqO!ARQPO'#D[O!!zQPO'#D|O!!zQPO'#D}OOQO1G0R1G0RO!AYQPO1G0RO!A_QPO1G0RO!AgQPO1G0RO!ArQPO'#EXOOQO1G0]1G0]O!BVQPO1G0]O!B[QPO'#ETO!!zQPO'#ESOOQO1G0W1G0WO!CUQPO1G0WO!CZQPO1G0WO!CcQPO'#EhO!CjQPO'#EhOOQO'#Gv'#GvO!CrQQO1G0mO!EcQQO1G3tO7kQPO1G3tO!GbQPO'#FWOOQO1G.f1G.fOOQO1G1h1G1hO!GiQPO1G1jOOQO1G1j1G1jO!GtQQO1G1jO!G|QPO1G1pOOQO1G1s1G1sO)aQPO'#D_O+_QQO,5<aO!KtQPO,5<aO!LVQPO,5<]O!L^QPO,5<]OOQO1G1u1G1uOOQO1G1z1G1zOOQO1G1|1G1|O9PQPO1G1|O#!QQPO'#FzOOQO1G2O1G2OO;nQPO1G2TOOQO1G2V1G2VOOQO1G2X1G2XOOQO1G2Z1G2ZOOQO1G2]1G2]OOQO1G2^1G2^O#!XQQO'#H[O##SQQO'#CbO+_QQO'#HkO##}QQOOO#$kQQO'#EeO#$YQQO'#H`OLZQPO'#GdO#$rQPO,5<}OOQO'#HO'#HOO#$zQPO1G2`O#(xQPO'#G[O<jQPO'#G`OOQO1G2`1G2`O#(}QPO1G2hOOQO1G.i1G.iO#.SQQO'#EeO#.dQQO'#H^O#.tQPO'#FSOOQO'#H^'#H^O#/OQPO'#H^O#/mQPO'#IUO#/uQPO,59SOOQO7+$Q7+$QO!&QQQO7+$QOOQO7+'S7+'SOOQO1G/W1G/WO#/zQPO'#DoO#0UQQO'#HtOOQO'#Ht'#HtOOQO1G/r1G/rOOQO,5=Y,5=YOOQO-E:l-E:lO#0fQWO,58{O#0mQPO,59fOOQO,59f,59fO!!zQPO'#HmOD}QPO'#GhO#0{QPO,5>UOOQO1G/O1G/OOOQO7+$h7+$hOOQO1G/{1G/{O#1TQQO1G/{OOQO1G/}1G/}O#1YQPO1G/{OOQO1G/|1G/|O:kQPO1G/}OOQO,5=],5=]OOQO-E:o-E:oOOQO7+%f7+%fOOQO,5=Z,5=ZOOQO-E:m-E:mO9PQPO7+&sOOQO7+&s7+&sOOQO,5=c,5=cOOQO-E:u-E:uO#1_QPO'#EUO#1mQPO'#EUOOQO'#Gu'#GuO#2UQPO,5:wOOQO,5:w,5:wOOQO7+'d7+'dOOQO7+%|7+%|OOQO7+%m7+%mO!AYQPO7+%mO!A_QPO7+%mO!AgQPO7+%mOOQO7+%w7+%wO!BVQPO7+%wOOQO7+%r7+%rO!CUQPO7+%rO!CZQPO7+%rOOQO7+&U7+&UOOQO'#Ee'#EeO7kQPO7+&UO7kQPO,5>YO#2uQPO7+$[OOQO7+&T7+&TOOQO7+&W7+&WO9PQPO'#GjO#3TQPO,5>ZOOQO1G/_1G/_O9PQPO7+&kO#3`QQO,59eO#4cQPO'#DrO! pQPO'#DrO#4nQPO'#HwO#4vQPO,5:]O#5aQQO'#HgO#5|QQO'#CuO! mQPO'#HvO#6lQPO'#DpO#6vQPO'#HvO#7XQPO'#DpO#7aQPO'#IPO#7fQPO'#E`OOQO'#Hp'#HpOOQO'#Gk'#GkO#7nQPO,59vOOQO,59v,59vO#7uQPO'#HqOOQO,5:h,5:hO#9]QPO'#H|OOQO'#EP'#EPOOQO,5:i,5:iO#9hQPO'#EYO:kQPO'#EYO#9yQPO'#H}O#:UQPO,5:sO! mQPO'#HvO!!zQPO'#HvO#:^QPO'#DpOOQO'#Gs'#GsO#:eQPO,5:oOOQO,5:o,5:oOOQO,5:n,5:nOOQO,5;S,5;SO#;_QQO,5;SO#;fQPO,5;SOOQO-E:t-E:tOOQO7+&X7+&XOOQO7+)`7+)`O#;mQQO7+)`OOQO'#Gz'#GzO#=ZQPO,5;rOOQO,5;r,5;rO#=bQPO'#FXO)PQPO'#FXO)PQPO'#FXO)PQPO'#FXO#=pQPO7+'UO#=uQPO7+'UOOQO7+'U7+'UO]QPO7+'[O#>QQPO1G1{O! mQPO1G1{O#>`QQO1G1wO!!sQPO1G1wO#>gQPO1G1wO#>nQQO7+'hOOQO'#G}'#G}O#>uQPO,5<fOOQO,5<f,5<fO#>|QPO'#HqO9PQPO'#F{O#?UQPO7+'oO#?ZQPO,5=OO! mQPO,5=OO#?`QPO1G2iO#@iQPO1G2iOOQO1G2i1G2iOOQO-E:|-E:|OOQO7+'z7+'zO!2[QPO'#G^O<jQPO,5<vOOQO,5<z,5<zO#@qQPO7+(SOOQO7+(S7+(SO#DoQPO,59TO#DvQPO'#ITO#EOQPO,5;nO)PQPO'#GyO#ETQPO,5>pOOQO1G.n1G.nOOQO<<Gl<<GlO#E]QPO'#HuO#EeQPO,5:ZOOQO1G/Q1G/QOOQO,5>X,5>XOOQO,5=S,5=SOOQO-E:f-E:fO#EjQPO7+%gOOQO7+%g7+%gOOQO7+%i7+%iOOQO<<J_<<J_O#FQQPO'#H[O#FXQPO'#CbO#F`QPO,5:pO#FeQPO,5:xO#1_QPO,5:pOOQO-E:s-E:sOOQO1G0c1G0cOOQO<<IX<<IXO!AYQPO<<IXO!A_QPO<<IXOOQO<<Ic<<IcOOQO<<I^<<I^O!CUQPO<<I^OOQO<<Ip<<IpO#FjQQO<<GvO7kQPO<<IpO)PQPO<<IpOOQO<<Gv<<GvO#H^QQO,5=UOOQO-E:h-E:hO#HkQQO<<JVOOQO,5:^,5:^O!!zQPO'#DsO#IRQPO,5:^O! pQPO'#GpO#I^QPO,5>cOOQO1G/w1G/wO#IfQPO'#HsO#ImQPO,59xO#IrQPO,5>bO! mQPO,59xO#I}QPO,5:[O#7fQPO,5:zO! mQPO,5>bO!!zQPO,5>bO#7aQPO,5>kOOQO,5:[,5:[OLvQPO'#DtOOQO,5>k,5>kO#JVQPO'#EaOOQO,5:z,5:zO#MWQPO,5:zO!!zQPO'#DxOOQO-E:i-E:iOOQO1G/b1G/bOOQO,5:y,5:yO!!zQPO'#GrO#M]QPO,5>hOOQO,5:t,5:tO#MhQPO,5:tO#MvQPO,5:tO#NXQPO'#GtO#NoQPO,5>iO#NzQPO'#EZOOQO1G0_1G0_O$ RQPO1G0_O! mQPO,5:pOOQO-E:q-E:qOOQO1G0Z1G0ZOOQO1G0n1G0nO$ WQQO1G0nOOQO<<Lz<<LzOOQO-E:x-E:xOOQO1G1^1G1^O$ _QQO,5;sOOQO'#G{'#G{O#=bQPO,5;sOOQO'#IV'#IVO$ gQQO,5;sO$ xQQO,5;sOOQO<<Jp<<JpO$!QQPO<<JpOOQO<<Jv<<JvO9PQPO7+'gO$!VQPO7+'gO!!sQPO7+'cO$!eQPO7+'cO$!jQQO7+'cOOQO<<KS<<KSOOQO-E:{-E:{OOQO1G2Q1G2QOOQO,5<g,5<gO$!qQQO,5<gOOQO<<KZ<<KZO9PQPO1G2jO$!xQPO1G2jOOQO,5=l,5=lOOQO7+(T7+(TO$!}QPO7+(TOOQO-E;O-E;OO$$lQWO'#HfO$$WQWO'#HfO$$sQPO'#G_O:kQPO,5<xOLZQPO,5<xOOQO1G2b1G2bOOQO<<Kn<<KnO$%UQQO1G.oOOQO1G1Z1G1ZO$%`QPO'#GxO$%mQPO,5>oOOQO1G1Y1G1YO$%uQPO'#FTOOQO,5=e,5=eOOQO-E:w-E:wO$%zQPO'#GmO$&XQPO,5>aOOQO1G/u1G/uOOQO<<IR<<IROOQO1G0[1G0[O$&aQPO1G0dO$&fQPO1G0[O$&kQPO1G0dOOQOAN>sAN>sO!AYQPOAN>sOOQOAN>xAN>xOOQOAN?[AN?[O7kQPOAN?[O$&pQPO,5:_OOQO1G/x1G/xOOQO,5=[,5=[OOQO-E:n-E:nO$&{QPO,5>eOOQO1G/d1G/dOOQO1G3|1G3|O$'^QPO1G/dOOQO1G/v1G/vOOQO1G0f1G0fO#MWQPO1G0fO#7aQPO'#HyO$'cQPO1G3|O! mQPO1G3|OOQO1G4V1G4VOK^QPO'#DvOJmQPO'#D_OOQO,5:{,5:{O$'nQPO,5:{O$'nQPO,5:{O$'uQQO'#H_O$'|QQO'#H`O$(WQQO'#EbO$(cQPO'#EbOOQO,5:d,5:dOOQO,5=^,5=^OOQO-E:p-E:pOOQO1G0`1G0`O$(kQPO1G0`OOQO,5=`,5=`OOQO-E:r-E:rO$(yQPO,5:uOOQO7+%y7+%yOOQO7+&Y7+&YOOQO1G1_1G1_O$)QQQO1G1_OOQO-E:y-E:yO$)YQQO'#IWO$)TQPO1G1_O$ mQPO1G1_O)PQPO1G1_OOQOAN@[AN@[O$)eQQO<<KRO9PQPO<<KRO$)lQPO<<J}OOQO<<J}<<J}O!!sQPO<<J}OOQO1G2R1G2RO$)qQQO7+(UO9PQPO7+(UOOQO<<Ko<<KoP!'xQPO'#HQOLZQPO'#HPO$){QPO,5<yO$*WQPO1G2dO:kQPO1G2dOOQO,5=d,5=dOOQO-E:v-E:vO#DoQPO,5;oOOQO,5=X,5=XOOQO-E:k-E:kO$*]QPO7+&OOOQO7+%v7+%vO$*kQPO7+&OOOQOG24_G24_OOQOG24vG24vO$*pQPO1G/yO$*{QPO1G4POOQO7+%O7+%OOOQO7+&Q7+&QOOQO7+)h7+)hO$+^QPO7+)hO!0bQPO,5:aOOQO1G0g1G0gO$+iQPO1G0gO$+pQPO,59qO$,UQPO,5:|O7kQPO,5:|OOQO7+%z7+%zOOQO7+&y7+&yO)PQPO'#G|O$,ZQPO,5>rO$,cQPO7+&yO$,hQQO'#IXOOQOAN@mAN@mO$,sQQOAN@mOOQOAN@iAN@iO$,zQPOAN@iO$-PQQO<<KpO$-ZQPO,5=kOOQO-E:}-E:}OOQO7+(O7+(OO$-lQPO7+(OO$-qQPO<<IjOOQO<<Ij<<IjO#DoQPO<<IjO$-qQPO<<IjOOQO<<MS<<MSOOQO7+&R7+&RO$.PQPO1G0jO$.[QQO1G0hOOQO1G0h1G0hO$.dQPO1G0hO$.iQQO,5=hOOQO-E:z-E:zOOQO<<Je<<JeO$.tQPO,5>sOOQOG26XG26XOOQOG26TG26TOOQO<<Kj<<KjOOQOAN?UAN?UO#DoQPOAN?UO$.|QPOAN?UO$/RQPOAN?UO7kQPO7+&SO$/aQPO7+&SOOQO7+&S7+&SO$/fQPOG24pOOQOG24pG24pO#DoQPOG24pO$/kQPO<<InOOQO<<In<<InOOQOLD*[LD*[O$/pQPOLD*[OOQOAN?YAN?YOOQO!$'Mv!$'MvO)PQPO'#CaO$/uQQO'#H[O$0YQQO'#CbO!!zQPO'#Cy",
            stateData: "$0u~OPOSQOS%wOS~OZ_O_UO`UOaUObUOcUOeUOg]Oh]Op!OOvzOwjOz}O}bO!PuO!SxO!TxO!UxO!VxO!WxO!XxO!YxO!ZyO![!_O!]xO!^xO!_xO!u|O!z{O#eoO#qnO#soO#toO#x!QO#y!PO$V!RO$X!SO$_!TO$b!UO$d!WO$g!VO$k!XO$m!YO$r!ZO$t![O$v!]O$x!^O${!`O$}!aO%{SO%}QO&PPO&VTO&rcO~OWiXW&OXZ&OXuiXu&OX!P&OX!b&OX#]&OX#_&OX#a&OX#c&OX#d&OX#e&OX#f&OX#g&OX#h&OX#j&OX#n&OX#q&OX%{iX%}iX&PiX&[&OX&]iX&]&OX&l&OX&tiX&t&OX&v!aX~O#o$]X~P$wOWUXW&ZXZUXuUXu&ZX!PUX!bUX#]UX#_UX#aUX#cUX#dUX#eUX#fUX#gUX#hUX#jUX#nUX#qUX%{&ZX%}&ZX&P&ZX&[UX&]UX&]&ZX&lUX&tUX&t&ZX&v!aX~O#o$]X~P&{O%}RO&P!bO~O&U!gO&W!eO~Og]Oh]O!SxO!TxO!UxO!VxO!WxO!XxO!YxO!ZyO!]xO!^xO!_xO%{SO%}!hO&PVOg!RXh!RX$g!RX%}!RX&P!RX~O#x!mO#y!lO$V!nOv!RX!u!RX!z!RX&r!RX~P)aOW!xOu!oO%{SO%}!sO&P!sO&t&_X~OW!{Ou&YX%{&YX%}&YX&P&YX&t&YXY&YXw&YX&l&YX&o&YXZ&YXq&YX&[&YX!P&YX#_&YX#a&YX#c&YX#d&YX#e&YX#f&YX#g&YX#h&YX#j&YX#n&YX#q&YX}&YX!r&YX#o&YXs&YX|&YX~O&]!yO~P+sO&]&YX~P+sOZ_O_UO`UOaUObUOcUOeUOg]Oh]Op!OOwjOz}O!SxO!TxO!UxO!VxO!WxO!XxO!YxO!ZyO!]xO!^xO!_xO#eoO#qnO#soO#toO%{SO&VTO~O%}!}O&P!|OY&nP~P.RO%{SOg%`Xh%`Xv%`X!S%`X!T%`X!U%`X!V%`X!W%`X!X%`X!Y%`X!Z%`X!]%`X!^%`X!_%`X!u%`X!z%`X$g%`X%}%`X&P%`X&r%`X&]%`X~O!SxO!TxO!UxO!VxO!WxO!XxO!YxO!ZyO!]xO!^xO!_xOg!RXh!RXv!RX!u!RX!z!RX%}!RX&P!RX&r!RX&]!RX~O$g!RX~P1sO|#[O~P]Og]Oh]Ov#aO!u#cO!z#bO%}!hO&PVO&r#`O~O$g#dO~P3cOu#fO&t#gO!P&RX#_&RX#a&RX#c&RX#d&RX#e&RX#f&RX#g&RX#h&RX#j&RX#n&RX#q&RX&[&RX&]&RX&l&RX~OW#eOY&RX#o&RXs&RXq&RX|&RX~P4UO!b#hO#]#hOW&SXu&SX!P&SX#_&SX#a&SX#c&SX#d&SX#e&SX#f&SX#g&SX#h&SX#j&SX#n&SX#q&SX&[&SX&]&SX&l&SX&t&SXY&SX#o&SXs&SXq&SX|&SX~OZ#XX~P5sOZ#iO~O&t#gO~O#_#mO#a#nO#c#oO#d#oO#e#pO#f#qO#g#rO#h#rO#j#vO#n#sO#q#tO&[#kO&]#kO&l#lO~O!P#uO~P7uO&v#wO~OZ_O_UO`UOaUObUOcUOeUOg]Oh]Op!OOwjOz}O#eoO#qnO#soO#toO%{SO%}0iO&P0hO&VTO~O#o#{O~O![#}O~O%}!sO&P!sO~Og]Oh]O%}!hO&PVO&]!yO~OW$TO&t#gO~O#y!lO~O!W$XO%}RO&P!bO~OZ$YO~OZ$]O~O!P$dO%}$cO&P$cO~O!P$fO%}$cO&P$cO~O!P$iO~P9POZ$lO}bO~OW$oOZ$pOgTahTa%{Ta%}Ta&PTa~OvTa!STa!TTa!UTa!VTa!WTa!XTa!YTa!ZTa!]Ta!^Ta!_Ta!uTa!zTa#xTa#yTa$VTa$gTa&rTauTaYTa&]TaqTa|Ta!PTa~P<oO&U$sO&W!eO~Ou!oO%{SOqma&[maYma&lma!Pma~O&tma}ma!rma~P?RO!SxO!TxO!UxO!VxO!WxO!XxO!YxO!ZyO!]xO!^xO!_xO~Og!Rah!Rav!Ra!u!Ra!z!Ra$g!Ra%}!Ra&P!Ra&r!Ra&]!Ra~P?wO#y$vO~Os$xO~Ou$yO%{SO~Ou!oO%{ra%}ra&Pra&traYrawra&lra&ora!Pra&[raqra~OWra#_ra#ara#cra#dra#era#fra#gra#hra#jra#nra#qra&]ra#orasra|ra~PArOu!oO%{SOq&gX!P&gX!b&gX~OY&gX#o&gX~PCpO!b$|Oq!`X!P!`XY!`X~Oq$}O!P&fX~O!P%PO~Ov%QO~Og]Oh]O%{0gO%}!hO&PVO&`%TO~O&[&^P~PD}O%{SO%}!hO&PVO~OWiXW&OXY&OXZ&OXuiXu&OX!b&OX#]&OX#_&OX#a&OX#c&OX#d&OX#e&OX#f&OX#g&OX#h&OX#j&OX#n&OX#q&OX%{iX%}iX&PiX&[&OX&]iX&]&OX&l&OX&tiX&t&OX&v!aX~OYiXY!aXq!aXwiX&liX&oiX~PEuOWUXW&ZXYUXZUXuUXu&ZX!bUX#]UX#_UX#aUX#cUX#dUX#eUX#fUX#gUX#hUX#jUX#nUX#qUX%{&ZX%}&ZX&P&ZX&[UX&]UX&]&ZX&lUX&tUX&t&ZX&v!aX~OY!aXY&ZXq!aXw&ZX&l&ZX&o&ZX~PHYOg]Oh]O%{SO%}!hO&PVOg!RXh!RX%}!RX&P!RX~P?wOu!oOw%_O%{SO%}%[O&P%ZO&o%^O~OW!xOY&_X&l&_X&t&_X~PK^OY%aO~P7uOg]Oh]O%}!hO&PVO~Oq%cOY&nX~OY%eO~Og]Oh]O%{SO%}!hO&PVOY&nP~P?wOY%kO&l%iO&t#gO~Oq%lO&v#wOY&uX~OY%nO~O%{SOg%`ah%`av%`a!S%`a!T%`a!U%`a!V%`a!W%`a!X%`a!Y%`a!Z%`a!]%`a!^%`a!_%`a!u%`a!z%`a$g%`a%}%`a&P%`a&r%`a&]%`a~O|%oO~P]O}%pO~Ou!oO%{SO%}!sO&P!sO~Op%|Ow%}O%}RO&P!bO&]!yO~Oz%{O~P! {Oz&PO%}RO&P!bO&]!yO~OY&cP~P9POg]Oh]O%{SO%}!hO&PVO~O}bO~P9POW!xOu!oO%{SO&t&_X~O#q#tO!P#ra#_#ra#a#ra#c#ra#d#ra#e#ra#f#ra#g#ra#h#ra#j#ra#n#ra&[#ra&]#ra&l#raY#ra#o#ras#raq#ra|#ra~Oo&dO}&cO!r&eO&]&bO~O}&jO!r&eO~Oo&nO}&mO&]&bO~OZ#iOu&rO%{SO~OW$oO}&xO~OW$oO!P&zO~OW&{O!P&|O~O$g!VO%}0iO&P0hO!P&cP~P.RO!P'XO#o'YO~P7uO}'ZO~O$b']O~O!P'^O~O!P'_O~O!P'`O~P7uO!P'bO~P7uOZ$YO_UO`UOaUObUOcUOeUOg]Oh]Op!OOwjOz}O%{SO%}'dO&P'cO&VTO~P?wO%P'mO%T'nOZ$|a_$|a`$|aa$|ab$|ac$|ae$|ag$|ah$|ap$|av$|aw$|az$|a}$|a!P$|a!S$|a!T$|a!U$|a!V$|a!W$|a!X$|a!Y$|a!Z$|a![$|a!]$|a!^$|a!_$|a!u$|a!z$|a#e$|a#q$|a#s$|a#t$|a#x$|a#y$|a$V$|a$X$|a$_$|a$b$|a$d$|a$g$|a$k$|a$m$|a$r$|a$t$|a$v$|a$x$|a${$|a$}$|a%u$|a%{$|a%}$|a&P$|a&V$|a&r$|a|$|a$`$|a$p$|a~O}'tOY&xP~P9PO}ra!rra&|ra~PArOW$oO!P'{O~Os'|O~Ou!oO%{SOq&ga!P&ga!b&gaY&ga#o&ga~O}'}O~P9POq$}O!P&fa~Og]Oh]O%{0gO%}!hO&PVO~O&`(UO~P!.jOu!oO%{SOq&_X&[&_XY&_X&l&_X!P&_X~O}&_X!r&_X~P!/SOo(WOp(WOqnX&[nX~Oq(XO&[&^X~O&[(ZO~Ou!oOw(]O%{SO%}RO&P!bO~OYma&lma&tma~P!0bOW&OXY!aXq!aXu!aX%{!aX~OWUXY!aXq!aXu!aX%{!aX~OW(`O~Ou!oO%{SO%}!sO&P!sO&o(bO~Og]Oh]O%{SO%}!hO&PVO~P?wOq%cOY&na~Ou!oO%{SO%}!sO&P!sO&o%^O~O%{SO~P1sOY(eO~OY(hO&l%iO~Oq%lOY&ua~Og]Oh]OvzO|(pO!u|O%{SO%}!hO&PVO&rcO~P?wO!P(qO~OW^iZ#XXu^i!P^i!b^i#]^i#_^i#a^i#c^i#d^i#e^i#f^i#g^i#h^i#j^i#n^i#q^i&[^i&]^i&l^i&t^iY^i#o^is^iq^i|^i~OW)QO~Os)RO~P7uOz)SO%}RO&P!bO~O!P]iY]i#o]is]iq]i|]i~P7uOq)TOY&cX!P&cX~P7uOY)VO~O#q#tO!P#^i#_#^i#a#^i#c#^i#d#^i#e#^i#f#^i#j#^i#n#^i&[#^i&]#^i&l#^iY#^i#o#^is#^iq#^i|#^i~O#g#rO#h#rO~P!7qO#_#mO#f#qO#g#rO#h#rO#j#vO#q#tO&[#kO&]#kO!P#^i#a#^i#c#^i#d#^i#n#^i&l#^iY#^i#o#^is#^iq#^i|#^i~O#e#pO~P!9VO#_#mO#f#qO#g#rO#h#rO#j#vO#q#tO&[#kO&]#kO!P#^i#c#^i#d#^i#n#^iY#^i#o#^is#^iq#^i|#^i~O#a#nO#e#pO&l#lO~P!:kO#e#^i~P!9VO#q#tO!P#^i#a#^i#c#^i#d#^i#e#^i#f#^i#n#^i&l#^iY#^i#o#^is#^iq#^i|#^i~O#_#mO#g#rO#h#rO#j#vO&[#kO&]#kO~P!<WO#g#^i#h#^i~P!7qO#o)WO~P7uO#_&_X#a&_X#c&_X#d&_X#e&_X#f&_X#g&_X#h&_X#j&_X#n&_X#q&_X&]&_X#o&_Xs&_X|&_X~P!/SO!P#kiY#ki#o#kis#kiq#ki|#ki~P7uOg]Oh]OvzO}bO!P)fO!SxO!TxO!UxO!VxO!W)jO!XxO!YxO!ZyO!]xO!^xO!_xO!u|O!z{O%{SO%})^O&P)_O&]&bO&rcO~O|)iO~P!?hO}&cO~O}&cO!r&eO~Oo&dO}&cO!r&eO~O%{SO%}!sO&P!sO|&qP!P&qP~P?wO}&jO~Og]Oh]OvzO|)xO!P)vO!u|O!z{O%{SO%}!hO&PVO&]&bO&rcO~P?wO}&mO~Oo&nO}&mO~Os)zO~P9POu)|O%{SO~Ou&rO}'}O%{SOW#Zi!P#Zi#_#Zi#a#Zi#c#Zi#d#Zi#e#Zi#f#Zi#g#Zi#h#Zi#j#Zi#n#Zi#q#Zi&[#Zi&]#Zi&l#Zi&t#ZiY#Zi#o#Zis#Ziq#Zi|#Zi~O}&cOW&biu&bi!P&bi#_&bi#a&bi#c&bi#d&bi#e&bi#f&bi#g&bi#h&bi#j&bi#n&bi#q&bi&[&bi&]&bi&l&bi&t&biY&bi#o&bis&biq&bi|&bi~O#|*UO$O*VO$Q*VO$R*WO$S*XO~O|*TO~P!GPO$Y*YO%}RO&P!bO~OW*ZO!P*[O~O$`*]OZ$^i_$^i`$^ia$^ib$^ic$^ie$^ig$^ih$^ip$^iv$^iw$^iz$^i}$^i!P$^i!S$^i!T$^i!U$^i!V$^i!W$^i!X$^i!Y$^i!Z$^i![$^i!]$^i!^$^i!_$^i!u$^i!z$^i#e$^i#q$^i#s$^i#t$^i#x$^i#y$^i$V$^i$X$^i$_$^i$b$^i$d$^i$g$^i$k$^i$m$^i$r$^i$t$^i$v$^i$x$^i${$^i$}$^i%u$^i%{$^i%}$^i&P$^i&V$^i&r$^i|$^i$p$^i~Og]Oh]O$g#dO%}!hO&PVO~O!P*aO~P9PO!P*bO~OZ_O_UO`UOaUObUOcUOeUOg]Oh]Op!OOvzOwjOz}O}bO!PuO!SxO!TxO!UxO!VxO!WxO!XxO!YxO!Z*gO![!_O!]xO!^xO!_xO!u|O!z{O#eoO#qnO#soO#toO#x!QO#y!PO$V!RO$X!SO$_!TO$b!UO$d!WO$g!VO$k!XO$m!YO$p*hO$r!ZO$t![O$v!]O$x!^O${!`O$}!aO%{SO%}QO&PPO&VTO&rcO~O|*fO~P!LcOWiXW&OXY&OXZ&OXuiXu&OX!P&OX%{iX%}iX&PiX&]iX&tiX&t&OX~OWUXW&ZXYUXZUXuUXu&ZX!PUX%{&ZX%}&ZX&P&ZX&]&ZX&tUX&t&ZX~OW#eOu#fO&t#gO~OW&SXY%WXu&SX!P%WX&t&SX~OZ#XX~P#$YOY*nO!P*lO~O%P'mO%T'nOZ$|i_$|i`$|ia$|ib$|ic$|ie$|ig$|ih$|ip$|iv$|iw$|iz$|i}$|i!P$|i!S$|i!T$|i!U$|i!V$|i!W$|i!X$|i!Y$|i!Z$|i![$|i!]$|i!^$|i!_$|i!u$|i!z$|i#e$|i#q$|i#s$|i#t$|i#x$|i#y$|i$V$|i$X$|i$_$|i$b$|i$d$|i$g$|i$k$|i$m$|i$r$|i$t$|i$v$|i$x$|i${$|i$}$|i%u$|i%{$|i%}$|i&P$|i&V$|i&r$|i|$|i$`$|i$p$|i~OZ*qO~O%P'mO%T'nOZ%Ui_%Ui`%Uia%Uib%Uic%Uie%Uig%Uih%Uip%Uiv%Uiw%Uiz%Ui}%Ui!P%Ui!S%Ui!T%Ui!U%Ui!V%Ui!W%Ui!X%Ui!Y%Ui!Z%Ui![%Ui!]%Ui!^%Ui!_%Ui!u%Ui!z%Ui#e%Ui#q%Ui#s%Ui#t%Ui#x%Ui#y%Ui$V%Ui$X%Ui$_%Ui$b%Ui$d%Ui$g%Ui$k%Ui$m%Ui$r%Ui$t%Ui$v%Ui$x%Ui${%Ui$}%Ui%u%Ui%{%Ui%}%Ui&P%Ui&V%Ui&r%Ui|%Ui$`%Ui$p%Ui~OW&SXu&SX#_&SX#a&SX#c&SX#d&SX#e&SX#f&SX#g&SX#h&SX#j&SX#n&SX#q&SX&[&SX&]&SX&l&SX&t&SX~O!b*vO#]#hOY&SXZ#XX~P#,{OY&QXq&QX|&QX!P&QX~P7uO}'tO|&wP~P9POY&QXg%YXh%YX%{%YX%}%YX&P%YXq&QX|&QX!P&QX~Oq*yOY&xX~OY*{O~O}'}O|&iP~P9POq&hX!P&hX|&hXY&hX~P7uO&`Ta~P<oOo(WOp(WOqna&[na~Oq(XO&[&^a~OW+TO~Ow+UO~Ou!oO%{SO%}+YO&P+XO~Og]Oh]Ov#aO!u#cO%}!hO&PVO&r#`O~Og]Oh]OvzO|+_O!u|O%{SO%}!hO&PVO&rcO~P?wOw+jO%}RO&P!bO&]!yO~Oq)TOY&ca!P&ca~O#_ma#ama#cma#dma#ema#fma#gma#hma#jma#nma#qma&]ma#omasma|ma~P?ROo+oOq!fX&[!fX~Oq+qO&[&kX~O&[+sO~OW&ZXu&ZX%{&ZX%}&ZX&P&ZX&]&ZX~OZ!aX~P#4{OWiXuiX%{iX%}iX&PiX&]iX~OZ!aX~P#5hOg]Oh]Ov#aO!u#cO!z#bO&]&bO&r#`O~O%})^O&P)_O~P#6TOg]Oh]O%{SO%})^O&P)_O~O}bO!P+}O~OZ,OO~O},QO!m,TO~O|,VO~P!?hO}bOg&eXh&eXv&eX!S&eX!T&eX!U&eX!V&eX!W&eX!X&eX!Y&eX!Z&eX!]&eX!^&eX!_&eX!u&eX!z&eX%{&eX%}&eX&P&eX&]&eX&r&eX~Oq,XO}&pX!P&pX~OZ#iO}&cOq!|X|!|X!P!|X~Oq,^O|&qX!P&qX~O|,aO!P,`O~O&]&bO~P3cOg]Oh]OvzO|,eO!P)vO!u|O!z{O%{SO%}!hO&PVO&]&bO&rcO~P?wOs,fO~P7uOs,fO~P9PO}&cOW&bqu&bq!P&bq#_&bq#a&bq#c&bq#d&bq#e&bq#f&bq#g&bq#h&bq#j&bq#n&bq#q&bq&[&bq&]&bq&l&bq&t&bqY&bq#o&bqs&bqq&bq|&bq~O|,jO~P!GPO!W,nO#},nO%}RO&P!bO~O!P,qO~O$Y,rO%}RO&P!bO~O!b$|O#o,tOq!`X!P!`X~O!P,vO~P7uO!P,vO~P9PO!P,yO~P7uO|,{O~P!LcO![#}O#o,|O~O!P-OO~O!b-PO~OY-SOZ$YO_UO`UOaUObUOcUOeUOg]Oh]Op!OOwjOz}O%{SO%}'dO&P'cO&VTO~P?wOY-SO!P-TO~O%P'mO%T'nOZ%Uq_%Uq`%Uqa%Uqb%Uqc%Uqe%Uqg%Uqh%Uqp%Uqv%Uqw%Uqz%Uq}%Uq!P%Uq!S%Uq!T%Uq!U%Uq!V%Uq!W%Uq!X%Uq!Y%Uq!Z%Uq![%Uq!]%Uq!^%Uq!_%Uq!u%Uq!z%Uq#e%Uq#q%Uq#s%Uq#t%Uq#x%Uq#y%Uq$V%Uq$X%Uq$_%Uq$b%Uq$d%Uq$g%Uq$k%Uq$m%Uq$r%Uq$t%Uq$v%Uq$x%Uq${%Uq$}%Uq%u%Uq%{%Uq%}%Uq&P%Uq&V%Uq&r%Uq|%Uq$`%Uq$p%Uq~O}'tO~P9POq-`O|&wX~O|-bO~Oq*yOY&xa~Oq-fO|&iX~O|-hO~Ow-iO~Oq!aXu!aX!P!aX!b!aX%{!aX~OZ&OX~P#EoOZUX~P#EoO!P-jO~OZ-kO~OW^yZ#XXu^y!P^y!b^y#]^y#_^y#a^y#c^y#d^y#e^y#f^y#g^y#h^y#j^y#n^y#q^y&[^y&]^y&l^y&t^yY^y#o^ys^yq^y|^y~OY%^aq%^a!P%^a~P7uO!P#myY#my#o#mys#myq#my|#my~P7uOo+oOq!fa&[!fa~Oq+qO&[&ka~OZ,OO~PCpO!P-xO~O!m,TO}&ja!P&ja~O}bO!P-{O~OZ_O_UO`UOaUObUOcUOeUOg]Oh]Op.ZOvzOw.YOz}O|.UO}bO!PuO![!_O!u|O!z{O#eoO#qnO#soO#toO#x!QO#y!PO$V!RO$X!SO$_!TO$b!UO$d!WO$g!VO$k!XO$m!YO$r!ZO$t![O$v!]O$x!^O${!`O$}!aO%{SO%}QO&PPO&VTO&]!yO&rcO~P?wO},QO~Oq,XO}&pa!P&pa~O}&cOq!|a|!|a!P!|a~OZ#iO}&cOq!|a|!|a!P!|a~O%{SO%}!sO&P!sOq%hX|%hX!P%hX~P?wOq,^O|&qa!P&qa~O|!}X~P!?hO|.eO~Os.fO~P7uOW$oO!P.gO~OW$oO$P.lO%}RO&P!bO!P&zP~OW$oO$T.mO~O!P.nO~O!b$|O#o.pOq!`X!P!`X~OY.rO~O!P.sO~P7uO#o.tO~P7uO!b.vO~OY.wOZ$YO_UO`UOaUObUOcUOeUOg]Oh]Op!OOwjOz}O%{SO%}'dO&P'cO&VTO~P?wOW!{Ou&YX%{&YX%}&YX&P&YX&|&YX~O&]!yO~P$$WOu!oO%{SO&|.yO%}%RX&P%RX~OY&QXq&QX~P7uO}'tOq%lX|%lX~P9POq-`O|&wa~O!b/PO~O}'}Oq%aX|%aX~P9POq-fO|&ia~OY/SO~O!P/TO~OZ/UO~O&l%iOq!ga&[!ga~Ou!oO%{SO}&ma!P&ma!m&ma~O!P/ZO~O!m,TO}&ji!P&ji~O|/`O~P]OW/bO~P4UOZ#iO!P&SX~P#,{OW$TOZ#iO&t#gO~Op/dOw/dO~O}&cOq!|i|!|i!P!|i~O|!}a~P!?hOW$oO!P/fO~OW$oOq/gO!P&zX~OY/kO~P7uOY/mO~OY%Wq!P%Wq~P7uO&|.yO%}%Ra&P%Ra~OY/rO~Ou!oO!P/uO!Z/vO%{SO~OY/wO~O&l%iOq!gi&[!gi~Ou!oO%{SO}&mi!P&mi!m&mi~O!m,TO}&jq!P&jq~O|/yO~P]Op/{Ow%}Oz%{O%}RO&P!bO&]!yO~O!P/|O~Oq/gO!P&za~O!P0QO~OW$oOq/gO!P&{X~OY0SO~P7uOY0TO~OY%Wy!P%Wy~P7uOu!oO%{SO%}%sa&P%sa&|%sa~OY0UO~Ou!oO!P0VO!Z0WO%{SO~Op0ZO%}RO&P!bO~OW)QOZ#iO~O!P0]O~OW$oOq%pa!P%pa~Oq/gO!P&{a~O!P0_O~Ou!oO!P0_O!Z0`O%{SO~O!P0bO~O!P0cO~O!P0eO~O!P0fO~O#o&OXY&OXs&OXq&OX|&OX~P$wO#oUXYUXsUXqUX|UX~P&{O`Q_P#f&Vc~",
            goto: "#(V&|PPPP&}'b*q-tP'bPP.Y.^/rPPPPP1^P2vPP4`7P9j<T<m>bPPP>hP@|PPPAv2vPCoPPDjPEaEgPPPPPPPPPPPPFpGXPJ_JgJqKZKaKgMVMZMZMcPMrNx! k! uP!![NxP!!b!!l!!{!#TP!#r!#|!$SNx!$V!$]EaEa!$a!$k!$n2v!&Y2v2v!(RP.^P!(VP!(vPPPPPP.^P.^!)d.^PP.^P.^PP.^!*x!+SPP!+Y!+cPPPPPPPP&}P&}PP!+g!+g!+z!+gPP!+gP!+gP!,e!,hP!+g!-O!+gP!+gP!-R!-UP!+gP!+gP!+gP!+gP!+g!+gP!+gP!-YP!-`!-c!-iP!+g!-u!-x!.Q!.d!2a!2g!2m!3s!3y!4T!5X!5_!5e!5o!5u!5{!6R!6X!6_!6e!6k!6q!6w!6}!7T!7Z!7e!7k!7u!7{PPP!8R!+g!8vP!<XP!=]P!?n!@U!CQ2vPPP!Dn!HY!JwPP!Mb!MeP# n# t##b##q##w#$w#%a#&[#&e#&h#&tP#&w#'TP#'[#'cP#'fP#'oP#'r#'u#'x#'|#(SssObw!Z#]#{$Z$[$^$_'Z*]*e,Q.V.W/a'kqOWX_`bnow!X!Z!^!`!i!p!t!y!{#O#P#U#Y#]#_#f#h#i#m#n#o#p#q#r#s#v#w#x#y#{$R$Y$Z$[$]$^$_$l$p${$|%R%S%X%Y%b%c%f%g%i%k%p&]&b&c&d&e&j&m&n&r&s&u'Q'R'T'Y'Z'e't'}(W(X(h(l(o)T)W)X)Z)`)b)h)s)t)w)|*]*_*a*b*e*h*k*l*q*v+]+o+q+t+w+z+{,O,Q,T,X,^,`,c,t,v-P-T-X-`-f-w.Q.S.T.V.W.d.p.s.v.x/P/S/Y/_/a/p/t/v/w0W0Y0`0j#rgO_bnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*v,Q,t,v-P-`-f.V.W.p.s.v/P/a/v0W0`t!dS!P!R!S!l!n$X$v*U*V*W*X,m,o.l.m/g0gQ#^cS%`#P.SQ%s#`U%x#e$T/bQ&P#gW'g$l*l-T.xU'q$o&{*ZQ'r$pS(^%Y/_U(}%z+i/zQ)S&QQ+[(lQ+g)QQ-c*yR-m+]u!dS!P!R!S!l!n$X$v*U*V*W*X,m,o.l.m/g0gT$q!c(T#upO_bnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$p$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*v,Q,t,v-P-`-f.V.W.p.s.v/P/a/v0W0`#tkO_bnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$p$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*v,Q,t,v-P-`-f.V.W.p.s.v/P/a/v0W0`X'h$l*l-T.x#}UO_bnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$l$p$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*l*v,Q,t,v-P-T-`-f.V.W.p.s.v.x/P/a/v0W0`#}jO_bnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$l$p$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*l*v,Q,t,v-P-T-`-f.V.W.p.s.v.x/P/a/v0W0`%tZOW_bdnow}!X!Z!^!`!y#O#R#U#]#f#h#i#m#n#o#p#q#r#s#v#w#x#{$S$Y$Z$[$]$^$_$l$p$|%R%c%i%k%p%{&c&d&e&m&n&r'Q'S'T'Y'Z'i't'}(W(X(h(m(o)T)W)a)b)h)t)u)w)|*]*a*b*e*h*l*v+o+{,O,Q,T,X,`,t,v-P-T-`-f.T.V.W.d.p.s.v.x/P/a/v0W0`0jQ%W!{Q([%XV-V*q-Z.y%tZOW_bdnow}!X!Z!^!`!y#O#R#U#]#f#h#i#m#n#o#p#q#r#s#v#w#x#{$S$Y$Z$[$]$^$_$l$p$|%R%c%i%k%p%{&c&d&e&m&n&r'Q'S'T'Y'Z'i't'}(W(X(h(m(o)T)W)a)b)h)t)u)w)|*]*a*b*e*h*l*v+o+{,O,Q,T,X,`,t,v-P-T-`-f.T.V.W.d.p.s.v.x/P/a/v0W0`0jV-V*q-Z.y%t[OW_bdnow}!X!Z!^!`!y#O#R#U#]#f#h#i#m#n#o#p#q#r#s#v#w#x#{$S$Y$Z$[$]$^$_$l$p$|%R%c%i%k%p%{&c&d&e&m&n&r'Q'S'T'Y'Z'i't'}(W(X(h(m(o)T)W)a)b)h)t)u)w)|*]*a*b*e*h*l*v+o+{,O,Q,T,X,`,t,v-P-T-`-f.T.V.W.d.p.s.v.x/P/a/v0W0`0jV-W*q-Z.yS!zZ-VS$S}%{S%z#e$TQ&Q#gQ+i)QQ.[,QR/z/b$eYO_bnow!X!Z!^!`!y#]#f#h#i#m#n#o#p#q#r#s#v#w#{$Y$Z$[$]$^$_$l$p$|%i%k&d&e&n&r'T'Y'Z't'}(W(X(h)T)W)|*]*a*b*e*h*l*v+o,Q,T,X,t,v-P-T-`-f.V.W.p.s.v.x/P/a/v0W0`Q%U!yR+R(X%u^OW_bdnow!X!Z!^!`!y#O#R#U#]#f#h#i#m#n#o#p#q#r#s#v#w#x#{$Y$Z$[$]$^$_$l$p$|%R%c%i%k%p&c&d&e&m&n&r'Q'S'T'Y'Z'i't'}(W(X(h(m(o)T)W)a)b)h)t)u)w)|*]*a*b*e*h*l*q*v+o+{,O,Q,T,X,`,t,v-P-T-Z-`-f.T.V.W.d.p.s.v.x.y/P/a/v0W0`0j!o!qX!i!r!t#P#_#y$t${%S%Y%b%f&]'R'e(l)X)`)s*_*k+]+t+w+z,c-X-w.Q.S/S/Y/_/p/t/w0Y#|jO_bnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$l$p$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*l*v,Q,t,v-P-T-`-f.V.W.p.s.v.x/P/a/v0W0`Q$Z!TQ$[!UQ$a!YQ$j!_R*i']Q#jhS&v$R)PQ(|%yQ*Q&wQ+f)OQ,[)oQ-q+hQ.a,]Q/W-rS/c.Y.ZQ/}/dQ0[/{R0a0ZQ&f$OW(s%t&g&h&iQ*P&vU+`(t(u(vQ,Z)oQ,h*QS-n+a+bS.`,[,]Q/V-oR/e.aX)f&c)h,`.drdObw!Z#]#{$Z$[$^$_'Z*]*e,Q.V.W/aW#R_#U%c,OQ'S$]W'i$l*l-T.xS(m%p(oW)a&c)h,`.dS)p&j,^S)u&m)wR-Z*qh!vX!V#_#d'R(l)`)s*_+]+w,cQ(R$}Q(_%^R+V(b#rmObnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$p$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*v,Q,t,v-P-`-f.V.W.p.s.v/P/a/v0W0`v!tX!V#P#_#d$}%^%b%f'R'e(b(l*_*k+]-Y.S.|Q#W_Q$OzQ$P{Q$Q|Q%t#aQ%u#bQ%v#cQ(j%lS)Y&b+qY)d&c)a)h,`.dS)o&j,^Q+p)ZW+t)`)s+w,cQ+|)bQ,])pT.O+z.QU(P$|'}-fR*O&uW)f&c)h,`.dT)v&m)wQ&i$OQ&q$QQ(v%tQ({%vY)b&c)a)h,`.dV)t&m)u)wQ)[&bR-u+qQ+n)YR-t+p#tmO_bnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$p$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*v,Q,t,v-P-`-f.V.W.p.s.v/P/a/v0W0`Q,P)dS-w+t.OR.R+|T#U_,OU#S_#U,OR(c%cQ,S)eQ-y+vQ-}+yQ/].PR/x/^ruObw!Z#]#{$Z$[$^$_'Z*]*e,Q.V.W/aQ$m!aQ&`#wQ'a$jQ'p$nW)f&c)h,`.dQ*s'nQ+})cQ,W)jQ-[*rR-{+xrsObw!Z#]#{$Z$[$^$_'Z*]*e,Q.V.W/aS(n%p(oW)f&c)h,`.dT)v&m)wQ&h$OS(u%t&iR+b(vQ&g$OQ&l$PU(t%t&h&iQ(x%uS+a(u(vR-o+bQ)n&eR)y&nQ&p$QS(z%v&qR+e({Q&o$QU(y%v&p&qS+d(z({R-p+eS(n%p(oT)v&m)wrsObw!Z#]#{$Z$[$^$_'Z*]*e,Q.V.W/aW)f&c)h,`.dT)v&m)wQ&k$PS(w%u&lR+c(xQ)q&jR.b,^R,b)rQ%q#^R(r%sT(n%p(oQ,R)eS-|+y,SR/[-}R.W,QWj$l*l-T.x#ukO_bnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$p$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*v,Q,t,v-P-`-f.V.W.p.s.v/P/a/v0W0`#|hO_bnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$l$p$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*l*v,Q,t,v-P-T-`-f.V.W.p.s.v.x/P/a/v0W0`U%y#e$T/bS)O%z/zQ+h)QR-r+iT&t$R&u!]#ml#Q$`$h$k&O&R&S&V&W&X&Y&[&_'s(O){*`*c+k+m,g,x,}-^.o.u/l/o!V#nl#Q$`$h$k&O&R&S&W&[&_'s(O){*`*c+k+m,g,x,}-^.o.u/l/o#umO_bnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$p$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*v,Q,t,v-P-`-f.V.W.p.s.v/P/a/v0W0`a'u$p't*v-`/P/v0W0`Q'w$pR-d*yQ&y$UQ'y$uR*|'zT*R&x*SsuObw!Z#]#{$Z$[$^$_'Z*]*e,Q.V.W/artObw!Z#]#{$Z$[$^$_'Z*]*e,Q.V.W/aQ$e![R$g!]R$^!WruObw!Z#]#{$Z$[$^$_'Z*]*e,Q.V.W/aR'T$]R$_!WR'[$aT*d'Z*eX'k$m'l'p*tR*r'mQ-Y*qR.|-ZQ'o$mQ*p'lQ*u'pR-]*tR$n!aQ'j$lV-R*l-T.xQwOQ#]bW#|w#].V/aQ.V,QR/a.WrWObw!Z#]#{$Z$[$^$_'Z*]*e,Q.V.W/al!kW!p#O#Y#x%R%X%g&s'Q)Z+{.T0j!j!pX!i!t#P#_#y${%S%Y%b%f&]'R'e(l)X)`)s*_*k+]+t+w+z,c-X-w.Q.S/S/Y/_/p/t/w0YQ#O_Q#Y`#^#xno!X!^!`#f#h#i#m#n#o#p#q#r#s#w$Y$p$|%i%k&d&e&n&r'T'Y't'}(W(h)T)W)|*a*b*h*v+o,T,X,t,v-P-`-f.p.s.v/P/v0W0`S%R!y(XQ%X!{j%g#U%c%p&c&j&m(o)h)w*q,^,`.dS&s$R&uY'Q$]$l*l-T.xS)Z&b+qS+{)b)tQ.T,OR0j#vQ!fTR$r!fQ(Y%UR+S(Y^!rX#P#y&]'R'e)Xx$t!i#_%S%Y%b%f(l)`)s*_*k+]+w+z,c-X.Q.S/_/p[$z!r$t${/Y/t0YS${!t+tQ/Y-wQ/t/SR0Y/wQ)U&SR+l)UQ)h&cS,U)h.dR.d,`!laO_bw!Z#U#]#{$Z$[$]$^$_$l%c%p&c&j&m'Z(o)h)w*]*e*l*q,O,Q,^,`-T.V.W.d.x/aY!jW#O%g'Q.TT#Za!jQ-g*}R/R-gQ%O!vR(S%OQ%j#VS(g%j/XR/X-sQ+r)[R-v+rQ%d#SR(d%dQ,Y)lR._,YQ)w&mR,d)wQ,_)qR.c,_Q(o%pR+^(oQ&u$RR)}&uQ%m#WR(k%mQ-a*wR/O-aQ*z'wR-e*zQ*S&xR,i*SQ,m*UR.i,mQ/h.jS0P/h0RR0R/jQ*e'ZR,z*eQ'l$mS*o'l*tR*t'pQ.z-XR/q.zQ*m'jR-U*m`vObw#],Q.V.W/aQ$b!ZQ&a#{Q'O$ZQ'P$[Q'V$^Q'W$_S*d'Z*eR,s*]'YrOWX_`bnow!X!Z!^!`!i!p!t!y!{#O#P#U#Y#]#_#f#h#i#m#n#o#p#q#r#s#v#w#x#y#{$R$Y$Z$[$]$^$_$l${$|%R%S%X%Y%b%c%f%g%i%k%p&]&b&c&d&e&j&m&n&r&s&u'Q'R'T'Y'Z'e'}(W(X(h(l(o)T)W)X)Z)`)b)h)s)t)w)|*]*_*a*b*e*h*k*l*q+]+o+q+t+w+z+{,O,Q,T,X,^,`,c,t,v-P-T-X-f-w.Q.S.T.V.W.d.p.s.v.x/S/Y/_/a/p/t/w0Y0ja'v$p't*v-`/P/v0W0`Q!cSQ$U!PQ$V!RQ$W!SQ$u!lQ$w!nQ&}$XQ'z$vQ(T0gS,k*U*WQ,o*VQ,p*XQ.h,mS.j,o.lQ/j.mR0O/g%oROS_bcnow!P!R!S!X!Z!^!`!l!n#P#]#`#e#f#g#h#i#m#n#o#p#q#r#s#w#{$T$X$Y$Z$[$]$^$_$l$o$p$v$|%Y%k%z&Q&r&{'T'Y'Z't'}(h(l)Q)T)W)|*U*V*W*X*Z*]*a*b*e*h*l*v*y+]+i,Q,m,o,t,v-P-T-`-f.S.V.W.l.m.p.s.v.x/P/_/a/b/g/v/z0W0`0gQ'x$pQ*w'tS-_*v/PQ.}-`Q0X/vQ0^0WR0d0`rlObw!Z#]#{$Z$[$^$_'Z*]*e,Q.V.W/aS#Q_$YQ#tnQ#zoQ$`!XQ$h!^Q$k!`Q&O#fQ&R#hY&S#i$]*a,v.sQ&U#mQ&V#nQ&W#oQ&X#pQ&Y#qQ&Z#rQ&[#sQ&_#w^'s$p't-`/P/v0W0`U(O$|'}-fQ(i%kQ){&rQ*`'TQ*c'YQ+W(hQ+k)TQ+m)WQ,g)|Q,x*bQ,}*hQ-^*vQ.o,tQ.u-PQ/l.pR/o.v#rfO_bnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$p$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*v,t,v-P-`-f.V.W.p.s.v/P/a/v0W0`W'f$l*l-T.xR.X,QrXObw!Z#]#{$Z$[$^$_'Z*]*e,Q.V.W/aW!iW#x%R'QQ#P_Q#_d!|#yno!X!^!`#f#h#i#m#n#o#p#q#r#s#w$Y$p$|%k&r'T'Y't'}(h)T)W)|*a*b*h*v,t,v-P-`-f.p.s.v/P/v0W0`d%S!y%i&d&e&n(W(X+o,T,XQ%Y#OQ%b#RS%f#U%cQ&]#vQ'R$]W'e$l*l-T.xS(l%p(oQ)X0jW)`&c)h,`.dS)s&m)wQ*_'SQ*k'iQ+](mQ+w)aS+z)b)tQ,c)uS-X*q-ZQ.Q+{Q.S,OQ/_.TR/p.y%t^OW_bdnow!X!Z!^!`!y#O#R#U#]#f#h#i#m#n#o#p#q#r#s#v#w#x#{$Y$Z$[$]$^$_$l$p$|%R%c%i%k%p&c&d&e&m&n&r'Q'S'T'Y'Z'i't'}(W(X(h(m(o)T)W)a)b)h)t)u)w)|*]*a*b*e*h*l*q*v+o+{,O,Q,T,X,`,t,v-P-T-Z-`-f.T.V.W.d.p.s.v.x.y/P/a/v0W0`0jQ$R}Q&w$SR)P%{&PVOW_bdnow}!X!Z!^!`!y!{#O#R#U#]#f#h#i#m#n#o#p#q#r#s#v#w#x#{$S$Y$Z$[$]$^$_$l$p$|%R%X%c%i%k%p%{&c&d&e&m&n&r'Q'S'T'Y'Z'i't'}(W(X(h(m(o)T)W)a)b)h)t)u)w)|*]*a*b*e*h*l*q*v+o+{,O,Q,T,X,`,t,v-P-T-Z-`-f.T.V.W.d.p.s.v.x.y/P/a/v0W0`0jR%V!y#ziObnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$l$p$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*l*v,Q,t,v-P-T-`-f.V.W.p.s.v.x/P/a/v0W0`Q#V_Q%U!yQ&^#vQ(f%iQ)k&dU)l&e&n,TQ+Q(WQ+R(XQ-s+oR.^,XQ(V%TR+P(U#|eO_bnow!X!Z!^!`#]#f#h#i#m#n#o#p#q#r#s#w#{$Y$Z$[$]$^$_$l$p$|%k&r'T'Y'Z't'}(h)T)W)|*]*a*b*e*h*l*v,Q,t,v-P-T-`-f.V.W.p.s.v.x/P/a/v0W0`T%w#e/bQ&T#iQ'U$]Q,w*aQ.q,vR/n.sX)g&c)h,`.d!{`OW_abw!Z!j#O#U#]#{$Z$[$]$^$_$l%c%g%p&c&j&m'Q'Z(o)h)w*]*e*l*q,O,Q,^,`-T.T.V.W.d.x/aU!wX!V'RU%r#_#d*_S+Z(l)sQ+u)`S-l+],cR-z+wj!uX!V#_#d$}%^(b(l)`)s+]+w,cU%]#P%f.SQ(a%bQ*^'RQ*j'eQ,u*_Q-Q*kQ.{-YR/s.|Q(Q$|Q*}'}R/Q-fR+O'}[)c&c&m)h)w,`.dT+x)a)uR)]&bW+v)`)s+w,cQ.P+zR/^.QS#T_,OR%h#US)m&e&nR.],TR)r&jW)e&c)h,`.dR+y)aR#X_R*x'tR'x$pT,l*U,mQ.k,oR/i.lR/i.m",
            nodeNames: "⚠ LineComment BlockComment Program ModuleDeclaration MarkerAnnotation Identifier ScopedIdentifier . Annotation ) ( AnnotationArgumentList AssignmentExpression FieldAccess IntegerLiteral FloatingPointLiteral BooleanLiteral CharacterLiteral StringLiteral TextBlock null ClassLiteral void PrimitiveType TypeName ScopedTypeName GenericType TypeArguments AnnotatedType Wildcard extends super , ArrayType ] Dimension [ class this ParenthesizedExpression ObjectCreationExpression new ArgumentList } { ClassBody ; FieldDeclaration Modifiers public protected private abstract static final strictfp default synchronized native transient volatile VariableDeclarator Definition AssignOp ArrayInitializer MethodDeclaration TypeParameters TypeParameter TypeBound FormalParameters ReceiverParameter FormalParameter SpreadParameter Throws throws Block ClassDeclaration Superclass SuperInterfaces implements InterfaceTypeList InterfaceDeclaration interface ExtendsInterfaces InterfaceBody ConstantDeclaration EnumDeclaration enum EnumBody EnumConstant EnumBodyDeclarations AnnotationTypeDeclaration AnnotationTypeBody AnnotationTypeElementDeclaration StaticInitializer ConstructorDeclaration ConstructorBody ExplicitConstructorInvocation ArrayAccess MethodInvocation MethodName MethodReference ArrayCreationExpression Dimension AssignOp BinaryExpression CompareOp CompareOp LogicOp BitOp BitOp LogicOp ArithOp ArithOp ArithOp BitOp InstanceofExpression instanceof LambdaExpression InferredParameters TernaryExpression LogicOp : UpdateExpression UpdateOp UnaryExpression LogicOp BitOp CastExpression ElementValueArrayInitializer ElementValuePair open module ModuleBody ModuleDirective requires transitive exports to opens uses provides with PackageDeclaration package ImportDeclaration import Asterisk ExpressionStatement LabeledStatement Label IfStatement if else WhileStatement while ForStatement for ForSpec LocalVariableDeclaration var EnhancedForStatement ForSpec AssertStatement assert SwitchStatement switch SwitchBlock SwitchLabel case DoStatement do BreakStatement break ContinueStatement continue ReturnStatement return SynchronizedStatement ThrowStatement throw TryStatement try CatchClause catch CatchFormalParameter CatchType FinallyClause finally TryWithResourcesStatement ResourceSpecification Resource",
            maxTerm: 274,
            nodeProps: [["group", -26, 4, 47, 76, 77, 82, 87, 92, 144, 146, 149, 150, 152, 155, 157, 160, 162, 164, 166, 171, 173, 175, 177, 179, 180, 182, 190, "Statement", -25, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 39, 40, 41, 99, 100, 102, 103, 106, 117, 119, 121, 124, 126, 129, "Expression", -7, 23, 24, 25, 26, 27, 29, 34, "Type"], ["openedBy", 10, "(", 44, "{"], ["closedBy", 11, ")", 45, "}"]],
            propSources: [i],
            skippedNodes: [0, 1, 2],
            repeatNodeCount: 28,
            tokenData: "#$`_R!_OX%QXY'fYZ)bZ^'f^p%Qpq'fqr*|rs,^st%Qtu4euv5qvw7Rwx8ixy@zyzAhz{BU{|Bz|}Db}!OEO!O!PFi!P!Q! c!Q!R!,X!R![!0P![!]!>a!]!^!?q!^!_!@_!_!`!Ax!`!a!Bl!a!b!DY!b!c!Dx!c!}!Kt!}#O!MQ#O#P%Q#P#Q!Mn#Q#R!N[#R#S4e#S#T%Q#T#o4e#o#p# O#p#q# l#q#r##U#r#s##r#s#y%Q#y#z'f#z$f%Q$f$g'f$g#BY%Q#BY#BZ'f#BZ$IS%Q$IS$I_'f$I_$I|%Q$I|$JO'f$JO$JT%Q$JT$JU'f$JU$KV%Q$KV$KW'f$KW&FU%Q&FU&FV'f&FV;'S%Q;'S;=`&s<%lO%QS%VV&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QS%qO&WSS%tVOY&ZYZ%lZr&Zrs&ys;'S&Z;'S;=`'`<%lO&ZS&^VOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QS&vP;=`<%l%QS&|UOY&ZYZ%lZr&Zs;'S&Z;'S;=`'`<%lO&ZS'cP;=`<%l&Z_'mk&WS%wZOX%QXY'fYZ)bZ^'f^p%Qpq'fqr%Qrs%qs#y%Q#y#z'f#z$f%Q$f$g'f$g#BY%Q#BY#BZ'f#BZ$IS%Q$IS$I_'f$I_$I|%Q$I|$JO'f$JO$JT%Q$JT$JU'f$JU$KV%Q$KV$KW'f$KW&FU%Q&FU&FV'f&FV;'S%Q;'S;=`&s<%lO%Q_)iY&WS%wZX^*Xpq*X#y#z*X$f$g*X#BY#BZ*X$IS$I_*X$I|$JO*X$JT$JU*X$KV$KW*X&FU&FV*XZ*^Y%wZX^*Xpq*X#y#z*X$f$g*X#BY#BZ*X$IS$I_*X$I|$JO*X$JT$JU*X$KV$KW*X&FU&FV*XV+TX#sP&WSOY%QYZ%lZr%Qrs%qs!_%Q!_!`+p!`;'S%Q;'S;=`&s<%lO%QU+wV#_Q&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QT,aXOY,|YZ%lZr,|rs3Ys#O,|#O#P2d#P;'S,|;'S;=`3S<%lO,|T-PXOY-lYZ%lZr-lrs.^s#O-l#O#P.x#P;'S-l;'S;=`2|<%lO-lT-qX&WSOY-lYZ%lZr-lrs.^s#O-l#O#P.x#P;'S-l;'S;=`2|<%lO-lT.cVcPOY&ZYZ%lZr&Zrs&ys;'S&Z;'S;=`'`<%lO&ZT.}V&WSOY-lYZ/dZr-lrs1]s;'S-l;'S;=`2|<%lO-lT/iW&WSOY0RZr0Rrs0ns#O0R#O#P0s#P;'S0R;'S;=`1V<%lO0RP0UWOY0RZr0Rrs0ns#O0R#O#P0s#P;'S0R;'S;=`1V<%lO0RP0sOcPP0vTOY0RYZ0RZ;'S0R;'S;=`1V<%lO0RP1YP;=`<%l0RT1`XOY,|YZ%lZr,|rs1{s#O,|#O#P2d#P;'S,|;'S;=`3S<%lO,|T2QUcPOY&ZYZ%lZr&Zs;'S&Z;'S;=`'`<%lO&ZT2gVOY-lYZ/dZr-lrs1]s;'S-l;'S;=`2|<%lO-lT3PP;=`<%l-lT3VP;=`<%l,|T3_VcPOY&ZYZ%lZr&Zrs3ts;'S&Z;'S;=`'`<%lO&ZT3yR&USXY4SYZ4`pq4SP4VRXY4SYZ4`pq4SP4eO&VP_4la%}Z&WSOY%QYZ%lZr%Qrs%qst%Qtu4eu!Q%Q!Q![4e![!c%Q!c!}4e!}#R%Q#R#S4e#S#T%Q#T#o4e#o;'S%Q;'S;=`&s<%lO%QU5xX#gQ&WSOY%QYZ%lZr%Qrs%qs!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%QU6lV#]Q&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QV7YZ&lR&WSOY%QYZ%lZr%Qrs%qsv%Qvw7{w!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%QU8SV#aQ&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QT8nZ&WSOY9aYZ%lZr9ars:Xsw9awx%Qx#O9a#O#P<a#P;'S9a;'S;=`>t<%lO9aT9fZ&WSOY9aYZ%lZr9ars:Xsw9awx;sx#O9a#O#P<a#P;'S9a;'S;=`>t<%lO9aT:[ZOY:}YZ%lZr:}rs>zsw:}wx?px#O:}#O#P@[#P;'S:};'S;=`@t<%lO:}T;QZOY9aYZ%lZr9ars:Xsw9awx;sx#O9a#O#P<a#P;'S9a;'S;=`>t<%lO9aT;zVbP&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QT<fV&WSOY9aYZ<{Zr9ars:Xs;'S9a;'S;=`>t<%lO9aT=QW&WSOY=jZw=jwx>Vx#O=j#O#P>[#P;'S=j;'S;=`>n<%lO=jP=mWOY=jZw=jwx>Vx#O=j#O#P>[#P;'S=j;'S;=`>n<%lO=jP>[ObPP>_TOY=jYZ=jZ;'S=j;'S;=`>n<%lO=jP>qP;=`<%l=jT>wP;=`<%l9aT>}ZOY:}YZ%lZr:}rs=jsw:}wx?px#O:}#O#P@[#P;'S:};'S;=`@t<%lO:}T?uVbPOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QT@_VOY9aYZ<{Zr9ars:Xs;'S9a;'S;=`>t<%lO9aT@wP;=`<%l:}_ARVZZ&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QVAoVYR&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QVB_X$YP&WS#fQOY%QYZ%lZr%Qrs%qs!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%QVCRZ#eR&WSOY%QYZ%lZr%Qrs%qs{%Q{|Ct|!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%QVC{V#qR&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QVDiVqR&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QVEV[#eR&WSOY%QYZ%lZr%Qrs%qs}%Q}!OCt!O!_%Q!_!`6e!`!aE{!a;'S%Q;'S;=`&s<%lO%QVFSV&vR&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%Q_FpZWY&WSOY%QYZ%lZr%Qrs%qs!O%Q!O!PGc!P!Q%Q!Q![Hq![;'S%Q;'S;=`&s<%lO%QVGhX&WSOY%QYZ%lZr%Qrs%qs!O%Q!O!PHT!P;'S%Q;'S;=`&s<%lO%QVH[V&oR&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QTHxc&WS`POY%QYZ%lZr%Qrs%qs!Q%Q!Q![Hq![!f%Q!f!gJT!g!hJq!h!iJT!i#R%Q#R#SNk#S#W%Q#W#XJT#X#YJq#Y#ZJT#Z;'S%Q;'S;=`&s<%lO%QTJ[V&WS`POY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QTJv]&WSOY%QYZ%lZr%Qrs%qs{%Q{|Ko|}%Q}!OKo!O!Q%Q!Q![La![;'S%Q;'S;=`&s<%lO%QTKtX&WSOY%QYZ%lZr%Qrs%qs!Q%Q!Q![La![;'S%Q;'S;=`&s<%lO%QTLhc&WS`POY%QYZ%lZr%Qrs%qs!Q%Q!Q![La![!f%Q!f!gJT!g!h%Q!h!iJT!i#R%Q#R#SMs#S#W%Q#W#XJT#X#Y%Q#Y#ZJT#Z;'S%Q;'S;=`&s<%lO%QTMxZ&WSOY%QYZ%lZr%Qrs%qs!Q%Q!Q![La![#R%Q#R#SMs#S;'S%Q;'S;=`&s<%lO%QTNpZ&WSOY%QYZ%lZr%Qrs%qs!Q%Q!Q![Hq![#R%Q#R#SNk#S;'S%Q;'S;=`&s<%lO%Q_! j]&WS#fQOY%QYZ%lZr%Qrs%qsz%Qz{!!c{!P%Q!P!Q!)U!Q!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%Q_!!hX&WSOY!!cYZ!#TZr!!crs!$psz!!cz{!&O{;'S!!c;'S;=`!'d<%lO!!c_!#YT&WSOz!#iz{!#{{;'S!#i;'S;=`!$j<%lO!#iZ!#lTOz!#iz{!#{{;'S!#i;'S;=`!$j<%lO!#iZ!$OVOz!#iz{!#{{!P!#i!P!Q!$e!Q;'S!#i;'S;=`!$j<%lO!#iZ!$jOQZZ!$mP;=`<%l!#i_!$sXOY!%`YZ!#TZr!%`rs!'jsz!%`z{!(Y{;'S!%`;'S;=`!)O<%lO!%`_!%cXOY!!cYZ!#TZr!!crs!$psz!!cz{!&O{;'S!!c;'S;=`!'d<%lO!!c_!&TZ&WSOY!!cYZ!#TZr!!crs!$psz!!cz{!&O{!P!!c!P!Q!&v!Q;'S!!c;'S;=`!'d<%lO!!c_!&}V&WSQZOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%Q_!'gP;=`<%l!!c_!'mXOY!%`YZ!#TZr!%`rs!#isz!%`z{!(Y{;'S!%`;'S;=`!)O<%lO!%`_!(]ZOY!!cYZ!#TZr!!crs!$psz!!cz{!&O{!P!!c!P!Q!&v!Q;'S!!c;'S;=`!'d<%lO!!c_!)RP;=`<%l!%`_!)]V&WSPZOY!)UYZ%lZr!)Urs!)rs;'S!)U;'S;=`!*x<%lO!)U_!)wVPZOY!*^YZ%lZr!*^rs!+Os;'S!*^;'S;=`!,R<%lO!*^_!*cVPZOY!)UYZ%lZr!)Urs!)rs;'S!)U;'S;=`!*x<%lO!)U_!*{P;=`<%l!)U_!+TVPZOY!*^YZ%lZr!*^rs!+js;'S!*^;'S;=`!,R<%lO!*^Z!+oSPZOY!+jZ;'S!+j;'S;=`!+{<%lO!+jZ!,OP;=`<%l!+j_!,UP;=`<%l!*^T!,`u&WS_POY%QYZ%lZr%Qrs%qs!O%Q!O!P!.s!P!Q%Q!Q![!0P![!d%Q!d!e!3Z!e!f%Q!f!gJT!g!hJq!h!iJT!i!n%Q!n!o!1u!o!q%Q!q!r!5X!r!z%Q!z!{!7P!{#R%Q#R#S!2c#S#U%Q#U#V!3Z#V#W%Q#W#XJT#X#YJq#Y#ZJT#Z#`%Q#`#a!1u#a#c%Q#c#d!5X#d#l%Q#l#m!7P#m;'S%Q;'S;=`&s<%lO%QT!.za&WS`POY%QYZ%lZr%Qrs%qs!Q%Q!Q![Hq![!f%Q!f!gJT!g!hJq!h!iJT!i#W%Q#W#XJT#X#YJq#Y#ZJT#Z;'S%Q;'S;=`&s<%lO%QT!0Wi&WS_POY%QYZ%lZr%Qrs%qs!O%Q!O!P!.s!P!Q%Q!Q![!0P![!f%Q!f!gJT!g!hJq!h!iJT!i!n%Q!n!o!1u!o#R%Q#R#S!2c#S#W%Q#W#XJT#X#YJq#Y#ZJT#Z#`%Q#`#a!1u#a;'S%Q;'S;=`&s<%lO%QT!1|V&WS_POY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QT!2hZ&WSOY%QYZ%lZr%Qrs%qs!Q%Q!Q![!0P![#R%Q#R#S!2c#S;'S%Q;'S;=`&s<%lO%QT!3`Y&WSOY%QYZ%lZr%Qrs%qs!Q%Q!Q!R!4O!R!S!4O!S;'S%Q;'S;=`&s<%lO%QT!4V`&WS_POY%QYZ%lZr%Qrs%qs!Q%Q!Q!R!4O!R!S!4O!S!n%Q!n!o!1u!o#R%Q#R#S!3Z#S#`%Q#`#a!1u#a;'S%Q;'S;=`&s<%lO%QT!5^X&WSOY%QYZ%lZr%Qrs%qs!Q%Q!Q!Y!5y!Y;'S%Q;'S;=`&s<%lO%QT!6Q_&WS_POY%QYZ%lZr%Qrs%qs!Q%Q!Q!Y!5y!Y!n%Q!n!o!1u!o#R%Q#R#S!5X#S#`%Q#`#a!1u#a;'S%Q;'S;=`&s<%lO%QT!7U_&WSOY%QYZ%lZr%Qrs%qs!O%Q!O!P!8T!P!Q%Q!Q![!:c![!c%Q!c!i!:c!i#T%Q#T#Z!:c#Z;'S%Q;'S;=`&s<%lO%QT!8Y]&WSOY%QYZ%lZr%Qrs%qs!Q%Q!Q![!9R![!c%Q!c!i!9R!i#T%Q#T#Z!9R#Z;'S%Q;'S;=`&s<%lO%QT!9Wc&WSOY%QYZ%lZr%Qrs%qs!Q%Q!Q![!9R![!c%Q!c!i!9R!i!r%Q!r!sJq!s#R%Q#R#S!8T#S#T%Q#T#Z!9R#Z#d%Q#d#eJq#e;'S%Q;'S;=`&s<%lO%QT!:ji&WS_POY%QYZ%lZr%Qrs%qs!O%Q!O!P!<X!P!Q%Q!Q![!:c![!c%Q!c!i!:c!i!n%Q!n!o!1u!o!r%Q!r!sJq!s#R%Q#R#S!=c#S#T%Q#T#Z!:c#Z#`%Q#`#a!1u#a#d%Q#d#eJq#e;'S%Q;'S;=`&s<%lO%QT!<^a&WSOY%QYZ%lZr%Qrs%qs!Q%Q!Q![!9R![!c%Q!c!i!9R!i!r%Q!r!sJq!s#T%Q#T#Z!9R#Z#d%Q#d#eJq#e;'S%Q;'S;=`&s<%lO%QT!=h]&WSOY%QYZ%lZr%Qrs%qs!Q%Q!Q![!:c![!c%Q!c!i!:c!i#T%Q#T#Z!:c#Z;'S%Q;'S;=`&s<%lO%QV!>hX#oR&WSOY%QYZ%lZr%Qrs%qs![%Q![!]!?T!];'S%Q;'S;=`&s<%lO%QV!?[V&tR&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QV!?xV!PR&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%Q_!@fY&]Z&WSOY%QYZ%lZr%Qrs%qs!^%Q!^!_!AU!_!`+p!`;'S%Q;'S;=`&s<%lO%QU!A]X#hQ&WSOY%QYZ%lZr%Qrs%qs!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%QV!BPX!bR&WSOY%QYZ%lZr%Qrs%qs!_%Q!_!`+p!`;'S%Q;'S;=`&s<%lO%QV!BsY&[R&WSOY%QYZ%lZr%Qrs%qs!_%Q!_!`+p!`!a!Cc!a;'S%Q;'S;=`&s<%lO%QU!CjY#hQ&WSOY%QYZ%lZr%Qrs%qs!_%Q!_!`6e!`!a!AU!a;'S%Q;'S;=`&s<%lO%Q_!DcV&`X#nQ&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%Q_!EPX%{Z&WSOY%QYZ%lZr%Qrs%qs#]%Q#]#^!El#^;'S%Q;'S;=`&s<%lO%QV!EqX&WSOY%QYZ%lZr%Qrs%qs#b%Q#b#c!F^#c;'S%Q;'S;=`&s<%lO%QV!FcX&WSOY%QYZ%lZr%Qrs%qs#h%Q#h#i!GO#i;'S%Q;'S;=`&s<%lO%QV!GTX&WSOY%QYZ%lZr%Qrs%qs#X%Q#X#Y!Gp#Y;'S%Q;'S;=`&s<%lO%QV!GuX&WSOY%QYZ%lZr%Qrs%qs#f%Q#f#g!Hb#g;'S%Q;'S;=`&s<%lO%QV!HgX&WSOY%QYZ%lZr%Qrs%qs#Y%Q#Y#Z!IS#Z;'S%Q;'S;=`&s<%lO%QV!IXX&WSOY%QYZ%lZr%Qrs%qs#T%Q#T#U!It#U;'S%Q;'S;=`&s<%lO%QV!IyX&WSOY%QYZ%lZr%Qrs%qs#V%Q#V#W!Jf#W;'S%Q;'S;=`&s<%lO%QV!JkX&WSOY%QYZ%lZr%Qrs%qs#X%Q#X#Y!KW#Y;'S%Q;'S;=`&s<%lO%QV!K_V&rR&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%Q_!K{a&PZ&WSOY%QYZ%lZr%Qrs%qst%Qtu!Ktu!Q%Q!Q![!Kt![!c%Q!c!}!Kt!}#R%Q#R#S!Kt#S#T%Q#T#o!Kt#o;'S%Q;'S;=`&s<%lO%Q_!MXVuZ&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QV!MuVsR&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QU!NcX#cQ&WSOY%QYZ%lZr%Qrs%qs!_%Q!_!`6e!`;'S%Q;'S;=`&s<%lO%QV# VV}R&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%Q_# uZ&|X#cQ&WSOY%QYZ%lZr%Qrs%qs!_%Q!_!`6e!`#p%Q#p#q#!h#q;'S%Q;'S;=`&s<%lO%QU#!oV#dQ&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QV##]V|R&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%QT##yV#tP&WSOY%QYZ%lZr%Qrs%qs;'S%Q;'S;=`&s<%lO%Q",
            tokenizers: [0, 1, 2, 3],
            topRules: {
                Program: [0, 3]
            },
            dynamicPrecedences: {
                27: 1,
                230: -1,
                241: -1
            },
            specialized: [{
                term: 229,
                get: e=>a[e] || -1
            }],
            tokenPrec: 7067
        });
        var s = O(168);
        let l = s.qp.define({
            name: "java",
            parser: o.configure({
                props: [s.uj.add({
                    IfStatement: (0,
                    s.tC)({
                        except: /^\s*({|else\b)/
                    }),
                    TryStatement: (0,
                    s.tC)({
                        except: /^\s*({|catch|finally)\b/
                    }),
                    LabeledStatement: s.ze,
                    SwitchBlock: e=>{
                        let t = e.textAfter
                          , O = /^\s*\}/.test(t)
                          , n = /^\s*(case|default)\b/.test(t);
                        return e.baseIndent + (O ? 0 : n ? 1 : 2) * e.unit
                    }
                    ,
                    Block: (0,
                    s.vw)({
                        closing: "}"
                    }),
                    BlockComment: ()=>null,
                    Statement: (0,
                    s.tC)({
                        except: /^{/
                    })
                }), s.x0.add({
                    "Block SwitchBlock ClassBody ElementValueArrayInitializer ModuleBody EnumBody ConstructorBody InterfaceBody ArrayInitializer": s.Dv,
                    BlockComment: e=>({
                        from: e.from + 2,
                        to: e.to - 2
                    })
                })]
            }),
            languageData: {
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                },
                indentOnInput: /^\s*(?:case |default:|\{|\})$/
            }
        });
        function c() {
            return new s.ri(l)
        }
    },
    4695: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            autoCloseTags: function() {
                return G
            },
            completionPath: function() {
                return _
            },
            esLint: function() {
                return C
            },
            javascript: function() {
                return V
            },
            javascriptLanguage: function() {
                return Z
            },
            jsxLanguage: function() {
                return Y
            },
            localCompletionSource: function() {
                return w
            },
            scopeCompletionSource: function() {
                return W
            },
            snippets: function() {
                return P
            },
            tsxLanguage: function() {
                return R
            },
            typescriptLanguage: function() {
                return q
            }
        });
        var n = O(2679)
          , r = O(5306);
        let i = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]
          , a = new n.IK({
            start: !1,
            shift: (e,t)=>3 == t || 4 == t || 305 == t ? e : 306 == t,
            strict: !1
        })
          , o = new n.Jq((e,t)=>{
            let {next: O} = e;
            (125 == O || -1 == O || t.context) && t.canShift(303) && e.acceptToken(303)
        }
        ,{
            contextual: !0,
            fallback: !0
        })
          , s = new n.Jq((e,t)=>{
            let {next: O} = e, n;
            !(i.indexOf(O) > -1) && (47 != O || 47 != (n = e.peek(1)) && 42 != n) && 125 != O && 59 != O && -1 != O && !t.context && t.canShift(302) && e.acceptToken(302)
        }
        ,{
            contextual: !0
        })
          , l = new n.Jq((e,t)=>{
            let {next: O} = e;
            if ((43 == O || 45 == O) && (e.advance(),
            O == e.next)) {
                e.advance();
                let O = !t.context && t.canShift(1);
                e.acceptToken(O ? 1 : 2)
            }
        }
        ,{
            contextual: !0
        })
          , c = (0,
        r.Gv)({
            "get set async static": r.pJ.modifier,
            "for while do if else switch try catch finally return throw break continue default case": r.pJ.controlKeyword,
            "in of await yield void typeof delete instanceof": r.pJ.operatorKeyword,
            "let var const function class extends": r.pJ.definitionKeyword,
            "import export from": r.pJ.moduleKeyword,
            "with debugger as new": r.pJ.keyword,
            TemplateString: r.pJ.special(r.pJ.string),
            super: r.pJ.atom,
            BooleanLiteral: r.pJ.bool,
            this: r.pJ.self,
            null: r.pJ.null,
            Star: r.pJ.modifier,
            VariableName: r.pJ.variableName,
            "CallExpression/VariableName TaggedTemplateExpression/VariableName": r.pJ.function(r.pJ.variableName),
            VariableDefinition: r.pJ.definition(r.pJ.variableName),
            Label: r.pJ.labelName,
            PropertyName: r.pJ.propertyName,
            PrivatePropertyName: r.pJ.special(r.pJ.propertyName),
            "CallExpression/MemberExpression/PropertyName": r.pJ.function(r.pJ.propertyName),
            "FunctionDeclaration/VariableDefinition": r.pJ.function(r.pJ.definition(r.pJ.variableName)),
            "ClassDeclaration/VariableDefinition": r.pJ.definition(r.pJ.className),
            PropertyDefinition: r.pJ.definition(r.pJ.propertyName),
            PrivatePropertyDefinition: r.pJ.definition(r.pJ.special(r.pJ.propertyName)),
            UpdateOp: r.pJ.updateOperator,
            LineComment: r.pJ.lineComment,
            BlockComment: r.pJ.blockComment,
            Number: r.pJ.number,
            String: r.pJ.string,
            Escape: r.pJ.escape,
            ArithOp: r.pJ.arithmeticOperator,
            LogicOp: r.pJ.logicOperator,
            BitOp: r.pJ.bitwiseOperator,
            CompareOp: r.pJ.compareOperator,
            RegExp: r.pJ.regexp,
            Equals: r.pJ.definitionOperator,
            Arrow: r.pJ.function(r.pJ.punctuation),
            ": Spread": r.pJ.punctuation,
            "( )": r.pJ.paren,
            "[ ]": r.pJ.squareBracket,
            "{ }": r.pJ.brace,
            "InterpolationStart InterpolationEnd": r.pJ.special(r.pJ.brace),
            ".": r.pJ.derefOperator,
            ", ;": r.pJ.separator,
            "@": r.pJ.meta,
            TypeName: r.pJ.typeName,
            TypeDefinition: r.pJ.definition(r.pJ.typeName),
            "type enum interface implements namespace module declare": r.pJ.definitionKeyword,
            "abstract global Privacy readonly override": r.pJ.modifier,
            "is keyof unique infer": r.pJ.operatorKeyword,
            JSXAttributeValue: r.pJ.attributeValue,
            JSXText: r.pJ.content,
            "JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag": r.pJ.angleBracket,
            "JSXIdentifier JSXNameSpacedName": r.pJ.tagName,
            "JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName": r.pJ.attributeName,
            "JSXBuiltin/JSXIdentifier": r.pJ.standard(r.pJ.tagName)
        })
          , u = {
            __proto__: null,
            export: 14,
            as: 19,
            from: 27,
            default: 30,
            async: 35,
            function: 36,
            extends: 46,
            this: 50,
            true: 58,
            false: 58,
            null: 70,
            void: 74,
            typeof: 78,
            super: 96,
            new: 130,
            delete: 146,
            yield: 155,
            await: 159,
            class: 164,
            public: 221,
            private: 221,
            protected: 221,
            readonly: 223,
            instanceof: 242,
            satisfies: 245,
            in: 246,
            const: 248,
            import: 280,
            keyof: 335,
            unique: 339,
            infer: 345,
            is: 381,
            abstract: 401,
            implements: 403,
            type: 405,
            let: 408,
            var: 410,
            interface: 417,
            enum: 421,
            namespace: 427,
            module: 429,
            declare: 433,
            global: 437,
            for: 456,
            of: 465,
            while: 468,
            with: 472,
            do: 476,
            if: 480,
            else: 482,
            switch: 486,
            case: 492,
            try: 498,
            catch: 502,
            finally: 506,
            return: 510,
            throw: 514,
            break: 518,
            continue: 522,
            debugger: 526
        }
          , p = {
            __proto__: null,
            async: 117,
            get: 119,
            set: 121,
            declare: 181,
            public: 183,
            private: 183,
            protected: 183,
            static: 185,
            abstract: 187,
            override: 189,
            readonly: 195,
            accessor: 197,
            new: 385
        }
          , d = {
            __proto__: null,
            "<": 137
        }
          , f = n.WQ.deserialize({
            version: 14,
            states: "$6[O`QUOOO%QQUOOO'TQWOOP(bOSOOO*pQ(CjO'#CfO*wOpO'#CgO+VO!bO'#CgO+eO07`O'#DZO-vQUO'#DaO.WQUO'#DlO%QQUO'#DvO0[QUO'#EOOOQ(CY'#EW'#EWO0uQSO'#ETOOQO'#Ei'#EiOOQO'#Ib'#IbO0}QSO'#GkO1YQSO'#EhO1_QSO'#EhO3aQ(CjO'#JcO6QQ(CjO'#JdO6nQSO'#FWO6sQ#tO'#FoOOQ(CY'#F`'#F`O7OO&jO'#F`O7^Q,UO'#FvO8tQSO'#FuOOQ(CY'#Jd'#JdOOQ(CW'#Jc'#JcOOQQ'#KO'#KOO8yQSO'#IOO9OQ(C[O'#IPOOQQ'#JP'#JPOOQQ'#IT'#ITQ`QUOOO%QQUO'#DnO9WQUO'#DzO%QQUO'#D|O9_QSO'#GkO9dQ,UO'#ClO9rQSO'#EgO9}QSO'#ErO:SQ,UO'#F_O:qQSO'#GkO:vQSO'#GoO;RQSO'#GoO;aQSO'#GrO;aQSO'#GsO;aQSO'#GuO9_QSO'#GxO<QQSO'#G{O=cQSO'#CbO=sQSO'#HXO={QSO'#H_O={QSO'#HaO`QUO'#HcO={QSO'#HeO={QSO'#HhO>QQSO'#HnO>VQ(C]O'#HtO%QQUO'#HvO>bQ(C]O'#HxO>mQ(C]O'#HzO9OQ(C[O'#H|O>xQ(CjO'#CfO?zQWO'#DfQOQSOOO@bQSO'#EPO9dQ,UO'#EgO@mQSO'#EgO@xQ`O'#F_OOQQ'#Cd'#CdOOQ(CW'#Dk'#DkOOQ(CW'#Jg'#JgO%QQUO'#JgOOQO'#Jk'#JkOOQO'#I_'#I_OAxQWO'#E`OOQ(CW'#E_'#E_OBtQ(C`O'#E`OCOQWO'#ESOOQO'#Jj'#JjOCdQWO'#JkODqQWO'#ESOCOQWO'#E`PEOO?MpO'#C`POOO)CDn)CDnOOOO'#IU'#IUOEZOpO,59ROOQ(CY,59R,59ROOOO'#IV'#IVOEiO!bO,59RO%QQUO'#D]OOOO'#IX'#IXOEwO07`O,59uOOQ(CY,59u,59uOFVQUO'#IYOFjQSO'#JeOHlQbO'#JeO+sQUO'#JeOHsQSO,59{OIZQSO'#EiOIhQSO'#JsOIsQSO'#JrOIsQSO'#JrOI{QSO,5;VOJQQSO'#JqOOQ(CY,5:W,5:WOJXQUO,5:WOLYQ(CjO,5:bOLyQSO,5:jOMdQ(C[O'#JpOMkQSO'#JoO:vQSO'#JoONPQSO'#JoONXQSO,5;UON^QSO'#JoO!!fQbO'#JdOOQ(CY'#Cf'#CfO%QQUO'#EOO!#UQ`O,5:oOOQO'#Jl'#JlOOQO-E<`-E<`O9_QSO,5=VO!#lQSO,5=VO!#qQUO,5;SO!%tQ,UO'#EdO!'XQSO,5;SO!(qQ,UO'#DpO!(xQUO'#DuO!)SQWO,5;]O!)[QWO,5;]O%QQUO,5;]OOQQ'#FO'#FOOOQQ'#FQ'#FQO%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^OOQQ'#FU'#FUO!)jQUO,5;oOOQ(CY,5;t,5;tOOQ(CY,5;u,5;uO!+mQSO,5;uOOQ(CY,5;v,5;vO%QQUO'#IfO!+uQ(C[O,5<cO!%tQ,UO,5;^O!,dQ,UO,5;^O%QQUO,5;rO!,kQ#tO'#FeO!-hQ#tO'#JwO!-SQ#tO'#JwO!-oQ#tO'#JwOOQO'#Jw'#JwO!.TQ#tO,5;}OOOO,5<Z,5<ZO!.fQUO'#FqOOOO'#Ie'#IeO7OO&jO,5;zO!.mQ#tO'#FsOOQ(CY,5;z,5;zO!/^Q7[O'#CrOOQ(CY'#Cv'#CvO!/qQSO'#CvO!/vO07`O'#CzO!0dQ,UO,5<`O!0kQSO,5<bO!2QQMhO'#GQO!2_QSO'#GRO!2dQSO'#GRO!2iQMhO'#GVO!3hQWO'#GZO!4ZQ7[O'#J^OOQ(CY'#J^'#J^O!4eQSO'#J]O!4sQSO'#J[O!4{QSO'#CqOOQ(CY'#Ct'#CtOOQ(CY'#DO'#DOOOQ(CY'#DQ'#DQO0xQSO'#DSO!'^Q,UO'#FxO!'^Q,UO'#FzO!5TQSO'#F|O!5YQSO'#F}O!2dQSO'#GTO!'^Q,UO'#GYO!5_QSO'#EjO!5|QSO,5<aO`QUO,5>jOOQQ'#JX'#JXOOQQ,5>k,5>kOOQQ-E<R-E<RO!7{Q(CjO,5:YO!:iQ(CjO,5:fO%QQUO,5:fO!=SQ(CjO,5:hOOQ(CW'#Co'#CoO!=sQ,UO,5=VO!>RQ(C[O'#JYO8tQSO'#JYO!>dQ(C[O,59WO!>oQWO,59WO!>wQ,UO,59WO9dQ,UO,59WO!?SQSO,5;SO!?[QSO'#HWO!?mQSO'#KSO%QQUO,5;wO!?uQWO,5;yO!?zQSO,5=qO!@PQSO,5=qO!@UQSO,5=qO9OQ(C[O,5=qO!@dQSO'#EkO!A^QWO'#ElOOQ(CW'#Jq'#JqO!AeQ(C[O'#KPO9OQ(C[O,5=ZO;aQSO,5=aOOQO'#Cr'#CrO!ApQWO,5=^O!AxQ,UO,5=_O!BTQSO,5=aO!BYQ`O,5=dO>QQSO'#G}O9_QSO'#HPO!BbQSO'#HPO9dQ,UO'#HRO!BgQSO'#HROOQQ,5=g,5=gO!BlQSO'#HSO!BtQSO'#ClO!ByQSO,58|O!CTQSO,58|O!E]QUO,58|OOQQ,58|,58|O!EjQ(C[O,58|O%QQUO,58|O!EuQUO'#HZOOQQ'#H['#H[OOQQ'#H]'#H]O`QUO,5=sO!FVQSO,5=sO`QUO,5=yO`QUO,5={O!F[QSO,5=}O`QUO,5>PO!FaQSO,5>SO!FfQUO,5>YOOQQ,5>`,5>`O%QQUO,5>`O9OQ(C[O,5>bOOQQ,5>d,5>dO!JmQSO,5>dOOQQ,5>f,5>fO!JmQSO,5>fOOQQ,5>h,5>hO!JrQWO'#DXO%QQUO'#JgO!KaQWO'#JgO!LOQWO'#DgO!LaQWO'#DgO!NrQUO'#DgO!NyQSO'#JfO# RQSO,5:QO# WQSO'#EmO# fQSO'#JtO# nQSO,5;WO# sQWO'#DgO#!QQWO'#EROOQ(CY,5:k,5:kO%QQUO,5:kO#!XQSO,5:kO>QQSO,5;RO!>oQWO,5;RO!>wQ,UO,5;RO9dQ,UO,5;RO#!aQSO,5@RO#!fQ!LQO,5:oOOQO-E<]-E<]O##lQ(C`O,5:zOCOQWO,5:nO##vQWO,5:nOCOQWO,5:zO!>dQ(C[O,5:nOOQ(CW'#Ec'#EcOOQO,5:z,5:zO%QQUO,5:zO#$TQ(C[O,5:zO#$`Q(C[O,5:zO!>oQWO,5:nOOQO,5;Q,5;QO#$nQ(C[O,5:zPOOO'#IS'#ISP#%SO?MpO,58zPOOO,58z,58zOOOO-E<S-E<SOOQ(CY1G.m1G.mOOOO-E<T-E<TO#%_Q`O,59wOOOO-E<V-E<VOOQ(CY1G/a1G/aO#%dQbO,5>tO+sQUO,5>tOOQO,5>z,5>zO#%nQUO'#IYOOQO-E<W-E<WO#%{QSO,5@PO#&TQbO,5@PO#&[QSO,5@^OOQ(CY1G/g1G/gO%QQUO,5@_O#&dQSO'#I`OOQO-E<^-E<^O#&[QSO,5@^OOQ(CW1G0q1G0qOOQ(CY1G/r1G/rOOQ(CY1G0U1G0UO%QQUO,5@[O#&xQ(C[O,5@[O#'ZQ(C[O,5@[O#'bQSO,5@ZO:vQSO,5@ZO#'jQSO,5@ZO#'xQSO'#IcO#'bQSO,5@ZOOQ(CW1G0p1G0pO!)SQWO,5:qO!)_QWO,5:qOOQO,5:s,5:sO#(jQSO,5:sO#(rQ,UO1G2qO9_QSO1G2qOOQ(CY1G0n1G0nO#)QQ(CjO1G0nO#*VQ(ChO,5;OOOQ(CY'#GP'#GPO#*sQ(CjO'#J^O!#qQUO1G0nO#,{Q,UO'#JhO#-VQSO,5:[O#-[QbO'#JiO%QQUO'#JiO#-fQSO,5:aOOQ(CY'#DX'#DXOOQ(CY1G0w1G0wO%QQUO1G0wOOQ(CY1G1a1G1aO#-kQSO1G0wO#0SQ(CjO1G0xO#0ZQ(CjO1G0xO#2tQ(CjO1G0xO#2{Q(CjO1G0xO#5VQ(CjO1G0xO#5mQ(CjO1G0xO#8gQ(CjO1G0xO#8nQ(CjO1G0xO#;XQ(CjO1G0xO#;`Q(CjO1G0xO#=WQ(CjO1G0xO#@WQ$IUO'#CfO#BUQ$IUO1G1ZO#B]Q$IUO'#JdO!+pQSO1G1aO#BmQ(CjO,5?QOOQ(CW-E<d-E<dO#CaQ(CjO1G0xOOQ(CY1G0x1G0xO#ElQ(CjO1G1^O#F`Q#tO,5<RO#FhQ#tO,5<SO#FpQ#tO'#FjO#GXQSO'#FiOOQO'#Jx'#JxOOQO'#Id'#IdO#G^Q#tO1G1iOOQ(CY1G1i1G1iOOOO1G1t1G1tO#GoQ$IUO'#JcO#GyQSO,5<]O!)jQUO,5<]OOOO-E<c-E<cOOQ(CY1G1f1G1fO#HOQWO'#JwOOQ(CY,5<_,5<_O#HWQWO,5<_OOQ(CY,59b,59bO!%tQ,UO'#C|OOOO'#IW'#IWO#H]O07`O,59fOOQ(CY,59f,59fO%QQUO1G1zO!5YQSO'#IhO#HhQSO,5<sOOQ(CY,5<p,5<pOOQO'#Gf'#GfO!'^Q,UO,5=POOQO'#Gh'#GhO!'^Q,UO,5=RO!%tQ,UO,5=TOOQO1G1|1G1|O#HvQ`O'#CoO#IZQ`O,5<lO#IbQSO'#J{O9_QSO'#J{O#IpQSO,5<nO!'^Q,UO,5<mO#IuQSO'#GSO#JQQSO,5<mO#JVQ`O'#GPO#JdQ`O'#J|O#JnQSO'#J|O!%tQ,UO'#J|O#JsQSO,5<qO#JxQWO'#G[O!3cQWO'#G[O#KZQSO'#G^O#K`QSO'#G`O!2dQSO'#GcO#KeQ(C[O'#IjO#KpQWO,5<uOOQ(CY,5<u,5<uO#KwQWO'#G[O#LVQWO'#G]O#L_QWO'#G]OOQ(CY,5=U,5=UO!'^Q,UO,5?wO!'^Q,UO,5?wO#LdQSO'#IkO#LoQSO,5?vO#LwQSO,59]O#MhQ,UO,59nOOQ(CY,59n,59nO#NZQ,UO,5<dO#N|Q,UO,5<fO?rQSO,5<hOOQ(CY,5<i,5<iO$ WQSO,5<oO$ ]Q,UO,5<tO$ mQSO'#JoO!#qQUO1G1{O$ rQSO1G1{OOQQ1G4U1G4UOOQ(CY1G/t1G/tO!+mQSO1G/tO$#qQ(CjO1G0QOOQQ1G2q1G2qO!%tQ,UO1G2qO%QQUO1G2qO$$bQSO1G2qO$$mQ,UO'#EdOOQ(CW,5?t,5?tO$$wQ(C[O,5?tOOQQ1G.r1G.rO!>dQ(C[O1G.rO!>oQWO1G.rO!>wQ,UO1G.rO$%YQSO1G0nO$%_QSO'#CfO$%jQSO'#KTO$%rQSO,5=rO$%wQSO'#KTO$%|QSO'#KTO$&XQSO'#IsO$&gQSO,5@nO$&oQbO1G1cOOQ(CY1G1e1G1eO9_QSO1G3]O?rQSO1G3]O$&vQSO1G3]O$&{QSO1G3]OOQQ1G3]1G3]O:vQSO'#JrO:vQSO'#EmO%QQUO'#EmO:vQSO'#ImO$'QQ(C[O,5@kOOQQ1G2u1G2uO!BTQSO1G2{O!%tQ,UO1G2xO$']QSO1G2xOOQQ1G2y1G2yO!%tQ,UO1G2yO$'bQSO1G2yO$'jQWO'#GwOOQQ1G2{1G2{O!3cQWO'#IoO!BYQ`O1G3OOOQQ1G3O1G3OOOQQ,5=i,5=iO$'rQ,UO,5=kO9_QSO,5=kO#K`QSO,5=mO8tQSO,5=mO!>oQWO,5=mO!>wQ,UO,5=mO9dQ,UO,5=mO$(QQSO'#KRO$(]QSO,5=nOOQQ1G.h1G.hO$(bQ(C[O1G.hO?rQSO1G.hO$(mQSO1G.hO9OQ(C[O1G.hO$*rQbO,5@pO$+SQSO,5@pO$+_QUO,5=uO$+fQSO,5=uO:vQSO,5@pOOQQ1G3_1G3_O`QUO1G3_OOQQ1G3e1G3eOOQQ1G3g1G3gO={QSO1G3iO$+kQUO1G3kO$/lQUO'#HjOOQQ1G3n1G3nO$/yQSO'#HpO>QQSO'#HrOOQQ1G3t1G3tO$0RQUO1G3tO9OQ(C[O1G3zOOQQ1G3|1G3|OOQ(CW'#GW'#GWO9OQ(C[O1G4OO9OQ(C[O1G4QO$4VQSO,5@RO!)jQUO,5;XO:vQSO,5;XO>QQSO,5:RO!)jQUO,5:RO!>oQWO,5:RO$4[Q$IUO,5:ROOQO,5;X,5;XO$4fQWO'#IZO$4|QSO,5@QOOQ(CY1G/l1G/lO$5UQWO'#IaO$5`QSO,5@`OOQ(CW1G0r1G0rO!LaQWO,5:ROOQO'#I^'#I^O$5hQWO,5:mOOQ(CY,5:m,5:mO#![QSO1G0VOOQ(CY1G0V1G0VO%QQUO1G0VOOQ(CY1G0m1G0mO>QQSO1G0mO!>oQWO1G0mO!>wQ,UO1G0mOOQ(CW1G5m1G5mO!>dQ(C[O1G0YOOQO1G0f1G0fO%QQUO1G0fO$5oQ(C[O1G0fO$5zQ(C[O1G0fO!>oQWO1G0YOCOQWO1G0YO$6YQ(C[O1G0fOOQO1G0Y1G0YO$6nQ(CjO1G0fPOOO-E<Q-E<QPOOO1G.f1G.fOOOO1G/c1G/cO$6xQ`O,5<cO$7QQbO1G4`OOQO1G4f1G4fO%QQUO,5>tO$7[QSO1G5kO$7dQSO1G5xO$7lQbO1G5yO:vQSO,5>zO$7vQ(CjO1G5vO%QQUO1G5vO$8WQ(C[O1G5vO$8iQSO1G5uO$8iQSO1G5uO:vQSO1G5uO$8qQSO,5>}O:vQSO,5>}OOQO,5>},5>}O$9VQSO,5>}O$ mQSO,5>}OOQO-E<a-E<aOOQO1G0]1G0]OOQO1G0_1G0_O!+pQSO1G0_OOQQ7+(]7+(]O!%tQ,UO7+(]O%QQUO7+(]O$9eQSO7+(]O$9pQ,UO7+(]O$:OQ(CjO,59nO$<WQ(CjO,5<dO$>cQ(CjO,5<fO$@nQ(CjO,5<tOOQ(CY7+&Y7+&YO$CPQ(CjO7+&YO$CsQ,UO'#I[O$C}QSO,5@SOOQ(CY1G/v1G/vO$DVQUO'#I]O$DdQSO,5@TO$DlQbO,5@TOOQ(CY1G/{1G/{O$DvQSO7+&cOOQ(CY7+&c7+&cO$D{Q$IUO,5:bO%QQUO7+&uO$EVQ$IUO,5:YO$EdQ$IUO,5:fO$EnQ$IUO,5:hOOQ(CY7+&{7+&{OOQO1G1m1G1mOOQO1G1n1G1nO$ExQ#tO,5<UO!)jQUO,5<TOOQO-E<b-E<bOOQ(CY7+'T7+'TOOOO7+'`7+'`OOOO1G1w1G1wO$FTQSO1G1wOOQ(CY1G1y1G1yO$FYQ`O,59hOOOO-E<U-E<UOOQ(CY1G/Q1G/QO$FaQ(CjO7+'fOOQ(CY,5?S,5?SO$GTQSO,5?SOOQ(CY1G2_1G2_P$GYQSO'#IhPOQ(CY-E<f-E<fO$G|Q,UO1G2kO$HoQ,UO1G2mO$HyQ`O1G2oOOQ(CY1G2W1G2WO$IQQSO'#IgO$I`QSO,5@gO$I`QSO,5@gO$IhQSO,5@gO$IsQSO,5@gOOQO1G2Y1G2YO$JRQ,UO1G2XO!'^Q,UO1G2XO$JcQMhO'#IiO$JsQSO,5@hO!%tQ,UO,5@hO$J{Q`O,5@hOOQ(CY1G2]1G2]OOQ(CW,5<v,5<vOOQ(CW,5<w,5<wO$ mQSO,5<wOBoQSO,5<wO!>oQWO,5<vOOQO'#G_'#G_O$KVQSO,5<xOOQ(CW,5<z,5<zO$ mQSO,5<}OOQO,5?U,5?UOOQO-E<h-E<hOOQ(CY1G2a1G2aO!3cQWO,5<vO$K_QSO,5<wO#KZQSO,5<xO!3cQWO,5<wO$KjQ,UO1G5cO$KtQ,UO1G5cOOQO,5?V,5?VOOQO-E<i-E<iOOQO1G.w1G.wO!?uQWO,59pO%QQUO,59pO$LRQSO1G2SO!'^Q,UO1G2ZO$LWQ(CjO7+'gOOQ(CY7+'g7+'gO!#qQUO7+'gOOQ(CY7+%`7+%`O$LzQ`O'#J}O#![QSO7+(]O$MUQbO7+(]O$9hQSO7+(]O$M]Q(ChO'#CfO$MpQ(ChO,5<{O$NbQSO,5<{OOQ(CW1G5`1G5`OOQQ7+$^7+$^O!>dQ(C[O7+$^O!>oQWO7+$^O!#qQUO7+&YO$NgQSO'#IrO$N{QSO,5@oOOQO1G3^1G3^O9_QSO,5@oO$N{QSO,5@oO% TQSO,5@oOOQO,5?_,5?_OOQO-E<q-E<qOOQ(CY7+&}7+&}O% YQSO7+(wO9OQ(C[O7+(wO9_QSO7+(wO?rQSO7+(wO% _QSO,5;XOOQ(CW,5?X,5?XOOQ(CW-E<k-E<kOOQQ7+(g7+(gO% dQ(ChO7+(dO!%tQ,UO7+(dO% nQ`O7+(eOOQQ7+(e7+(eO!%tQ,UO7+(eO% uQSO'#KQO%!QQSO,5=cOOQO,5?Z,5?ZOOQO-E<m-E<mOOQQ7+(j7+(jO%#aQWO'#HQOOQQ1G3V1G3VO!%tQ,UO1G3VO%QQUO1G3VO%#hQSO1G3VO%#sQ,UO1G3VO9OQ(C[O1G3XO#K`QSO1G3XO8tQSO1G3XO!>oQWO1G3XO!>wQ,UO1G3XO%$RQSO'#IqO%$^QSO,5@mO%$fQWO,5@mOOQ(CW1G3Y1G3YOOQQ7+$S7+$SO?rQSO7+$SO9OQ(C[O7+$SO%$qQSO7+$SO%QQUO1G6[O%QQUO1G6]O%$vQUO1G3aO%$}QSO1G3aO%%SQUO1G3aO%%ZQ(C[O1G6[OOQQ7+(y7+(yO9OQ(C[O7+)TO`QUO7+)VOOQQ'#KW'#KWOOQQ'#It'#ItO%%eQUO,5>UOOQQ,5>U,5>UO%QQUO'#HkO%%rQSO'#HmOOQQ,5>[,5>[O:vQSO,5>[OOQQ,5>^,5>^OOQQ7+)`7+)`OOQQ7+)f7+)fOOQQ7+)j7+)jOOQQ7+)l7+)lO%%wQWO1G5mO%&]Q$IUO1G0sO%&gQSO1G0sOOQO1G/m1G/mO%&rQ$IUO1G/mO>QQSO1G/mO!)jQUO'#DgOOQO,5>u,5>uOOQO-E<X-E<XOOQO,5>{,5>{OOQO-E<_-E<_O!>oQWO1G/mOOQO-E<[-E<[OOQ(CY1G0X1G0XOOQ(CY7+%q7+%qO#![QSO7+%qOOQ(CY7+&X7+&XO>QQSO7+&XO!>oQWO7+&XOOQO7+%t7+%tO$6nQ(CjO7+&QOOQO7+&Q7+&QO%QQUO7+&QO%&|Q(C[O7+&QO!>dQ(C[O7+%tO!>oQWO7+%tO%'XQ(C[O7+&QO%'gQ(CjO7++bO%QQUO7++bO%'wQSO7++aO%'wQSO7++aOOQO1G4i1G4iO:vQSO1G4iO%(PQSO1G4iOOQO7+%y7+%yO#![QSO<<KwO$MUQbO<<KwO%(_QSO<<KwOOQQ<<Kw<<KwO!%tQ,UO<<KwO%QQUO<<KwO%(gQSO<<KwO%(rQ(CjO1G2kO%*}Q(CjO1G2mO%-YQ(CjO1G2XO%/kQ,UO,5>vOOQO-E<Y-E<YO%/uQbO,5>wO%QQUO,5>wOOQO-E<Z-E<ZO%0PQSO1G5oOOQ(CY<<I}<<I}O%0XQ$IUO1G0nO%2cQ$IUO1G0xO%2jQ$IUO1G0xO%4nQ$IUO1G0xO%4uQ$IUO1G0xO%6jQ$IUO1G0xO%7QQ$IUO1G0xO%9eQ$IUO1G0xO%9lQ$IUO1G0xO%;pQ$IUO1G0xO%;wQ$IUO1G0xO%=oQ$IUO1G0xO%>SQ(CjO<<JaO%?XQ$IUO1G0xO%@}Q$IUO'#J^O%CQQ$IUO1G1^O%C_Q$IUO1G0QO!)jQUO'#FlOOQO'#Jy'#JyOOQO1G1p1G1pO%CiQSO1G1oO%CnQ$IUO,5?QOOOO7+'c7+'cOOOO1G/S1G/SOOQ(CY1G4n1G4nO!'^Q,UO7+(ZO%CxQSO,5?RO9_QSO,5?ROOQO-E<e-E<eO%DWQSO1G6RO%DWQSO1G6RO%D`QSO1G6RO%DkQ,UO7+'sO%D{Q`O,5?TO%EVQSO,5?TO!%tQ,UO,5?TOOQO-E<g-E<gO%E[Q`O1G6SO%EfQSO1G6SOOQ(CW1G2c1G2cO$ mQSO1G2cOOQ(CW1G2b1G2bO%EnQSO1G2dO!%tQ,UO1G2dOOQ(CW1G2i1G2iO!>oQWO1G2bOBoQSO1G2cO%EsQSO1G2dO%E{QSO1G2cO!'^Q,UO7+*}OOQ(CY1G/[1G/[O%FWQSO1G/[OOQ(CY7+'n7+'nO%F]Q,UO7+'uO%FmQ(CjO<<KROOQ(CY<<KR<<KRO!%tQ,UO'#IlO%GaQSO,5@iO!%tQ,UO1G2gOOQQ<<Gx<<GxO!>dQ(C[O<<GxO%GiQ(CjO<<ItOOQ(CY<<It<<ItOOQO,5?^,5?^O%H]QSO,5?^O$%|QSO,5?^OOQO-E<p-E<pO%HbQSO1G6ZO%HbQSO1G6ZO9_QSO1G6ZO?rQSO<<LcOOQQ<<Lc<<LcO%HjQSO<<LcO9OQ(C[O<<LcO%HoQSO1G0sOOQQ<<LO<<LOO% dQ(ChO<<LOOOQQ<<LP<<LPO% nQ`O<<LPO%HtQWO'#InO%IPQSO,5@lO!)jQUO,5@lOOQQ1G2}1G2}O%IXQUO'#JgOOQO'#Ip'#IpO9OQ(C[O'#IpO%IcQWO,5=lOOQQ,5=l,5=lO%IjQWO'#E`O%JOQSO7+(qO%JTQSO7+(qOOQQ7+(q7+(qO!%tQ,UO7+(qO%QQUO7+(qO%J]QSO7+(qOOQQ7+(s7+(sO9OQ(C[O7+(sO#K`QSO7+(sO8tQSO7+(sO!>oQWO7+(sO%JhQSO,5?]OOQO-E<o-E<oOOQO'#HT'#HTO%JsQSO1G6XO9OQ(C[O<<GnOOQQ<<Gn<<GnO?rQSO<<GnO%J{QSO7++vO%KQQSO7++wOOQQ7+({7+({O%KVQSO7+({O%K[QUO7+({O%KcQSO7+({O%QQUO7++vO%QQUO7++wOOQQ<<Lo<<LoOOQQ<<Lq<<LqOOQQ-E<r-E<rOOQQ1G3p1G3pO%KhQSO,5>VOOQQ,5>X,5>XO%KmQSO1G3vO:vQSO7+&_O!)jQUO7+&_OOQO7+%X7+%XO%KrQ$IUO1G5yO>QQSO7+%XOOQ(CY<<I]<<I]OOQ(CY<<Is<<IsO>QQSO<<IsOOQO<<Il<<IlO$6nQ(CjO<<IlO%QQUO<<IlOOQO<<I`<<I`O!>dQ(C[O<<I`O%K|Q(C[O<<IlO%LXQ(CjO<<N|O%LiQSO<<N{OOQO7+*T7+*TO:vQSO7+*TOOQQANAcANAcO%LqQSOANAcO!%tQ,UOANAcO#![QSOANAcO$MUQbOANAcO%QQUOANAcO%LyQ(CjO7+'sO& [Q(CjO7+'uO&#mQbO1G4cO&#wQ$IUO7+&YO&$UQ$IUO,59nO&&XQ$IUO,5<dO&([Q$IUO,5<fO&*_Q$IUO,5<tO&,TQ$IUO7+'fO&,bQ$IUO7+'gO&,oQSO,5<WOOQO7+'Z7+'ZO&,tQ,UO<<KuOOQO1G4m1G4mO&,{QSO1G4mO&-WQSO1G4mO&-fQSO7++mO&-fQSO7++mO!%tQ,UO1G4oO&-nQ`O1G4oO&-xQSO7++nOOQ(CW7+'}7+'}O$ mQSO7+(OO&.QQ`O7+(OOOQ(CW7+'|7+'|O$ mQSO7+'}O&.XQSO7+(OO!%tQ,UO7+(OOBoQSO7+'}O&.^Q,UO<<NiOOQ(CY7+$v7+$vO&.hQ`O,5?WOOQO-E<j-E<jO&.rQ(ChO7+(ROOQQAN=dAN=dO9_QSO1G4xOOQO1G4x1G4xO&/SQSO1G4xO&/XQSO7++uO&/XQSO7++uO9OQ(C[OANA}O?rQSOANA}OOQQANA}ANA}OOQQANAjANAjOOQQANAkANAkO&/aQSO,5?YOOQO-E<l-E<lO&/lQ$IUO1G6WO&1|QbO'#CfOOQO,5?[,5?[OOQO-E<n-E<nOOQQ1G3W1G3WO%IXQUO,5<xOOQQ<<L]<<L]O!%tQ,UO<<L]O%JOQSO<<L]O&2WQSO<<L]O%QQUO<<L]OOQQ<<L_<<L_O9OQ(C[O<<L_O#K`QSO<<L_O8tQSO<<L_O&2`QWO1G4wO&2kQSO7++sOOQQAN=YAN=YO9OQ(C[OAN=YOOQQ<= b<= bOOQQ<= c<= cOOQQ<<Lg<<LgO&2sQSO<<LgO&2xQUO<<LgO&3PQSO<= bO&3UQSO<= cOOQQ1G3q1G3qO>QQSO7+)bO&3ZQSO<<IyO&3fQ$IUO<<IyOOQO<<Hs<<HsOOQ(CYAN?_AN?_OOQOAN?WAN?WO$6nQ(CjOAN?WOOQOAN>zAN>zO%QQUOAN?WOOQO<<Mo<<MoOOQQG26}G26}O!%tQ,UOG26}O#![QSOG26}O&3pQSOG26}O$MUQbOG26}O&3xQ$IUO<<JaO&4VQ$IUO1G2XO&5{Q$IUO1G2kO&8OQ$IUO1G2mO&:RQ$IUO<<KRO&:`Q$IUO<<ItOOQO1G1r1G1rO!'^Q,UOANAaOOQO7+*X7+*XO&:mQSO7+*XO&:xQSO<= XO&;QQ`O7+*ZOOQ(CW<<Kj<<KjO$ mQSO<<KjOOQ(CW<<Ki<<KiO&;[Q`O<<KjO$ mQSO<<KiOOQO7+*d7+*dO9_QSO7+*dO&;cQSO<= aOOQQG27iG27iO9OQ(C[OG27iO!)jQUO1G4tO&;kQSO7++rO%JOQSOANAwOOQQANAwANAwO!%tQ,UOANAwO&;sQSOANAwOOQQANAyANAyO9OQ(C[OANAyO#K`QSOANAyOOQO'#HU'#HUOOQO7+*c7+*cOOQQG22tG22tOOQQANBRANBRO&;{QSOANBROOQQAND|AND|OOQQAND}AND}OOQQ<<L|<<L|O!)jQUOAN?eOOQOG24rG24rO$6nQ(CjOG24rO#![QSOLD,iOOQQLD,iLD,iO!%tQ,UOLD,iO&<QQSOLD,iO&<YQ$IUO7+'sO&>OQ$IUO7+'uO&?tQ,UOG26{OOQO<<Ms<<MsOOQ(CWANAUANAUO$ mQSOANAUOOQ(CWANATANATOOQO<<NO<<NOOOQQLD-TLD-TO&@UQ$IUO7+*`OOQQG27cG27cO%JOQSOG27cO!%tQ,UOG27cOOQQG27eG27eO9OQ(C[OG27eOOQQG27mG27mO&@`Q$IUOG25POOQOLD*^LD*^OOQQ!$(!T!$(!TO#![QSO!$(!TO!%tQ,UO!$(!TO&@jQ(CjOG26{OOQ(CWG26pG26pOOQQLD,}LD,}O%JOQSOLD,}OOQQLD-PLD-POOQQ!)9Eo!)9EoO#![QSO!)9EoOOQQ!$(!i!$(!iOOQQ!.K;Z!.K;ZO&B{Q$IUOG26{O!)jQUO'#DvO0uQSO'#ETO&DqQbO'#JcO!)jQUO'#DnO&DxQUO'#DzO!)jQUO'#D|O&EPQbO'#CfO&GgQbO'#CfO&GwQUO,5;SO!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO'#IfO&IzQSO,5<cO&JSQ,UO,5;^O&KgQ,UO,5;^O!)jQUO,5;rO0xQSO'#DSO0xQSO'#DSO!%tQ,UO'#FxO&JSQ,UO'#FxO!%tQ,UO'#FzO&JSQ,UO'#FzO!%tQ,UO'#GYO&JSQ,UO'#GYO!)jQUO,5:fO!)jQUO,5@_O&GwQUO1G0nO&KnQ$IUO'#CfO!)jQUO1G1zO!%tQ,UO,5=PO&JSQ,UO,5=PO!%tQ,UO,5=RO&JSQ,UO,5=RO!%tQ,UO,5<mO&JSQ,UO,5<mO&GwQUO1G1{O!)jQUO7+&uO!%tQ,UO1G2XO&JSQ,UO1G2XO!%tQ,UO1G2ZO&JSQ,UO1G2ZO&GwQUO7+'gO&GwQUO7+&YO!%tQ,UOANAaO&JSQ,UOANAaO&KxQSO'#EhO&K}QSO'#EhO&LVQSO'#FWO&L[QSO'#ErO&LaQSO'#JsO&LlQSO'#JqO&LwQSO,5;SO&L|Q,UO,5<`O&MTQSO'#GRO&MYQSO'#GRO&M_QSO,5<aO&MgQSO,5;SO&MoQ$IUO1G1ZO&MvQSO,5<mO&M{QSO,5<mO&NQQSO,5<oO&NVQSO,5<oO&N[QSO1G1{O&NaQSO1G0nO&NfQ,UO<<KuO&NmQ,UO<<KuO7^Q,UO'#FvO8tQSO'#FuO@mQSO'#EgO!)jQUO,5;oO!2dQSO'#GRO!2dQSO'#GRO!2dQSO'#GTO!2dQSO'#GTO!'^Q,UO7+(ZO!'^Q,UO7+(ZO$HyQ`O1G2oO$HyQ`O1G2oO!%tQ,UO,5=TO!%tQ,UO,5=T",
            stateData: "' v~O'mOS'nOSROS'oRQ~OPYOQYOV!TO^pOaxObwOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!XXO!csO!hZO!kYO!lYO!mYO!otO!quO!tvO!x]O#p}O$QzO$UfO%`{O%b!OO%d|O%e|O%h!PO%j!QO%m!RO%n!RO%p!SO%|!UO&S!VO&U!WO&W!XO&Y!YO&]!ZO&c![O&i!]O&k!^O&m!_O&o!`O&q!aO'tSO'vTO'yUO(RVO(a[O(niO~OPYOQYOa!gOb!fOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!X!cO!csO!hZO!kYO!lYO!mYO!otO!quO!t!eO$Q!hO$UfO't!bO'vTO'yUO(RVO(a[O(niO~O^!sOl!kO|!lO![!uO!]!rO!^!rO!x9mO!|!mO!}!mO#O!tO#P!mO#Q!mO#T!vO#U!vO'u!iO'vTO'yUO(U!jO(a!pO~O'o!wO~OPYXXYX^YXkYXyYXzYX|YX!VYX!eYX!fYX!hYX!lYX#XYX#dcX#gYX#hYX#iYX#jYX#kYX#lYX#mYX#nYX#oYX#qYX#sYX#uYX#vYX#{YX'kYX(RYX(bYX(iYX(jYX~O!a$zX~P(gO[!yO'v!{O'w!yO'x!{O~O[!|O'x!{O'y!{O'z!|O~Oq#OO!O#PO(S#PO(T#RO~OPYOQYOa!gOb!fOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!X!cO!csO!hZO!kYO!lYO!mYO!otO!quO!t!eO$Q!hO$UfO't9rO'vTO'yUO(RVO(a[O(niO~O!U#VO!V#SO!S(XP!S(fP~P+sO!W#_O~P`OPYOQYOa!gOb!fOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!X!cO!csO!hZO!kYO!lYO!mYO!otO!quO!t!eO$Q!hO$UfO'vTO'yUO(RVO(a[O(niO~Oi#iO!U#eO!x]O#b#hO#c#eO't9sO!g(cP~P._O!h#kO't#jO~O!t#oO!x]O%`#pO~O#d#qO~O!a#rO#d#qO~OP$YOX$aOk#}Oy#vOz#wO|#xO!V$^O!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO#u$UO#v$VO(RVO(b$WO(i#yO(j#zO~O^(VX'k(VX'i(VX!g(VX!S(VX!X(VX%a(VX!a(VX~P1gO#X$bO#{$bOP(WXX(WXk(WXy(WXz(WX|(WX!V(WX!e(WX!h(WX!l(WX#g(WX#h(WX#i(WX#j(WX#k(WX#l(WX#m(WX#n(WX#o(WX#q(WX#s(WX#u(WX#v(WX(R(WX(b(WX(i(WX(j(WX!X(WX%a(WX~O^(WX!f(WX'k(WX'i(WX!S(WX!g(WXo(WX!a(WX~P3}O#X$bO~O$W$dO$Y$cO$a$iO~O!X$jO$UfO$d$kO$f$mO~Oi%POk$qOl$pOm$pOs%QOu%ROw%SO|$xO!X$yO!c%XO!h$uO#c%YO$Q%VO$m%TO$o%UO$r%WO't$oO'vTO'yUO'}%OO(R$rOd(OP~O!h%ZO~O!a%]O~O^%^O'k%^O~O'u!iO~P%QO't%eO~O!h%ZO't%eO'u!iO'}%OO~Ob%lO!h%ZO't%eO~O#o$PO~Oy%qO!X%nO!h%pO%b%tO't%eO'u!iO'vTO'yUO](vP~O!t#oO~O|%vO!X%wO't%eO~O|%vO!X%wO%j%{O't%eO~O't%|O~O#p}O%b!OO%d|O%e|O%h!PO%j!QO%m!RO%n!RO~Oa&VOb&UO!t&SO%`&TO%r&RO~P;fOa&YObwO!X&XO!tvO!x]O#p}O%`{O%d|O%e|O%h!PO%j!QO%m!RO%n!RO%p!SO~O_&]O#X&`O%b&ZO'u!iO~P<eO!h&aO!q&eO~O!h#kO~O!XXO~O^%^O'j&mO'k%^O~O^%^O'j&pO'k%^O~O^%^O'j&rO'k%^O~O'iYX!SYXoYX!gYX&QYX!XYX%aYX!aYX~P(gO!['PO!]&xO!^&xO'u!iO'vTO'yUO~Ol&vO|&uO!U&yO(U&tO!W(YP!W(hP~P?fOg'SO!X'QO't%eO~Ob'XO!h%ZO't%eO~Oy%qO!h%pO~Ol!kO|!lO!x9mO!|!mO!}!mO#P!mO#Q!mO'u!iO'vTO'yUO(U!jO(a!pO~O!['_O!]'^O!^'^O#O!mO#T'`O#U'`O~PAQO^%^O!a#rO!h%ZO'k%^O'}%OO(b'bO~O!l'fO#X'dO~PB`Ol!kO|!lO'vTO'yUO(U!jO(a!pO~O!XXOl(_X|(_X![(_X!](_X!^(_X!x(_X!|(_X!}(_X#O(_X#P(_X#Q(_X#T(_X#U(_X'u(_X'v(_X'y(_X(U(_X(a(_X~O!]'^O!^'^O'u!iO~PCOO'p'jO'q'jO'r'lO~O[!yO'v'nO'w!yO'x'nO~O[!|O'x'nO'y'nO'z!|O~Oq#OO!O#PO(S#PO(T'rO~O!U'tO!S&|X!S'SX!V&|X!V'SX~P+sO!V'vO!S(XX~OP$YOX$aOk#}Oy#vOz#wO|#xO!V'vO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO#u$UO#v$VO(RVO(b$WO(i#yO(j#zO~O!S(XX~PFrO!S'{O~O!S(eX!V(eX!a(eX!g(eX(b(eX~O#X(eX#d#]X!W(eX~PHxO#X'|O!S(gX!V(gX~O!V'}O!S(fX~O!S(QO~O#X$bO~PHxO!W(RO~P`Oy#vOz#wO|#xO!f#tO!h#uO(RVOP!jaX!jak!ja!V!ja!e!ja!l!ja#g!ja#h!ja#i!ja#j!ja#k!ja#l!ja#m!ja#n!ja#o!ja#q!ja#s!ja#u!ja#v!ja(b!ja(i!ja(j!ja~O^!ja'k!ja'i!ja!S!ja!g!jao!ja!X!ja%a!ja!a!ja~PJ`O!g(SO~O!a#rO#X(TO(b'bO!V(dX^(dX'k(dX~O!g(dX~PMOO|%vO!X%wO!x]O#b(YO#c(XO't%eO~O!V(ZO!g(cX~O!g(]O~O|%vO!X%wO#c(XO't%eO~OP(WXX(WXk(WXy(WXz(WX|(WX!V(WX!e(WX!f(WX!h(WX!l(WX#g(WX#h(WX#i(WX#j(WX#k(WX#l(WX#m(WX#n(WX#o(WX#q(WX#s(WX#u(WX#v(WX(R(WX(b(WX(i(WX(j(WX~O!a#rO!g(WX~PNlOy(^Oz(_O!f#tO!h#uO!x!wa|!wa~O!t!wa%`!wa!X!wa#b!wa#c!wa't!wa~P!!pO!t(cO~OPYOQYOa!gOb!fOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!XXO!csO!hZO!kYO!lYO!mYO!otO!quO!t!eO$Q!hO$UfO't!bO'vTO'yUO(RVO(a[O(niO~Oi%POk$qOl$pOm$pOs%QOu%ROw:VO|$xO!X$yO!c;aO!h$uO#c:]O$Q%VO$m:XO$o:ZO$r%WO't(gO'vTO'yUO'}%OO(R$rO~O#d(iO~Oi%POk$qOl$pOm$pOs%QOu%ROw%SO|$xO!X$yO!c%XO!h$uO#c%YO$Q%VO$m%TO$o%UO$r%WO't(gO'vTO'yUO'}%OO(R$rO~Od([P~P!'^O!U(mO!g(]P~P%QO(U(oO(a[O~O|(qO!h#uO(U(oO(a[O~OP9lOQ9lOa;]Ob!fOikOk9lOlkOmkOskOu9lOw9lO|WO!QkO!RkO!X!cO!c9oO!hZO!k9lO!l9lO!m9lO!o9pO!q9qO!t!eO$Q!hO$UfO't)PO'vTO'yUO(RVO(a[O(n;ZO~Oz)SO!h#uO~O!V$^O^$ka'k$ka'i$ka!g$ka!S$ka!X$ka%a$ka!a$ka~O#p)WO~P!%tOy)ZO!a)YO!X$XX$T$XX$W$XX$Y$XX$a$XX~O!a)YO!X(kX$T(kX$W(kX$Y(kX$a(kX~Oy)ZO~P!-SOy)ZO!X(kX$T(kX$W(kX$Y(kX$a(kX~O!X)]O$T)aO$W)[O$Y)[O$a)bO~O!U)eO~P!)jO$W$dO$Y$cO$a)iO~Og$sXy$sX|$sX!f$sX(i$sX(j$sX~OdfXd$sXgfX!VfX#XfX~P!.xOl)kO~Oq)lO(S)mO(T)oO~Og)xOy)qO|)rO(i)tO(j)vO~Od)pO~P!0ROd)yO~Oi%POk$qOl$pOm$pOs%QOu%ROw:VO|$xO!X$yO!c;aO!h$uO#c:]O$Q%VO$m:XO$o:ZO$r%WO'vTO'yUO'}%OO(R$rO~O!U)}O't)zO!g(oP~P!0pO#d*PO~O!h*QO~O!U*VO't*SO!S(pP~P!0pOk*cO|*ZO![*aO!]*YO!^*YO!h*QO#T*bO%W*]O'u!iO(U!jO~O!W*`O~P!2vO!f#tOg(QXy(QX|(QX(i(QX(j(QX!V(QX#X(QX~Od(QX#y(QX~P!3oOg*fO#X*eOd(PX!V(PX~O!V*gOd(OX~O't%|Od(OP~O!h*nO~O't(gO~Oi*rO|%vO!U#eO!X%wO!x]O#b#hO#c#eO't%eO!g(cP~O!a#rO#d*sO~OP$YOX$aOk#}Oy#vOz#wO|#xO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO#u$UO#v$VO(RVO(b$WO(i#yO(j#zO~O^!ba!V!ba'k!ba'i!ba!S!ba!g!bao!ba!X!ba%a!ba!a!ba~P!6UOy#vOz#wO|#xO!f#tO!h#uO(RVOP!naX!nak!na!V!na!e!na!l!na#g!na#h!na#i!na#j!na#k!na#l!na#m!na#n!na#o!na#q!na#s!na#u!na#v!na(b!na(i!na(j!na~O^!na'k!na'i!na!S!na!g!nao!na!X!na%a!na!a!na~P!8oOy#vOz#wO|#xO!f#tO!h#uO(RVOP!paX!pak!pa!V!pa!e!pa!l!pa#g!pa#h!pa#i!pa#j!pa#k!pa#l!pa#m!pa#n!pa#o!pa#q!pa#s!pa#u!pa#v!pa(b!pa(i!pa(j!pa~O^!pa'k!pa'i!pa!S!pa!g!pao!pa!X!pa%a!pa!a!pa~P!;YOg*{O!X'QO%a*zO'}%OO~O!a*}O^'|X!X'|X'k'|X!V'|X~O^%^O!XXO'k%^O~O!h%ZO'}%OO~O!h%ZO't%eO'}%OO~O!a#rO#d(iO~O%b+ZO't+VO'vTO'yUO!W(wP~O!V+[O](vX~O(U(oO~OX+`O~O]+aO~O!X%nO't%eO'u!iO](vP~O|%vO!U+eO!V'}O!X%wO't%eO!S(fP~Ol&|O|+gO!U+fO'vTO'yUO(U(oO~O!W(hP~P!@xO!V+hO^(sX'k(sX~O#X+lO'}%OO~Og+oO!X$yO'}%OO~O!X+qO~Oy+sO!XXO~O!t+xO~Ob+}O~O't#jO!W(uP~Ob%lO~O%b!OO't%|O~P<eOX,TO],SO~OPYOQYOaxObwOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!csO!hZO!kYO!lYO!mYO!otO!quO!tvO!x]O$UfO%`{O'vTO'yUO(RVO(a[O(niO~O!X!cO$Q!hO't!bO~P!C]O],SO^%^O'k%^O~O^,XO#p,ZO%d,ZO%e,ZO~P%QO!h&aO~O&S,`O~O!X,bO~O&e,dO&g,eOP&baQ&baV&ba^&baa&bab&bai&bak&bal&bam&bas&bau&baw&ba|&ba!Q&ba!R&ba!X&ba!c&ba!h&ba!k&ba!l&ba!m&ba!o&ba!q&ba!t&ba!x&ba#p&ba$Q&ba$U&ba%`&ba%b&ba%d&ba%e&ba%h&ba%j&ba%m&ba%n&ba%p&ba%|&ba&S&ba&U&ba&W&ba&Y&ba&]&ba&c&ba&i&ba&k&ba&m&ba&o&ba&q&ba'i&ba't&ba'v&ba'y&ba(R&ba(a&ba(n&ba!W&ba&Z&ba_&ba&`&ba~O't,jO~O!V{X!V!_X!W{X!W!_X!a{X!a!_X!h!_X#X{X'}!_X~O!a,oO#X,nO!V#aX!V(ZX!W#aX!W(ZX!a(ZX!h(ZX'}(ZX~O!a,qO!h%ZO'}%OO!V!ZX!W!ZX~Ol!kO|!lO'vTO'yUO(U!jO~OP9lOQ9lOa;]Ob!fOikOk9lOlkOmkOskOu9lOw9lO|WO!QkO!RkO!X!cO!c9oO!hZO!k9lO!l9lO!m9lO!o9pO!q9qO!t!eO$Q!hO$UfO'vTO'yUO(RVO(a[O(n;ZO~O't:bO~P!LrO!V,uO!W(YX~O!W,wO~O!a,oO#X,nO!V#aX!W#aX~O!V,xO!W(hX~O!W,zO~O!],{O!^,{O'u!iO~P!LaO!W-OO~P'TOg-RO!X'QO~O!S-WO~Ol!wa![!wa!]!wa!^!wa!|!wa!}!wa#O!wa#P!wa#Q!wa#T!wa#U!wa'u!wa'v!wa'y!wa(U!wa(a!wa~P!!pO!l-]O#X-ZO~PB`O!]-_O!^-_O'u!iO~PCOO^%^O#X-ZO'k%^O~O^%^O!a#rO#X-ZO'k%^O~O^%^O!a#rO!l-]O#X-ZO'k%^O(b'bO~O'p'jO'q'jO'r-dO~Oo-eO~O!S&|a!V&|a~P!6UO!U-iO!S&|X!V&|X~P%QO!V'vO!S(Xa~O!S(Xa~PFrO!V'}O!S(fa~O|%vO!U-mO!X%wO't%eO!S'SX!V'SX~O#X-oO!V(da!g(da^(da'k(da~O!a#rO~P#&xO!V(ZO!g(ca~O|%vO!X%wO#c-sO't%eO~Oi-xO|%vO!U-uO!X%wO!x]O#b-wO#c-uO't%eO!V'VX!g'VX~Oz-|O!h#uO~Og.PO!X'QO%a.OO'}%OO~O^#[i!V#[i'k#[i'i#[i!S#[i!g#[io#[i!X#[i%a#[i!a#[i~P!6UOg;gOy)qO|)rO(i)tO(j)vO~O#d#Wa^#Wa#X#Wa'k#Wa!V#Wa!g#Wa!X#Wa!S#Wa~P#)tO#d(QXP(QXX(QX^(QXk(QXz(QX!e(QX!h(QX!l(QX#g(QX#h(QX#i(QX#j(QX#k(QX#l(QX#m(QX#n(QX#o(QX#q(QX#s(QX#u(QX#v(QX'k(QX(R(QX(b(QX!g(QX!S(QX'i(QXo(QX!X(QX%a(QX!a(QX~P!3oO!V.YOd([X~P!0ROd.[O~O!V.]O!g(]X~P!6UO!g.`O~O!S.bO~OP$YOy#vOz#wO|#xO!f#tO!h#uO!l$YO(RVOX#fi^#fik#fi!V#fi!e#fi#h#fi#i#fi#j#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi'k#fi(b#fi(i#fi(j#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~O#g#fi~P#-pO#g#{O~P#-pOP$YOy#vOz#wO|#xO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O(RVOX#fi^#fi!V#fi!e#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi'k#fi(b#fi(i#fi(j#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~Ok#fi~P#0bOk#}O~P#0bOP$YOk#}Oy#vOz#wO|#xO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO(RVO^#fi!V#fi#q#fi#s#fi#u#fi#v#fi'k#fi(b#fi(i#fi(j#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~OX#fi!e#fi#l#fi#m#fi#n#fi#o#fi~P#3SOX$aO!e$PO#l$PO#m$PO#n$`O#o$PO~P#3SOP$YOX$aOk#}Oy#vOz#wO|#xO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO(RVO^#fi!V#fi#s#fi#u#fi#v#fi'k#fi(b#fi(j#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~O(i#fi~P#6TO(i#yO~P#6TOP$YOX$aOk#}Oy#vOz#wO|#xO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO(RVO(i#yO^#fi!V#fi#u#fi#v#fi'k#fi(b#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~O(j#fi~P#8uO(j#zO~P#8uOP$YOX$aOk#}Oy#vOz#wO|#xO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO#u$UO(RVO(i#yO(j#zO~O^#fi!V#fi#v#fi'k#fi(b#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~P#;gOPYXXYXkYXyYXzYX|YX!eYX!fYX!hYX!lYX#XYX#dcX#gYX#hYX#iYX#jYX#kYX#lYX#mYX#nYX#oYX#qYX#sYX#uYX#vYX#{YX(RYX(bYX(iYX(jYX!VYX!WYX~O#yYX~P#>QOP$YOX:TOk9wOy#vOz#wO|#xO!e9yO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO#l9yO#m9yO#n:SO#o9yO#q9zO#s9|O#u:OO#v:PO(RVO(b$WO(i#yO(j#zO~O#y.dO~P#@_O#X:UO#{:UO#y(WX!W(WX~PNlO^'Ya!V'Ya'k'Ya'i'Ya!g'Ya!S'Yao'Ya!X'Ya%a'Ya!a'Ya~P!6UOP#fiX#fi^#fik#fiz#fi!V#fi!e#fi!f#fi!h#fi!l#fi#g#fi#h#fi#i#fi#j#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi'k#fi(R#fi(b#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~P#)tO^#zi!V#zi'k#zi'i#zi!S#zi!g#zio#zi!X#zi%a#zi!a#zi~P!6UO$W.iO$Y.iO~O$W.jO$Y.jO~O!a)YO#X.kO!X$^X$T$^X$W$^X$Y$^X$a$^X~O!U.lO~O!X)]O$T.nO$W)[O$Y)[O$a.oO~O!V:QO!W(VX~P#@_O!W.pO~O!a)YO$a(kX~O$a.rO~Oq)lO(S)mO(T.uO~Ol.xO!S.yO'vTO'yUO~O!VcX!acX!gcX!g$sX(bcX~P!.xO!g/PO~P#)tO!V/QO!a#rO(b'bO!g(oX~O!g/VO~O!U)}O't%eO!g(oP~O#d/XO~O!S$sX!V$sX!a$zX~P!.xO!V/YO!S(pX~P#)tO!a/[O~O!S/^O~Ok/bO!a#rO!h%ZO'}%OO(b'bO~O't/dO~O!a*}O~O^%^O!V/hO'k%^O~O!W/jO~P!2vO!]/kO!^/kO'u!iO(U!jO~O|/mO(U!jO~O#T/nO~O't%|Od'_X!V'_X~O!V*gOd(Oa~Od/sO~Oy/tOz/tO|/uOgva(iva(jva!Vva#Xva~Odva#yva~P#L|Oy)qO|)rOg$la(i$la(j$la!V$la#X$la~Od$la#y$la~P#MrOy)qO|)rOg$na(i$na(j$na!V$na#X$na~Od$na#y$na~P#NeO#d/wO~Od$|a!V$|a#X$|a#y$|a~P!0RO!a#rO~O#d/zO~Oy#vOz#wO|#xO!f#tO!h#uO(RVOP!niX!nik!ni!V!ni!e!ni!l!ni#g!ni#h!ni#i!ni#j!ni#k!ni#l!ni#m!ni#n!ni#o!ni#q!ni#s!ni#u!ni#v!ni(b!ni(i!ni(j!ni~O^!ni'k!ni'i!ni!S!ni!g!nio!ni!X!ni%a!ni!a!ni~P$ wOg.PO!X'QO%a.OO~Oi0RO't0QO~P!0sO!a*}O^'|a!X'|a'k'|a!V'|a~O#d0XO~OXYX!VcX!WcX~O!V0YO!W(wX~O!W0[O~OX0]O~O't+VO'vTO'yUO~O!X%nO't%eO]'gX!V'gX~O!V+[O](va~O!g0bO~P!6UOX0eO~O]0fO~O!V+hO^(sa'k(sa~O#X0lO~Og0oO!X$yO~O(U(oO!W(tP~Og0xO!X0uO%a0wO'}%OO~OX1SO!V1QO!W(uX~O!W1TO~O]1VO^%^O'k%^O~O't#jO'vTO'yUO~O#X$bO#{$bOP(WXX(WXk(WXy(WXz(WX|(WX!V(WX!e(WX!h(WX!l(WX#g(WX#h(WX#i(WX#j(WX#k(WX#l(WX#m(WX#n(WX#q(WX#s(WX#u(WX#v(WX(R(WX(b(WX(i(WX(j(WX~O#o1YO&Q1ZO^(WX!f(WX~P$(xO#X$bO#o1YO&Q1ZO~O^1[O~P%QO^1^O~O&Z1bOP&XiQ&XiV&Xi^&Xia&Xib&Xii&Xik&Xil&Xim&Xis&Xiu&Xiw&Xi|&Xi!Q&Xi!R&Xi!X&Xi!c&Xi!h&Xi!k&Xi!l&Xi!m&Xi!o&Xi!q&Xi!t&Xi!x&Xi#p&Xi$Q&Xi$U&Xi%`&Xi%b&Xi%d&Xi%e&Xi%h&Xi%j&Xi%m&Xi%n&Xi%p&Xi%|&Xi&S&Xi&U&Xi&W&Xi&Y&Xi&]&Xi&c&Xi&i&Xi&k&Xi&m&Xi&o&Xi&q&Xi'i&Xi't&Xi'v&Xi'y&Xi(R&Xi(a&Xi(n&Xi!W&Xi_&Xi&`&Xi~O_1hO!W1fO&`1gO~P`O!XXO!h1jO~O&g,eOP&biQ&biV&bi^&bia&bib&bii&bik&bil&bim&bis&biu&biw&bi|&bi!Q&bi!R&bi!X&bi!c&bi!h&bi!k&bi!l&bi!m&bi!o&bi!q&bi!t&bi!x&bi#p&bi$Q&bi$U&bi%`&bi%b&bi%d&bi%e&bi%h&bi%j&bi%m&bi%n&bi%p&bi%|&bi&S&bi&U&bi&W&bi&Y&bi&]&bi&c&bi&i&bi&k&bi&m&bi&o&bi&q&bi'i&bi't&bi'v&bi'y&bi(R&bi(a&bi(n&bi!W&bi&Z&bi_&bi&`&bi~O!S1pO~O!V!Za!W!Za~P#@_Ol!kO|!lO!U1vO(U!jO!V&}X!W&}X~P?fO!V,uO!W(Ya~O!V'TX!W'TX~P!@xO!V,xO!W(ha~O!W1}O~P'TO^%^O#X2WO'k%^O~O^%^O!a#rO#X2WO'k%^O~O^%^O!a#rO!l2[O#X2WO'k%^O(b'bO~O^%^O'k%^O~P!6UO!V$^Oo$ka~O!S&|i!V&|i~P!6UO!V'vO!S(Xi~O!V'}O!S(fi~O!S(gi!V(gi~P!6UO!V(di!g(di^(di'k(di~P!6UO#X2^O!V(di!g(di^(di'k(di~O!V(ZO!g(ci~O|%vO!X%wO!x]O#b2cO#c2bO't%eO~O|%vO!X%wO#c2bO't%eO~Og2jO!X'QO%a2iO~Og2jO!X'QO%a2iO'}%OO~O#dvaPvaXva^vakva!eva!fva!hva!lva#gva#hva#iva#jva#kva#lva#mva#nva#ova#qva#sva#uva#vva'kva(Rva(bva!gva!Sva'ivaova!Xva%ava!ava~P#L|O#d$laP$laX$la^$lak$laz$la!e$la!f$la!h$la!l$la#g$la#h$la#i$la#j$la#k$la#l$la#m$la#n$la#o$la#q$la#s$la#u$la#v$la'k$la(R$la(b$la!g$la!S$la'i$lao$la!X$la%a$la!a$la~P#MrO#d$naP$naX$na^$nak$naz$na!e$na!f$na!h$na!l$na#g$na#h$na#i$na#j$na#k$na#l$na#m$na#n$na#o$na#q$na#s$na#u$na#v$na'k$na(R$na(b$na!g$na!S$na'i$nao$na!X$na%a$na!a$na~P#NeO#d$|aP$|aX$|a^$|ak$|az$|a!V$|a!e$|a!f$|a!h$|a!l$|a#g$|a#h$|a#i$|a#j$|a#k$|a#l$|a#m$|a#n$|a#o$|a#q$|a#s$|a#u$|a#v$|a'k$|a(R$|a(b$|a!g$|a!S$|a'i$|a#X$|ao$|a!X$|a%a$|a!a$|a~P#)tO^#[q!V#[q'k#[q'i#[q!S#[q!g#[qo#[q!X#[q%a#[q!a#[q~P!6UOd'OX!V'OX~P!'^O!V.YOd([a~O!U2rO!V'PX!g'PX~P%QO!V.]O!g(]a~O!V.]O!g(]a~P!6UO!S2uO~O#y!ja!W!ja~PJ`O#y!ba!V!ba!W!ba~P#@_O#y!na!W!na~P!8oO#y!pa!W!pa~P!;YO!X3XO$UfO$_3YO~O!W3^O~Oo3_O~P#)tO^$hq!V$hq'k$hq'i$hq!S$hq!g$hqo$hq!X$hq%a$hq!a$hq~P!6UO!S3`O~Ol.xO'vTO'yUO~Oy)qO|)rO(j)vOg%Xi(i%Xi!V%Xi#X%Xi~Od%Xi#y%Xi~P$GeOy)qO|)rOg%Zi(i%Zi(j%Zi!V%Zi#X%Zi~Od%Zi#y%Zi~P$HWO(b$WO~P#)tO!U3cO't%eO!V'ZX!g'ZX~O!V/QO!g(oa~O!V/QO!a#rO!g(oa~O!V/QO!a#rO(b'bO!g(oa~Od$ui!V$ui#X$ui#y$ui~P!0RO!U3kO't*SO!S']X!V']X~P!0pO!V/YO!S(pa~O!V/YO!S(pa~P#)tO!a#rO#o3sO~Ok3vO!a#rO(b'bO~Od(Pi!V(Pi~P!0RO#X3yOd(Pi!V(Pi~P!0RO!g3|O~O^$iq!V$iq'k$iq'i$iq!S$iq!g$iqo$iq!X$iq%a$iq!a$iq~P!6UO!V4QO!X(qX~P#)tO!f#tO~P3}O^$sX!X$sX%UYX'k$sX!V$sX~P!.xO%U4SO^hXghXyhX|hX!XhX'khX(ihX(jhX!VhX~O%U4SO~O%b4ZO't+VO'vTO'yUO!V'fX!W'fX~O!V0YO!W(wa~OX4_O~O]4`O~O!S4dO~O^%^O'k%^O~P#)tO!X$yO~P#)tO!V4iO#X4kO!W(tX~O!W4lO~Ol!kO|4mO![!uO!]!rO!^!rO!x9mO!|!mO!}!mO#O!mO#P!mO#Q!mO#T4rO#U!vO'u!iO'vTO'yUO(U!jO(a!pO~O!W4qO~P%!VOg4wO!X0uO%a4vO~Og4wO!X0uO%a4vO'}%OO~O't#jO!V'eX!W'eX~O!V1QO!W(ua~O'vTO'yUO(U5QO~O]5UO~O!g5XO~P%QO^5ZO~O^5ZO~P%QO#o5]O&Q5^O~PMOO_1hO!W5bO&`1gO~P`O!a5dO~O!a5fO!V(Zi!W(Zi!a(Zi!h(Zi'}(Zi~O!V#ai!W#ai~P#@_O#X5gO!V#ai!W#ai~O!V!Zi!W!Zi~P#@_O^%^O#X5pO'k%^O~O^%^O!a#rO#X5pO'k%^O~O!V(dq!g(dq^(dq'k(dq~P!6UO!V(ZO!g(cq~O|%vO!X%wO#c5wO't%eO~O!X'QO%a5zO~Og5}O!X'QO%a5zO~O#d%XiP%XiX%Xi^%Xik%Xiz%Xi!e%Xi!f%Xi!h%Xi!l%Xi#g%Xi#h%Xi#i%Xi#j%Xi#k%Xi#l%Xi#m%Xi#n%Xi#o%Xi#q%Xi#s%Xi#u%Xi#v%Xi'k%Xi(R%Xi(b%Xi!g%Xi!S%Xi'i%Xio%Xi!X%Xi%a%Xi!a%Xi~P$GeO#d%ZiP%ZiX%Zi^%Zik%Ziz%Zi!e%Zi!f%Zi!h%Zi!l%Zi#g%Zi#h%Zi#i%Zi#j%Zi#k%Zi#l%Zi#m%Zi#n%Zi#o%Zi#q%Zi#s%Zi#u%Zi#v%Zi'k%Zi(R%Zi(b%Zi!g%Zi!S%Zi'i%Zio%Zi!X%Zi%a%Zi!a%Zi~P$HWO#d$uiP$uiX$ui^$uik$uiz$ui!V$ui!e$ui!f$ui!h$ui!l$ui#g$ui#h$ui#i$ui#j$ui#k$ui#l$ui#m$ui#n$ui#o$ui#q$ui#s$ui#u$ui#v$ui'k$ui(R$ui(b$ui!g$ui!S$ui'i$ui#X$uio$ui!X$ui%a$ui!a$ui~P#)tOd'Oa!V'Oa~P!0RO!V'Pa!g'Pa~P!6UO!V.]O!g(]i~O#y#[i!V#[i!W#[i~P#@_OP$YOy#vOz#wO|#xO!f#tO!h#uO!l$YO(RVOX#fik#fi!e#fi#h#fi#i#fi#j#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi#y#fi(b#fi(i#fi(j#fi!V#fi!W#fi~O#g#fi~P%0fO#g9uO~P%0fOP$YOy#vOz#wO|#xO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO(RVOX#fi!e#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi#y#fi(b#fi(i#fi(j#fi!V#fi!W#fi~Ok#fi~P%2qOk9wO~P%2qOP$YOk9wOy#vOz#wO|#xO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO(RVO#q#fi#s#fi#u#fi#v#fi#y#fi(b#fi(i#fi(j#fi!V#fi!W#fi~OX#fi!e#fi#l#fi#m#fi#n#fi#o#fi~P%4|OX:TO!e9yO#l9yO#m9yO#n:SO#o9yO~P%4|OP$YOX:TOk9wOy#vOz#wO|#xO!e9yO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO#l9yO#m9yO#n:SO#o9yO#q9zO(RVO#s#fi#u#fi#v#fi#y#fi(b#fi(j#fi!V#fi!W#fi~O(i#fi~P%7hO(i#yO~P%7hOP$YOX:TOk9wOy#vOz#wO|#xO!e9yO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO#l9yO#m9yO#n:SO#o9yO#q9zO#s9|O(RVO(i#yO#u#fi#v#fi#y#fi(b#fi!V#fi!W#fi~O(j#fi~P%9sO(j#zO~P%9sOP$YOX:TOk9wOy#vOz#wO|#xO!e9yO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO#l9yO#m9yO#n:SO#o9yO#q9zO#s9|O#u:OO(RVO(i#yO(j#zO~O#v#fi#y#fi(b#fi!V#fi!W#fi~P%<OO^#wy!V#wy'k#wy'i#wy!S#wy!g#wyo#wy!X#wy%a#wy!a#wy~P!6UOg;hOy)qO|)rO(i)tO(j)vO~OP#fiX#fik#fiz#fi!e#fi!f#fi!h#fi!l#fi#g#fi#h#fi#i#fi#j#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi#y#fi(R#fi(b#fi!V#fi!W#fi~P%>vO!f#tOP(QXX(QXg(QXk(QXy(QXz(QX|(QX!e(QX!h(QX!l(QX#g(QX#h(QX#i(QX#j(QX#k(QX#l(QX#m(QX#n(QX#o(QX#q(QX#s(QX#u(QX#v(QX#y(QX(R(QX(b(QX(i(QX(j(QX!V(QX!W(QX~O#y#zi!V#zi!W#zi~P#@_O#y!ni!W!ni~P$ wO!W6ZO~O!V'Ya!W'Ya~P#@_O!a#rO(b'bO!V'Za!g'Za~O!V/QO!g(oi~O!V/QO!a#rO!g(oi~Od$uq!V$uq#X$uq#y$uq~P!0RO!S']a!V']a~P#)tO!a6bO~O!V/YO!S(pi~P#)tO!V/YO!S(pi~O!S6fO~O!a#rO#o6kO~Ok6lO!a#rO(b'bO~O!S6nO~Od$wq!V$wq#X$wq#y$wq~P!0RO^$iy!V$iy'k$iy'i$iy!S$iy!g$iyo$iy!X$iy%a$iy!a$iy~P!6UO!V4QO!X(qa~O^#[y!V#[y'k#[y'i#[y!S#[y!g#[yo#[y!X#[y%a#[y!a#[y~P!6UOX6sO~O!V0YO!W(wi~O]6yO~O!a5fO~O(U(oO!V'bX!W'bX~O!V4iO!W(ta~OikO't7QO~P._O!W7TO~P%!VOl!kO|7UO'vTO'yUO(U!jO(a!pO~O!X0uO~O!X0uO%a7WO~Og7ZO!X0uO%a7WO~OX7`O!V'ea!W'ea~O!V1QO!W(ui~O!g7dO~O!g7eO~O!g7fO~O!g7fO~P%QO^7hO~O!a7kO~O!g7lO~O!V(gi!W(gi~P#@_O^%^O#X7tO'k%^O~O!V(dy!g(dy^(dy'k(dy~P!6UO!V(ZO!g(cy~O!X'QO%a7wO~O#d$uqP$uqX$uq^$uqk$uqz$uq!V$uq!e$uq!f$uq!h$uq!l$uq#g$uq#h$uq#i$uq#j$uq#k$uq#l$uq#m$uq#n$uq#o$uq#q$uq#s$uq#u$uq#v$uq'k$uq(R$uq(b$uq!g$uq!S$uq'i$uq#X$uqo$uq!X$uq%a$uq!a$uq~P#)tO#d$wqP$wqX$wq^$wqk$wqz$wq!V$wq!e$wq!f$wq!h$wq!l$wq#g$wq#h$wq#i$wq#j$wq#k$wq#l$wq#m$wq#n$wq#o$wq#q$wq#s$wq#u$wq#v$wq'k$wq(R$wq(b$wq!g$wq!S$wq'i$wq#X$wqo$wq!X$wq%a$wq!a$wq~P#)tO!V'Pi!g'Pi~P!6UO#y#[q!V#[q!W#[q~P#@_Oy/tOz/tO|/uOPvaXvagvakva!eva!fva!hva!lva#gva#hva#iva#jva#kva#lva#mva#nva#ova#qva#sva#uva#vva#yva(Rva(bva(iva(jva!Vva!Wva~Oy)qO|)rOP$laX$lag$lak$laz$la!e$la!f$la!h$la!l$la#g$la#h$la#i$la#j$la#k$la#l$la#m$la#n$la#o$la#q$la#s$la#u$la#v$la#y$la(R$la(b$la(i$la(j$la!V$la!W$la~Oy)qO|)rOP$naX$nag$nak$naz$na!e$na!f$na!h$na!l$na#g$na#h$na#i$na#j$na#k$na#l$na#m$na#n$na#o$na#q$na#s$na#u$na#v$na#y$na(R$na(b$na(i$na(j$na!V$na!W$na~OP$|aX$|ak$|az$|a!e$|a!f$|a!h$|a!l$|a#g$|a#h$|a#i$|a#j$|a#k$|a#l$|a#m$|a#n$|a#o$|a#q$|a#s$|a#u$|a#v$|a#y$|a(R$|a(b$|a!V$|a!W$|a~P%>vO#y$hq!V$hq!W$hq~P#@_O#y$iq!V$iq!W$iq~P#@_O!W8RO~O#y8SO~P!0RO!a#rO!V'Zi!g'Zi~O!a#rO(b'bO!V'Zi!g'Zi~O!V/QO!g(oq~O!S']i!V']i~P#)tO!V/YO!S(pq~O!S8YO~P#)tO!S8YO~Od(Py!V(Py~P!0RO!V'`a!X'`a~P#)tO^%Tq!X%Tq'k%Tq!V%Tq~P#)tOX8_O~O!V0YO!W(wq~O#X8cO!V'ba!W'ba~O!V4iO!W(ti~P#@_OPYXXYXkYXyYXzYX|YX!SYX!VYX!eYX!fYX!hYX!lYX#XYX#dcX#gYX#hYX#iYX#jYX#kYX#lYX#mYX#nYX#oYX#qYX#sYX#uYX#vYX#{YX(RYX(bYX(iYX(jYX~O!a%RX#o%RX~P&/vO!X0uO%a8gO~O'vTO'yUO(U8lO~O!V1QO!W(uq~O!g8oO~O!g8oO~P%QO!g8qO~O!g8rO~O#X8tO!V#ay!W#ay~O!V#ay!W#ay~P#@_O!X'QO%a8yO~O#y#wy!V#wy!W#wy~P#@_OP$uiX$uik$uiz$ui!e$ui!f$ui!h$ui!l$ui#g$ui#h$ui#i$ui#j$ui#k$ui#l$ui#m$ui#n$ui#o$ui#q$ui#s$ui#u$ui#v$ui#y$ui(R$ui(b$ui!V$ui!W$ui~P%>vOy)qO|)rO(j)vOP%XiX%Xig%Xik%Xiz%Xi!e%Xi!f%Xi!h%Xi!l%Xi#g%Xi#h%Xi#i%Xi#j%Xi#k%Xi#l%Xi#m%Xi#n%Xi#o%Xi#q%Xi#s%Xi#u%Xi#v%Xi#y%Xi(R%Xi(b%Xi(i%Xi!V%Xi!W%Xi~Oy)qO|)rOP%ZiX%Zig%Zik%Ziz%Zi!e%Zi!f%Zi!h%Zi!l%Zi#g%Zi#h%Zi#i%Zi#j%Zi#k%Zi#l%Zi#m%Zi#n%Zi#o%Zi#q%Zi#s%Zi#u%Zi#v%Zi#y%Zi(R%Zi(b%Zi(i%Zi(j%Zi!V%Zi!W%Zi~O#y$iy!V$iy!W$iy~P#@_O#y#[y!V#[y!W#[y~P#@_O!a#rO!V'Zq!g'Zq~O!V/QO!g(oy~O!S']q!V']q~P#)tO!S9QO~P#)tO!V0YO!W(wy~O!V4iO!W(tq~O!X0uO%a9XO~O!g9[O~O!X'QO%a9aO~OP$uqX$uqk$uqz$uq!e$uq!f$uq!h$uq!l$uq#g$uq#h$uq#i$uq#j$uq#k$uq#l$uq#m$uq#n$uq#o$uq#q$uq#s$uq#u$uq#v$uq#y$uq(R$uq(b$uq!V$uq!W$uq~P%>vOP$wqX$wqk$wqz$wq!e$wq!f$wq!h$wq!l$wq#g$wq#h$wq#i$wq#j$wq#k$wq#l$wq#m$wq#n$wq#o$wq#q$wq#s$wq#u$wq#v$wq#y$wq(R$wq(b$wq!V$wq!W$wq~P%>vOd%]!Z!V%]!Z#X%]!Z#y%]!Z~P!0RO!V'bq!W'bq~P#@_O!V#a!Z!W#a!Z~P#@_O#d%]!ZP%]!ZX%]!Z^%]!Zk%]!Zz%]!Z!V%]!Z!e%]!Z!f%]!Z!h%]!Z!l%]!Z#g%]!Z#h%]!Z#i%]!Z#j%]!Z#k%]!Z#l%]!Z#m%]!Z#n%]!Z#o%]!Z#q%]!Z#s%]!Z#u%]!Z#v%]!Z'k%]!Z(R%]!Z(b%]!Z!g%]!Z!S%]!Z'i%]!Z#X%]!Zo%]!Z!X%]!Z%a%]!Z!a%]!Z~P#)tOP%]!ZX%]!Zk%]!Zz%]!Z!e%]!Z!f%]!Z!h%]!Z!l%]!Z#g%]!Z#h%]!Z#i%]!Z#j%]!Z#k%]!Z#l%]!Z#m%]!Z#n%]!Z#o%]!Z#q%]!Z#s%]!Z#u%]!Z#v%]!Z#y%]!Z(R%]!Z(b%]!Z!V%]!Z!W%]!Z~P%>vOo(VX~P1gO'u!iO~P!)jO!ScX!VcX#XcX~P&/vOPYXXYXkYXyYXzYX|YX!VYX!VcX!eYX!fYX!hYX!lYX#XYX#XcX#dcX#gYX#hYX#iYX#jYX#kYX#lYX#mYX#nYX#oYX#qYX#sYX#uYX#vYX#{YX(RYX(bYX(iYX(jYX~O!acX!gYX!gcX(bcX~P&E^OP9lOQ9lOa;]Ob!fOikOk9lOlkOmkOskOu9lOw9lO|WO!QkO!RkO!XXO!c9oO!hZO!k9lO!l9lO!m9lO!o9pO!q9qO!t!eO$Q!hO$UfO't)PO'vTO'yUO(RVO(a[O(n;ZO~O!V:QO!W$ka~Oi%POk$qOl$pOm$pOs%QOu%ROw:WO|$xO!X$yO!c;bO!h$uO#c:^O$Q%VO$m:YO$o:[O$r%WO't(gO'vTO'yUO'}%OO(R$rO~O#p)WO~P&JSO!WYX!WcX~P&E^O#d9tO~O!a#rO#d9tO~O#X:UO~O#o9yO~O#X:`O!V(gX!W(gX~O#X:UO!V(eX!W(eX~O#d:aO~Od:cO~P!0RO#d:hO~O#d:iO~O!a#rO#d:jO~O!a#rO#d:aO~O#y:kO~P#@_O#d:lO~O#d:mO~O#d:nO~O#d:oO~O#d:pO~O#d:qO~O#y:rO~P!0RO#y:sO~P!0RO$U~!f!|!}#P#Q#T#b#c#n(n$m$o$r%U%`%a%b%h%j%m%n%p%r~'oR$U(n#h!R'm'u#il#g#jky'n(U'n't$W$Y$W~",
            goto: "$%Z({PPPP(|P)PP)aP*p.rPPPP5SPP5iP;d>iP>|P>|PPP>|P@lP>|P>|P>|P@pPP@uPA`PFUPPPFYPPPPFYIXPPPI_JYPFYPLgPPPPNuFYPPPFYPFYP!#TFYP!&g!'i!'rP!(e!(i!(ePPPPP!+r!'iPP!,`!-YP!/|FYFY!0R!3Z!7n!7n!;cPPP!;jFYPPPPPPPPPPP!>uP!@WPPFY!AePFYPFYFYFYFYPFY!BwPP!E}P!IPP!IT!I_!Ic!IcP!EzP!Ig!IgP!LiP!LmFYFY!Ls# t>|P>|P>|>|P##O>|>|#$x>|#'V>|#(y>|>|#)g#+c#+c#+g#+o#+c#+wP#+cP>|#,a>|#-i>|>|5SPPP#.tPP#/^#/^P#/^P#/s#/^PP#/yP#/pP#/p#0]#/p#0w#0}5P)P#1Q)PP#1X#1X#1XP)PP)PP)PP)PPP)PP#1_#1bP#1b)PP#1fP#1iP)PP)PP)PP)PP)PP)P)PPP#1o#1u#2P#2V#2]#2c#2i#2w#2}#3T#3_#3e#3o#4O#4U#4u#5X#5_#5e#5s#6Y#7j#7x#8O#8U#8[#8b#8l#8r#8x#9S#9f#9lPPPPPPPPPP#9rPPPPPPP#:f#=mP#>|#?T#?]PPPP#Cg#F]#Lr#Lu#Lx#Mq#Mt#Mw#NO#NWPP#N^#Nb$ Z$!Z$!_$!sPP$!w$!}$#RP$#U$#Y$#]$$R$$i$$n$$q$$t$$z$$}$%R$%VR!xRmpOXr!X#`%]&d&f&g&i,],b1b1eY!rQ'Q,}0u4pQ%ctQ%kwQ%rzQ&[!TS&x!c,uQ'W!fS'^!o!uS*Y$y*_Q+T%lQ+b%tQ+|&UQ,{'PQ-V'XQ-_'_Q/k*aQ1P+}R:_9p$zdOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s+g,X,],b-R-Z-i-o.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2r4m4w5Z5]5^5p7U7Z7h7tS#m]9m!r)R$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Q*j%SQ+Y%nQ,O&XQ,V&aQ.S:VQ0O*{Q0S*}Q0_+ZQ1X,TQ2f.PQ4Y0YQ5O1QQ5|2jQ6S:WQ6u4ZR7z5}&xkOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^t!kQ!o!r!u!v&x'P'Q'^'_'`,u,{,}-_0u4p4r$Y$pi#r#t$`$a$u$x%T%U%Y)l)u)w)x*P*V*e*f*z*}+l+o.O.Y/X/Y/[/w0l0o0w2i3a3k3s3y4Q4S4v5z6b6k7W7w8S8g8y9X9a:S:T:X:Y:Z:[:]:^:d:e:f:g:h:i:l:m:n:o:r:s;Z;c;d;g;hQ%uzQ&v!cS&|%w,xQ+Y%nS.x)r.zQ/v*nQ0_+ZQ0d+aQ1W,SQ1X,TQ4Y0YQ4c0fQ5R1SQ5S1VQ6u4ZQ6x4`Q7c5UQ8b6yR8m7`pmOXr!T!X#`%]&Z&d&f&g&i,],b1b1eR,Q&]&r^OPXYrstux!X!^!g!l#O#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u'S'd'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;];^[#XWZ#S#V&y'tQ%fvQ%jwS%oz%t!U%x|}#d#e#h%Z%v'}(X(Y(Z+e+f+h,Z,o-m-s-t-u-w1j2b2c5f5wQ&Q!RQ'T!eQ'V!fQ(b#oS)|$u*QS+S%k%lQ+W%nQ+w&SQ+{&US-U'W'XQ.R(cQ/U)}Q0W+TQ0^+ZQ0`+[Q0c+`Q0z+xS1O+|+}Q2S-VQ3b/QQ4X0YQ4]0]Q4b0eQ4}1PQ6_3cQ6t4ZQ6w4_Q8^6sR9S8_v$wi#t%T%U%Y)u)w*P*e*f.Y/X/w3a3y8S;Z;c;d!S%hw!f!q%j%k%l&w'V'W'X']'g*X+S+T,r-U-V-^/c0W1{2S2Z3uQ*|%fQ+m%}Q+p&OQ+z&UQ.Q(bQ0y+wU0}+{+|+}Q2k.RQ4x0zS4|1O1PQ7_4}!z;_#r$`$a$u$x)l)x*V*z*}+l+o.O/Y/[0l0o0w2i3k3s4Q4S4v5z6b6k7W7w8g8y9X9a:X:Z:]:d:f:h:l:n:r;g;hg;`:S:T:Y:[:^:e:g:i:m:o:sW$|i%O*g;ZS%}!O&ZQ&O!PQ&P!QR+k%{$Z${i#r#t$`$a$u$x%T%U%Y)l)u)w)x*P*V*e*f*z*}+l+o.O.Y/X/Y/[/w0l0o0w2i3a3k3s3y4Q4S4v5z6b6k7W7w8S8g8y9X9a:S:T:X:Y:Z:[:]:^:d:e:f:g:h:i:l:m:n:o:r:s;Z;c;d;g;hT)m$r)nV*k%S:V:WU&|!c%w,xS(p#v#wQ+_%qS-z(^(_Q0p+qQ3z/tR6}4i&xkOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^$i$]c#U#a%a%b%d's'y(e(l(t(u(v(w(x(y(z({(|(})O)Q)T)X)c*x+^,s-b-g-l-n.X._.c.e.f.g.v/x1q1t2U2]2q2v2w2x2y2z2{2|2}3O3P3Q3R3S3V3W3]4O4V5i5o5t6Q6R6W6X7P7n7r7{8P8Q8v9U9]9n;QT#PV#Q&ykOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Q&z!cR1w,uv!kQ!c!o!r!u!v&x'P'Q'^'_'`,u,{,}-_0u4p4rS*X$y*_S/c*Y*aQ/l*bQ0r+sQ3u/kR3x/nlpOXr!X#`%]&d&f&g&i,],b1b1eQ&k![Q'h!tS(d#q9tQ+Q%iQ+u&QQ+v&RQ-S'UQ-a'aS.W(i:aS/y*s:jQ0U+RQ0t+tQ1i,dQ1k,eQ1s,pQ2Q-TQ2T-XS4P/z:pQ4T0VS4W0X:qQ5h1uQ5l2RQ5q2YQ6r4UQ7o5jQ7p5mQ7s5rR8s7l$d$[c#U#a%b%d's'y(e(l(t(u(v(w(x(y(z({(|(})O)Q)T)X)c*x+^,s-b-g-l-n.X._.c.f.g.v/x1q1t2U2]2q2v2w2x2y2z2{2|2}3O3P3Q3R3S3V3W3]4O4V5i5o5t6Q6R6W6X7P7n7r7{8P8Q8v9U9]9n;QS(a#l'ZU*d$z(h3US*w%a.eQ2g0OQ5y2fQ7y5|R8z7z$d$Zc#U#a%b%d's'y(e(l(t(u(v(w(x(y(z({(|(})O)Q)T)X)c*x+^,s-b-g-l-n.X._.c.f.g.v/x1q1t2U2]2q2v2w2x2y2z2{2|2}3O3P3Q3R3S3V3W3]4O4V5i5o5t6Q6R6W6X7P7n7r7{8P8Q8v9U9]9n;QS(`#l'ZS(r#w$[S*v%a.eS-{(_(aQ.h)SQ/{*wR2d-|&xkOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^S#m]9mQ&f!VQ&g!WQ&i!YQ&j!ZR1a,`Q'R!eQ*y%fQ-Q'TS-}(b*|Q2O-PW2h.Q.R/}0PQ5k2PU5x2e2g2kS7v5y5{S8x7x7yS9_8w8zQ9g9`R9j9hU!sQ'Q,}T4n0u4p!O_OXZ`r!T!X#`#d%Z%]&Z&]&d&f&g&i(Z,],b-t1b1e]!mQ!o'Q,}0u4pT#m]9m%UyOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&a&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7tS(p#v#wS-z(^(_!s:w$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Y!qQ'Q,}0u4pQ']!oS'g!r!uS'i!v4rS-^'^'_Q-`'`R2Z-_Q'f!qS(V#c1_S-]']'iQ/T)|Q/a*XQ2[-`Q3g/US3p/b/lQ6^3bS6i3v3xQ8U6_R8]6lQ#sbQ'e!qS(U#c1_S(W#i*rQ*t%[Q+O%gQ+U%mU-[']'f'iQ-p(VQ/S)|Q/`*XQ/f*[Q0T+PQ0{+yS2X-]-`Q2a-xS3f/T/US3o/a/lQ3r/eQ3t/gQ4z0|Q5s2[Q6]3bQ6a3gS6e3p3xQ6j3wQ7]4{S8T6^6_Q8X6fQ8Z6iQ8j7^Q9O8UQ9P8YQ9R8]Q9Z8kQ9c9QQ:z:uQ;V;OR;W;PV!sQ'Q,}%UaOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&a&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7tS#sx!g!r:t$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^R:z;]%UbOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&a&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7tQ%[j!S%gw!f!q%j%k%l&w'V'W'X']'g*X+S+T,r-U-V-^/c0W1{2S2Z3uS%mx!gQ+P%hQ+y&UW0|+z+{+|+}U4{0}1O1PS7^4|4}Q8k7_!r:u$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Q;O;[R;P;]$xeOPXYrstu!X!^!l#O#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&d&f&g&i&m&u'S'd'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7tY#^WZ#S#V't!U%x|}#d#e#h%Z%v'}(X(Y(Z+e+f+h,Z,o-m-s-t-u-w1j2b2c5f5wQ,W&a!p:v$X$j)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^R:y&yS&}!c%wR1y,x$zdOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s+g,X,],b-R-Z-i-o.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2r4m4w5Z5]5^5p7U7Z7h7t!r)R$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Q,V&aQ0O*{Q2f.PQ5|2jR7z5}!f$Rc#U%a's'y(e(l({(|(})O)T)X+^-b-g-l-n.X._.v/x2U2]2q3S4O4V5o5t6Q7r8v9n!T9{)Q)c,s.e1q1t2v3O3P3Q3R3V3]5i6R6W6X7P7n7{8P8Q9U9];Q!b$Tc#U%a's'y(e(l(})O)T)X+^-b-g-l-n.X._.v/x2U2]2q3S4O4V5o5t6Q7r8v9n!P9})Q)c,s.e1q1t2v3Q3R3V3]5i6R6W6X7P7n7{8P8Q9U9];Q!^$Xc#U%a's'y(e(l)T)X+^-b-g-l-n.X._.v/x2U2]2q3S4O4V5o5t6Q7r8v9nQ3a/Oz;^)Q)c,s.e1q1t2v3V3]5i6R6W6X7P7n7{8P8Q9U9];QQ;c;eR;d;f&xkOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^S$kh$lR3Y.k'PgOPWXYZhrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j$l%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.k.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^T$gf$mQ$efS)[$h)`R)h$mT$ff$mT)^$h)`'PhOPWXYZhrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j$l%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.k.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^T$kh$lQ$nhR)g$l%UjOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&a&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7t!s;[$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^#alOPXZr!X!^!l#O#`#k#x$j%]&]&`&a&d&f&g&i&m&u'S(q)e*{+g,X,],b-R.P.l/u0x1Y1Z1[1^1b1e1g2j3X4m4w5Z5]5^5}7U7Z7hv$zi#t%T%U%Y)u)w*P*e*f.Y/X/w3a3y8S;Z;c;d!z(h#r$`$a$u$x)l)x*V*z*}+l+o.O/Y/[0l0o0w2i3k3s4Q4S4v5z6b6k7W7w8g8y9X9a:X:Z:]:d:f:h:l:n:r;g;hQ*o%WQ.w)qg3U:S:T:Y:[:^:e:g:i:m:o:sv$vi#t%T%U%Y)u)w*P*e*f.Y/X/w3a3y8S;Z;c;dQ*R$wS*[$y*_Q*p%XQ/g*]!z:|#r$`$a$u$x)l)x*V*z*}+l+o.O/Y/[0l0o0w2i3k3s4Q4S4v5z6b6k7W7w8g8y9X9a:X:Z:]:d:f:h:l:n:r;g;hf:}:S:T:Y:[:^:e:g:i:m:o:sQ;R;_Q;S;`Q;T;aR;U;bv$zi#t%T%U%Y)u)w*P*e*f.Y/X/w3a3y8S;Z;c;d!z(h#r$`$a$u$x)l)x*V*z*}+l+o.O/Y/[0l0o0w2i3k3s4Q4S4v5z6b6k7W7w8g8y9X9a:X:Z:]:d:f:h:l:n:r;g;hg3U:S:T:Y:[:^:e:g:i:m:o:slnOXr!X#`%]&d&f&g&i,],b1b1eQ*U$xQ,k&pQ,l&rR3j/Y$Y${i#r#t$`$a$u$x%T%U%Y)l)u)w)x*P*V*e*f*z*}+l+o.O.Y/X/Y/[/w0l0o0w2i3a3k3s3y4Q4S4v5z6b6k7W7w8S8g8y9X9a:S:T:X:Y:Z:[:]:^:d:e:f:g:h:i:l:m:n:o:r:s;Z;c;d;g;hQ+n&OQ0n+pQ4g0mR6|4hT*^$y*_S*^$y*_T4o0u4pS/e*Z4mT3w/m7UQ+O%gQ/f*[Q0T+PQ0{+yQ4z0|Q7]4{Q8j7^R9Z8kn)u$s(j*q/W/o/p2o3h3}6[6m8}:{;X;Y!W:d(f)V){*T.V.s/O/]/|0k0m2n3i3m4f4h6O6P6c6g6o6q8W8[9b;e;f]:e3T6V7|8{8|9kp)w$s(j*q.|/W/o/p2o3h3}6[6m8}:{;X;Y!Y:f(f)V){*T.V.s/O/]/|0k0m2l2n3i3m4f4h6O6P6c6g6o6q8W8[9b;e;f_:g3T6V7|7}8{8|9kpmOXr!T!X#`%]&Z&d&f&g&i,],b1b1eQ&W!SR,X&apmOXr!T!X#`%]&Z&d&f&g&i,],b1b1eR&W!SQ+r&PR0j+kqmOXr!T!X#`%]&Z&d&f&g&i,],b1b1eQ0v+wS4u0y0zU7V4s4t4xS8f7X7YS9V8e8hQ9d9WR9i9eQ&_!TR,R&ZR5R1SS%oz%tR0`+[Q&d!UR,]&eR,c&jT1c,b1eR,g&kQ,f&kR1l,gQ'k!wR-c'kQrOQ#`XT%`r#`Q!zTR'm!zQ!}UR'o!}Q)n$rR.t)nQ#QVR'q#QQ#TWU'w#T'x-jQ'x#UR-j'yQ,v&zR1x,vQ.Z(jR2p.ZQ.^(lS2s.^2tR2t._Q,}'QR1|,}Y!oQ'Q,}0u4pR'[!oS#ZW%vU(O#Z(P-kQ(P#[R-k'zQ,y&}R1z,yr`OXr!T!X#`%]&Z&]&d&f&g&i,],b1b1eS#dZ%ZU#n`#d-tR-t(ZQ([#fQ-q(WW-y([-q2_5uQ2_-rR5u2`Q)`$hR.m)`Q$lhR)f$lQ$_cU)U$_-f:RQ-f9nR:R)cQ/R)|W3d/R3e6`8VU3e/S/T/US6`3f3gR8V6a#m)s$s(f(j)V){*T*l*m*q.T.U.V.s.|.}/O/W/]/o/p/|0k0m2l2m2n2o3T3h3i3m3}4f4h6O6P6T6U6V6[6c6g6m6o6q7|7}8O8W8[8{8|8}9b9k:{;X;Y;e;fQ/Z*TU3l/Z3n6dQ3n/]R6d3mQ*_$yR/i*_Q*h$}R/r*hQ4R/|R6p4RQ+i%yR0i+iQ4j0pS7O4j8dR8d7PQ+t&QR0s+tQ4p0uR7S4pQ1R,OS5P1R7aR7a5RQ0Z+WW4[0Z4^6v8`Q4^0^Q6v4]R8`6wQ+]%oR0a+]Q1e,bR5a1eWqOXr#`Q&h!XQ*u%]Q,[&dQ,^&fQ,_&gQ,a&iQ1`,]S1c,b1eR5`1bQ%_oQ&l!]Q&o!_Q&q!`Q&s!aQ'c!qQ+Q%iQ+d%uQ+j%zQ,Q&_Q,i&nW-Y']'e'f'iQ-a'aQ/h*^Q0U+RS1U,R,UQ1m,hQ1n,kQ1o,lQ2T-XW2V-[-]-`-bQ4T0VQ4a0dQ4e0kQ4y0{Q5T1WQ5_1aU5n2U2X2[Q5q2YQ6r4UQ6z4cQ6{4fQ7R4oQ7[4zQ7b5SS7q5o5sQ7s5rQ8a6xQ8i7]Q8n7cQ8u7rQ9T8bQ9Y8jQ9^8vR9f9ZQ%iwQ'U!fQ'a!qU+R%j%k%lQ,p&wU-T'V'W'XS-X']'gQ/_*XS0V+S+TQ1u,rS2R-U-VQ2Y-^Q3q/cQ4U0WQ5j1{Q5m2SQ5r2ZR6h3uS$ti;ZR*i%OU$}i%O;ZR/q*gQ$siS(f#r*}Q(j#tS)V$`$aQ){$uQ*T$xQ*l%TQ*m%UQ*q%YQ.T:XQ.U:ZQ.V:]Q.s)lQ.|)uQ.})wQ/O)xQ/W*PQ/]*VQ/o*eQ/p*fh/|*z.O0w2i4v5z7W7w8g8y9X9aQ0k+lQ0m+oQ2l:dQ2m:fQ2n:hQ2o.YS3T:S:TQ3h/XQ3i/YQ3m/[Q3}/wQ4f0lQ4h0oQ6O:lQ6P:nQ6T:YQ6U:[Q6V:^Q6[3aQ6c3kQ6g3sQ6m3yQ6o4QQ6q4SQ7|:iQ7}:eQ8O:gQ8W6bQ8[6kQ8{:mQ8|:oQ8}8SQ9b:rQ9k:sQ:{;ZQ;X;cQ;Y;dQ;e;gR;f;hloOXr!X#`%]&d&f&g&i,],b1b1eQ!dPS#bZ#kQ&n!^U'Y!l4m7UQ'p#OQ(s#xQ)d$jS,U&]&`Q,Y&aQ,h&mQ,m&uQ-P'SQ.a(qQ.q)eQ0P*{Q0g+gQ1],XQ2P-RQ2g.PQ3[.lQ3{/uQ4t0xQ5V1YQ5W1ZQ5Y1[Q5[1^Q5c1gQ5y2jQ6Y3XQ7Y4wQ7g5ZQ7i5]Q7j5^Q7y5}Q8h7ZR8p7h#UcOPXZr!X!^!l#`#k#x%]&]&`&a&d&f&g&i&m&u'S(q*{+g,X,],b-R.P/u0x1Y1Z1[1^1b1e1g2j4m4w5Z5]5^5}7U7Z7hQ#UWQ#aYQ%asQ%btQ%duS's#S'vQ'y#VQ(e#qQ(l#uQ(t#{Q(u#|Q(v#}Q(w$OQ(x$PQ(y$QQ(z$RQ({$SQ(|$TQ(}$UQ)O$VQ)Q$XQ)T$^Q)X$bW)c$j)e.l3XQ*x%cQ+^%pS,s&y1vQ-b'dS-g't-iQ-l'|Q-n(TQ.X(iQ._(mQ.c9lQ.e9oQ.f9pQ.g9qQ.v)pQ/x*sQ1q,nQ1t,qQ2U-ZQ2]-oQ2q.]Q2v9tQ2w9uQ2x9vQ2y9wQ2z9xQ2{9yQ2|9zQ2}9{Q3O9|Q3P9}Q3Q:OQ3R:PQ3S.dQ3V:UQ3W:_Q3]:QQ4O/zQ4V0XQ5i:`Q5o2WQ5t2^Q6Q2rQ6R:aQ6W:cQ6X:jQ7P4kQ7n5gQ7r5pQ7{:kQ8P:pQ8Q:qQ8v7tQ9U8cQ9]8tQ9n#OR;Q;^R#WWR&{!cY!qQ'Q,}0u4pS&w!c,uQ']!oS'g!r!uS'i!v4rS,r&x'PS-^'^'_Q-`'`Q1{,{R2Z-_R(k#tR(n#uQ!dQT,|'Q,}]!nQ!o'Q,}0u4pQ#l]R'Z9mT#gZ%ZS#fZ%ZU%y|},ZU(W#d#e#hS-r(X(YQ-v(ZQ0h+hQ2`-sU2a-t-u-wS5v2b2cR7u5w`#YW#S#V%v't'}+e-mt#cZ|}#d#e#h%Z(X(Y(Z+h-s-t-u-w2b2c5wQ1_,ZQ1r,oQ5e1jQ7m5fT:x&y+fT#]W%vS#[W%vS'u#S'}S'z#V+eS,t&y+fT-h't-mT'O!c%wQ$hfR)j$mT)_$h)`R3Z.kT*O$u*QR*W$xQ/}*zQ2e.OQ4s0wQ5{2iQ7X4vQ7x5zQ8e7WQ8w7wQ9W8gQ9`8yQ9e9XR9h9alpOXr!X#`%]&d&f&g&i,],b1b1eQ&^!TR,Q&ZV%z|},ZR0q+qR,P&XQ%szR+c%tR+X%nT&b!U&eT&c!U&eT1d,b1e",
            nodeNames: "⚠ ArithOp ArithOp LineComment BlockComment Script ExportDeclaration export Star as VariableName String Escape from ; default FunctionDeclaration async function VariableDefinition > TypeParamList TypeDefinition extends ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation InterpolationStart NullType null VoidType void TypeofType typeof MemberExpression . ?. PropertyName [ TemplateString Escape Interpolation super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewExpression new TypeArgList CompareOp < ) ( ArgList UnaryExpression delete LogicOp BitOp YieldExpression yield AwaitExpression await ParenthesizedExpression ClassExpression class ClassBody MethodDeclaration Decorator @ MemberExpression PrivatePropertyName CallExpression declare Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly accessor Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof satisfies in const CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXStartTag JSXSelfClosingTag JSXIdentifier JSXBuiltin JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast ArrowFunction TypeParamList SequenceExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature PropertyDefinition CallSignature TypePredicate is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement SingleExpression SingleClassItem",
            maxTerm: 364,
            context: a,
            nodeProps: [["group", -26, 6, 14, 16, 62, 199, 203, 206, 207, 209, 212, 215, 225, 227, 233, 235, 237, 239, 242, 248, 254, 256, 258, 260, 262, 264, 265, "Statement", -32, 10, 11, 25, 28, 29, 35, 45, 48, 49, 51, 56, 64, 72, 76, 78, 80, 81, 103, 104, 113, 114, 131, 134, 136, 137, 138, 139, 141, 142, 162, 163, 165, "Expression", -23, 24, 26, 30, 34, 36, 38, 166, 168, 170, 171, 173, 174, 175, 177, 178, 179, 181, 182, 183, 193, 195, 197, 198, "Type", -3, 84, 96, 102, "ClassItem"], ["openedBy", 31, "InterpolationStart", 50, "[", 54, "{", 69, "(", 143, "JSXStartTag", 155, "JSXStartTag JSXStartCloseTag"], ["closedBy", 33, "InterpolationEnd", 44, "]", 55, "}", 70, ")", 144, "JSXSelfCloseEndTag JSXEndTag", 160, "JSXEndTag"]],
            propSources: [c],
            skippedNodes: [0, 3, 4, 268],
            repeatNodeCount: 33,
            tokenData: "$>y(CSR!bOX%ZXY+gYZ-yZ[+g[]%Z]^.c^p%Zpq+gqr/mrs3cst:_tu>PuvBavwDxwxGgxyMvyz! Qz{!![{|!%O|}!&]}!O!%O!O!P!'g!P!Q!1w!Q!R#0t!R![#3T![!]#@T!]!^#Aa!^!_#Bk!_!`#GS!`!a#In!a!b#N{!b!c$$z!c!}>P!}#O$&U#O#P$'`#P#Q$,w#Q#R$.R#R#S>P#S#T$/`#T#o$0j#o#p$4z#p#q$5p#q#r$7Q#r#s$8^#s$f%Z$f$g+g$g#BY>P#BY#BZ$9h#BZ$IS>P$IS$I_$9h$I_$I|>P$I|$I}$<s$I}$JO$<s$JO$JT>P$JT$JU$9h$JU$KV>P$KV$KW$9h$KW&FU>P&FU&FV$9h&FV;'S>P;'S;=`BZ<%l?HT>P?HT?HU$9h?HUO>P(n%d_$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&j&hT$d&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c&j&zP;=`<%l&c'|'U]$d&j'z!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!b(SU'z!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!b(iP;=`<%l'}'|(oP;=`<%l&}'[(y]$d&j'wpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rp)wU'wpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)rp*^P;=`<%l)r'[*dP;=`<%l(r#S*nX'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g#S+^P;=`<%l*g(n+dP;=`<%l%Z(CS+rq$d&j'wp'z!b'm(;dOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p$f%Z$f$g+g$g#BY%Z#BY#BZ+g#BZ$IS%Z$IS$I_+g$I_$JT%Z$JT$JU+g$JU$KV%Z$KV$KW+g$KW&FU%Z&FU&FV+g&FV;'S%Z;'S;=`+a<%l?HT%Z?HT?HU+g?HUO%Z(CS.ST'x#S$d&j'n(;dO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c(CS.n_$d&j'wp'z!b'n(;dOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#`/x`$d&j!l$Ip'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S1V`#q$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`2X!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S2d_#q$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$2b3l_'v$(n$d&j'z!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k*r4r_$d&j'z!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k)`5vX$d&jOr5qrs6cs!^5q!^!_6y!_#o5q#o#p6y#p;'S5q;'S;=`7h<%lO5q)`6jT$_#t$d&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#t6|TOr6yrs7]s;'S6y;'S;=`7b<%lO6y#t7bO$_#t#t7eP;=`<%l6y)`7kP;=`<%l5q*r7w]$_#t$d&j'z!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}%W8uZ'z!bOY8pYZ6yZr8prs9hsw8pwx6yx#O8p#O#P6y#P;'S8p;'S;=`:R<%lO8p%W9oU$_#t'z!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}%W:UP;=`<%l8p*r:[P;=`<%l4k#%|:hg$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}st%Ztu<Puw%Zwx(rx!^%Z!^!_*g!_!c%Z!c!}<P!}#O%Z#O#P&c#P#R%Z#R#S<P#S#T%Z#T#o<P#o#p*g#p$g%Z$g;'S<P;'S;=`=y<%lO<P#%|<[i$d&j(a!L^'wp'z!bOY%ZYZ&cZr%Zrs&}st%Ztu<Puw%Zwx(rx!Q%Z!Q![<P![!^%Z!^!_*g!_!c%Z!c!}<P!}#O%Z#O#P&c#P#R%Z#R#S<P#S#T%Z#T#o<P#o#p*g#p$g%Z$g;'S<P;'S;=`=y<%lO<P#%|=|P;=`<%l<P(CS>`k$d&j'wp'z!b(U!LY't&;d$W#tOY%ZYZ&cZr%Zrs&}st%Ztu>Puw%Zwx(rx}%Z}!O@T!O!Q%Z!Q![>P![!^%Z!^!_*g!_!c%Z!c!}>P!}#O%Z#O#P&c#P#R%Z#R#S>P#S#T%Z#T#o>P#o#p*g#p$g%Z$g;'S>P;'S;=`BZ<%lO>P+d@`k$d&j'wp'z!b$W#tOY%ZYZ&cZr%Zrs&}st%Ztu@Tuw%Zwx(rx}%Z}!O@T!O!Q%Z!Q![@T![!^%Z!^!_*g!_!c%Z!c!}@T!}#O%Z#O#P&c#P#R%Z#R#S@T#S#T%Z#T#o@T#o#p*g#p$g%Z$g;'S@T;'S;=`BT<%lO@T+dBWP;=`<%l@T(CSB^P;=`<%l>P%#SBl`$d&j'wp'z!b#i$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#SCy_$d&j#{$Id'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%DfETa(j%<v$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sv%ZvwFYwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#SFe`$d&j#u$Id'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$2bGp_'y$)`$d&j'wpOYHoYZIuZrHorsIuswHowxKVx!^Ho!^!_LX!_#OHo#O#PIu#P#oHo#o#pLX#p;'SHo;'S;=`Mp<%lOHo*QHv_$d&j'wpOYHoYZIuZrHorsIuswHowxKVx!^Ho!^!_LX!_#OHo#O#PIu#P#oHo#o#pLX#p;'SHo;'S;=`Mp<%lOHo)`IzX$d&jOwIuwx6cx!^Iu!^!_Jg!_#oIu#o#pJg#p;'SIu;'S;=`KP<%lOIu#tJjTOwJgwx7]x;'SJg;'S;=`Jy<%lOJg#tJ|P;=`<%lJg)`KSP;=`<%lIu*QK`]$_#t$d&j'wpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r$fL^Z'wpOYLXYZJgZrLXrsJgswLXwxMPx#OLX#O#PJg#P;'SLX;'S;=`Mj<%lOLX$fMWU$_#t'wpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)r$fMmP;=`<%lLX*QMsP;=`<%lHo(*QNR_!h(!b$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'l! ]_!gM|$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+h!!ib$d&j'wp'z!b'u#)d#j$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rxz%Zz{!#q{!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S!#|`$d&j'wp'z!b#g$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&-O!%Z`$d&j'wp'z!bk&%`OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&C[!&h_!V&;l$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS!'rc$d&j'wp'z!by'<nOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!(}!P!Q%Z!Q![!+g![!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'d!)Wa$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!*]!P!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'d!*h_!UMt$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!+rg$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!+g![!^%Z!^!_*g!_!g%Z!g!h!-Z!h#O%Z#O#P&c#P#R%Z#R#S!+g#S#X%Z#X#Y!-Z#Y#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!-dg$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx{%Z{|!.{|}%Z}!O!.{!O!Q%Z!Q![!0a![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!0a#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!/Uc$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!0a![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!0a#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!0lc$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!0a![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!0a#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS!2Sf$d&j'wp'z!b#h$IdOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}xz!3hz{#$s{!P!3h!P!Q#&Y!Q!^!3h!^!_!Mh!_!`#-x!`!a#/_!a!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h(r!3sb$d&j'wp'z!b!RSOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}x!P!3h!P!Q!Kh!Q!^!3h!^!_!Mh!_!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h(Q!5U`$d&j'z!b!RSOY!4{YZ&cZw!4{wx!6Wx!P!4{!P!Q!=o!Q!^!4{!^!_!?g!_!}!4{!}#O!Bn#O#P!<w#P#o!4{#o#p!?g#p;'S!4{;'S;=`!Cw<%lO!4{&n!6_^$d&j!RSOY!6WYZ&cZ!P!6W!P!Q!7Z!Q!^!6W!^!_!8g!_!}!6W!}#O!;U#O#P!<w#P#o!6W#o#p!8g#p;'S!6W;'S;=`!=i<%lO!6W&n!7ba$d&j!RSO!^&c!_#Z&c#Z#[!7Z#[#]&c#]#^!7Z#^#a&c#a#b!7Z#b#g&c#g#h!7Z#h#i&c#i#j!7Z#j#m&c#m#n!7Z#n#o&c#p;'S&c;'S;=`&w<%lO&cS!8lX!RSOY!8gZ!P!8g!P!Q!9X!Q!}!8g!}#O!9p#O#P!:o#P;'S!8g;'S;=`!;O<%lO!8gS!9^U!RS#Z#[!9X#]#^!9X#a#b!9X#g#h!9X#i#j!9X#m#n!9XS!9sVOY!9pZ#O!9p#O#P!:Y#P#Q!8g#Q;'S!9p;'S;=`!:i<%lO!9pS!:]SOY!9pZ;'S!9p;'S;=`!:i<%lO!9pS!:lP;=`<%l!9pS!:rSOY!8gZ;'S!8g;'S;=`!;O<%lO!8gS!;RP;=`<%l!8g&n!;Z[$d&jOY!;UYZ&cZ!^!;U!^!_!9p!_#O!;U#O#P!<P#P#Q!6W#Q#o!;U#o#p!9p#p;'S!;U;'S;=`!<q<%lO!;U&n!<UX$d&jOY!;UYZ&cZ!^!;U!^!_!9p!_#o!;U#o#p!9p#p;'S!;U;'S;=`!<q<%lO!;U&n!<tP;=`<%l!;U&n!<|X$d&jOY!6WYZ&cZ!^!6W!^!_!8g!_#o!6W#o#p!8g#p;'S!6W;'S;=`!=i<%lO!6W&n!=lP;=`<%l!6W(Q!=xi$d&j'z!b!RSOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#Z&}#Z#[!=o#[#]&}#]#^!=o#^#a&}#a#b!=o#b#g&}#g#h!=o#h#i&}#i#j!=o#j#m&}#m#n!=o#n#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!f!?nZ'z!b!RSOY!?gZw!?gwx!8gx!P!?g!P!Q!@a!Q!}!?g!}#O!Ap#O#P!:o#P;'S!?g;'S;=`!Bh<%lO!?g!f!@hb'z!b!RSOY'}Zw'}x#O'}#P#Z'}#Z#[!@a#[#]'}#]#^!@a#^#a'}#a#b!@a#b#g'}#g#h!@a#h#i'}#i#j!@a#j#m'}#m#n!@a#n;'S'};'S;=`(f<%lO'}!f!AuX'z!bOY!ApZw!Apwx!9px#O!Ap#O#P!:Y#P#Q!?g#Q;'S!Ap;'S;=`!Bb<%lO!Ap!f!BeP;=`<%l!Ap!f!BkP;=`<%l!?g(Q!Bu^$d&j'z!bOY!BnYZ&cZw!Bnwx!;Ux!^!Bn!^!_!Ap!_#O!Bn#O#P!<P#P#Q!4{#Q#o!Bn#o#p!Ap#p;'S!Bn;'S;=`!Cq<%lO!Bn(Q!CtP;=`<%l!Bn(Q!CzP;=`<%l!4{'`!DW`$d&j'wp!RSOY!C}YZ&cZr!C}rs!6Ws!P!C}!P!Q!EY!Q!^!C}!^!_!GQ!_!}!C}!}#O!JX#O#P!<w#P#o!C}#o#p!GQ#p;'S!C};'S;=`!Kb<%lO!C}'`!Eci$d&j'wp!RSOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#Z(r#Z#[!EY#[#](r#]#^!EY#^#a(r#a#b!EY#b#g(r#g#h!EY#h#i(r#i#j!EY#j#m(r#m#n!EY#n#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rt!GXZ'wp!RSOY!GQZr!GQrs!8gs!P!GQ!P!Q!Gz!Q!}!GQ!}#O!IZ#O#P!:o#P;'S!GQ;'S;=`!JR<%lO!GQt!HRb'wp!RSOY)rZr)rs#O)r#P#Z)r#Z#[!Gz#[#])r#]#^!Gz#^#a)r#a#b!Gz#b#g)r#g#h!Gz#h#i)r#i#j!Gz#j#m)r#m#n!Gz#n;'S)r;'S;=`*Z<%lO)rt!I`X'wpOY!IZZr!IZrs!9ps#O!IZ#O#P!:Y#P#Q!GQ#Q;'S!IZ;'S;=`!I{<%lO!IZt!JOP;=`<%l!IZt!JUP;=`<%l!GQ'`!J`^$d&j'wpOY!JXYZ&cZr!JXrs!;Us!^!JX!^!_!IZ!_#O!JX#O#P!<P#P#Q!C}#Q#o!JX#o#p!IZ#p;'S!JX;'S;=`!K[<%lO!JX'`!K_P;=`<%l!JX'`!KeP;=`<%l!C}(r!Ksk$d&j'wp'z!b!RSOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#Z%Z#Z#[!Kh#[#]%Z#]#^!Kh#^#a%Z#a#b!Kh#b#g%Z#g#h!Kh#h#i%Z#i#j!Kh#j#m%Z#m#n!Kh#n#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#W!Mq]'wp'z!b!RSOY!MhZr!Mhrs!?gsw!Mhwx!GQx!P!Mh!P!Q!Nj!Q!}!Mh!}#O#!U#O#P!:o#P;'S!Mh;'S;=`##U<%lO!Mh#W!Nse'wp'z!b!RSOY*gZr*grs'}sw*gwx)rx#O*g#P#Z*g#Z#[!Nj#[#]*g#]#^!Nj#^#a*g#a#b!Nj#b#g*g#g#h!Nj#h#i*g#i#j!Nj#j#m*g#m#n!Nj#n;'S*g;'S;=`+Z<%lO*g#W#!]Z'wp'z!bOY#!UZr#!Urs!Apsw#!Uwx!IZx#O#!U#O#P!:Y#P#Q!Mh#Q;'S#!U;'S;=`##O<%lO#!U#W##RP;=`<%l#!U#W##XP;=`<%l!Mh(r##e`$d&j'wp'z!bOY##[YZ&cZr##[rs!Bnsw##[wx!JXx!^##[!^!_#!U!_#O##[#O#P!<P#P#Q!3h#Q#o##[#o#p#!U#p;'S##[;'S;=`#$g<%lO##[(r#$jP;=`<%l##[(r#$pP;=`<%l!3h(CS#%Qb$d&j'wp'z!b'o(;d!RSOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}x!P!3h!P!Q!Kh!Q!^!3h!^!_!Mh!_!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h(CS#&e_$d&j'wp'z!bR(;dOY#&YYZ&cZr#&Yrs#'dsw#&Ywx#*tx!^#&Y!^!_#,s!_#O#&Y#O#P#(f#P#o#&Y#o#p#,s#p;'S#&Y;'S;=`#-r<%lO#&Y(Bb#'m]$d&j'z!bR(;dOY#'dYZ&cZw#'dwx#(fx!^#'d!^!_#)w!_#O#'d#O#P#(f#P#o#'d#o#p#)w#p;'S#'d;'S;=`#*n<%lO#'d(AO#(mX$d&jR(;dOY#(fYZ&cZ!^#(f!^!_#)Y!_#o#(f#o#p#)Y#p;'S#(f;'S;=`#)q<%lO#(f(;d#)_SR(;dOY#)YZ;'S#)Y;'S;=`#)k<%lO#)Y(;d#)nP;=`<%l#)Y(AO#)tP;=`<%l#(f(<v#*OW'z!bR(;dOY#)wZw#)wwx#)Yx#O#)w#O#P#)Y#P;'S#)w;'S;=`#*h<%lO#)w(<v#*kP;=`<%l#)w(Bb#*qP;=`<%l#'d(Ap#*}]$d&j'wpR(;dOY#*tYZ&cZr#*trs#(fs!^#*t!^!_#+v!_#O#*t#O#P#(f#P#o#*t#o#p#+v#p;'S#*t;'S;=`#,m<%lO#*t(<U#+}W'wpR(;dOY#+vZr#+vrs#)Ys#O#+v#O#P#)Y#P;'S#+v;'S;=`#,g<%lO#+v(<U#,jP;=`<%l#+v(Ap#,pP;=`<%l#*t(=h#,|Y'wp'z!bR(;dOY#,sZr#,srs#)wsw#,swx#+vx#O#,s#O#P#)Y#P;'S#,s;'S;=`#-l<%lO#,s(=h#-oP;=`<%l#,s(CS#-uP;=`<%l#&Y%#W#.Vb$d&j#{$Id'wp'z!b!RSOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}x!P!3h!P!Q!Kh!Q!^!3h!^!_!Mh!_!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h+h#/lb$T#t$d&j'wp'z!b!RSOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}x!P!3h!P!Q!Kh!Q!^!3h!^!_!Mh!_!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h$/l#1Pp$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!+g!P!Q%Z!Q![#3T![!^%Z!^!_*g!_!g%Z!g!h!-Z!h#O%Z#O#P&c#P#R%Z#R#S#3T#S#U%Z#U#V#6_#V#X%Z#X#Y!-Z#Y#b%Z#b#c#5T#c#d#9g#d#l%Z#l#m#<i#m#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#3`k$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!+g!P!Q%Z!Q![#3T![!^%Z!^!_*g!_!g%Z!g!h!-Z!h#O%Z#O#P&c#P#R%Z#R#S#3T#S#X%Z#X#Y!-Z#Y#b%Z#b#c#5T#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#5`_$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#6hd$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#7v!R!S#7v!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#7v#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#8Rf$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#7v!R!S#7v!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#7v#S#b%Z#b#c#5T#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#9pc$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#:{!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#:{#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#;We$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#:{!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#:{#S#b%Z#b#c#5T#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#<rg$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#>Z![!^%Z!^!_*g!_!c%Z!c!i#>Z!i#O%Z#O#P&c#P#R%Z#R#S#>Z#S#T%Z#T#Z#>Z#Z#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#>fi$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#>Z![!^%Z!^!_*g!_!c%Z!c!i#>Z!i#O%Z#O#P&c#P#R%Z#R#S#>Z#S#T%Z#T#Z#>Z#Z#b%Z#b#c#5T#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%Gh#@b_!a$b$d&j#y%<f'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)[#Al_^l$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS#Bz^'}!*v!e'.r'wp'z!b$U)d(nSOY*gZr*grs'}sw*gwx)rx!P*g!P!Q#Cv!Q!^*g!^!_#Dl!_!`#F^!`#O*g#P;'S*g;'S;=`+Z<%lO*g(n#DPX$f&j'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#DuZ#k$Id'wp'z!bOY*gZr*grs'}sw*gwx)rx!_*g!_!`#Eh!`#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#EqX#{$Id'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#FgX#l$Id'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g%Gh#G_a#X%?x$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`!a#Hd!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#W#Ho_#d$Ih$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%Gh#I}adBf#l$Id$a#|$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`#KS!`!a#L^!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S#K__#l$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S#Lia#k$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`!a#Mn!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S#My`#k$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+h$ Wc(b$Ip$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P$!c!P!^%Z!^!_*g!_!a%Z!a!b$#m!b#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+`$!n_z'#p$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$#x`$d&j#v$Id'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#&^$%V_!x!Ln$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(@^$&a_|(8n$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(n$'eZ$d&jO!^$(W!^!_$(n!_#i$(W#i#j$(s#j#l$(W#l#m$*f#m#o$(W#o#p$(n#p;'S$(W;'S;=`$,q<%lO$(W(n$(_T[#S$d&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#S$(sO[#S(n$(x[$d&jO!Q&c!Q![$)n![!^&c!_!c&c!c!i$)n!i#T&c#T#Z$)n#Z#o&c#o#p$,U#p;'S&c;'S;=`&w<%lO&c(n$)sZ$d&jO!Q&c!Q![$*f![!^&c!_!c&c!c!i$*f!i#T&c#T#Z$*f#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$*kZ$d&jO!Q&c!Q![$+^![!^&c!_!c&c!c!i$+^!i#T&c#T#Z$+^#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$+cZ$d&jO!Q&c!Q![$(W![!^&c!_!c&c!c!i$(W!i#T&c#T#Z$(W#Z#o&c#p;'S&c;'S;=`&w<%lO&c#S$,XR!Q![$,b!c!i$,b#T#Z$,b#S$,eS!Q![$,b!c!i$,b#T#Z$,b#q#r$(n(n$,tP;=`<%l$(W!'l$-S_!SM|$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$.^`#s$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&,v$/k_$d&j'wp'z!b(R&%WOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS$0yk$d&j'wp'z!b(U!LY't&;d$Y#tOY%ZYZ&cZr%Zrs&}st%Ztu$0juw%Zwx(rx}%Z}!O$2n!O!Q%Z!Q![$0j![!^%Z!^!_*g!_!c%Z!c!}$0j!}#O%Z#O#P&c#P#R%Z#R#S$0j#S#T%Z#T#o$0j#o#p*g#p$g%Z$g;'S$0j;'S;=`$4t<%lO$0j+d$2yk$d&j'wp'z!b$Y#tOY%ZYZ&cZr%Zrs&}st%Ztu$2nuw%Zwx(rx}%Z}!O$2n!O!Q%Z!Q![$2n![!^%Z!^!_*g!_!c%Z!c!}$2n!}#O%Z#O#P&c#P#R%Z#R#S$2n#S#T%Z#T#o$2n#o#p*g#p$g%Z$g;'S$2n;'S;=`$4n<%lO$2n+d$4qP;=`<%l$2n(CS$4wP;=`<%l$0j!5p$5TX!X!3l'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g%Df$5{a(i%<v$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p#q$#m#q;'S%Z;'S;=`+a<%lO%Z%#`$7__!W$I`o`$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(r$8i_!mS$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS$9y|$d&j'wp'z!b'm(;d(U!LY't&;d$W#tOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}st%Ztu>Puw%Zwx(rx}%Z}!O@T!O!Q%Z!Q![>P![!^%Z!^!_*g!_!c%Z!c!}>P!}#O%Z#O#P&c#P#R%Z#R#S>P#S#T%Z#T#o>P#o#p*g#p$f%Z$f$g+g$g#BY>P#BY#BZ$9h#BZ$IS>P$IS$I_$9h$I_$JT>P$JT$JU$9h$JU$KV>P$KV$KW$9h$KW&FU>P&FU&FV$9h&FV;'S>P;'S;=`BZ<%l?HT>P?HT?HU$9h?HUO>P(CS$=Uk$d&j'wp'z!b'n(;d(U!LY't&;d$W#tOY%ZYZ&cZr%Zrs&}st%Ztu>Puw%Zwx(rx}%Z}!O@T!O!Q%Z!Q![>P![!^%Z!^!_*g!_!c%Z!c!}>P!}#O%Z#O#P&c#P#R%Z#R#S>P#S#T%Z#T#o>P#o#p*g#p$g%Z$g;'S>P;'S;=`BZ<%lO>P",
            tokenizers: [s, l, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, o, new n.RA("$S~RRtu[#O#Pg#S#T#|~_P#o#pb~gOq~~jVO#i!P#i#j!U#j#l!P#l#m!q#m;'S!P;'S;=`#v<%lO!P~!UO!O~~!XS!Q![!e!c!i!e#T#Z!e#o#p#Z~!hR!Q![!q!c!i!q#T#Z!q~!tR!Q![!}!c!i!}#T#Z!}~#QR!Q![!P!c!i!P#T#Z!P~#^R!Q![#g!c!i#g#T#Z#g~#jS!Q![#g!c!i#g#T#Z#g#q#r!P~#yP;=`<%l!P~$RO(T~~",141,326), new n.RA("j~RQYZXz{^~^O'q~~aP!P!Qd~iO'r~~",25,308)],
            topRules: {
                Script: [0, 5],
                SingleExpression: [1, 266],
                SingleClassItem: [2, 267]
            },
            dialects: {
                jsx: 12686,
                ts: 12688
            },
            dynamicPrecedences: {
                76: 1,
                78: 1,
                163: 1,
                191: 1
            },
            specialized: [{
                term: 312,
                get: e=>u[e] || -1
            }, {
                term: 328,
                get: e=>p[e] || -1
            }, {
                term: 67,
                get: e=>d[e] || -1
            }],
            tokenPrec: 12712
        });
        var h = O(168)
          , m = O(4091)
          , Q = O(6470)
          , $ = O(5338)
          , g = O(770);
        let P = [(0,
        $.Gn)("function ${name}(${params}) {\n	${}\n}", {
            label: "function",
            detail: "definition",
            type: "keyword"
        }), (0,
        $.Gn)("for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\n	${}\n}", {
            label: "for",
            detail: "loop",
            type: "keyword"
        }), (0,
        $.Gn)("for (let ${name} of ${collection}) {\n	${}\n}", {
            label: "for",
            detail: "of loop",
            type: "keyword"
        }), (0,
        $.Gn)("do {\n	${}\n} while (${})", {
            label: "do",
            detail: "loop",
            type: "keyword"
        }), (0,
        $.Gn)("while (${}) {\n	${}\n}", {
            label: "while",
            detail: "loop",
            type: "keyword"
        }), (0,
        $.Gn)("try {\n	${}\n} catch (${error}) {\n	${}\n}", {
            label: "try",
            detail: "/ catch block",
            type: "keyword"
        }), (0,
        $.Gn)("if (${}) {\n	${}\n}", {
            label: "if",
            detail: "block",
            type: "keyword"
        }), (0,
        $.Gn)("if (${}) {\n	${}\n} else {\n	${}\n}", {
            label: "if",
            detail: "/ else block",
            type: "keyword"
        }), (0,
        $.Gn)("class ${name} {\n	constructor(${params}) {\n		${}\n	}\n}", {
            label: "class",
            detail: "definition",
            type: "keyword"
        }), (0,
        $.Gn)('import {${names}} from "${module}"\n${}', {
            label: "import",
            detail: "named",
            type: "keyword"
        }), (0,
        $.Gn)('import ${name} from "${module}"\n${}', {
            label: "import",
            detail: "default",
            type: "keyword"
        })]
          , S = new g.hr
          , b = new Set(["Script", "Block", "FunctionExpression", "FunctionDeclaration", "ArrowFunction", "MethodDeclaration", "ForStatement"]);
        function y(e) {
            return (t,O)=>{
                let n = t.node.getChild("VariableDefinition");
                return n && O(n, e),
                !0
            }
        }
        let x = ["FunctionDeclaration"]
          , X = {
            FunctionDeclaration: y("function"),
            ClassDeclaration: y("class"),
            ClassExpression: ()=>!0,
            EnumDeclaration: y("constant"),
            TypeAliasDeclaration: y("type"),
            NamespaceDeclaration: y("namespace"),
            VariableDefinition(e, t) {
                e.matchContext(x) || t(e, "variable")
            },
            TypeDefinition(e, t) {
                t(e, "type")
            },
            __proto__: null
        }
          , v = /^[\w$\xa1-\uffff][\w$\d\xa1-\uffff]*$/
          , k = ["TemplateString", "String", "RegExp", "LineComment", "BlockComment", "VariableDefinition", "TypeDefinition", "Label", "PropertyDefinition", "PropertyName", "PrivatePropertyDefinition", "PrivatePropertyName"];
        function w(e) {
            let t = (0,
            h.qz)(e.state).resolveInner(e.pos, -1);
            if (k.indexOf(t.name) > -1)
                return null;
            let O = "VariableName" == t.name || t.to - t.from < 20 && v.test(e.state.sliceDoc(t.from, t.to));
            if (!O && !e.explicit)
                return null;
            let n = [];
            for (let O = t; O; O = O.parent)
                b.has(O.name) && (n = n.concat(function e(t, O) {
                    let n = S.get(O);
                    if (n)
                        return n;
                    let r = []
                      , i = !0;
                    function a(e, O) {
                        let n = t.sliceString(e.from, e.to);
                        r.push({
                            label: n,
                            type: O
                        })
                    }
                    return O.cursor(g.vj.IncludeAnonymous).iterate(O=>{
                        if (i)
                            i = !1;
                        else if (O.name) {
                            let e = X[O.name];
                            if (e && e(O, a) || b.has(O.name))
                                return !1
                        } else if (O.to - O.from > 8192) {
                            for (let n of e(t, O.node))
                                r.push(n);
                            return !1
                        }
                    }
                    ),
                    S.set(O, r),
                    r
                }(e.state.doc, O)));
            return {
                options: n,
                from: O ? t.from : e.pos,
                validFor: v
            }
        }
        function T(e, t, O) {
            var n;
            let r = [];
            for (; ; ) {
                let i = t.firstChild, a;
                if ((null == i ? void 0 : i.name) == "VariableName")
                    return r.push(e(i)),
                    {
                        path: r.reverse(),
                        name: O
                    };
                if ((null == i ? void 0 : i.name) != "MemberExpression" || (null === (n = a = i.lastChild) || void 0 === n ? void 0 : n.name) != "PropertyName")
                    return null;
                r.push(e(a)),
                t = i
            }
        }
        function _(e) {
            let t = t=>e.state.doc.sliceString(t.from, t.to)
              , O = (0,
            h.qz)(e.state).resolveInner(e.pos, -1);
            return "PropertyName" == O.name ? T(t, O.parent, t(O)) : k.indexOf(O.name) > -1 ? null : "VariableName" == O.name || O.to - O.from < 20 && v.test(t(O)) ? {
                path: [],
                name: t(O)
            } : ("." == O.name || "?." == O.name) && "MemberExpression" == O.parent.name ? T(t, O.parent, "") : "MemberExpression" == O.name ? T(t, O, "") : e.explicit ? {
                path: [],
                name: ""
            } : null
        }
        function W(e) {
            let t = new Map;
            return O=>{
                let n = _(O);
                if (!n)
                    return null;
                let r = e;
                for (let e of n.path)
                    if (!(r = r[e]))
                        return null;
                let i = t.get(r);
                return i || t.set(r, i = function(e, t) {
                    let O = []
                      , n = new Set;
                    for (let r = 0; ; r++) {
                        for (let i of (Object.getOwnPropertyNames || Object.keys)(e)) {
                            let a;
                            if (!n.has(i)) {
                                n.add(i);
                                try {
                                    a = e[i]
                                } catch (e) {
                                    continue
                                }
                                O.push({
                                    label: i,
                                    type: "function" == typeof a ? /^[A-Z]/.test(i) ? "class" : t ? "function" : "method" : t ? "variable" : "property",
                                    boost: -r
                                })
                            }
                        }
                        let i = Object.getPrototypeOf(e);
                        if (!i)
                            return O;
                        e = i
                    }
                }(r, !n.path.length)),
                {
                    from: O.pos - n.name.length,
                    options: i,
                    validFor: v
                }
            }
        }
        let Z = h.qp.define({
            name: "javascript",
            parser: f.configure({
                props: [h.uj.add({
                    IfStatement: (0,
                    h.tC)({
                        except: /^\s*({|else\b)/
                    }),
                    TryStatement: (0,
                    h.tC)({
                        except: /^\s*({|catch\b|finally\b)/
                    }),
                    LabeledStatement: h.ze,
                    SwitchBody: e=>{
                        let t = e.textAfter
                          , O = /^\s*\}/.test(t)
                          , n = /^\s*(case|default)\b/.test(t);
                        return e.baseIndent + (O ? 0 : n ? 1 : 2) * e.unit
                    }
                    ,
                    Block: (0,
                    h.vw)({
                        closing: "}"
                    }),
                    ArrowFunction: e=>e.baseIndent + e.unit,
                    "TemplateString BlockComment": ()=>null,
                    "Statement Property": (0,
                    h.tC)({
                        except: /^{/
                    }),
                    JSXElement(e) {
                        let t = /^\s*<\//.test(e.textAfter);
                        return e.lineIndent(e.node.from) + (t ? 0 : e.unit)
                    },
                    JSXEscape(e) {
                        let t = /\s*\}/.test(e.textAfter);
                        return e.lineIndent(e.node.from) + (t ? 0 : e.unit)
                    },
                    "JSXOpenTag JSXSelfClosingTag": e=>e.column(e.node.from) + e.unit
                }), h.x0.add({
                    "Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression ObjectType": h.Dv,
                    BlockComment: e=>({
                        from: e.from + 2,
                        to: e.to - 2
                    })
                })]
            }),
            languageData: {
                closeBrackets: {
                    brackets: ["(", "[", "{", "'", '"', "`"]
                },
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                },
                indentOnInput: /^\s*(?:case |default:|\{|\}|<\/)$/,
                wordChars: "$"
            }
        })
          , z = {
            test: e=>/^JSX/.test(e.name),
            facet: (0,
            h.kU)({
                commentTokens: {
                    block: {
                        open: "{/*",
                        close: "*/}"
                    }
                }
            })
        }
          , q = Z.configure({
            dialect: "ts"
        }, "typescript")
          , Y = Z.configure({
            dialect: "jsx",
            props: [h.KC.add(e=>e.isTop ? [z] : void 0)]
        })
          , R = Z.configure({
            dialect: "jsx ts",
            props: [h.KC.add(e=>e.isTop ? [z] : void 0)]
        }, "typescript")
          , U = "break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield".split(" ").map(e=>({
            label: e,
            type: "keyword"
        }));
        function V(e={}) {
            let t = e.jsx ? e.typescript ? R : Y : e.typescript ? q : Z;
            return new h.ri(t,[Z.data.of({
                autocomplete: (0,
                $.eC)(k, (0,
                $.Mb)(P.concat(U)))
            }), Z.data.of({
                autocomplete: w
            }), e.jsx ? G : []])
        }
        function E(e, t, O=e.length) {
            for (let n = null == t ? void 0 : t.firstChild; n; n = n.nextSibling)
                if ("JSXIdentifier" == n.name || "JSXBuiltin" == n.name || "JSXNamespacedName" == n.name || "JSXMemberExpression" == n.name)
                    return e.sliceString(n.from, Math.min(n.to, O));
            return ""
        }
        let j = "object" == typeof navigator && /Android\b/.test(navigator.userAgent)
          , G = Q.tk.inputHandler.of((e,t,O,n)=>{
            if ((j ? e.composing : e.compositionStarted) || e.state.readOnly || t != O || ">" != n && "/" != n || !Z.isActiveAt(e.state, t, -1))
                return !1;
            let {state: r} = e
              , i = r.changeByRange(e=>{
                var t, O;
                let {head: i} = e, a = (0,
                h.qz)(r).resolveInner(i, -1), o;
                if ("JSXStartTag" == a.name && (a = a.parent),
                "JSXAttributeValue" == a.name && a.to > i)
                    ;
                else if (">" == n && "JSXFragmentTag" == a.name)
                    return {
                        range: m.jT.cursor(i + 1),
                        changes: {
                            from: i,
                            insert: "></>"
                        }
                    };
                else if ("/" == n && "JSXFragmentTag" == a.name) {
                    let e = a.parent
                      , O = null == e ? void 0 : e.parent;
                    if (e.from == i - 1 && (null === (t = O.lastChild) || void 0 === t ? void 0 : t.name) != "JSXEndTag" && (o = E(r.doc, null == O ? void 0 : O.firstChild, i))) {
                        let e = `/${o}>`;
                        return {
                            range: m.jT.cursor(i + e.length),
                            changes: {
                                from: i,
                                insert: e
                            }
                        }
                    }
                } else if (">" == n) {
                    let e = function(e) {
                        for (; ; ) {
                            if ("JSXOpenTag" == e.name || "JSXSelfClosingTag" == e.name || "JSXFragmentTag" == e.name)
                                return e;
                            if ("JSXEscape" == e.name || !e.parent)
                                return null;
                            e = e.parent
                        }
                    }(a);
                    if (e && !((O = e.lastChild) && ("JSXEndTag" == O.name || "JSXSelfCloseEndTag" == O.name)) && "</" != r.sliceDoc(i, i + 2) && (o = E(r.doc, e, i)))
                        return {
                            range: m.jT.cursor(i + 1),
                            changes: {
                                from: i,
                                insert: `></${o}>`
                            }
                        }
                }
                return {
                    range: e
                }
            }
            );
            return !i.changes.empty && (e.dispatch(i, {
                userEvent: "input.type",
                scrollIntoView: !0
            }),
            !0)
        }
        );
        function C(e, t) {
            return t || (t = {
                parserOptions: {
                    ecmaVersion: 2019,
                    sourceType: "module"
                },
                env: {
                    browser: !0,
                    node: !0,
                    es6: !0,
                    es2015: !0,
                    es2017: !0,
                    es2020: !0
                },
                rules: {}
            },
            e.getRules().forEach((e,O)=>{
                e.meta.docs.recommended && (t.rules[O] = 2)
            }
            )),
            O=>{
                let {state: n} = O
                  , r = [];
                for (let {from: O, to: i} of Z.findRegions(n)) {
                    let a = n.doc.lineAt(O)
                      , o = {
                        line: a.number - 1,
                        col: O - a.from,
                        pos: O
                    };
                    for (let a of e.verify(n.sliceDoc(O, i), t))
                        r.push(function(e, t, O) {
                            let n = A(e.line, e.column, t, O)
                              , r = {
                                from: n,
                                to: null != e.endLine && 1 != e.endColumn ? A(e.endLine, e.endColumn, t, O) : n,
                                message: e.message,
                                source: e.ruleId ? "eslint:" + e.ruleId : "eslint",
                                severity: 1 == e.severity ? "warning" : "error"
                            };
                            if (e.fix) {
                                let {range: t, text: i} = e.fix
                                  , a = t[0] + O.pos - n
                                  , o = t[1] + O.pos - n;
                                r.actions = [{
                                    name: "fix",
                                    apply(e, t) {
                                        e.dispatch({
                                            changes: {
                                                from: t + a,
                                                to: t + o,
                                                insert: i
                                            },
                                            scrollIntoView: !0
                                        })
                                    }
                                }]
                            }
                            return r
                        }(a, n.doc, o))
                }
                return r
            }
        }
        function A(e, t, O, n) {
            return O.line(e + n.line).from + t + (1 == e ? n.col - 1 : -1)
        }
    },
    3068: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            json: function() {
                return c
            },
            jsonLanguage: function() {
                return l
            },
            jsonParseLinter: function() {
                return s
            }
        });
        var n = O(2679)
          , r = O(5306);
        let i = (0,
        r.Gv)({
            String: r.pJ.string,
            Number: r.pJ.number,
            "True False": r.pJ.bool,
            PropertyName: r.pJ.propertyName,
            Null: r.pJ.null,
            ",": r.pJ.separator,
            "[ ]": r.pJ.squareBracket,
            "{ }": r.pJ.brace
        })
          , a = n.WQ.deserialize({
            version: 14,
            states: "$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j",
            stateData: "#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O",
            goto: "!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R",
            nodeNames: "⚠ JsonText True False Null Number String } { Object Property PropertyName ] [ Array",
            maxTerm: 25,
            nodeProps: [["openedBy", 7, "{", 12, "["], ["closedBy", 8, "}", 13, "]"]],
            propSources: [i],
            skippedNodes: [0],
            repeatNodeCount: 2,
            tokenData: "(p~RaXY!WYZ!W]^!Wpq!Wrs!]|}$i}!O$n!Q!R$w!R![&V![!]&h!}#O&m#P#Q&r#Y#Z&w#b#c'f#h#i'}#o#p(f#q#r(k~!]Oc~~!`Upq!]qr!]rs!rs#O!]#O#P!w#P~!]~!wOe~~!zXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#g~#jR!Q![#s!c!i#s#T#Z#s~#vR!Q![$P!c!i$P#T#Z$P~$SR!Q![$]!c!i$]#T#Z$]~$`R!Q![!]!c!i!]#T#Z!]~$nOh~~$qQ!Q!R$w!R![&V~$|RT~!O!P%V!g!h%k#X#Y%k~%YP!Q![%]~%bRT~!Q![%]!g!h%k#X#Y%k~%nR{|%w}!O%w!Q![%}~%zP!Q![%}~&SPT~!Q![%}~&[ST~!O!P%V!Q![&V!g!h%k#X#Y%k~&mOg~~&rO]~~&wO[~~&zP#T#U&}~'QP#`#a'T~'WP#g#h'Z~'^P#X#Y'a~'fOR~~'iP#i#j'l~'oP#`#a'r~'uP#`#a'x~'}OS~~(QP#f#g(T~(WP#i#j(Z~(^P#X#Y(a~(fOQ~~(kOW~~(pOV~",
            tokenizers: [0],
            topRules: {
                JsonText: [0, 1]
            },
            tokenPrec: 0
        });
        var o = O(168);
        let s = ()=>e=>{
            try {
                JSON.parse(e.state.doc.toString())
            } catch (r) {
                var t;
                let O;
                if (!(r instanceof SyntaxError))
                    throw r;
                let n = (t = e.state.doc,
                (O = r.message.match(/at position (\d+)/)) ? Math.min(+O[1], t.length) : (O = r.message.match(/at line (\d+) column (\d+)/)) ? Math.min(t.line(+O[1]).from + +O[2] - 1, t.length) : 0);
                return [{
                    from: n,
                    message: r.message,
                    severity: "error",
                    to: n
                }]
            }
            return []
        }
          , l = o.qp.define({
            name: "json",
            parser: a.configure({
                props: [o.uj.add({
                    Object: (0,
                    o.tC)({
                        except: /^\s*\}/
                    }),
                    Array: (0,
                    o.tC)({
                        except: /^\s*\]/
                    })
                }), o.x0.add({
                    "Object Array": o.Dv
                })]
            }),
            languageData: {
                closeBrackets: {
                    brackets: ["[", "{", '"']
                },
                indentOnInput: /^\s*[\}\]]$/
            }
        });
        function c() {
            return new o.ri(l)
        }
    },
    8195: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            commonmarkLanguage: function() {
                return eZ
            },
            deleteMarkupBackward: function() {
                return eG
            },
            insertNewlineContinueMarkup: function() {
                return eE
            },
            markdown: function() {
                return eI
            },
            markdownKeymap: function() {
                return eC
            },
            markdownLanguage: function() {
                return eq
            }
        });
        var n, r, i = O(4091), a = O(6470), o = O(168), s = O(770), l = O(5306);
        class c {
            constructor(e, t, O, n, r, i, a) {
                this.type = e,
                this.value = t,
                this.from = O,
                this.hash = n,
                this.end = r,
                this.children = i,
                this.positions = a,
                this.hashProp = [[s.md.contextHash, n]]
            }
            static create(e, t, O, n, r) {
                return new c(e,t,O,n + (n << 8) + e + (t << 4) | 0,r,[],[])
            }
            addChild(e, t) {
                e.prop(s.md.contextHash) != this.hash && (e = new s.mp(e.type,e.children,e.positions,e.length,this.hashProp)),
                this.children.push(e),
                this.positions.push(t)
            }
            toTree(e, t=this.end) {
                let O = this.children.length - 1;
                return O >= 0 && (t = Math.max(t, this.positions[O] + this.children[O].length + this.from)),
                new s.mp(e.types[this.type],this.children,this.positions,t - this.from).balance({
                    makeTree: (e,t,O)=>new s.mp(s.Jq.none,e,t,O,this.hashProp)
                })
            }
        }
        (n = r || (r = {}))[n.Document = 1] = "Document",
        n[n.CodeBlock = 2] = "CodeBlock",
        n[n.FencedCode = 3] = "FencedCode",
        n[n.Blockquote = 4] = "Blockquote",
        n[n.HorizontalRule = 5] = "HorizontalRule",
        n[n.BulletList = 6] = "BulletList",
        n[n.OrderedList = 7] = "OrderedList",
        n[n.ListItem = 8] = "ListItem",
        n[n.ATXHeading1 = 9] = "ATXHeading1",
        n[n.ATXHeading2 = 10] = "ATXHeading2",
        n[n.ATXHeading3 = 11] = "ATXHeading3",
        n[n.ATXHeading4 = 12] = "ATXHeading4",
        n[n.ATXHeading5 = 13] = "ATXHeading5",
        n[n.ATXHeading6 = 14] = "ATXHeading6",
        n[n.SetextHeading1 = 15] = "SetextHeading1",
        n[n.SetextHeading2 = 16] = "SetextHeading2",
        n[n.HTMLBlock = 17] = "HTMLBlock",
        n[n.LinkReference = 18] = "LinkReference",
        n[n.Paragraph = 19] = "Paragraph",
        n[n.CommentBlock = 20] = "CommentBlock",
        n[n.ProcessingInstructionBlock = 21] = "ProcessingInstructionBlock",
        n[n.Escape = 22] = "Escape",
        n[n.Entity = 23] = "Entity",
        n[n.HardBreak = 24] = "HardBreak",
        n[n.Emphasis = 25] = "Emphasis",
        n[n.StrongEmphasis = 26] = "StrongEmphasis",
        n[n.Link = 27] = "Link",
        n[n.Image = 28] = "Image",
        n[n.InlineCode = 29] = "InlineCode",
        n[n.HTMLTag = 30] = "HTMLTag",
        n[n.Comment = 31] = "Comment",
        n[n.ProcessingInstruction = 32] = "ProcessingInstruction",
        n[n.URL = 33] = "URL",
        n[n.HeaderMark = 34] = "HeaderMark",
        n[n.QuoteMark = 35] = "QuoteMark",
        n[n.ListMark = 36] = "ListMark",
        n[n.LinkMark = 37] = "LinkMark",
        n[n.EmphasisMark = 38] = "EmphasisMark",
        n[n.CodeMark = 39] = "CodeMark",
        n[n.CodeText = 40] = "CodeText",
        n[n.CodeInfo = 41] = "CodeInfo",
        n[n.LinkTitle = 42] = "LinkTitle",
        n[n.LinkLabel = 43] = "LinkLabel";
        class u {
            constructor(e, t) {
                this.start = e,
                this.content = t,
                this.marks = [],
                this.parsers = []
            }
        }
        class p {
            constructor() {
                this.text = "",
                this.baseIndent = 0,
                this.basePos = 0,
                this.depth = 0,
                this.markers = [],
                this.pos = 0,
                this.indent = 0,
                this.next = -1
            }
            forward() {
                this.basePos > this.pos && this.forwardInner()
            }
            forwardInner() {
                let e = this.skipSpace(this.basePos);
                this.indent = this.countIndent(e, this.pos, this.indent),
                this.pos = e,
                this.next = e == this.text.length ? -1 : this.text.charCodeAt(e)
            }
            skipSpace(e) {
                return m(this.text, e)
            }
            reset(e) {
                for (this.text = e,
                this.baseIndent = this.basePos = this.pos = this.indent = 0,
                this.forwardInner(),
                this.depth = 1; this.markers.length; )
                    this.markers.pop()
            }
            moveBase(e) {
                this.basePos = e,
                this.baseIndent = this.countIndent(e, this.pos, this.indent)
            }
            moveBaseColumn(e) {
                this.baseIndent = e,
                this.basePos = this.findColumn(e)
            }
            addMarker(e) {
                this.markers.push(e)
            }
            countIndent(e, t=0, O=0) {
                for (let n = t; n < e; n++)
                    O += 9 == this.text.charCodeAt(n) ? 4 - O % 4 : 1;
                return O
            }
            findColumn(e) {
                let t = 0;
                for (let O = 0; t < this.text.length && O < e; t++)
                    O += 9 == this.text.charCodeAt(t) ? 4 - O % 4 : 1;
                return t
            }
            scrub() {
                if (!this.baseIndent)
                    return this.text;
                let e = "";
                for (let t = 0; t < this.basePos; t++)
                    e += " ";
                return e + this.text.slice(this.basePos)
            }
        }
        function d(e, t, O) {
            if (O.pos == O.text.length || e != t.block && O.indent >= t.stack[O.depth + 1].value + O.baseIndent)
                return !0;
            if (O.indent >= O.baseIndent + 4)
                return !1;
            let n = (e.type == r.OrderedList ? y : b)(O, t, !1);
            return n > 0 && (e.type != r.BulletList || 0 > P(O, t, !1)) && O.text.charCodeAt(O.pos + n - 1) == e.value
        }
        let f = {
            [r.Blockquote]: (e,t,O)=>62 == O.next && (O.markers.push(L(r.QuoteMark, t.lineStart + O.pos, t.lineStart + O.pos + 1)),
            O.moveBase(O.pos + (h(O.text.charCodeAt(O.pos + 1)) ? 2 : 1)),
            e.end = t.lineStart + O.text.length,
            !0),
            [r.ListItem]: (e,t,O)=>(!(O.indent < O.baseIndent + e.value) || !(O.next > -1)) && (O.moveBaseColumn(O.baseIndent + e.value),
            !0),
            [r.OrderedList]: d,
            [r.BulletList]: d,
            [r.Document]: ()=>!0
        };
        function h(e) {
            return 32 == e || 9 == e || 10 == e || 13 == e
        }
        function m(e, t=0) {
            for (; t < e.length && h(e.charCodeAt(t)); )
                t++;
            return t
        }
        function Q(e, t, O) {
            for (; t > O && h(e.charCodeAt(t - 1)); )
                t--;
            return t
        }
        function $(e) {
            if (96 != e.next && 126 != e.next)
                return -1;
            let t = e.pos + 1;
            for (; t < e.text.length && e.text.charCodeAt(t) == e.next; )
                t++;
            if (t < e.pos + 3)
                return -1;
            if (96 == e.next) {
                for (let O = t; O < e.text.length; O++)
                    if (96 == e.text.charCodeAt(O))
                        return -1
            }
            return t
        }
        function g(e) {
            return 62 != e.next ? -1 : 32 == e.text.charCodeAt(e.pos + 1) ? 2 : 1
        }
        function P(e, t, O) {
            if (42 != e.next && 45 != e.next && 95 != e.next)
                return -1;
            let n = 1;
            for (let t = e.pos + 1; t < e.text.length; t++) {
                let O = e.text.charCodeAt(t);
                if (O == e.next)
                    n++;
                else if (!h(O))
                    return -1
            }
            return O && 45 == e.next && X(e) > -1 && e.depth == t.stack.length ? -1 : n < 3 ? -1 : 1
        }
        function S(e, t) {
            for (let O = e.stack.length - 1; O >= 0; O--)
                if (e.stack[O].type == t)
                    return !0;
            return !1
        }
        function b(e, t, O) {
            return (45 == e.next || 43 == e.next || 42 == e.next) && (e.pos == e.text.length - 1 || h(e.text.charCodeAt(e.pos + 1))) && (!O || S(t, r.BulletList) || e.skipSpace(e.pos + 2) < e.text.length) ? 1 : -1
        }
        function y(e, t, O) {
            let n = e.pos
              , i = e.next;
            for (; i >= 48 && i <= 57; ) {
                if (++n == e.text.length)
                    return -1;
                i = e.text.charCodeAt(n)
            }
            return n == e.pos || n > e.pos + 9 || 46 != i && 41 != i || n < e.text.length - 1 && !h(e.text.charCodeAt(n + 1)) || O && !S(t, r.OrderedList) && (e.skipSpace(n + 1) == e.text.length || n > e.pos + 1 || 49 != e.next) ? -1 : n + 1 - e.pos
        }
        function x(e) {
            if (35 != e.next)
                return -1;
            let t = e.pos + 1;
            for (; t < e.text.length && 35 == e.text.charCodeAt(t); )
                t++;
            if (t < e.text.length && 32 != e.text.charCodeAt(t))
                return -1;
            let O = t - e.pos;
            return O > 6 ? -1 : O
        }
        function X(e) {
            if (45 != e.next && 61 != e.next || e.indent >= e.baseIndent + 4)
                return -1;
            let t = e.pos + 1;
            for (; t < e.text.length && e.text.charCodeAt(t) == e.next; )
                t++;
            let O = t;
            for (; t < e.text.length && h(e.text.charCodeAt(t)); )
                t++;
            return t == e.text.length ? O : -1
        }
        let v = /^[ \t]*$/
          , k = /-->/
          , w = /\?>/
          , T = [[/^<(?:script|pre|style)(?:\s|>|$)/i, /<\/(?:script|pre|style)>/i], [/^\s*<!--/, k], [/^\s*<\?/, w], [/^\s*<![A-Z]/, />/], [/^\s*<!\[CDATA\[/, /\]\]>/], [/^\s*<\/?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h1|h2|h3|h4|h5|h6|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\s|\/?>|$)/i, v], [/^\s*(?:<\/[a-z][\w-]*\s*>|<[a-z][\w-]*(\s+[a-z:_][\w-.]*(?:\s*=\s*(?:[^\s"'=<>`]+|'[^']*'|"[^"]*"))?)*\s*>)\s*$/i, v]];
        function _(e, t, O) {
            if (60 != e.next)
                return -1;
            let n = e.text.slice(e.pos);
            for (let e = 0, t = T.length - (O ? 1 : 0); e < t; e++)
                if (T[e][0].test(n))
                    return e;
            return -1
        }
        function W(e, t) {
            let O = e.countIndent(t, e.pos, e.indent)
              , n = e.countIndent(e.skipSpace(t), t, O);
            return n >= O + 5 ? O + 1 : n
        }
        function Z(e, t, O) {
            let n = e.length - 1;
            n >= 0 && e[n].to == t && e[n].type == r.CodeText ? e[n].to = O : e.push(L(r.CodeText, t, O))
        }
        let z = {
            LinkReference: void 0,
            IndentedCode(e, t) {
                let O = t.baseIndent + 4;
                if (t.indent < O)
                    return !1;
                let n = t.findColumn(O)
                  , i = e.lineStart + n
                  , a = e.lineStart + t.text.length
                  , o = []
                  , s = [];
                for (Z(o, i, a); e.nextLine() && t.depth >= e.stack.length; )
                    if (t.pos == t.text.length)
                        for (let O of (Z(s, e.lineStart - 1, e.lineStart),
                        t.markers))
                            s.push(O);
                    else if (t.indent < O)
                        break;
                    else {
                        if (s.length) {
                            for (let e of s)
                                e.type == r.CodeText ? Z(o, e.from, e.to) : o.push(e);
                            s = []
                        }
                        for (let O of (Z(o, e.lineStart - 1, e.lineStart),
                        t.markers))
                            o.push(O);
                        a = e.lineStart + t.text.length;
                        let O = e.lineStart + t.findColumn(t.baseIndent + 4);
                        O < a && Z(o, O, a)
                    }
                return s.length && (s = s.filter(e=>e.type != r.CodeText)).length && (t.markers = s.concat(t.markers)),
                e.addNode(e.buffer.writeElements(o, -i).finish(r.CodeBlock, a - i), i),
                !0
            },
            FencedCode(e, t) {
                let O = $(t);
                if (O < 0)
                    return !1;
                let n = e.lineStart + t.pos
                  , i = t.next
                  , a = O - t.pos
                  , o = t.skipSpace(O)
                  , s = Q(t.text, t.text.length, o)
                  , l = [L(r.CodeMark, n, n + a)];
                o < s && l.push(L(r.CodeInfo, e.lineStart + o, e.lineStart + s));
                for (let O = !0; e.nextLine() && t.depth >= e.stack.length; O = !1) {
                    let n = t.pos;
                    if (t.indent - t.baseIndent < 4)
                        for (; n < t.text.length && t.text.charCodeAt(n) == i; )
                            n++;
                    if (n - t.pos >= a && t.skipSpace(n) == t.text.length) {
                        for (let e of t.markers)
                            l.push(e);
                        l.push(L(r.CodeMark, e.lineStart + t.pos, e.lineStart + n)),
                        e.nextLine();
                        break
                    }
                    {
                        for (let n of (O || Z(l, e.lineStart - 1, e.lineStart),
                        t.markers))
                            l.push(n);
                        let n = e.lineStart + t.basePos
                          , r = e.lineStart + t.text.length;
                        n < r && Z(l, n, r)
                    }
                }
                return e.addNode(e.buffer.writeElements(l, -n).finish(r.FencedCode, e.prevLineEnd() - n), n),
                !0
            },
            Blockquote(e, t) {
                let O = g(t);
                return !(O < 0) && (e.startContext(r.Blockquote, t.pos),
                e.addNode(r.QuoteMark, e.lineStart + t.pos, e.lineStart + t.pos + 1),
                t.moveBase(t.pos + O),
                null)
            },
            HorizontalRule(e, t) {
                if (0 > P(t, e, !1))
                    return !1;
                let O = e.lineStart + t.pos;
                return e.nextLine(),
                e.addNode(r.HorizontalRule, O),
                !0
            },
            BulletList(e, t) {
                let O = b(t, e, !1);
                if (O < 0)
                    return !1;
                e.block.type != r.BulletList && e.startContext(r.BulletList, t.basePos, t.next);
                let n = W(t, t.pos + 1);
                return e.startContext(r.ListItem, t.basePos, n - t.baseIndent),
                e.addNode(r.ListMark, e.lineStart + t.pos, e.lineStart + t.pos + O),
                t.moveBaseColumn(n),
                null
            },
            OrderedList(e, t) {
                let O = y(t, e, !1);
                if (O < 0)
                    return !1;
                e.block.type != r.OrderedList && e.startContext(r.OrderedList, t.basePos, t.text.charCodeAt(t.pos + O - 1));
                let n = W(t, t.pos + O);
                return e.startContext(r.ListItem, t.basePos, n - t.baseIndent),
                e.addNode(r.ListMark, e.lineStart + t.pos, e.lineStart + t.pos + O),
                t.moveBaseColumn(n),
                null
            },
            ATXHeading(e, t) {
                let O = x(t);
                if (O < 0)
                    return !1;
                let n = t.pos
                  , i = e.lineStart + n
                  , a = Q(t.text, t.text.length, n)
                  , o = a;
                for (; o > n && t.text.charCodeAt(o - 1) == t.next; )
                    o--;
                o != a && o != n && h(t.text.charCodeAt(o - 1)) || (o = t.text.length);
                let s = e.buffer.write(r.HeaderMark, 0, O).writeElements(e.parser.parseInline(t.text.slice(n + O + 1, o), i + O + 1), -i);
                o < t.text.length && s.write(r.HeaderMark, o - n, a - n);
                let l = s.finish(r.ATXHeading1 - 1 + O, t.text.length - n);
                return e.nextLine(),
                e.addNode(l, i),
                !0
            },
            HTMLBlock(e, t) {
                let O = _(t, e, !1);
                if (O < 0)
                    return !1;
                let n = e.lineStart + t.pos
                  , i = T[O][1]
                  , a = []
                  , o = i != v;
                for (; !i.test(t.text) && e.nextLine(); ) {
                    if (t.depth < e.stack.length) {
                        o = !1;
                        break
                    }
                    for (let e of t.markers)
                        a.push(e)
                }
                o && e.nextLine();
                let s = i == k ? r.CommentBlock : i == w ? r.ProcessingInstructionBlock : r.HTMLBlock
                  , l = e.prevLineEnd();
                return e.addNode(e.buffer.writeElements(a, -n).finish(s, l - n), n),
                !0
            },
            SetextHeading: void 0
        };
        class q {
            constructor(e) {
                this.stage = 0,
                this.elts = [],
                this.pos = 0,
                this.start = e.start,
                this.advance(e.content)
            }
            nextLine(e, t, O) {
                if (-1 == this.stage)
                    return !1;
                let n = O.content + "\n" + t.scrub()
                  , r = this.advance(n);
                return r > -1 && r < n.length && this.complete(e, O, r)
            }
            finish(e, t) {
                return (2 == this.stage || 3 == this.stage) && m(t.content, this.pos) == t.content.length && this.complete(e, t, t.content.length)
            }
            complete(e, t, O) {
                return e.addLeafElement(t, L(r.LinkReference, this.start, this.start + O, this.elts)),
                !0
            }
            nextStage(e) {
                return e ? (this.pos = e.to - this.start,
                this.elts.push(e),
                this.stage++,
                !0) : (!1 === e && (this.stage = -1),
                !1)
            }
            advance(e) {
                for (; ; ) {
                    if (-1 == this.stage)
                        return -1;
                    if (0 == this.stage) {
                        if (!this.nextStage(ei(e, this.pos, this.start, !0)))
                            return -1;
                        if (58 != e.charCodeAt(this.pos))
                            return this.stage = -1;
                        this.elts.push(L(r.LinkMark, this.pos + this.start, this.pos + this.start + 1)),
                        this.pos++
                    } else if (1 == this.stage) {
                        if (!this.nextStage(en(e, m(e, this.pos), this.start)))
                            return -1
                    } else {
                        if (2 != this.stage)
                            return Y(e, this.pos);
                        let t = m(e, this.pos)
                          , O = 0;
                        if (t > this.pos) {
                            let n = er(e, t, this.start);
                            if (n) {
                                let t = Y(e, n.to - this.start);
                                t > 0 && (this.nextStage(n),
                                O = t)
                            }
                        }
                        return O || (O = Y(e, this.pos)),
                        O > 0 && O < e.length ? O : -1
                    }
                }
            }
        }
        function Y(e, t) {
            for (; t < e.length; t++) {
                let O = e.charCodeAt(t);
                if (10 == O)
                    break;
                if (!h(O))
                    return -1
            }
            return t
        }
        class R {
            nextLine(e, t, O) {
                let n = t.depth < e.stack.length ? -1 : X(t)
                  , i = t.next;
                if (n < 0)
                    return !1;
                let a = L(r.HeaderMark, e.lineStart + t.pos, e.lineStart + n);
                return e.nextLine(),
                e.addLeafElement(O, L(61 == i ? r.SetextHeading1 : r.SetextHeading2, O.start, e.prevLineEnd(), [...e.parser.parseInline(O.content, O.start), a])),
                !0
            }
            finish() {
                return !1
            }
        }
        let U = {
            LinkReference: (e,t)=>91 == t.content.charCodeAt(0) ? new q(t) : null,
            SetextHeading: ()=>new R
        }
          , V = {
            text: "",
            end: 0
        };
        class E {
            constructor(e, t, O, n) {
                this.parser = e,
                this.input = t,
                this.ranges = n,
                this.line = new p,
                this.atEnd = !1,
                this.dontInject = new Set,
                this.stoppedAt = null,
                this.rangeI = 0,
                this.to = n[n.length - 1].to,
                this.lineStart = this.absoluteLineStart = this.absoluteLineEnd = n[0].from,
                this.block = c.create(r.Document, 0, this.lineStart, 0, 0),
                this.stack = [this.block],
                this.fragments = O.length ? new el(O,t) : null,
                this.readLine()
            }
            get parsedPos() {
                return this.absoluteLineStart
            }
            advance() {
                if (null != this.stoppedAt && this.absoluteLineStart > this.stoppedAt)
                    return this.finish();
                let {line: e} = this;
                for (; ; ) {
                    for (; e.depth < this.stack.length; )
                        this.finishContext();
                    for (let t of e.markers)
                        this.addNode(t.type, t.from, t.to);
                    if (e.pos < e.text.length)
                        break;
                    if (!this.nextLine())
                        return this.finish()
                }
                if (this.fragments && this.reuseFragment(e.basePos))
                    return null;
                t: for (; ; ) {
                    for (let t of this.parser.blockParsers)
                        if (t) {
                            let O = t(this, e);
                            if (!1 != O) {
                                if (!0 == O)
                                    return null;
                                e.forward();
                                continue t
                            }
                        }
                    break
                }
                let t = new u(this.lineStart + e.pos,e.text.slice(e.pos));
                for (let e of this.parser.leafBlockParsers)
                    if (e) {
                        let O = e(this, t);
                        O && t.parsers.push(O)
                    }
                O: for (; this.nextLine() && e.pos != e.text.length; ) {
                    if (e.indent < e.baseIndent + 4) {
                        for (let O of this.parser.endLeafBlock)
                            if (O(this, e, t))
                                break O
                    }
                    for (let O of t.parsers)
                        if (O.nextLine(this, e, t))
                            return null;
                    for (let O of (t.content += "\n" + e.scrub(),
                    e.markers))
                        t.marks.push(O)
                }
                return this.finishLeaf(t),
                null
            }
            stopAt(e) {
                if (null != this.stoppedAt && this.stoppedAt < e)
                    throw RangeError("Can't move stoppedAt forward");
                this.stoppedAt = e
            }
            reuseFragment(e) {
                if (!this.fragments.moveTo(this.absoluteLineStart + e, this.absoluteLineStart) || !this.fragments.matches(this.block.hash))
                    return !1;
                let t = this.fragments.takeNodes(this);
                if (!t)
                    return !1;
                let O = t
                  , n = this.absoluteLineStart + t;
                for (let e = 1; e < this.ranges.length; e++) {
                    let t = this.ranges[e - 1].to
                      , r = this.ranges[e].from;
                    t >= this.lineStart && r < n && (O -= r - t)
                }
                return this.lineStart += O,
                this.absoluteLineStart += t,
                this.moveRangeI(),
                this.absoluteLineStart < this.to ? (this.lineStart++,
                this.absoluteLineStart++,
                this.readLine()) : (this.atEnd = !0,
                this.readLine()),
                !0
            }
            get depth() {
                return this.stack.length
            }
            parentType(e=this.depth - 1) {
                return this.parser.nodeSet.types[this.stack[e].type]
            }
            nextLine() {
                return (this.lineStart += this.line.text.length,
                this.absoluteLineEnd >= this.to) ? (this.absoluteLineStart = this.absoluteLineEnd,
                this.atEnd = !0,
                this.readLine(),
                !1) : (this.lineStart++,
                this.absoluteLineStart = this.absoluteLineEnd + 1,
                this.moveRangeI(),
                this.readLine(),
                !0)
            }
            moveRangeI() {
                for (; this.rangeI < this.ranges.length - 1 && this.absoluteLineStart >= this.ranges[this.rangeI].to; )
                    this.rangeI++,
                    this.absoluteLineStart = Math.max(this.absoluteLineStart, this.ranges[this.rangeI].from)
            }
            scanLine(e) {
                let t = V;
                if (t.end = e,
                e >= this.to)
                    t.text = "";
                else if (t.text = this.lineChunkAt(e),
                t.end += t.text.length,
                this.ranges.length > 1) {
                    let e = this.absoluteLineStart
                      , O = this.rangeI;
                    for (; this.ranges[O].to < t.end; ) {
                        O++;
                        let n = this.ranges[O].from
                          , r = this.lineChunkAt(n);
                        t.end = n + r.length,
                        t.text = t.text.slice(0, this.ranges[O - 1].to - e) + r,
                        e = t.end - t.text.length
                    }
                }
                return t
            }
            readLine() {
                let {line: e} = this
                  , {text: t, end: O} = this.scanLine(this.absoluteLineStart);
                for (this.absoluteLineEnd = O,
                e.reset(t); e.depth < this.stack.length; e.depth++) {
                    let t = this.stack[e.depth]
                      , O = this.parser.skipContextMarkup[t.type];
                    if (!O)
                        throw Error("Unhandled block context " + r[t.type]);
                    if (!O(t, this, e))
                        break;
                    e.forward()
                }
            }
            lineChunkAt(e) {
                let t = this.input.chunk(e), O;
                if (this.input.lineChunks)
                    O = "\n" == t ? "" : t;
                else {
                    let e = t.indexOf("\n");
                    O = e < 0 ? t : t.slice(0, e)
                }
                return e + O.length > this.to ? O.slice(0, this.to - e) : O
            }
            prevLineEnd() {
                return this.atEnd ? this.lineStart : this.lineStart - 1
            }
            startContext(e, t, O=0) {
                this.block = c.create(e, O, this.lineStart + t, this.block.hash, this.lineStart + this.line.text.length),
                this.stack.push(this.block)
            }
            startComposite(e, t, O=0) {
                this.startContext(this.parser.getNodeType(e), t, O)
            }
            addNode(e, t, O) {
                "number" == typeof e && (e = new s.mp(this.parser.nodeSet.types[e],I,I,(null != O ? O : this.prevLineEnd()) - t)),
                this.block.addChild(e, t - this.block.from)
            }
            addElement(e) {
                this.block.addChild(e.toTree(this.parser.nodeSet), e.from - this.block.from)
            }
            addLeafElement(e, t) {
                this.addNode(this.buffer.writeElements(eo(t.children, e.marks), -t.from).finish(t.type, t.to - t.from), t.from)
            }
            finishContext() {
                let e = this.stack.pop()
                  , t = this.stack[this.stack.length - 1];
                t.addChild(e.toTree(this.parser.nodeSet), e.from - t.from),
                this.block = t
            }
            finish() {
                for (; this.stack.length > 1; )
                    this.finishContext();
                return this.addGaps(this.block.toTree(this.parser.nodeSet, this.lineStart))
            }
            addGaps(e) {
                return this.ranges.length > 1 ? function e(t, O, n, r, i) {
                    if (i.has(n.tree))
                        return n.tree;
                    let a = t[O].to
                      , o = []
                      , l = []
                      , c = n.from + r;
                    function u(e, n) {
                        for (; n ? e >= a : e > a; ) {
                            let n = t[O + 1].from - a;
                            r += n,
                            e += n,
                            a = t[++O].to
                        }
                    }
                    for (let s = n.firstChild; s; s = s.nextSibling) {
                        u(s.from + r, !0);
                        let n = s.from + r, p;
                        s.to + r > a ? (p = e(t, O, s, r, i),
                        u(s.to + r, !1)) : p = s.toTree(),
                        o.push(p),
                        l.push(n - c)
                    }
                    return u(n.to + r, !1),
                    new s.mp(n.type,o,l,n.to + r - c,n.tree ? n.tree.propValues : void 0)
                }(this.ranges, 0, e.topNode, this.ranges[0].from, this.dontInject) : e
            }
            finishLeaf(e) {
                for (let t of e.parsers)
                    if (t.finish(this, e))
                        return;
                let t = eo(this.parser.parseInline(e.content, e.start), e.marks);
                this.addNode(this.buffer.writeElements(t, -e.start).finish(r.Paragraph, e.content.length), e.start)
            }
            elt(e, t, O, n) {
                return "string" == typeof e ? L(this.parser.getNodeType(e), t, O, n) : new D(e,t)
            }
            get buffer() {
                return new J(this.parser.nodeSet)
            }
        }
        class j extends s._b {
            constructor(e, t, O, n, r, i, a, o, s) {
                for (let l of (super(),
                this.nodeSet = e,
                this.blockParsers = t,
                this.leafBlockParsers = O,
                this.blockNames = n,
                this.endLeafBlock = r,
                this.skipContextMarkup = i,
                this.inlineParsers = a,
                this.inlineNames = o,
                this.wrappers = s,
                this.nodeTypes = Object.create(null),
                e.types))
                    this.nodeTypes[l.name] = l.id
            }
            createParse(e, t, O) {
                let n = new E(this,e,t,O);
                for (let r of this.wrappers)
                    n = r(n, e, t, O);
                return n
            }
            configure(e) {
                let t = function e(t) {
                    if (!Array.isArray(t))
                        return t;
                    if (0 == t.length)
                        return null;
                    let O = e(t[0]);
                    if (1 == t.length)
                        return O;
                    let n = e(t.slice(1));
                    if (!n || !O)
                        return O || n;
                    let r = (e,t)=>(e || I).concat(t || I)
                      , i = O.wrap
                      , a = n.wrap;
                    return {
                        props: r(O.props, n.props),
                        defineNodes: r(O.defineNodes, n.defineNodes),
                        parseBlock: r(O.parseBlock, n.parseBlock),
                        parseInline: r(O.parseInline, n.parseInline),
                        remove: r(O.remove, n.remove),
                        wrap: i ? a ? (e,t,O,n)=>i(a(e, t, O, n), t, O, n) : i : a
                    }
                }(e);
                if (!t)
                    return this;
                let {nodeSet: O, skipContextMarkup: n} = this
                  , i = this.blockParsers.slice()
                  , a = this.leafBlockParsers.slice()
                  , o = this.blockNames.slice()
                  , c = this.inlineParsers.slice()
                  , u = this.inlineNames.slice()
                  , p = this.endLeafBlock.slice()
                  , d = this.wrappers;
                if (G(t.defineNodes)) {
                    n = Object.assign({}, n);
                    let e = O.types.slice(), i;
                    for (let O of t.defineNodes) {
                        let {name: t, block: a, composite: o, style: c} = "string" == typeof O ? {
                            name: O
                        } : O;
                        if (e.some(e=>e.name == t))
                            continue;
                        o && (n[e.length] = (e,t,O)=>o(t, O, e.value));
                        let u = e.length
                          , p = o ? ["Block", "BlockContext"] : a ? u >= r.ATXHeading1 && u <= r.SetextHeading2 ? ["Block", "LeafBlock", "Heading"] : ["Block", "LeafBlock"] : void 0;
                        e.push(s.Jq.define({
                            id: u,
                            name: t,
                            props: p && [[s.md.group, p]]
                        })),
                        c && (i || (i = {}),
                        Array.isArray(c) || c instanceof l.Vp ? i[t] = c : Object.assign(i, c))
                    }
                    O = new s.Lj(e),
                    i && (O = O.extend((0,
                    l.Gv)(i)))
                }
                if (G(t.props) && (O = O.extend(...t.props)),
                G(t.remove))
                    for (let e of t.remove) {
                        let t = this.blockNames.indexOf(e)
                          , O = this.inlineNames.indexOf(e);
                        t > -1 && (i[t] = a[t] = void 0),
                        O > -1 && (c[O] = void 0)
                    }
                if (G(t.parseBlock))
                    for (let e of t.parseBlock) {
                        let t = o.indexOf(e.name);
                        if (t > -1)
                            i[t] = e.parse,
                            a[t] = e.leaf;
                        else {
                            let t = e.before ? C(o, e.before) : e.after ? C(o, e.after) + 1 : o.length - 1;
                            i.splice(t, 0, e.parse),
                            a.splice(t, 0, e.leaf),
                            o.splice(t, 0, e.name)
                        }
                        e.endLeaf && p.push(e.endLeaf)
                    }
                if (G(t.parseInline))
                    for (let e of t.parseInline) {
                        let t = u.indexOf(e.name);
                        if (t > -1)
                            c[t] = e.parse;
                        else {
                            let t = e.before ? C(u, e.before) : e.after ? C(u, e.after) + 1 : u.length - 1;
                            c.splice(t, 0, e.parse),
                            u.splice(t, 0, e.name)
                        }
                    }
                return t.wrap && (d = d.concat(t.wrap)),
                new j(O,i,a,o,p,n,c,u,d)
            }
            getNodeType(e) {
                let t = this.nodeTypes[e];
                if (null == t)
                    throw RangeError(`Unknown node type '${e}'`);
                return t
            }
            parseInline(e, t) {
                let O = new ea(this,e,t);
                n: for (let e = t; e < O.end; ) {
                    let t = O.char(e);
                    for (let n of this.inlineParsers)
                        if (n) {
                            let r = n(O, t, e);
                            if (r >= 0) {
                                e = r;
                                continue n
                            }
                        }
                    e++
                }
                return O.resolveMarkers(0)
            }
        }
        function G(e) {
            return null != e && e.length > 0
        }
        function C(e, t) {
            let O = e.indexOf(t);
            if (O < 0)
                throw RangeError(`Position specified relative to unknown parser ${t}`);
            return O
        }
        let A = [s.Jq.none];
        for (let e = 1, t; t = r[e]; e++)
            A[e] = s.Jq.define({
                id: e,
                name: t,
                props: e >= r.Escape ? [] : [[s.md.group, e in f ? ["Block", "BlockContext"] : ["Block", "LeafBlock"]]]
            });
        let I = [];
        class J {
            constructor(e) {
                this.nodeSet = e,
                this.content = [],
                this.nodes = []
            }
            write(e, t, O, n=0) {
                return this.content.push(e, t, O, 4 + 4 * n),
                this
            }
            writeElements(e, t=0) {
                for (let O of e)
                    O.writeTo(this, t);
                return this
            }
            finish(e, t) {
                return s.mp.build({
                    buffer: this.content,
                    nodeSet: this.nodeSet,
                    reused: this.nodes,
                    topID: e,
                    length: t
                })
            }
        }
        class N {
            constructor(e, t, O, n=I) {
                this.type = e,
                this.from = t,
                this.to = O,
                this.children = n
            }
            writeTo(e, t) {
                let O = e.content.length;
                e.writeElements(this.children, t),
                e.content.push(this.type, this.from + t, this.to + t, e.content.length + 4 - O)
            }
            toTree(e) {
                return new J(e).writeElements(this.children, -this.from).finish(this.type, this.to - this.from)
            }
        }
        class D {
            constructor(e, t) {
                this.tree = e,
                this.from = t
            }
            get to() {
                return this.from + this.tree.length
            }
            get type() {
                return this.tree.type.id
            }
            get children() {
                return I
            }
            writeTo(e, t) {
                e.nodes.push(this.tree),
                e.content.push(e.nodes.length - 1, this.from + t, this.to + t, -1)
            }
            toTree() {
                return this.tree
            }
        }
        function L(e, t, O, n) {
            return new N(e,t,O,n)
        }
        let F = {
            resolve: "Emphasis",
            mark: "EmphasisMark"
        }
          , M = {
            resolve: "Emphasis",
            mark: "EmphasisMark"
        }
          , B = {}
          , H = {};
        class K {
            constructor(e, t, O, n) {
                this.type = e,
                this.from = t,
                this.to = O,
                this.side = n
            }
        }
        let ee = "!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~"
          , et = /[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~\xA1\u2010-\u2027]/;
        try {
            et = RegExp("[\\p{Pc}|\\p{Pd}|\\p{Pe}|\\p{Pf}|\\p{Pi}|\\p{Po}|\\p{Ps}]", "u")
        } catch (e) {}
        let eO = {
            Escape(e, t, O) {
                if (92 != t || O == e.end - 1)
                    return -1;
                let n = e.char(O + 1);
                for (let t = 0; t < ee.length; t++)
                    if (ee.charCodeAt(t) == n)
                        return e.append(L(r.Escape, O, O + 2));
                return -1
            },
            Entity(e, t, O) {
                if (38 != t)
                    return -1;
                let n = /^(?:#\d+|#x[a-f\d]+|\w+);/i.exec(e.slice(O + 1, O + 31));
                return n ? e.append(L(r.Entity, O, O + 1 + n[0].length)) : -1
            },
            InlineCode(e, t, O) {
                if (96 != t || O && 96 == e.char(O - 1))
                    return -1;
                let n = O + 1;
                for (; n < e.end && 96 == e.char(n); )
                    n++;
                let i = n - O
                  , a = 0;
                for (; n < e.end; n++)
                    if (96 == e.char(n)) {
                        if (++a == i && 96 != e.char(n + 1))
                            return e.append(L(r.InlineCode, O, n + 1, [L(r.CodeMark, O, O + i), L(r.CodeMark, n + 1 - i, n + 1)]))
                    } else
                        a = 0;
                return -1
            },
            HTMLTag(e, t, O) {
                if (60 != t || O == e.end - 1)
                    return -1;
                let n = e.slice(O + 1, e.end)
                  , i = /^(?:[a-z][-\w+.]+:[^\s>]+|[a-z\d.!#$%&'*+/=?^_`{|}~-]+@[a-z\d](?:[a-z\d-]{0,61}[a-z\d])?(?:\.[a-z\d](?:[a-z\d-]{0,61}[a-z\d])?)*)>/i.exec(n);
                if (i)
                    return e.append(L(r.URL, O, O + 1 + i[0].length));
                let a = /^!--[^>](?:-[^-]|[^-])*?-->/i.exec(n);
                if (a)
                    return e.append(L(r.Comment, O, O + 1 + a[0].length));
                let o = /^\?[^]*?\?>/.exec(n);
                if (o)
                    return e.append(L(r.ProcessingInstruction, O, O + 1 + o[0].length));
                let s = /^(?:![A-Z][^]*?>|!\[CDATA\[[^]*?\]\]>|\/\s*[a-zA-Z][\w-]*\s*>|\s*[a-zA-Z][\w-]*(\s+[a-zA-Z:_][\w-.:]*(?:\s*=\s*(?:[^\s"'=<>`]+|'[^']*'|"[^"]*"))?)*\s*(\/\s*)?>)/.exec(n);
                return s ? e.append(L(r.HTMLTag, O, O + 1 + s[0].length)) : -1
            },
            Emphasis(e, t, O) {
                if (95 != t && 42 != t)
                    return -1;
                let n = O + 1;
                for (; e.char(n) == t; )
                    n++;
                let r = e.slice(O - 1, O)
                  , i = e.slice(n, n + 1)
                  , a = et.test(r)
                  , o = et.test(i)
                  , s = /\s|^$/.test(r)
                  , l = /\s|^$/.test(i)
                  , c = !l && (!o || s || a)
                  , u = !s && (!a || l || o);
                return e.append(new K(95 == t ? F : M,O,n,(c && (42 == t || !u || a) ? 1 : 0) | (u && (42 == t || !c || o) ? 2 : 0)))
            },
            HardBreak(e, t, O) {
                if (92 == t && 10 == e.char(O + 1))
                    return e.append(L(r.HardBreak, O, O + 2));
                if (32 == t) {
                    let t = O + 1;
                    for (; 32 == e.char(t); )
                        t++;
                    if (10 == e.char(t) && t >= O + 2)
                        return e.append(L(r.HardBreak, O, t + 1))
                }
                return -1
            },
            Link: (e,t,O)=>91 == t ? e.append(new K(B,O,O + 1,1)) : -1,
            Image: (e,t,O)=>33 == t && 91 == e.char(O + 1) ? e.append(new K(H,O,O + 2,1)) : -1,
            LinkEnd(e, t, O) {
                if (93 != t)
                    return -1;
                for (let t = e.parts.length - 1; t >= 0; t--) {
                    let n = e.parts[t];
                    if (n instanceof K && (n.type == B || n.type == H)) {
                        if (!n.side || e.skipSpace(n.to) == O && !/[(\[]/.test(e.slice(O + 1, O + 2)))
                            return e.parts[t] = null,
                            -1;
                        let i = e.takeContent(t)
                          , a = e.parts[t] = function(e, t, O, n, i) {
                            let {text: a} = e
                              , o = e.char(i)
                              , s = i;
                            if (t.unshift(L(r.LinkMark, n, n + (O == r.Image ? 2 : 1))),
                            t.push(L(r.LinkMark, i - 1, i)),
                            40 == o) {
                                let O = e.skipSpace(i + 1), n = en(a, O - e.offset, e.offset), o;
                                n && (O = e.skipSpace(n.to),
                                (o = er(a, O - e.offset, e.offset)) && (O = e.skipSpace(o.to))),
                                41 == e.char(O) && (t.push(L(r.LinkMark, i, i + 1)),
                                s = O + 1,
                                n && t.push(n),
                                o && t.push(o),
                                t.push(L(r.LinkMark, O, s)))
                            } else if (91 == o) {
                                let O = ei(a, i - e.offset, e.offset, !1);
                                O && (t.push(O),
                                s = O.to)
                            }
                            return L(O, n, s, t)
                        }(e, i, n.type == B ? r.Link : r.Image, n.from, O + 1);
                        if (n.type == B)
                            for (let O = 0; O < t; O++) {
                                let t = e.parts[O];
                                t instanceof K && t.type == B && (t.side = 0)
                            }
                        return a.to
                    }
                }
                return -1
            }
        };
        function en(e, t, O) {
            if (60 == e.charCodeAt(t)) {
                for (let n = t + 1; n < e.length; n++) {
                    let i = e.charCodeAt(n);
                    if (62 == i)
                        return L(r.URL, t + O, n + 1 + O);
                    if (60 == i || 10 == i)
                        return !1
                }
                return null
            }
            {
                let n = 0
                  , i = t;
                for (let t = !1; i < e.length; i++) {
                    let O = e.charCodeAt(i);
                    if (h(O))
                        break;
                    if (t)
                        t = !1;
                    else if (40 == O)
                        n++;
                    else if (41 == O) {
                        if (!n)
                            break;
                        n--
                    } else
                        92 == O && (t = !0)
                }
                return i > t ? L(r.URL, t + O, i + O) : i == e.length && null
            }
        }
        function er(e, t, O) {
            let n = e.charCodeAt(t);
            if (39 != n && 34 != n && 40 != n)
                return !1;
            let i = 40 == n ? 41 : n;
            for (let n = t + 1, a = !1; n < e.length; n++) {
                let o = e.charCodeAt(n);
                if (a)
                    a = !1;
                else {
                    if (o == i)
                        return L(r.LinkTitle, t + O, n + 1 + O);
                    92 == o && (a = !0)
                }
            }
            return null
        }
        function ei(e, t, O, n) {
            for (let i = !1, a = t + 1, o = Math.min(e.length, a + 999); a < o; a++) {
                let o = e.charCodeAt(a);
                if (i)
                    i = !1;
                else {
                    if (93 == o)
                        return !n && L(r.LinkLabel, t + O, a + 1 + O);
                    if (n && !h(o) && (n = !1),
                    91 == o)
                        return !1;
                    92 == o && (i = !0)
                }
            }
            return null
        }
        class ea {
            constructor(e, t, O) {
                this.parser = e,
                this.text = t,
                this.offset = O,
                this.parts = []
            }
            char(e) {
                return e >= this.end ? -1 : this.text.charCodeAt(e - this.offset)
            }
            get end() {
                return this.offset + this.text.length
            }
            slice(e, t) {
                return this.text.slice(e - this.offset, t - this.offset)
            }
            append(e) {
                return this.parts.push(e),
                e.to
            }
            addDelimiter(e, t, O, n, r) {
                return this.append(new K(e,t,O,(n ? 1 : 0) | (r ? 2 : 0)))
            }
            addElement(e) {
                return this.append(e)
            }
            resolveMarkers(e) {
                for (let t = e; t < this.parts.length; t++) {
                    let O = this.parts[t];
                    if (!(O instanceof K && O.type.resolve && 2 & O.side))
                        continue;
                    let n = O.type == F || O.type == M, r = O.to - O.from, i, a = t - 1;
                    for (; a >= e; a--) {
                        let e = this.parts[a];
                        if (e instanceof K && 1 & e.side && e.type == O.type && !(n && (1 & O.side || 2 & e.side) && (e.to - e.from + r) % 3 == 0 && ((e.to - e.from) % 3 || r % 3))) {
                            i = e;
                            break
                        }
                    }
                    if (!i)
                        continue;
                    let o = O.type.resolve
                      , s = []
                      , l = i.from
                      , c = O.to;
                    if (n) {
                        let e = Math.min(2, i.to - i.from, r);
                        l = i.to - e,
                        c = O.from + e,
                        o = 1 == e ? "Emphasis" : "StrongEmphasis"
                    }
                    i.type.mark && s.push(this.elt(i.type.mark, l, i.to));
                    for (let e = a + 1; e < t; e++)
                        this.parts[e]instanceof N && s.push(this.parts[e]),
                        this.parts[e] = null;
                    O.type.mark && s.push(this.elt(O.type.mark, O.from, c));
                    let u = this.elt(o, l, c, s);
                    this.parts[a] = n && i.from != l ? new K(i.type,i.from,l,i.side) : null,
                    (this.parts[t] = n && O.to != c ? new K(O.type,c,O.to,O.side) : null) ? this.parts.splice(t, 0, u) : this.parts[t] = u
                }
                let t = [];
                for (let O = e; O < this.parts.length; O++) {
                    let e = this.parts[O];
                    e instanceof N && t.push(e)
                }
                return t
            }
            findOpeningDelimiter(e) {
                for (let t = this.parts.length - 1; t >= 0; t--) {
                    let O = this.parts[t];
                    if (O instanceof K && O.type == e)
                        return t
                }
                return null
            }
            takeContent(e) {
                let t = this.resolveMarkers(e);
                return this.parts.length = e,
                t
            }
            skipSpace(e) {
                return m(this.text, e - this.offset) + this.offset
            }
            elt(e, t, O, n) {
                return "string" == typeof e ? L(this.parser.getNodeType(e), t, O, n) : new D(e,t)
            }
        }
        function eo(e, t) {
            if (!t.length)
                return e;
            if (!e.length)
                return t;
            let O = e.slice()
              , n = 0;
            for (let e of t) {
                for (; n < O.length && O[n].to < e.to; )
                    n++;
                if (n < O.length && O[n].from < e.from) {
                    let t = O[n];
                    t instanceof N && (O[n] = new N(t.type,t.from,t.to,eo(t.children, [e])))
                } else
                    O.splice(n++, 0, e)
            }
            return O
        }
        let es = [r.CodeBlock, r.ListItem, r.OrderedList, r.BulletList];
        class el {
            constructor(e, t) {
                this.fragments = e,
                this.input = t,
                this.i = 0,
                this.fragment = null,
                this.fragmentEnd = -1,
                this.cursor = null,
                e.length && (this.fragment = e[this.i++])
            }
            nextFragment() {
                this.fragment = this.i < this.fragments.length ? this.fragments[this.i++] : null,
                this.cursor = null,
                this.fragmentEnd = -1
            }
            moveTo(e, t) {
                for (; this.fragment && this.fragment.to <= e; )
                    this.nextFragment();
                if (!this.fragment || this.fragment.from > (e ? e - 1 : 0))
                    return !1;
                if (this.fragmentEnd < 0) {
                    let e = this.fragment.to;
                    for (; e > 0 && "\n" != this.input.read(e - 1, e); )
                        e--;
                    this.fragmentEnd = e ? e - 1 : 0
                }
                let O = this.cursor;
                O || (O = this.cursor = this.fragment.tree.cursor()).firstChild();
                let n = e + this.fragment.offset;
                for (; O.to <= n; )
                    if (!O.parent())
                        return !1;
                for (; ; ) {
                    if (O.from >= n)
                        return this.fragment.from <= t;
                    if (!O.childAfter(n))
                        return !1
                }
            }
            matches(e) {
                let t = this.cursor.tree;
                return t && t.prop(s.md.contextHash) == e
            }
            takeNodes(e) {
                let t = this.cursor
                  , O = this.fragment.offset
                  , n = this.fragmentEnd - (this.fragment.openEnd ? 1 : 0)
                  , r = e.absoluteLineStart
                  , i = r
                  , a = e.block.children.length
                  , o = i
                  , s = a;
                for (; ; ) {
                    if (t.to - O > n) {
                        if (t.type.isAnonymous && t.firstChild())
                            continue;
                        break
                    }
                    if (e.dontInject.add(t.tree),
                    e.addNode(t.tree, t.from - O),
                    t.type.is("Block") && (0 > es.indexOf(t.type.id) ? (i = t.to - O,
                    a = e.block.children.length) : (i = o,
                    a = s,
                    o = t.to - O,
                    s = e.block.children.length)),
                    !t.nextSibling())
                        break
                }
                for (; e.block.children.length > a; )
                    e.block.children.pop(),
                    e.block.positions.pop();
                return i - r
            }
        }
        let ec = (0,
        l.Gv)({
            "Blockquote/...": l.pJ.quote,
            HorizontalRule: l.pJ.contentSeparator,
            "ATXHeading1/... SetextHeading1/...": l.pJ.heading1,
            "ATXHeading2/... SetextHeading2/...": l.pJ.heading2,
            "ATXHeading3/...": l.pJ.heading3,
            "ATXHeading4/...": l.pJ.heading4,
            "ATXHeading5/...": l.pJ.heading5,
            "ATXHeading6/...": l.pJ.heading6,
            "Comment CommentBlock": l.pJ.comment,
            Escape: l.pJ.escape,
            Entity: l.pJ.character,
            "Emphasis/...": l.pJ.emphasis,
            "StrongEmphasis/...": l.pJ.strong,
            "Link/... Image/...": l.pJ.link,
            "OrderedList/... BulletList/...": l.pJ.list,
            "BlockQuote/...": l.pJ.quote,
            "InlineCode CodeText": l.pJ.monospace,
            URL: l.pJ.url,
            "HeaderMark HardBreak QuoteMark ListMark LinkMark EmphasisMark CodeMark": l.pJ.processingInstruction,
            "CodeInfo LinkLabel": l.pJ.labelName,
            LinkTitle: l.pJ.string,
            Paragraph: l.pJ.content
        })
          , eu = new j(new s.Lj(A).extend(ec),Object.keys(z).map(e=>z[e]),Object.keys(z).map(e=>U[e]),Object.keys(z),[(e,t)=>x(t) >= 0, (e,t)=>$(t) >= 0, (e,t)=>g(t) >= 0, (e,t)=>b(t, e, !0) >= 0, (e,t)=>y(t, e, !0) >= 0, (e,t)=>P(t, e, !0) >= 0, (e,t)=>_(t, e, !0) >= 0],f,Object.keys(eO).map(e=>eO[e]),Object.keys(eO),[])
          , ep = {
            resolve: "Strikethrough",
            mark: "StrikethroughMark"
        }
          , ed = {
            defineNodes: [{
                name: "Strikethrough",
                style: {
                    "Strikethrough/...": l.pJ.strikethrough
                }
            }, {
                name: "StrikethroughMark",
                style: l.pJ.processingInstruction
            }],
            parseInline: [{
                name: "Strikethrough",
                parse(e, t, O) {
                    if (126 != t || 126 != e.char(O + 1) || 126 == e.char(O + 2))
                        return -1;
                    let n = e.slice(O - 1, O)
                      , r = e.slice(O + 2, O + 3)
                      , i = /\s|^$/.test(n)
                      , a = /\s|^$/.test(r)
                      , o = et.test(n)
                      , s = et.test(r);
                    return e.addDelimiter(ep, O, O + 2, !a && (!s || i || o), !i && (!o || a || s))
                },
                after: "Emphasis"
            }]
        };
        function ef(e, t, O=0, n, r=0) {
            let i = 0
              , a = !0
              , o = -1
              , s = -1
              , l = !1
              , c = ()=>{
                n.push(e.elt("TableCell", r + o, r + s, e.parser.parseInline(t.slice(o, s), r + o)))
            }
            ;
            for (let u = O; u < t.length; u++) {
                let O = t.charCodeAt(u);
                124 != O || l ? (l || 32 != O && 9 != O) && (o < 0 && (o = u),
                s = u + 1) : ((!a || o > -1) && i++,
                a = !1,
                n && (o > -1 && c(),
                n.push(e.elt("TableDelimiter", u + r, u + r + 1))),
                o = s = -1),
                l = !l && 92 == O
            }
            return o > -1 && (i++,
            n && c()),
            i
        }
        function eh(e, t) {
            for (let O = t; O < e.length; O++) {
                let t = e.charCodeAt(O);
                if (124 == t)
                    return !0;
                92 == t && O++
            }
            return !1
        }
        let em = /^\|?(\s*:?-+:?\s*\|)+(\s*:?-+:?\s*)?$/;
        class eQ {
            constructor() {
                this.rows = null
            }
            nextLine(e, t, O) {
                if (null == this.rows) {
                    let n;
                    if (this.rows = !1,
                    (45 == t.next || 58 == t.next || 124 == t.next) && em.test(n = t.text.slice(t.pos))) {
                        let r = [];
                        ef(e, O.content, 0, r, O.start) == ef(e, n, t.pos) && (this.rows = [e.elt("TableHeader", O.start, O.start + O.content.length, r), e.elt("TableDelimiter", e.lineStart + t.pos, e.lineStart + t.text.length)])
                    }
                } else if (this.rows) {
                    let O = [];
                    ef(e, t.text, t.pos, O, e.lineStart),
                    this.rows.push(e.elt("TableRow", e.lineStart + t.pos, e.lineStart + t.text.length, O))
                }
                return !1
            }
            finish(e, t) {
                return !!this.rows && (e.addLeafElement(t, e.elt("Table", t.start, t.start + t.content.length, this.rows)),
                !0)
            }
        }
        let e$ = {
            defineNodes: [{
                name: "Table",
                block: !0
            }, {
                name: "TableHeader",
                style: {
                    "TableHeader/...": l.pJ.heading
                }
            }, "TableRow", {
                name: "TableCell",
                style: l.pJ.content
            }, {
                name: "TableDelimiter",
                style: l.pJ.processingInstruction
            }],
            parseBlock: [{
                name: "Table",
                leaf: (e,t)=>eh(t.content, 0) ? new eQ : null,
                endLeaf(e, t, O) {
                    if (O.parsers.some(e=>e instanceof eQ) || !eh(t.text, t.basePos))
                        return !1;
                    let n = e.scanLine(e.absoluteLineEnd + 1).text;
                    return em.test(n) && ef(e, t.text, t.basePos) == ef(e, n, t.basePos)
                },
                before: "SetextHeading"
            }]
        };
        class eg {
            nextLine() {
                return !1
            }
            finish(e, t) {
                return e.addLeafElement(t, e.elt("Task", t.start, t.start + t.content.length, [e.elt("TaskMarker", t.start, t.start + 3), ...e.parser.parseInline(t.content.slice(3), t.start + 3)])),
                !0
            }
        }
        let eP = {
            defineNodes: [{
                name: "Task",
                block: !0,
                style: l.pJ.list
            }, {
                name: "TaskMarker",
                style: l.pJ.atom
            }],
            parseBlock: [{
                name: "TaskList",
                leaf: (e,t)=>/^\[[ xX]\]/.test(t.content) && "ListItem" == e.parentType().name ? new eg : null,
                after: "SetextHeading"
            }]
        };
        function eS(e, t, O) {
            return (n,r,i)=>{
                if (r != e || n.char(i + 1) == e)
                    return -1;
                let a = [n.elt(O, i, i + 1)];
                for (let r = i + 1; r < n.end; r++) {
                    let o = n.char(r);
                    if (o == e)
                        return n.addElement(n.elt(t, i, r + 1, a.concat(n.elt(O, r, r + 1))));
                    if (92 == o && a.push(n.elt("Escape", r, r++ + 2)),
                    h(o))
                        break
                }
                return -1
            }
        }
        let eb = {
            defineNodes: [{
                name: "Superscript",
                style: l.pJ.special(l.pJ.content)
            }, {
                name: "SuperscriptMark",
                style: l.pJ.processingInstruction
            }],
            parseInline: [{
                name: "Superscript",
                parse: eS(94, "Superscript", "SuperscriptMark")
            }]
        }
          , ey = {
            defineNodes: [{
                name: "Subscript",
                style: l.pJ.special(l.pJ.content)
            }, {
                name: "SubscriptMark",
                style: l.pJ.processingInstruction
            }],
            parseInline: [{
                name: "Subscript",
                parse: eS(126, "Subscript", "SubscriptMark")
            }]
        }
          , ex = {
            defineNodes: [{
                name: "Emoji",
                style: l.pJ.character
            }],
            parseInline: [{
                name: "Emoji",
                parse(e, t, O) {
                    let n;
                    return 58 == t && (n = /^[a-zA-Z_0-9]+:/.exec(e.slice(O + 1, e.end))) ? e.addElement(e.elt("Emoji", O, O + 1 + n[0].length)) : -1
                }
            }]
        };
        var eX = O(1303);
        let ev = (0,
        o.kU)({
            commentTokens: {
                block: {
                    open: "<!--",
                    close: "-->"
                }
            }
        })
          , ek = new s.md
          , ew = eu.configure({
            props: [o.x0.add(e=>!e.is("Block") || e.is("Document") || null != eT(e) ? void 0 : (e,t)=>({
                from: t.doc.lineAt(e.from).to,
                to: e.to
            })), ek.add(eT), o.uj.add({
                Document: ()=>null
            }), o.pp.add({
                Document: ev
            })]
        });
        function eT(e) {
            let t = /^(?:ATX|Setext)Heading(\d)$/.exec(e.name);
            return t ? +t[1] : void 0
        }
        let e_ = o.rs.of((e,t,O)=>{
            for (let n = (0,
            o.qz)(e).resolveInner(O, -1); n && !(n.from < t); n = n.parent) {
                let e = n.type.prop(ek);
                if (null == e)
                    continue;
                let t = function(e, t) {
                    let O = e;
                    for (; ; ) {
                        let e = O.nextSibling, n;
                        if (!e || null != (n = eT(e.type)) && n <= t)
                            break;
                        O = e
                    }
                    return O.to
                }(n, e);
                if (t > O)
                    return {
                        from: O,
                        to: t
                    }
            }
            return null
        }
        );
        function eW(e) {
            return new o.SQ(ev,e,[e_],"markdown")
        }
        let eZ = eW(ew)
          , ez = ew.configure([[e$, eP, ed], ey, eb, ex])
          , eq = eW(ez);
        class eY {
            constructor(e, t, O, n, r, i, a) {
                this.node = e,
                this.from = t,
                this.to = O,
                this.spaceBefore = n,
                this.spaceAfter = r,
                this.type = i,
                this.item = a
            }
            blank(e, t=!0) {
                let O = this.spaceBefore + ("Blockquote" == this.node.name ? ">" : "");
                if (null != e) {
                    for (; O.length < e; )
                        O += " ";
                    return O
                }
                for (let e = this.to - this.from - O.length - this.spaceAfter.length; e > 0; e--)
                    O += " ";
                return O + (t ? this.spaceAfter : "")
            }
            marker(e, t) {
                let O = "OrderedList" == this.node.name ? String(+eU(this.item, e)[2] + t) : "";
                return this.spaceBefore + O + this.type + this.spaceAfter
            }
        }
        function eR(e, t) {
            let O = [];
            for (let t = e; t && "Document" != t.name; t = t.parent)
                ("ListItem" == t.name || "Blockquote" == t.name || "FencedCode" == t.name) && O.push(t);
            let n = [];
            for (let e = O.length - 1; e >= 0; e--) {
                let r = O[e], i, a = t.lineAt(r.from), o = r.from - a.from;
                if ("FencedCode" == r.name)
                    n.push(new eY(r,o,o,"","","",null));
                else if ("Blockquote" == r.name && (i = /^[ \t]*>( ?)/.exec(a.text.slice(o))))
                    n.push(new eY(r,o,o + i[0].length,"",i[1],">",null));
                else if ("ListItem" == r.name && "OrderedList" == r.parent.name && (i = /^([ \t]*)\d+([.)])([ \t]*)/.exec(a.text.slice(o)))) {
                    let e = i[3]
                      , t = i[0].length;
                    e.length >= 4 && (e = e.slice(0, e.length - 4),
                    t -= 4),
                    n.push(new eY(r.parent,o,o + t,i[1],e,i[2],r))
                } else if ("ListItem" == r.name && "BulletList" == r.parent.name && (i = /^([ \t]*)([-+*])([ \t]{1,4}\[[ xX]\])?([ \t]+)/.exec(a.text.slice(o)))) {
                    let e = i[4]
                      , t = i[0].length;
                    e.length > 4 && (e = e.slice(0, e.length - 4),
                    t -= 4);
                    let O = i[2];
                    i[3] && (O += i[3].replace(/[xX]/, " ")),
                    n.push(new eY(r.parent,o,o + t,i[1],e,O,r))
                }
            }
            return n
        }
        function eU(e, t) {
            return /^(\s*)(\d+)(?=[.)])/.exec(t.sliceString(e.from, e.from + 10))
        }
        function eV(e, t, O, n=0) {
            for (let r = -1, i = e; ; ) {
                if ("ListItem" == i.name) {
                    let e = eU(i, t)
                      , a = +e[2];
                    if (r >= 0) {
                        if (a != r + 1)
                            return;
                        O.push({
                            from: i.from + e[1].length,
                            to: i.from + e[0].length,
                            insert: String(r + 2 + n)
                        })
                    }
                    r = a
                }
                let e = i.nextSibling;
                if (!e)
                    break;
                i = e
            }
        }
        let eE = ({state: e, dispatch: t})=>{
            let O = (0,
            o.qz)(e)
              , {doc: n} = e
              , r = null
              , a = e.changeByRange(t=>{
                if (!t.empty || !eq.isActiveAt(e, t.from))
                    return r = {
                        range: t
                    };
                let a = t.from
                  , o = n.lineAt(a)
                  , s = eR(O.resolveInner(a, -1), n);
                for (; s.length && s[s.length - 1].from > a - o.from; )
                    s.pop();
                if (!s.length)
                    return r = {
                        range: t
                    };
                let l = s[s.length - 1];
                if (l.to - l.spaceAfter.length > a - o.from)
                    return r = {
                        range: t
                    };
                let c = a >= l.to - l.spaceAfter.length && !/\S/.test(o.text.slice(l.to));
                if (l.item && c) {
                    if (l.node.firstChild.to >= a || o.from > 0 && !/[^\s>]/.test(n.lineAt(o.from - 1).text)) {
                        let e = s.length > 1 ? s[s.length - 2] : null, t, O = "";
                        e && e.item ? (t = o.from + e.from,
                        O = e.marker(n, 1)) : t = o.from + (e ? e.to : 0);
                        let r = [{
                            from: t,
                            to: a,
                            insert: O
                        }];
                        return "OrderedList" == l.node.name && eV(l.item, n, r, -2),
                        e && "OrderedList" == e.node.name && eV(e.item, n, r),
                        {
                            range: i.jT.cursor(t + O.length),
                            changes: r
                        }
                    }
                    {
                        let t = "";
                        for (let e = 0, O = s.length - 2; e <= O; e++)
                            t += s[e].blank(e < O ? s[e + 1].from - t.length : null, e < O);
                        return t += e.lineBreak,
                        {
                            range: i.jT.cursor(a + t.length),
                            changes: {
                                from: o.from,
                                insert: t
                            }
                        }
                    }
                }
                if ("Blockquote" == l.node.name && c && o.from) {
                    let O = n.lineAt(o.from - 1)
                      , r = />\s*$/.exec(O.text);
                    if (r && r.index == l.from) {
                        let n = e.changes([{
                            from: O.from + r.index,
                            to: O.to
                        }, {
                            from: o.from + l.from,
                            to: o.to
                        }]);
                        return {
                            range: t.map(n),
                            changes: n
                        }
                    }
                }
                let u = [];
                "OrderedList" == l.node.name && eV(l.item, n, u);
                let p = l.item && l.item.from < o.from
                  , d = "";
                if (!p || /^[\s\d.)\-+*>]*/.exec(o.text)[0].length >= l.to)
                    for (let e = 0, t = s.length - 1; e <= t; e++)
                        d += e != t || p ? s[e].blank(e < t ? s[e + 1].from - d.length : null) : s[e].marker(n, 1);
                let f = a;
                for (; f > o.from && /\s/.test(o.text.charAt(f - o.from - 1)); )
                    f--;
                return d = e.lineBreak + d,
                u.push({
                    from: f,
                    to: a,
                    insert: d
                }),
                {
                    range: i.jT.cursor(f + d.length),
                    changes: u
                }
            }
            );
            return !r && (t(e.update(a, {
                scrollIntoView: !0,
                userEvent: "input"
            })),
            !0)
        }
        ;
        function ej(e) {
            return "QuoteMark" == e.name || "ListMark" == e.name
        }
        let eG = ({state: e, dispatch: t})=>{
            let O = (0,
            o.qz)(e)
              , n = null
              , r = e.changeByRange(t=>{
                let r = t.from
                  , {doc: a} = e;
                if (t.empty && eq.isActiveAt(e, t.from)) {
                    let e = a.lineAt(r)
                      , n = eR(function(e, t) {
                        let O = e.resolveInner(t, -1)
                          , n = t;
                        ej(O) && (n = O.from,
                        O = O.parent);
                        for (let e; e = O.childBefore(n); )
                            if (ej(e))
                                n = e.from;
                            else if ("OrderedList" == e.name || "BulletList" == e.name)
                                n = (O = e.lastChild).to;
                            else
                                break;
                        return O
                    }(O, r), a);
                    if (n.length) {
                        let O = n[n.length - 1]
                          , a = O.to - O.spaceAfter.length + (O.spaceAfter ? 1 : 0);
                        if (r - e.from > a && !/\S/.test(e.text.slice(a, r - e.from)))
                            return {
                                range: i.jT.cursor(e.from + a),
                                changes: {
                                    from: e.from + a,
                                    to: r
                                }
                            };
                        if (r - e.from == a && (!O.item || e.from <= O.item.from || !/\S/.test(e.text.slice(0, O.to)))) {
                            let n = e.from + O.from;
                            if (O.item && O.node.from < O.item.from && /\S/.test(e.text.slice(O.from, O.to)))
                                return {
                                    range: t,
                                    changes: {
                                        from: n,
                                        to: e.from + O.to,
                                        insert: O.blank(O.to - O.from)
                                    }
                                };
                            if (n < r)
                                return {
                                    range: i.jT.cursor(n),
                                    changes: {
                                        from: n,
                                        to: r
                                    }
                                }
                        }
                    }
                }
                return n = {
                    range: t
                }
            }
            );
            return !n && (t(e.update(r, {
                scrollIntoView: !0,
                userEvent: "delete"
            })),
            !0)
        }
          , eC = [{
            key: "Enter",
            run: eE
        }, {
            key: "Backspace",
            run: eG
        }]
          , eA = (0,
        eX.html)({
            matchClosingTags: !1
        });
        function eI(e={}) {
            var t;
            let {codeLanguages: O, defaultCodeLanguage: n, addKeymap: l=!0, base: {parser: c}=eZ} = e;
            if (!(c instanceof j))
                throw RangeError("Base parser provided to `markdown` should be a Markdown parser");
            let u = e.extensions ? [e.extensions] : [], p = [eA.support], d;
            n instanceof o.ri ? (p.push(n.support),
            d = n.language) : n && (d = n);
            let f = O || d ? (t = d,
            e=>{
                if (e && O) {
                    let t = null;
                    if (e = /\S*/.exec(e)[0],
                    (t = "function" == typeof O ? O(e) : o.c6.matchLanguageName(O, e, !0))instanceof o.c6)
                        return t.support ? t.support.language.parser : o.Be.getSkippingParser(t.load());
                    if (t)
                        return t.parser
                }
                return t ? t.parser : null
            }
            ) : void 0;
            return u.push(function(e) {
                let {codeParser: t, htmlParser: O} = e;
                return {
                    wrap: (0,
                    s.FE)((e,n)=>{
                        let i = e.type.id;
                        if (t && (i == r.CodeBlock || i == r.FencedCode)) {
                            let O = "";
                            if (i == r.FencedCode) {
                                let t = e.node.getChild(r.CodeInfo);
                                t && (O = n.read(t.from, t.to))
                            }
                            let a = t(O);
                            if (a)
                                return {
                                    parser: a,
                                    overlay: e=>e.type.id == r.CodeText
                                }
                        } else if (O && (i == r.HTMLBlock || i == r.HTMLTag))
                            return {
                                parser: O,
                                overlay: function(e, t, O) {
                                    let n = [];
                                    for (let r = e.firstChild, i = t; ; r = r.nextSibling) {
                                        let e = r ? r.from : O;
                                        if (e > i && n.push({
                                            from: i,
                                            to: e
                                        }),
                                        !r)
                                            break;
                                        i = r.to
                                    }
                                    return n
                                }(e.node, e.from, e.to)
                            };
                        return null
                    }
                    )
                }
            }({
                codeParser: f,
                htmlParser: eA.language.parser
            })),
            l && p.push(i.Wl.high(a.$f.of(eC))),
            new o.ri(eW(c.configure(u)),p)
        }
    },
    9379: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            php: function() {
                return y
            },
            phpLanguage: function() {
                return b
            }
        });
        var n = O(2679)
          , r = O(5306);
        let i = {
            abstract: 4,
            and: 5,
            array: 6,
            as: 7,
            true: 8,
            false: 8,
            break: 9,
            case: 10,
            catch: 11,
            clone: 12,
            const: 13,
            continue: 14,
            declare: 16,
            default: 15,
            do: 17,
            echo: 18,
            else: 19,
            elseif: 20,
            enddeclare: 21,
            endfor: 22,
            endforeach: 23,
            endif: 24,
            endswitch: 25,
            endwhile: 26,
            enum: 27,
            extends: 28,
            final: 29,
            finally: 30,
            fn: 31,
            for: 32,
            foreach: 33,
            from: 34,
            function: 35,
            global: 36,
            goto: 37,
            if: 38,
            implements: 39,
            include: 40,
            include_once: 41,
            instanceof: 42,
            insteadof: 43,
            interface: 44,
            list: 45,
            match: 46,
            namespace: 47,
            new: 48,
            null: 49,
            or: 50,
            print: 51,
            require: 52,
            require_once: 53,
            return: 54,
            switch: 55,
            throw: 56,
            trait: 57,
            try: 58,
            unset: 59,
            use: 60,
            var: 61,
            public: 62,
            private: 62,
            protected: 62,
            while: 63,
            xor: 64,
            yield: 65,
            __proto__: null
        };
        function a(e) {
            let t = i[e.toLowerCase()];
            return null == t ? -1 : t
        }
        function o(e) {
            return 9 == e || 10 == e || 13 == e || 32 == e
        }
        function s(e) {
            return e >= 97 && e <= 122 || e >= 65 && e <= 90
        }
        function l(e) {
            return 95 == e || e >= 128 || s(e)
        }
        function c(e) {
            return e >= 48 && e <= 55 || e >= 97 && e <= 102 || e >= 65 && e <= 70
        }
        let u = {
            int: !0,
            integer: !0,
            bool: !0,
            boolean: !0,
            float: !0,
            double: !0,
            real: !0,
            string: !0,
            array: !0,
            object: !0,
            unset: !0,
            __proto__: null
        }
          , p = new n.Jq(e=>{
            if (40 == e.next) {
                e.advance();
                let t = 0;
                for (; o(e.peek(t)); )
                    t++;
                let O = "", n;
                for (; s(n = e.peek(t)); )
                    O += String.fromCharCode(n),
                    t++;
                for (; o(e.peek(t)); )
                    t++;
                41 == e.peek(t) && u[O.toLowerCase()] && e.acceptToken(1)
            } else if (60 == e.next && 60 == e.peek(1) && 60 == e.peek(2)) {
                for (let t = 0; t < 3; t++)
                    e.advance();
                for (; 32 == e.next || 9 == e.next; )
                    e.advance();
                let t = 39 == e.next;
                if (t && e.advance(),
                !l(e.next))
                    return;
                let O = String.fromCharCode(e.next);
                for (; e.advance(),
                l(e.next) || e.next >= 48 && e.next <= 55; )
                    O += String.fromCharCode(e.next);
                if (t) {
                    if (39 != e.next)
                        return;
                    e.advance()
                }
                if (10 != e.next && 13 != e.next)
                    return;
                for (; ; ) {
                    let t = 10 == e.next || 13 == e.next;
                    if (e.advance(),
                    e.next < 0)
                        return;
                    if (t) {
                        for (; 32 == e.next || 9 == e.next; )
                            e.advance();
                        let t = !0;
                        for (let n = 0; n < O.length; n++) {
                            if (e.next != O.charCodeAt(n)) {
                                t = !1;
                                break
                            }
                            e.advance()
                        }
                        if (t)
                            return e.acceptToken(2)
                    }
                }
            }
        }
        )
          , d = new n.Jq(e=>{
            e.next < 0 && e.acceptToken(266)
        }
        )
          , f = new n.Jq((e,t)=>{
            63 == e.next && t.canShift(265) && 62 == e.peek(1) && e.acceptToken(265)
        }
        )
          , h = new n.Jq((e,t)=>{
            let O = !1;
            for (; !(34 == e.next || e.next < 0 || 36 == e.next && (l(e.peek(1)) || 123 == e.peek(1))) && (123 != e.next || 36 != e.peek(1)); O = !0) {
                if (92 == e.next) {
                    let t = function(e) {
                        let t = e.peek(1);
                        if (110 == t || 114 == t || 116 == t || 118 == t || 101 == t || 102 == t || 92 == t || 36 == t || 34 == t || 123 == t)
                            return 2;
                        if (t >= 48 && t <= 55) {
                            let t = 2, O;
                            for (; t < 5 && (O = e.peek(t)) >= 48 && O <= 55; )
                                t++;
                            return t
                        }
                        if (120 == t && c(e.peek(2)))
                            return c(e.peek(3)) ? 4 : 3;
                        if (117 == t && 123 == e.peek(2))
                            for (let t = 3; ; t++) {
                                let O = e.peek(t);
                                if (125 == O)
                                    return 2 == t ? 0 : t + 1;
                                if (!c(O))
                                    break
                            }
                        return 0
                    }(e);
                    if (t) {
                        if (!O)
                            return e.acceptToken(3, t);
                        break
                    }
                } else if (!O && (91 == e.next || 45 == e.next && 62 == e.peek(1) && l(e.peek(2)) || 63 == e.next && 45 == e.peek(1) && 62 == e.peek(2) && l(e.peek(3))) && t.canShift(264))
                    break;
                e.advance()
            }
            O && e.acceptToken(263)
        }
        )
          , m = (0,
        r.Gv)({
            "Visibility abstract final static": r.pJ.modifier,
            "for foreach while do if else elseif switch try catch finally return throw break continue default case": r.pJ.controlKeyword,
            "endif endfor endforeach endswitch endwhile declare enddeclare goto match": r.pJ.controlKeyword,
            "and or xor yield unset clone instanceof insteadof": r.pJ.operatorKeyword,
            "function fn class trait implements extends const enum global interface use var": r.pJ.definitionKeyword,
            "include include_once require require_once namespace": r.pJ.moduleKeyword,
            "new from echo print array list as": r.pJ.keyword,
            null: r.pJ.null,
            Boolean: r.pJ.bool,
            VariableName: r.pJ.variableName,
            "NamespaceName/...": r.pJ.namespace,
            "NamedType/...": r.pJ.typeName,
            Name: r.pJ.name,
            "CallExpression/Name": r.pJ.function(r.pJ.variableName),
            "LabelStatement/Name": r.pJ.labelName,
            "MemberExpression/Name": r.pJ.propertyName,
            "MemberExpression/VariableName": r.pJ.special(r.pJ.propertyName),
            "ScopedExpression/ClassMemberName/Name": r.pJ.propertyName,
            "ScopedExpression/ClassMemberName/VariableName": r.pJ.special(r.pJ.propertyName),
            "CallExpression/MemberExpression/Name": r.pJ.function(r.pJ.propertyName),
            "CallExpression/ScopedExpression/ClassMemberName/Name": r.pJ.function(r.pJ.propertyName),
            "MethodDeclaration/Name": r.pJ.function(r.pJ.definition(r.pJ.variableName)),
            "FunctionDefinition/Name": r.pJ.function(r.pJ.definition(r.pJ.variableName)),
            "ClassDeclaration/Name": r.pJ.definition(r.pJ.className),
            UpdateOp: r.pJ.updateOperator,
            ArithOp: r.pJ.arithmeticOperator,
            LogicOp: r.pJ.logicOperator,
            BitOp: r.pJ.bitwiseOperator,
            CompareOp: r.pJ.compareOperator,
            ControlOp: r.pJ.controlOperator,
            AssignOp: r.pJ.definitionOperator,
            "$ ConcatOp": r.pJ.operator,
            LineComment: r.pJ.lineComment,
            BlockComment: r.pJ.blockComment,
            Integer: r.pJ.integer,
            Float: r.pJ.float,
            String: r.pJ.string,
            ShellExpression: r.pJ.special(r.pJ.string),
            "=> ->": r.pJ.punctuation,
            "( )": r.pJ.paren,
            "#[ [ ]": r.pJ.squareBracket,
            "${ { }": r.pJ.brace,
            "-> ?->": r.pJ.derefOperator,
            ", ; :: : \\": r.pJ.separator,
            "PhpOpen PhpClose": r.pJ.processingInstruction
        })
          , Q = {
            __proto__: null,
            static: 311,
            STATIC: 311,
            class: 333,
            CLASS: 333
        }
          , $ = n.WQ.deserialize({
            version: 14,
            states: "$GSQ`OWOOQhQaOOP%oO`OOOOO#t'#H_'#H_O%tO#|O'#DtOOO#u'#Dw'#DwQ&SOWO'#DwO&XO$VOOOOQ#u'#Dx'#DxO&lQaO'#D|O(mQdO'#E}O(tQdO'#EQO*kQaO'#EWO,zQ`O'#ETO-PQ`O'#E^O/nQaO'#E^O/uQ`O'#EfO/zQ`O'#EoO*kQaO'#EoO0VQ`O'#HhO0[Q`O'#E{O0[Q`O'#E{OOQS'#Ic'#IcO0aQ`O'#EvOOQS'#IZ'#IZO2oQdO'#IWO6tQeO'#FUO*kQaO'#FeO*kQaO'#FfO*kQaO'#FgO*kQaO'#FhO*kQaO'#FhO*kQaO'#FkOOQO'#Id'#IdO7RQ`O'#FqOOQO'#Hi'#HiO7ZQ`O'#HOO7uQ`O'#FlO8QQ`O'#H]O8]Q`O'#FvO8eQaO'#FwO*kQaO'#GVO*kQaO'#GYO8}OrO'#G]OOQS'#Iq'#IqOOQS'#Ip'#IpOOQS'#IW'#IWO,zQ`O'#GdO,zQ`O'#GfO,zQ`O'#GkOhQaO'#GmO9UQ`O'#GnO9ZQ`O'#GqO9`Q`O'#GtO9eQeO'#GuO9eQeO'#GvO9eQeO'#GwO9oQ`O'#GxO9tQ`O'#GzO9yQaO'#G{O<YQ`O'#G|O<_Q`O'#G}O<dQ`O'#G}O9oQ`O'#HOO<iQ`O'#HQO<nQ`O'#HRO<sQ`O'#HSO<xQ`O'#HVO=TQ`O'#HWO9yQaO'#H[OOQ#u'#IV'#IVOOQ#u'#Ha'#HaQhQaOOO=fQ`O'#HPO7pQ`O'#HPO=kO#|O'#DrPOOO)CCw)CCwOOO#t-E;]-E;]OOO#u,5:c,5:cOOO#u'#H`'#H`O&XO$VOOO=vQ$VO'#IUOOOO'#IU'#IUQOOOOOOOQ#y,5:h,5:hO=}QaO,5:hOOQ#u,5:j,5:jO@eQaO,5:mO@lQaO,5;UO*kQaO,5;UO@sQ`O,5;VOCbQaO'#EsOOQS,5;^,5;^OCiQ`O,5;jOOQP'#F]'#F]O*kQaO,5;qO*kQaO,5;qO*kQaO,5;qO*kQaO,5;qO*kQaO,5;qO*kQaO,5;qO*kQaO,5;qO*kQaO,5;qO*kQaO,5;qO*kQaO,5;qO*kQaO,5;qO*kQaO,5;qO*kQaO,5;qO*kQaO,5;qO*kQaO,5;qO*kQaO,5;qOOQ#u'#Im'#ImOOQS,5<q,5<qOOQ#u,5:l,5:lOEbQ`O,5:rOEiQdO'#E}OF]Q`O'#FlOFeQ`O'#FlOFmQ`O,5:oOFrQaO'#E_OOQS,5:x,5:xOHyQ`O'#I]O9yQaO'#EaO9yQaO'#I]OOQS'#I]'#I]OIQQ`O'#I[OIYQ`O,5:xO-UQaO,5:xOI_QaO'#EgOOQS,5;Q,5;QOOQS,5;Z,5;ZOIiQ`O,5;ZOOQO,5>S,5>SOJ[QdO,5;gOOQO-E;f-E;fOL^Q`O,5;gOLcQpO,5;bO0aQ`O'#EyOLkQtO'#E}OOQS'#Ez'#EzOOQS'#Ib'#IbOM`QaO,5:wO*kQaO,5;nOOQS,5;p,5;pO*kQaO,5;pOMgQdO,5<POMwQdO,5<QONXQdO,5<RONiQdO,5<SO!!sQdO,5<SO!!zQdO,5<VO!#[Q`O'#FrO!#gQ`O'#IgO!#oQ`O,5<]OOQO-E;g-E;gO!#tQ`O'#IoO<_Q`O,5=iO!#|Q`O,5=iO9oQ`O,5=jO!$RQ`O,5=nO!$WQ`O,5=kO!$]Q`O,5=kO!$bQ`O'#FnO!$xQ`O,5<WO!%TQ`O,5<WO!%WQ`O,5?ZO!%]Q`O,5<WO!%eQ`O,5<bO!%mQdO'#GPO!%{QdO'#InO!&WQdO,5=wO!&`Q`O,5<bO!%WQ`O,5<bO!&hQdO,5<cO!&xQ`O,5<cO!'lQdO,5<qO!)nQdO,5<tO!*OOrO'#HsOOOQ'#It'#ItO*kQaO'#GbOOOQ'#Hs'#HsO!*pOrO,5<wOOQS,5<w,5<wO!*wQaO,5=OO!+OQ`O,5=QO!+WQeO,5=VO!+bQ`O,5=XO!+gQaO'#GoO!+WQeO,5=YO9yQaO'#GrO!+WQeO,5=]O!&WQdO,5=`O(tQdO,5=aOOQ#u,5=a,5=aO(tQdO,5=bOOQ#u,5=b,5=bO(tQdO,5=cOOQ#u,5=c,5=cO!+nQ`O,5=dO!+vQ`O,5=fO!+{QdO'#IvOOQS'#Iv'#IvO!&WQdO,5=gO>UQaO,5=hO!-eQ`O'#F}O!-jQdO'#IlO!&WQdO,5=iOOQ#u,5=j,5=jO!-uQ`O,5=lO!-xQ`O,5=mO!-}Q`O,5=nO!.YQdO,5=qOOQ#u,5=q,5=qO!.eQ`O,5=rO!.eQ`O,5=rO!.mQdO'#IwO!.{Q`O'#HXO!&WQdO,5=rO!/ZQ`O,5=rO!/fQdO'#IYO!&WQdO,5=vOOQ#u-E;_-E;_O!1RQ`O,5=kOOO#u,5:^,5:^O!1^O#|O,5:^OOO#u-E;^-E;^OOOO,5>p,5>pOOQ#y1G0S1G0SO!1fQ`O1G0XO*kQaO1G0XO!2xQ`O1G0pOOQS1G0p1G0pO!4[Q`O1G0pOOQS'#I_'#I_O*kQaO'#I_OOQS1G0q1G0qO!4cQ`O'#IaO!7lQ`O'#E}O!7yQaO'#EuOOQO'#Ia'#IaO!8TQ`O'#I`O!8]Q`O,5;_OOQS'#FQ'#FQOOQS1G1U1G1UO!8bQdO1G1]O!:dQdO1G1]O!<PQdO1G1]O!=lQdO1G1]O!?XQdO1G1]O!@tQdO1G1]O!BaQdO1G1]O!C|QdO1G1]O!EiQdO1G1]O!GUQdO1G1]O!HqQdO1G1]O!J^QdO1G1]O!KyQdO1G1]O!MfQdO1G1]O# RQdO1G1]O#!nQdO1G1]OOQT1G0^1G0^O!%WQ`O,5<WO#$ZQaO'#EXOOQS1G0Z1G0ZO#$bQ`O,5:yOFuQaO,5:yO#$gQaO,5:}O#$nQdO,5:{O#&jQdO,5>wO#(fQaO'#HdO#(vQ`O,5>vOOQS1G0d1G0dO#)OQ`O1G0dO#)TQ`O'#I^O#*mQ`O'#I^O#*uQ`O,5;ROIbQaO,5;ROOQS1G0u1G0uPOQO'#E}'#E}O#+fQdO1G1RO0aQ`O'#HgO#-hQtO,5;cO#.YQaO1G0|OOQS,5;e,5;eO#0iQtO,5;gO#0vQdO1G0cO*kQaO1G0cO#2cQdO1G1YO#4OQdO1G1[OOQO,5<^,5<^O#4`Q`O'#HjO#4nQ`O,5?ROOQO1G1w1G1wO#4vQ`O,5?ZO!&WQdO1G3TO<_Q`O1G3TOOQ#u1G3U1G3UO#4{Q`O1G3YO!1RQ`O1G3VO#5WQ`O1G3VO#5]QpO'#FoO#5kQ`O'#FoO#5{Q`O'#FoO#6WQ`O'#FoO#6`Q`O'#FsO#6eQ`O'#FtOOQO'#If'#IfO#6lQ`O'#IeO#6tQ`O,5<YOOQS1G1r1G1rO0aQ`O1G1rO#6yQ`O1G1rO#7OQ`O1G1rO!%WQ`O1G4uO#7ZQdO1G4uO!%WQ`O1G1rO#7iQ`O1G1|O!%WQ`O1G1|O9yQaO,5<kO#7qQdO'#HqO#8PQdO,5?YOOQ#u1G3c1G3cO*kQaO1G1|O0aQ`O1G1|O#8[QdO1G1}O7RQ`O'#FyO7RQ`O'#FzO#:nQ`O'#F{OOQS1G1}1G1}O!-xQ`O1G1}O!1UQ`O1G1}O!1RQ`O1G1}O#;eO`O,5<xO#;jO`O,5<xO#;uO!bO,5<yO#<TQ`O,5<|OOOQ-E;q-E;qOOQS1G2c1G2cO#<[QaO'#GeO#<uQ$VO1G2jO#AuQ`O1G2jO#BQQ`O'#GgO#B]Q`O'#GjOOQ#u1G2l1G2lO#BhQ`O1G2lOOQ#u'#Gl'#GlOOQ#u'#Iu'#IuOOQ#u1G2q1G2qO#BmQ`O1G2qO,zQ`O1G2sO#BrQaO,5=ZO#ByQ`O,5=ZOOQ#u1G2t1G2tO#COQ`O1G2tO#CTQ`O,5=^OOQ#u1G2w1G2wO#DgQ`O1G2wOOQ#u1G2z1G2zOOQ#u1G2{1G2{OOQ#u1G2|1G2|OOQ#u1G2}1G2}O#DlQ`O'#HxO9oQ`O'#HxO#DqQ$VO1G3OO#IwQ`O1G3QO9yQaO'#HwO#I|QdO,5=[OOQ#u1G3R1G3RO#JXQ`O1G3SO9yQaO,5<iO#J^QdO'#HpO#JlQdO,5?WOOQ#u1G3T1G3TOOQ#u1G3W1G3WO!-xQ`O1G3WOOQ#u1G3X1G3XO#KfQ`O'#HTOOQ#u1G3Y1G3YO#KmQ`O1G3YO0aQ`O1G3YOOQ#u1G3]1G3]O!&WQdO1G3^O#KrQ`O1G3^O#KzQdO'#HzO#L]QdO,5?cO#LhQ`O,5?cO#LmQ`O'#HYO7RQ`O'#HYO#LxQ`O'#IxO#MQQ`O,5=sOOQ#u1G3^1G3^O!.eQ`O1G3^O!.eQ`O1G3^O#MVQeO'#HbO#MgQdO,5>tOOQ#u1G3b1G3bOOQ#u1G3V1G3VO!-xQ`O1G3VO!1UQ`O1G3VOOO#u1G/x1G/xO*kQaO7+%sO#MuQdO7+%sOOQS7+&[7+&[O$ bQ`O,5>yO>UQaO,5;`O$ iQ`O,5;aO$#OQaO'#HfO$#YQ`O,5>zOOQS1G0y1G0yO$#bQ`O'#EYO$#gQ`O'#IXO$#oQ`O,5:sOOQS1G0e1G0eO$#tQ`O1G0eO$#yQ`O1G0iO9yQaO1G0iOOQO,5>O,5>OOOQO-E;b-E;bOOQS7+&O7+&OO>UQaO,5;SO$%`QaO'#HeO$%jQ`O,5>xOOQS1G0m1G0mO$%rQ`O1G0mOOQS,5>R,5>ROOQS-E;e-E;eO$%wQdO7+&hO$'yQtO1G1RO$(WQdO7+%}OOQS1G0i1G0iOOQO,5>U,5>UOOQO-E;h-E;hOOQ#u7+(o7+(oO!&WQdO7+(oOOQ#u7+(t7+(tO#KmQ`O7+(tO0aQ`O7+(tOOQ#u7+(q7+(qO!-xQ`O7+(qO!1UQ`O7+(qO!1RQ`O7+(qO$)sQ`O,5<ZO$*OQ`O,5<ZO$*WQ`O,5<_O$*]QpO,5<ZO>UQaO,5<ZOOQO,5<_,5<_O$*kQpO,5<`O$*sQ`O,5<`O$+OQ`O'#HkO$+iQ`O,5?POOQS1G1t1G1tO$+qQpO7+'^O$+yQ`O'#FuO$,UQ`O7+'^OOQS7+'^7+'^O0aQ`O7+'^O#6yQ`O7+'^O$,^QdO7+*aO0aQ`O7+*aO$,lQ`O7+'^O*kQaO7+'hO0aQ`O7+'hO$,wQ`O7+'hO$-PQdO1G2VOOQS,5>],5>]OOQS-E;o-E;oO$.iQdO7+'hO$.yQpO7+'hO$/RQdO'#IiOOQO,5<e,5<eOOQO,5<f,5<fO$/dQpO'#GOO$/lQ`O'#GOOOQO'#Ik'#IkOOQO'#Ho'#HoO$0]Q`O'#GOO<_Q`O'#F|O!&WQdO'#GOO!.YQdO'#GQO7RQ`O'#GROOQO'#Ij'#IjOOQO'#Hn'#HnO$0yQ`O,5<gOOQ#y,5<g,5<gOOQS7+'i7+'iO!-xQ`O7+'iO!1UQ`O7+'iOOOQ1G2d1G2dO$1pO`O1G2dO$1uO!bO1G2eO$2TO`O'#G`O$2YO`O1G2eOOOQ1G2h1G2hO$2_QaO,5=PO,zQ`O'#HtO$2xQ$VO7+(UOhQaO7+(UO,zQ`O'#HuO$7xQ`O7+(UO!&WQdO7+(UO$8TQ`O7+(UO$8YQaO'#GhO$:iQ`O'#GiOOQO'#Hv'#HvO$:qQ`O,5=ROOQ#u,5=R,5=RO$:|Q`O,5=UO!&WQdO7+(WO!&WQdO7+(]O!&WQdO7+(_O$;XQaO1G2uO$;`Q`O1G2uO$;eQaO1G2uO!&WQdO7+(`O9yQaO1G2xO!&WQdO7+(cO0aQ`O'#GyO9oQ`O,5>dOOQ#u,5>d,5>dOOQ#u-E;v-E;vO$;lQaO7+(lO$<TQdO,5>cOOQS-E;u-E;uO!&WQdO7+(nO$=mQdO1G2TOOQS,5>[,5>[OOQS-E;n-E;nOOQ#u7+(r7+(rO$?nQ`O'#GQO$?uQ`O'#GQO$@ZQ`O'#HUOOQO'#Hy'#HyO$@`Q`O,5=oOOQ#u,5=o,5=oO$@gQpO7+(tOOQ#u7+(x7+(xO!&WQdO7+(xO$@rQdO,5>fOOQS-E;x-E;xO$AQQdO1G4}O$A]Q`O,5=tO$AbQ`O,5=tO$AmQ`O'#H{O$BRQ`O,5?dOOQS1G3_1G3_O#KrQ`O7+(xO$BZQdO,5=|OOQS-E;`-E;`O$CvQdO<<I_OOQS1G4e1G4eO$EcQ`O1G0zOOQO,5>Q,5>QOOQO-E;d-E;dO$8YQaO,5:tO$FxQaO'#HcO$GVQ`O,5>sOOQS1G0_1G0_OOQS7+&P7+&PO$G_Q`O7+&TO$HtQ`O1G0nO$JZQ`O,5>POOQO,5>P,5>POOQO-E;c-E;cOOQS7+&X7+&XOOQS7+&T7+&TOOQ#u<<LZ<<LZOOQ#u<<L`<<L`O$@gQpO<<L`OOQ#u<<L]<<L]O!-xQ`O<<L]O!1UQ`O<<L]O>UQaO1G1uO$KsQ`O1G1uO$LOQ`O1G1yOOQO1G1y1G1yO$LTQ`O1G1uO$L]Q`O1G1uO$MrQ`O1G1zO>UQaO1G1zOOQO,5>V,5>VOOQO-E;i-E;iOOQS<<Jx<<JxO$M}Q`O'#IhO$NVQ`O'#IhO$N[Q`O,5<aO0aQ`O<<JxO$+qQpO<<JxO$NaQ`O<<JxO0aQ`O<<M{O$NiQtO<<M{O#6yQ`O<<JxO$NwQdO<<KSO% XQpO<<KSO*kQaO<<KSO0aQ`O<<KSO% aQdO'#HmO% xQdO,5?TO!&WQdO,5<jO$/dQpO,5<jO%!ZQ`O,5<jO<_Q`O,5<hO!.YQdO,5<lOOQO-E;m-E;mO!&WQdO,5<hOOQO,5<j,5<jOOQO,5<l,5<lO%!tQdO,5<mOOQO-E;l-E;lOOQ#y1G2R1G2ROOQS<<KT<<KTO!-xQ`O<<KTOOOQ7+(O7+(OO%#PO`O7+(POOOO,5<z,5<zOOOQ7+(P7+(POhQaO,5>`OOQ#u-E;r-E;rOhQaO<<KpOOQ#u<<Kp<<KpO$8TQ`O,5>aOOQO-E;s-E;sO!&WQdO<<KpO$8TQ`O<<KpO%#UQ`O<<KpO%#ZQ`O,5=SO%$pQaO,5=TOOQO-E;t-E;tOOQ#u1G2m1G2mOOQ#u<<Kr<<KrOOQ#u<<Kw<<KwOOQ#u<<Ky<<KyOOQT7+(a7+(aO%%QQ`O7+(aO%%VQaO7+(aO%%^Q`O7+(aOOQ#u<<Kz<<KzO%%cQ`O7+(dO%&xQ`O7+(dOOQ#u<<K}<<K}O%&}QpO,5=eOOQ#u1G4O1G4OO%'YQ`O<<LWOOQ#u<<LY<<LYO$?uQ`O,5<lO%'_Q`O,5=pO%'dQdO,5=pOOQO-E;w-E;wOOQ#u1G3Z1G3ZO#KmQ`O<<L`OOQ#u<<Ld<<LdO%'oQ`O1G4QO%'tQdO7+*iOOQO1G3`1G3`O%(PQ`O1G3`O%(UQ`O'#HZO7RQ`O'#HZOOQO,5>g,5>gOOQO-E;y-E;yO!&WQdO<<LdO%(aQ`O1G0`OOQO,5=},5=}OOQO-E;a-E;aO>UQaO,5;TOOQ#uANAzANAzO#KmQ`OANAzOOQ#uANAwANAwO!-xQ`OANAwO%)vQ`O7+'aO>UQaO7+'aOOQO7+'e7+'eO%+]Q`O7+'aO%+hQ`O7+'eO>UQaO7+'fO%+mQ`O7+'fO%-SQ`O'#HlO%-bQ`O,5?SO%-bQ`O,5?SOOQO1G1{1G1{O$+qQpOAN@dOOQSAN@dAN@dO0aQ`OAN@dO%-jQtOANCgO%-xQ`OAN@dO*kQaOAN@nO%.QQdOAN@nO%.bQpOAN@nOOQS,5>X,5>XOOQS-E;k-E;kOOQO1G2U1G2UO!&WQdO1G2UO$/dQpO1G2UO<_Q`O1G2SO!.YQdO1G2WO!&WQdO1G2SOOQO1G2W1G2WOOQO1G2S1G2SO%.jQaO'#GSOOQO1G2X1G2XOOQSAN@oAN@oOOOQ<<Kk<<KkOOQ#u1G3z1G3zOOQ#uANA[ANA[OOQO1G3{1G3{O%0iQ`OANA[O!&WQdOANA[O%0nQaO1G2nO%1OQaO1G2oOOQT<<K{<<K{O%1`Q`O<<K{O%1eQaO<<K{O*kQaO,5=_OOQT<<LO<<LOOOQO1G3P1G3PO%1lQ`O1G3PO!+WQeOANArO%1qQdO1G3[OOQO1G3[1G3[O%1|Q`O1G3[OOQS7+)l7+)lOOQO7+(z7+(zO%2UQ`O,5=uO%2ZQ`O,5=uOOQ#uANBOANBOO%2fQ`O1G0oOOQ#uG27fG27fOOQ#uG27cG27cO%3{Q`O<<J{O>UQaO<<J{OOQO<<KP<<KPO%5bQ`O<<KQOOQO,5>W,5>WO%6wQ`O,5>WOOQO-E;j-E;jO%6|Q`O1G4nOOQSG26OG26OO$+qQpOG26OO0aQ`OG26OO%7UQdOG26YO*kQaOG26YOOQO7+'p7+'pO!&WQdO7+'pO!&WQdO7+'nOOQO7+'r7+'rOOQO7+'n7+'nO%7fQ`OLD+tO%8uQ`O'#E}O%9PQ`O'#IZO!&WQdO'#HrO%:|QaO,5<nOOQO,5<n,5<nO!&WQdOG26vOOQ#uG26vG26vO%<{QaO7+(YOOQTANAgANAgO%=]Q`OANAgO%=bQ`O1G2yOOQO7+(k7+(kOOQ#uG27^G27^O%=iQ`OG27^OOQO7+(v7+(vO%=nQ`O7+(vO!&WQdO7+(vOOQO1G3a1G3aO%=vQ`O1G3aO%={Q`OAN@gOOQO1G3r1G3rOOQSLD+jLD+jO$+qQpOLD+jO%?bQdOLD+tOOQO<<K[<<K[OOQO<<KY<<KYO%?rQ`O,5<oO%?wQ`O,5<pOOQP,5>^,5>^OOQP-E;p-E;pOOQO1G2Y1G2YOOQ#uLD,bLD,bOOQTG27RG27RO!&WQdOLD,xO!&WQdO<<LbOOQO<<Lb<<LbOOQO7+({7+({OOQS!$( U!$( UOOQS1G2Z1G2ZOOQS1G2[1G2[O%@PQdO1G2[OOQ#u!$(!d!$(!dOOQOANA|ANA|OOQS7+'v7+'vO%@[Q`O'#E{O%@[Q`O'#E{O%@aQ`O,5;gO%@fQdO,5<cO%BbQaO,5:}O*kQaO1G0iO%BiQaO'#FwO#.YQaO'#GVO#.YQaO'#GYO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO#.YQaO,5;qO%BpQdO'#I]O%D`QdO'#I]O#.YQaO'#EaO#.YQaO'#I]O%FbQaO,5:wO#.YQaO,5;nO#.YQaO,5;pO%FiQdO,5<PO%HeQdO,5<QO%JaQdO,5<RO%L]QdO,5<SO%NXQdO,5<SO%NoQdO,5<VO&!kQdO,5<tO#.YQaO1G0XO&$gQdO1G1]O&&cQdO1G1]O&(_QdO1G1]O&*ZQdO1G1]O&,VQdO1G1]O&.RQdO1G1]O&/}QdO1G1]O&1yQdO1G1]O&3uQdO1G1]O&5qQdO1G1]O&7mQdO1G1]O&9iQdO1G1]O&;eQdO1G1]O&=aQdO1G1]O&?]QdO1G1]O&AXQdO,5:{O&CTQdO,5>wO&EPQdO1G0cO#.YQaO1G0cO&F{QdO1G1YO&HwQdO1G1[O#.YQaO1G1|O#.YQaO7+%sO&JsQdO7+%sO&LoQdO7+%}O#.YQaO7+'hO&NkQdO7+'hO'!gQdO<<I_O'$cQdO<<KSO#.YQaO<<KSO#.YQaOAN@nO'&_QdOAN@nO'(ZQdOG26YO#.YQaOG26YO'*VQdOLD+tO',RQaO,5:}O'.QQaO1G0iO'/|QdO'#IWO'0aQeO'#FUO'4aQeO'#FUO#.YQaO'#FeO'.QQaO'#FeO#.YQaO'#FfO'.QQaO'#FfO#.YQaO'#FgO'.QQaO'#FgO#.YQaO'#FhO'.QQaO'#FhO#.YQaO'#FhO'.QQaO'#FhO#.YQaO'#FkO'.QQaO'#FkO'8gQaO,5:mO'8nQ`O,5<bO'8vQ`O1G0XO'.QQaO1G0|O':YQ`O1G1|O':bQ`O7+'hO':jQpO7+'hO':rQpO<<KSO':zQpOAN@nO';SQaO'#FwO'.QQaO'#GVO'.QQaO'#GYO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO,5;qO'.QQaO'#EaO'.QQaO'#I]O'=RQaO,5:wO'.QQaO,5;nO'.QQaO,5;pO'?QQdO,5<PO'ASQdO,5<QO'CUQdO,5<RO'EWQdO,5<SO'GYQdO,5<SO'GvQdO,5<VO'IxQdO,5<tO'.QQaO1G0XO'KzQdO1G1]O'M|QdO1G1]O(!OQdO1G1]O($QQdO1G1]O(&SQdO1G1]O((UQdO1G1]O(*WQdO1G1]O(,YQdO1G1]O(.[QdO1G1]O(0^QdO1G1]O(2`QdO1G1]O(4bQdO1G1]O(6dQdO1G1]O(8fQdO1G1]O(:hQdO1G1]O(<jQdO,5:{O(>lQdO,5>wO(@nQdO1G0cO'.QQaO1G0cO(BpQdO1G1YO(DrQdO1G1[O'.QQaO1G1|O'.QQaO7+%sO(FtQdO7+%sO(HvQdO7+%}O'.QQaO7+'hO(JxQdO7+'hO(LzQdO<<I_O(N|QdO<<KSO'.QQaO<<KSO'.QQaOAN@nO)#OQdOAN@nO)%QQdOG26YO'.QQaOG26YO)'SQdOLD+tO))UQaO,5:}O#.YQaO1G0iO))]Q`O'#FvO))eQpO,5;bO))mQ`O,5<bO!%WQ`O,5<bO!%WQ`O1G1|O0aQ`O1G1|O0aQ`O7+'hO0aQ`O<<KSO))uQdO,5<cO)+wQdO'#I]O)-vQdO'#IWO).aQaO,5:mO).hQ`O,5<bO).pQ`O1G0XO)0SQ`O1G1|O)0[Q`O7+'hO)0dQpO7+'hO)0lQpO<<KSO)0tQpOAN@nO0aQ`O'#EvO9yQaO'#FeO9yQaO'#FfO9yQaO'#FgO9yQaO'#FhO9yQaO'#FhO9yQaO'#FkO)0|QaO'#FwO9yQaO'#GVO9yQaO'#GYO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO9yQaO,5;qO)1TQ`O'#FlO*kQaO'#EaO*kQaO'#I]O)1]QaO,5:wO9yQaO,5;nO9yQaO,5;pO)1dQdO,5<PO)3`QdO,5<QO)5[QdO,5<RO)7WQdO,5<SO)9SQdO,5<SO)9jQdO,5<VO);fQdO,5<cO)=bQdO,5<tO)?^Q`O'#IvO)@sQ`O'#IYO9yQaO1G0XO)BYQdO1G1]O)DUQdO1G1]O)FQQdO1G1]O)G|QdO1G1]O)IxQdO1G1]O)KtQdO1G1]O)MpQdO1G1]O* lQdO1G1]O*#hQdO1G1]O*%dQdO1G1]O*'`QdO1G1]O*)[QdO1G1]O*+WQdO1G1]O*-SQdO1G1]O*/OQdO1G1]O*0zQaO,5:}O*1RQdO,5:{O*1cQdO,5>wO*1sQaO'#HdO*2TQ`O,5>vO*2]QdO1G0cO9yQaO1G0cO*4XQdO1G1YO*6TQdO1G1[O9yQaO1G1|O>UQaO'#HwO*8PQ`O,5=[O*8XQaO'#HbO*8cQ`O,5>tO9yQaO7+%sO*8kQdO7+%sO*:gQ`O1G0iO>UQaO1G0iO*;|QdO7+%}O9yQaO7+'hO*=xQdO7+'hO*?tQ`O,5>cO*AZQ`O,5=|O*BpQdO<<I_O*DlQ`O7+&TO*FRQdO<<KSO9yQaO<<KSO9yQaOAN@nO*G}QdOAN@nO*IyQdOG26YO9yQaOG26YO*KuQdOLD+tO*MqQaO,5:}O9yQaO1G0iO*MxQdO'#I]O*NcQ`O'#FvO*NkQ`O,5<bO!%WQ`O,5<bO!%WQ`O1G1|O0aQ`O1G1|O0aQ`O7+'hO0aQ`O<<KSO*NsQdO'#IWO+ ^QeO'#FUO+ zQaO'#FUO+#sQaO'#FUO+%`QaO'#FUO>UQaO'#FeO>UQaO'#FfO>UQaO'#FgO>UQaO'#FhO>UQaO'#FhO>UQaO'#FkO+'XQaO'#FwO>UQaO'#GVO>UQaO'#GYO+'`QaO,5:mO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO>UQaO,5;qO+'gQ`O'#I]O$8YQaO'#EaO+)PQaOG26YO$8YQaO'#I]O+*{Q`O'#I[O++TQaO,5:wO>UQaO,5;nO>UQaO,5;pO++[Q`O,5<PO+,wQ`O,5<QO+.dQ`O,5<RO+0PQ`O,5<SO+1lQ`O,5<SO+3XQ`O,5<VO+4tQ`O,5<bO+4|Q`O,5<cO+6iQ`O,5<tO+8UQ`O1G0XO>UQaO1G0XO+9hQ`O1G1]O+;TQ`O1G1]O+<pQ`O1G1]O+>]Q`O1G1]O+?xQ`O1G1]O+AeQ`O1G1]O+CQQ`O1G1]O+DmQ`O1G1]O+FYQ`O1G1]O+GuQ`O1G1]O+IbQ`O1G1]O+J}Q`O1G1]O+LjQ`O1G1]O+NVQ`O1G1]O, rQ`O1G1]O,#_Q`O1G0cO>UQaO1G0cO,$zQ`O1G1YO,&gQ`O1G1[O,(SQ`O1G1|O>UQaO1G1|O>UQaO7+%sO,([Q`O7+%sO,)wQ`O7+%}O>UQaO7+'hO,+dQ`O7+'hO,+lQ`O7+'hO,-XQpO7+'hO,-aQ`O<<I_O,.|Q`O<<KSO,0iQpO<<KSO>UQaO<<KSO>UQaOAN@nO,0qQ`OAN@nO,2^QpOAN@nO,2fQ`OG26YO>UQaOG26YO,4RQ`OLD+tO,5nQaO,5:}O>UQaO1G0iO,5uQ`O'#I]O$8YQaO'#FeO$8YQaO'#FfO$8YQaO'#FgO$8YQaO'#FhO$8YQaO'#FhO+)PQaO'#FhO$8YQaO'#FkO,6SQaO'#FwO,6ZQaO'#FwO$8YQaO'#GVO+)PQaO'#GVO$8YQaO'#GYO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO$8YQaO,5;qO+)PQaO,5;qO,8YQ`O'#FlO>UQaO'#EaO>UQaO'#I]O,8bQaO,5:wO,8iQaO,5:wO$8YQaO,5;nO+)PQaO,5;nO$8YQaO,5;pO,:hQ`O,5<PO,<TQ`O,5<QO,=pQ`O,5<RO,?]Q`O,5<SO,@xQ`O,5<SO,BeQ`O,5<SO,CtQ`O,5<VO,EaQ`O,5<cO%7fQ`O,5<cO,F|Q`O,5<tO$8YQaO1G0XO+)PQaO1G0XO,HiQ`O1G1]O,JUQ`O1G1]O,KeQ`O1G1]O,MQQ`O1G1]O,NaQ`O1G1]O- |Q`O1G1]O-#]Q`O1G1]O-$xQ`O1G1]O-&XQ`O1G1]O-'tQ`O1G1]O-)TQ`O1G1]O-*pQ`O1G1]O-,PQ`O1G1]O--lQ`O1G1]O-.{Q`O1G1]O-0hQ`O1G1]O-1wQ`O1G1]O-3dQ`O1G1]O-4sQ`O1G1]O-6`Q`O1G1]O-7oQ`O1G1]O-9[Q`O1G1]O-:kQ`O1G1]O-<WQ`O1G1]O-=gQ`O1G1]O-?SQ`O1G1]O-@cQ`O1G1]O-BOQ`O1G1]O-C_Q`O1G1]O-DzQ`O1G1]O-FZQ`O,5:{O-GvQ`O,5>wO-IcQ`O1G0cO-KOQ`O1G0cO$8YQaO1G0cO+)PQaO1G0cO-L_Q`O1G1YO-MzQ`O1G1YO. ZQ`O1G1[O$8YQaO1G1|O$8YQaO7+%sO+)PQaO7+%sO.!vQ`O7+%sO.$cQ`O7+%sO.%rQ`O7+%}O.'_Q`O7+%}O$8YQaO7+'hO.(nQ`O7+'hO.*ZQ`O<<I_O.+vQ`O<<I_O.-VQ`O<<KSO$8YQaO<<KSO$8YQaOAN@nO..rQ`OAN@nO.0_Q`OG26YO$8YQaOG26YO.1zQ`OLD+tO.3gQaO,5:}O.3nQaO,5:}O$8YQaO1G0iO+)PQaO1G0iO.5mQ`O'#I]O.7PQ`O'#I]O.:fQ`O'#IWO.:vQ`O'#FvO.;OQaO,5:mO.;VQ`O,5<bO.;_Q`O,5<bO!%WQ`O,5<bO.;gQ`O1G0XO.<yQ`O,5:{O.>fQ`O,5>wO.@RQ`O1G1|O!%WQ`O1G1|O0aQ`O1G1|O0aQ`O7+'hO.@ZQ`O7+'hO.@cQpO7+'hO.@kQpO<<KSO0aQ`O<<KSO.@sQpOAN@nO.@{Q`O'#IWO.A]Q`O'#IWO.CSQaO,5:mO.CZQaO,5:mO.CbQ`O,5<bO.CjQ`O7+'hO.CrQ`O1G0XO.EUQ`O1G0XO.FhQ`O1G1|O.FpQ`O7+'hO.FxQpO7+'hO.GQQpOAN@nO.GYQpO<<KSO.GbQpOAN@nO.GjQ`O'#FvO.GrQ`O'#FlO.GzQ`O,5<bO!%WQ`O,5<bO!%WQ`O1G1|O0aQ`O1G1|O0aQ`O7+'hO0aQ`O<<KSO.HSQ`O'#FvO.H[Q`O,5<bO.HdQ`O,5<bO!%WQ`O,5<bO!%WQ`O1G1|O!%WQ`O1G1|O0aQ`O1G1|O0aQ`O<<KSO0aQ`O7+'hO0aQ`O<<KSO.HlQ`O'#FlO.HtQ`O'#FlO.H|Q`O'#Fl",
            stateData: ".Ic~O!dOS!eOS&vOS!gQQ~O!iTO&wRO~OPgOQ|OS!lOU^OW}OX!XO[mO]!_O^!WO`![Oa!SOb!]Ok!dOm!lOowOp!TOq!UOsuOt!gOu!VOv!POxkOykO|!bO}`O!O]O!P!eO!QxO!R}O!TpO!UlO!VlO!W!YO!X!QO!YzO!Z!cO![!ZO!]!^O!^!fO!`!`O!a!RO!cjO!mWO!oXO!sYO!y[O#W_O#bhO#daO#ebO#peO$ToO$]nO$^oO$aqO$drO$l!kO$zyO${!OO$}}O%O}O%V|O'g{O~O!g!mO~O&wRO!i!hX&p!hX&t!hX~O!i!pO~O!d!qO!e!qO!g!mO&t!tO&v!qO~PhO!n!vO~PhOT'VXz'VX!S'VX!b'VX!m'VX!o'VX!v'VX!y'VX#S'VX#W'VX#`'VX#a'VX#p#qX#s'VX#z'VX#{'VX#|'VX#}'VX$O'VX$Q'VX$R'VX$S'VX$T'VX$U'VX$V'VX$W'VX$z'VX&s'VX~O!q!xO~P&sOT#TOz#RO!S#UO!b#VO!m#cO!o!{O!v!yO!y!}O#S#QO#W!zO#`!|O#a!|O#s#PO#z#SO#{#WO#|#XO#}#YO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dO&s#cO~OPgOQ|OU^OW}O[mOowOs#hOxkOykO}`O!O]O!QxO!R}O!TpO!UlO!VlO!YzO!cjO!s#gO!y[O#W_O#bhO#daO#ebO#peO$ToO$]nO$^oO$aqO$zyO${!OO$}}O%O}O%V|O'g{O~O!y[O~O!y#kO~OP6]OQ|OU^OW}O[6`Oo=YOs#hOx6^Oy6^O}`O!O]O!Q6dO!R}O!T6cO!U6_O!V6_O!Y6fO!c8fO!s#gO!y[O#S#oO#U#nO#W_O#bhO#daO#ebO#peO$T6bO$]6aO$^6bO$aqO$z6eO${!OO$}}O%O}O%V|O'g{O#X'OP~O!}#sO~P-UO!y#tO~O#b#vO#daO#ebO~O#p#xO~O!s#yO~OU$PO!R$PO!s$OO!v#}O#p2XO~OT&zXz&zX!S&zX!b&zX!m&zX!o&zX!v&zX!y&zX#S&zX#W&zX#`&zX#a&zX#s&zX#z&zX#{&zX#|&zX#}&zX$O&zX$Q&zX$R&zX$S&zX$T&zX$U&zX$V&zX$W&zX$z&zX&s&zX!x&zX!n&zX~O#u$RO#w$SO~P0rOP6]OQ|OU^OW}O[6`Oo=YOs#hOx6^Oy6^O}`O!O]O!Q6dO!R}O!T6cO!U6_O!V6_O!Y6fO!c8fO!s#gO!y[O#W_O#bhO#daO#ebO#peO$T6bO$]6aO$^6bO$aqO$z6eO${!OO$}}O%O}O%V|O'g{OT#xXz#xX!S#xX!b#xX!m#xX!o#xX!v#xX#`#xX#a#xX#s#xX#z#xX#{#xX#|#xX#}#xX$O#xX$Q#xX$R#xX$S#xX$U#xX$V#xX$W#xX&s#xX!x#xX!n#xX~Or$UO#S6yO#U6xO~P2yO!s#gO#peO~OS$gO]$bOk$eOm$gOs$aO!`$cO$drO$l$fO~O!s$kO!y$hO#S$jO~Oo$mOs$lO#b$nO~O!y$hO#S$rO~O$l$tO~P*kOR$zO!o$yO#b$xO#e$yO&q$zO~O'f$|O~P8lO!y%RO~O!y%TO~O!s%VO~O!m#cO&s#cO~P*kO!oXO~O!y%_O~OP6]OQ|OU^OW}O[6`Oo=YOs#hOx6^Oy6^O}`O!O]O!Q6dO!R}O!T6cO!U6_O!V6_O!Y6fO!c8fO!s#gO!y[O#W_O#bhO#daO#ebO#peO$T6bO$]6aO$^6bO$aqO$z6eO${!OO$}}O%O}O%V|O'g{O~O!y%cO~O!s%dO~O]$bO~O!s%hO~O!s%iO~O!s%jO~O!oXO!s#gO#peO~O]%rOs%rO!o%pO!s#gO#p%nO~O!s%vO~O!i%wO&t%wO&wRO~O&t%zO~PhO!n%{O~PhOPgOQ|OU^OW}O[8lOo=yOs#hOx8jOy8jO}`O!O]O!Q8pO!R}O!T8oO!U8kO!V8kO!Y8rO!c8iO!s#gO!y[O#W_O#bhO#daO#ebO#peO$T8nO$]8mO$^8nO$aqO$z8qO${!OO$}}O%O}O%V|O'g{O~O!q%}O~P>UO#X&PO~P>UO!o&SO!s&RO#b&RO~OPgOQ|OU^OW}O[8lOo=yOs#hOx8jOy8jO}`O!O]O!Q8pO!R}O!T8oO!U8kO!V8kO!Y8rO!c8iO!s&VO!y[O#U&WO#W_O#bhO#daO#ebO#peO$T8nO$]8mO$^8nO$aqO$z8qO${!OO$}}O%O}O%V|O'g{O~O!x'SP~PAOO!s&[O#b&[O~OT#TOz#RO!S#UO!b#VO!o!{O!v!yO!y!}O#S#QO#W!zO#`!|O#a!|O#s#PO#z#SO#{#WO#|#XO#}#YO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dO~O!x&nO~PCqO!x'VX!}'VX#O'VX#X'VX!n'VXV'VX!q'VX#u'VX#w'VXw'VX~P&sO!y$hO#S&oO~Oo$mOs$lO~O!o&pO~O!}&sO#S;dO#U;cO!x'OP~P9yOT6iOz6gO!S6jO!b6kO!o!{O!v8sO!y!}O#S#QO#W!zO#`!|O#a!|O#s#PO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}'PX#X'PX~O#O&tO~PGSO!}&wO#X'OX~O#X&yO~O!}'OO!x'QP~P9yO!n'PO~PCqO!m#oa!o#oa#S#oa#p#qX&s#oa!x#oa#O#oaw#oa~OT#oaz#oa!S#oa!b#oa!v#oa!y#oa#W#oa#`#oa#a#oa#s#oa#z#oa#{#oa#|#oa#}#oa$O#oa$Q#oa$R#oa$S#oa$T#oa$U#oa$V#oa$W#oa$z#oa!}#oa#X#oa!n#oaV#oa!q#oa#u#oa#w#oa~PIpO!s'RO~O!x'UO#l'SO~O!x'VX#l'VX#p#qX#S'VX#U'VX#b'VX!o'VX#O'VXw'VX!m'VX&s'VX~O#S'YO~P*kO!m$Xa&s$Xa!x$Xa!n$Xa~PCqO!m$Ya&s$Ya!x$Ya!n$Ya~PCqO!m$Za&s$Za!x$Za!n$Za~PCqO!m$[a&s$[a!x$[a!n$[a~PCqO!o!{O!y!}O#W!zO#`!|O#a!|O#s#PO$z#dOT$[a!S$[a!b$[a!m$[a!v$[a#S$[a#z$[a#{$[a#|$[a#}$[a$O$[a$Q$[a$R$[a$S$[a$T$[a$U$[a$V$[a$W$[a&s$[a!x$[a!n$[a~Oz#RO~PNyO!m$_a&s$_a!x$_a!n$_a~PCqO!y!}O!}$fX#X$fX~O!}'^O#X'ZX~O#X'`O~O!s$kO#S'aO~O]'cO~O!s'eO~O!s'fO~O$l'gO~O!`'mO#S'kO#U'lO#b'jO$drO!x'XP~P0aO!^'sO!oXO!q'rO~O!s'uO!y$hO~O!y$hO#S'wO~O!y$hO#S'yO~O#u'zO!m$sX!}$sX&s$sX~O!}'{O!m'bX&s'bX~O!m#cO&s#cO~O!q(PO#O(OO~O!m$ka&s$ka!x$ka!n$ka~PCqOl(ROw(SO!o(TO!y!}O~O!o!{O!y!}O#W!zO#`!|O#a!|O#s#PO~OT$yaz$ya!S$ya!b$ya!m$ya!v$ya#S$ya#z$ya#{$ya#|$ya#}$ya$O$ya$Q$ya$R$ya$S$ya$T$ya$U$ya$V$ya$W$ya$z$ya&s$ya!x$ya!}$ya#O$ya#X$ya!n$ya!q$yaV$ya#u$ya#w$ya~P!'WO!m$|a&s$|a!x$|a!n$|a~PCqO#W([O#`(YO#a(YO&r(ZOR&gX!o&gX#b&gX#e&gX&q&gX'f&gX~O'f(_O~P8lO!q(`O~PhO!o(cO!q(dO~O!q(`O&s(gO~PhO!a(kO~O!m(lO~P9yOZ(wOn(xO~O!s(zO~OT6iOz6gO!S6jO!b6kO!v8sO!}({O#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!m'jX&s'jX~P!'WO#u)PO~O!})QO!m'`X&s'`X~Ol(RO!o(TO~Ow(SO!o)WO!q)ZO~O!m#cO!oXO&s#cO~O!o%pO!s#yO~OV)aO!})_O!m'kX&s'kX~O])cOs)cO!s#gO#peO~O!o%pO!s#gO#p)hO~OT6iOz6gO!S6jO!b6kO!v8sO!})iO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!m&|X&s&|X#O&|X~P!'WOl(ROw(SO!o(TO~O!i)oO&t)oO~OT8vOz8tO!S8wO!b8xO!q)pO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#X)rO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO~P!'WO!n)rO~PCqOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x'TX!}'TX~P!'WOT'VXz'VX!S'VX!b'VX!o'VX!v'VX!y'VX#S'VX#W'VX#`'VX#a'VX#p#qX#s'VX#z'VX#{'VX#|'VX#}'VX$O'VX$Q'VX$R'VX$S'VX$T'VX$U'VX$V'VX$W'VX$z'VX~O!q)tO!x'VX!}'VX~P!5xO!x#iX!}#iX~P>UO!})vO!x'SX~O!x)xO~O$z#dOT#yiz#yi!S#yi!b#yi!m#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi$V#yi$W#yi&s#yi!x#yi!}#yi#O#yi#X#yi!n#yi!q#yiV#yi#u#yi#w#yi~P!'WOz#RO#S#QO#z#SO#{#WO#|#XO#}#YO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi&s#yi!x#yi!n#yi~P!'WOz#RO!v!yO#S#QO#z#SO#{#WO#|#XO#}#YO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT#yi!S#yi!b#yi!m#yi&s#yi!x#yi!n#yi~P!'WOT#TOz#RO!b#VO!v!yO#S#QO#z#SO#{#WO#|#XO#}#YO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dO!S#yi!m#yi&s#yi!x#yi!n#yi~P!'WOT#TOz#RO!v!yO#S#QO#z#SO#{#WO#|#XO#}#YO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dO!S#yi!b#yi!m#yi&s#yi!x#yi!n#yi~P!'WOz#RO#S#QO#|#XO#}#YO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#z#yi#{#yi&s#yi!x#yi!n#yi~P!'WOz#RO#S#QO#}#YO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#z#yi#{#yi#|#yi&s#yi!x#yi!n#yi~P!'WOz#RO#S#QO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#z#yi#{#yi#|#yi#}#yi&s#yi!x#yi!n#yi~P!'WOz#RO#S#QO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#z#yi#{#yi#|#yi#}#yi$O#yi&s#yi!x#yi!n#yi~P!'WOz#RO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi&s#yi!x#yi!n#yi~P!'WOz#RO$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi&s#yi!x#yi!n#yi~P!'WOz#RO$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi&s#yi!x#yi!n#yi~P!'WOz#RO$T#`O$V#bO$W#bO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$U#yi&s#yi!x#yi!n#yi~P!'WOz#RO$V#bO$W#bO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi&s#yi!x#yi!n#yi~P!'WOz#RO$S#_O$T#`O$V#bO$W#bO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$U#yi&s#yi!x#yi!n#yi~P!'WOz#RO$W#bO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi$V#yi&s#yi!x#yi!n#yi~P!'WO_)yO~P9yO!x)|O~O#S*PO~P9yOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}#Ta#X#Ta#O#Ta!m#Ta&s#Ta!x#Ta!n#TaV#Ta!q#Ta~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}'Pa#X'Pa#O'Pa!m'Pa&s'Pa!x'Pa!n'PaV'Pa!q'Pa~P!'WO#S#oO#U#nO!}&WX#X&WX~P9yO!}&wO#X'Oa~O#X*SO~OT6iOz6gO!S6jO!b6kO!v8sO!}*UO#O*TO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!x'QX~P!'WO!}*UO!x'QX~O!x*WO~O!m#oi!o#oi#S#oi#p#qX&s#oi!x#oi#O#oiw#oi~OT#oiz#oi!S#oi!b#oi!v#oi!y#oi#W#oi#`#oi#a#oi#s#oi#z#oi#{#oi#|#oi#}#oi$O#oi$Q#oi$R#oi$S#oi$T#oi$U#oi$V#oi$W#oi$z#oi!}#oi#X#oi!n#oiV#oi!q#oi#u#oi#w#oi~P#*zO#l'SO!x#ka#S#ka#U#ka#b#ka!o#ka#O#kaw#ka!m#ka&s#ka~OPgOQ|OU^OW}O[4OOo5xOs#hOx3zOy3zO}`O!O]O!Q2^O!R}O!T4UO!U3|O!V3|O!Y2`O!c3xO!s#gO!y[O#W_O#bhO#daO#ebO#peO$T4SO$]4QO$^4SO$aqO$z2_O${!OO$}}O%O}O%V|O'g{O~O#l#oa#U#oa#b#oa~PIpOz#RO!v!yO#S#QO#z#SO#{#WO#|#XO#}#YO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT#Pi!S#Pi!b#Pi!m#Pi&s#Pi!x#Pi!n#Pi~P!'WOz#RO!v!yO#S#QO#z#SO#{#WO#|#XO#}#YO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT#vi!S#vi!b#vi!m#vi&s#vi!x#vi!n#vi~P!'WO!m#xi&s#xi!x#xi!n#xi~PCqO!s#gO#peO!}&^X#X&^X~O!}'^O#X'Za~O!s'uO~Ow(SO!o)WO!q*fO~O!s*jO~O#S*lO#U*mO#b*kO#l'SO~O#S*lO#U*mO#b*kO$drO~P0aO#u*oO!x$cX!}$cX~O#U*mO#b*kO~O#b*pO~O#b*rO~P0aO!}*sO!x'XX~O!x*uO~O!y*wO~O!^*{O!oXO!q*zO~O!q*}O!o'ci!m'ci&s'ci~O!q+QO#O+PO~O#b$nO!m&eX!}&eX&s&eX~O!}'{O!m'ba&s'ba~OT$kiz$ki!S$ki!b$ki!m$ki!o$ki!v$ki!y$ki#S$ki#W$ki#`$ki#a$ki#s$ki#u#fa#w#fa#z$ki#{$ki#|$ki#}$ki$O$ki$Q$ki$R$ki$S$ki$T$ki$U$ki$V$ki$W$ki$z$ki&s$ki!x$ki!}$ki#O$ki#X$ki!n$ki!q$kiV$ki~OS+^O]+aOm+^Os$aO!^+dO!_+^O!`+^O!n+hO#b$nO$aqO$drO~P0aO!s+lO~O#W+nO#`+mO#a+mO~O!s+pO#b+pO$}+pO%T+oO~O!n+qO~PCqOc%XXd%XXh%XXj%XXf%XXg%XXe%XX~PhOc+uOd+sOP%WiQ%WiS%WiU%WiW%WiX%Wi[%Wi]%Wi^%Wi`%Wia%Wib%Wik%Wim%Wio%Wip%Wiq%Wis%Wit%Wiu%Wiv%Wix%Wiy%Wi|%Wi}%Wi!O%Wi!P%Wi!Q%Wi!R%Wi!T%Wi!U%Wi!V%Wi!W%Wi!X%Wi!Y%Wi!Z%Wi![%Wi!]%Wi!^%Wi!`%Wi!a%Wi!c%Wi!m%Wi!o%Wi!s%Wi!y%Wi#W%Wi#b%Wi#d%Wi#e%Wi#p%Wi$T%Wi$]%Wi$^%Wi$a%Wi$d%Wi$l%Wi$z%Wi${%Wi$}%Wi%O%Wi%V%Wi&p%Wi'g%Wi&t%Wi!n%Wih%Wij%Wif%Wig%WiY%Wi_%Wii%Wie%Wi~Oc+yOd+vOh+xO~OY+zO_+{O!n,OO~OY+zO_+{Oi%^X~Oi,QO~Oj,RO~O!m,TO~P9yO!m,VO~Of,WO~OT6iOV,XOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO~P!'WOg,YO~O!y,ZO~OZ(wOn(xOP%liQ%liS%liU%liW%liX%li[%li]%li^%li`%lia%lib%lik%lim%lio%lip%liq%lis%lit%liu%liv%lix%liy%li|%li}%li!O%li!P%li!Q%li!R%li!T%li!U%li!V%li!W%li!X%li!Y%li!Z%li![%li!]%li!^%li!`%li!a%li!c%li!m%li!o%li!s%li!y%li#W%li#b%li#d%li#e%li#p%li$T%li$]%li$^%li$a%li$d%li$l%li$z%li${%li$}%li%O%li%V%li&p%li'g%li&t%li!n%lic%lid%lih%lij%lif%lig%liY%li_%lii%lie%li~O#u,_O~O!}({O!m%da&s%da~O!x,bO~O!s%dO!m&dX!}&dX&s&dX~O!})QO!m'`a&s'`a~OS+^OY,iOm+^Os$aO!^+dO!_+^O!`+^O$aqO$drO~O!n,lO~P#JwO!o)WO~O!o%pO!s'RO~O!s#gO#peO!m&nX!}&nX&s&nX~O!})_O!m'ka&s'ka~O!s,rO~OV,sO!n%|X!}%|X~O!},uO!n'lX~O!n,wO~O!m&UX!}&UX&s&UX#O&UX~P9yO!})iO!m&|a&s&|a#O&|a~Oz#RO#S#QO#z#SO#{#WO#|#XO#}#YO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT!uq!S!uq!b!uq!m!uq!v!uq&s!uq!x!uq!n!uq~P!'WO!n,|O~PCqOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x#ia!}#ia~P!'WO!x&YX!}&YX~PAOO!})vO!x'Sa~O#O-QO~O!}-RO!n&{X~O!n-TO~O!x-UO~OT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}#Vi#X#Vi~P!'WO!x&XX!}&XX~P9yO!}*UO!x'Qa~O!x-[O~OT#jqz#jq!S#jq!b#jq!m#jq!v#jq#S#jq#u#jq#w#jq#z#jq#{#jq#|#jq#}#jq$O#jq$Q#jq$R#jq$S#jq$T#jq$U#jq$V#jq$W#jq$z#jq&s#jq!x#jq!}#jq#O#jq#X#jq!n#jq!q#jqV#jq~P!'WO#l#oi#U#oi#b#oi~P#*zOz#RO!v!yO#S#QO#z#SO#{#WO#|#XO#}#YO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT#Pq!S#Pq!b#Pq!m#Pq&s#Pq!x#Pq!n#Pq~P!'WO#u-dO!x$ca!}$ca~O#U-fO#b-eO~O#b-gO~O#S-hO#U-fO#b-eO#l'SO~O#b-jO#l'SO~O#u-kO!x$ha!}$ha~O!`'mO#S'kO#U'lO#b'jO$drO!x&_X!}&_X~P0aO!}*sO!x'Xa~O!oXO#l'SO~O#S-pO#b-oO!x'[P~O!oXO!q-rO~O!q-uO!o'cq!m'cq&s'cq~O!^-wO!oXO!q-rO~O!q-{O#O-zO~OT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!m$si!}$si&s$si~P!'WO!m$jq&s$jq!x$jq!n$jq~PCqO#O-zO#l'SO~O!}-|Ow']X!o']X!m']X&s']X~O#b$nO#l'SO~OS+^O].ROm+^Os$aO!_+^O!`+^O#b$nO$aqO$drO~P0aOS+^O].ROm+^Os$aO!_+^O!`+^O#b$nO$aqO~P0aOS+^O]+aOm+^Os$aO!^+dO!_+^O!`+^O!n.ZO#b$nO$aqO$drO~P0aO!s.^O~O!s._O#b._O$}._O%T+oO~O$}.`O~O#X.aO~Oc%Xad%Xah%Xaj%Xaf%Xag%Xae%Xa~PhOc.dOd+sOP%WqQ%WqS%WqU%WqW%WqX%Wq[%Wq]%Wq^%Wq`%Wqa%Wqb%Wqk%Wqm%Wqo%Wqp%Wqq%Wqs%Wqt%Wqu%Wqv%Wqx%Wqy%Wq|%Wq}%Wq!O%Wq!P%Wq!Q%Wq!R%Wq!T%Wq!U%Wq!V%Wq!W%Wq!X%Wq!Y%Wq!Z%Wq![%Wq!]%Wq!^%Wq!`%Wq!a%Wq!c%Wq!m%Wq!o%Wq!s%Wq!y%Wq#W%Wq#b%Wq#d%Wq#e%Wq#p%Wq$T%Wq$]%Wq$^%Wq$a%Wq$d%Wq$l%Wq$z%Wq${%Wq$}%Wq%O%Wq%V%Wq&p%Wq'g%Wq&t%Wq!n%Wqh%Wqj%Wqf%Wqg%WqY%Wq_%Wqi%Wqe%Wq~Oc.iOd+vOh.hO~O!q(`O~OP6]OQ|OU^OW}O[:fOo>ROs#hOx:dOy:dO}`O!O]O!Q:kO!R}O!T:jO!U:eO!V:eO!Y:oO!c8gO!s#gO!y[O#W_O#bhO#daO#ebO#peO$T:hO$]:gO$^:hO$aqO$z:mO${!OO$}}O%O}O%V|O'g{O~O!m.lO!q.lO~OY+zO_+{O!n.nO~OY+zO_+{Oi%^a~O!x.rO~P>UO!m.tO~O!m.tO~P9yOQ|OW}O!R}O$}}O%O}O%V|O'g{O~OT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!m&ka!}&ka&s&ka~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!m$qi!}$qi&s$qi~P!'WOS+^Om+^Os$aO!_+^O!`+^O$aqO$drO~OY/PO~P$?VOS+^Om+^Os$aO!_+^O!`+^O$aqO~O!s/QO~O!n/SO~P#JwOw(SO!o)WO#l'SO~OV/VO!m&na!}&na&s&na~O!})_O!m'ki&s'ki~O!s/XO~OV/YO!n%|a!}%|a~O]/[Os/[O!s#gO#peO!n&oX!}&oX~O!},uO!n'la~OT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!m&Ua!}&Ua&s&Ua#O&Ua~P!'WOz#RO#S#QO#z#SO#{#WO#|#XO#}#YO$O#ZO$Q#]O$R#^O$S#_O$T#`O$U#aO$V#bO$W#bO$z#dOT!uy!S!uy!b!uy!m!uy!v!uy&s!uy!x!uy!n!uy~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x#hi!}#hi~P!'WO_)yO!n&VX!}&VX~P9yO!}-RO!n&{a~OT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}#Vq#X#Vq~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x#[i!}#[i~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#O/cO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!x&Xa!}&Xa~P!'WO#u/iO!x$ci!}$ci~O#b/jO~O#U/lO#b/kO~OT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x$ci!}$ci~P!'WO#u/mO!x$hi!}$hi~O!}/oO!x'[X~O#b/qO~O!x/rO~O!oXO!q/uO~O#l'SO!o'cy!m'cy&s'cy~O!m$jy&s$jy!x$jy!n$jy~PCqO#O/xO#l'SO~O!s#gO#peOw&aX!o&aX!}&aX!m&aX&s&aX~O!}-|Ow']a!o']a!m']a&s']a~OU$PO]0QO!R$PO!s$OO!v#}O#b$nO#p2XO~P$?uO!m#cO!o0VO&s#cO~O#X0YO~Oh0_O~OT:tOz:pO!S:vO!b:xO!m0`O!q0`O!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO~P!'WOY%]a_%]a!n%]ai%]a~PhO!x0bO~O!x0bO~P>UO!m0dO~OT6iOz6gO!S6jO!b6kO!v8sO!x0fO#O0eO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO~P!'WO!x0fO~O!x0gO#b0hO#l'SO~O!x0iO~O!s0jO~O!m#cO#u0lO&s#cO~O!s0mO~O!})_O!m'kq&s'kq~O!s0nO~OV0oO!n%}X!}%}X~OT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!n!|i!}!|i~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x$cq!}$cq~P!'WO#u0vO!x$cq!}$cq~O#b0wO~OT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x$hq!}$hq~P!'WO#S0zO#b0yO!x&`X!}&`X~O!}/oO!x'[a~O#l'SO!o'c!R!m'c!R&s'c!R~O!oXO!q1PO~O!m$j!R&s$j!R!x$j!R!n$j!R~PCqO#O1RO#l'SO~OP6]OU^O[9WOo>SOs#hOx9WOy9WO}`O!O]O!Q:lO!T9WO!U9WO!V9WO!Y9WO!c8hO!n1^O!s1YO!y[O#W_O#bhO#daO#ebO#peO$T:iO$]9WO$^:iO$aqO$z:nO${!OO~P$;lOh1_O~OY%[i_%[i!n%[ii%[i~PhOY%]i_%]i!n%]ii%]i~PhO!x1bO~O!x1bO~P>UO!x1eO~O!m#cO#u1iO&s#cO~O$}1jO%V1jO~O!s1kO~OV1lO!n%}a!}%}a~OT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x#]i!}#]i~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x$cy!}$cy~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x$hy!}$hy~P!'WO#b1nO~O!}/oO!x'[i~O!m$j!Z&s$j!Z!x$j!Z!n$j!Z~PCqOT:uOz:qO!S:wO!b:yO!v=nO#S#QO#z:sO#{:{O#|:}O#};PO$O;RO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dO~P!'WOV1uO{1tO~P!5xOV1uO{1tOT&}Xz&}X!S&}X!b&}X!o&}X!v&}X!y&}X#S&}X#W&}X#`&}X#a&}X#s&}X#u&}X#w&}X#z&}X#{&}X#|&}X#}&}X$O&}X$Q&}X$R&}X$S&}X$T&}X$U&}X$V&}X$W&}X$z&}X~OP6]OU^O[9WOo>SOs#hOx9WOy9WO}`O!O]O!Q:lO!T9WO!U9WO!V9WO!Y9WO!c8hO!n1xO!s1YO!y[O#W_O#bhO#daO#ebO#peO$T:iO$]9WO$^:iO$aqO$z:nO${!OO~P$;lOY%[q_%[q!n%[qi%[q~PhO!x1zO~O!x%gi~PCqOe1{O~O$}1|O%V1|O~O!s2OO~OT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x$c!R!}$c!R~P!'WO!m$j!c&s$j!c!x$j!c!n$j!c~PCqO!s2QO~O!`2SO!s2RO~O!s2VO!m$xi&s$xi~O!s'WO~O!s*]O~OT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m$ka#u$ka#w$ka&s$ka!x$ka!n$ka!q$ka#X$ka!}$ka~P!'WO#S2]O~P*kO$l$tO~P#.YOT6iOz6gO!S6jO!b6kO!v8sO#O2[O#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!m'PX&s'PX!x'PX!n'PX~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#O3uO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}'PX#X'PX#u'PX#w'PX!m'PX&s'PX!x'PX!n'PXV'PX!q'PX~P!'WO#S3dO~P#.YOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m$Xa#u$Xa#w$Xa&s$Xa!x$Xa!n$Xa!q$Xa#X$Xa!}$Xa~P!'WOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m$Ya#u$Ya#w$Ya&s$Ya!x$Ya!n$Ya!q$Ya#X$Ya!}$Ya~P!'WOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m$Za#u$Za#w$Za&s$Za!x$Za!n$Za!q$Za#X$Za!}$Za~P!'WOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m$[a#u$[a#w$[a&s$[a!x$[a!n$[a!q$[a#X$[a!}$[a~P!'WOz2aO#u$[a#w$[a!q$[a#X$[a!}$[a~PNyOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m$_a#u$_a#w$_a&s$_a!x$_a!n$_a!q$_a#X$_a!}$_a~P!'WOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m$|a#u$|a#w$|a&s$|a!x$|a!n$|a!q$|a#X$|a!}$|a~P!'WOz2aO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#u#yi#w#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOz2aO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT#yi!S#yi!b#yi!m#yi#u#yi#w#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOT2cOz2aO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!S#yi!m#yi#u#yi#w#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOT2cOz2aO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!S#yi!b#yi!m#yi#u#yi#w#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOz2aO#S#QO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#u#yi#w#yi#z#yi#{#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOz2aO#S#QO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#u#yi#w#yi#z#yi#{#yi#|#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOz2aO#S#QO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOz2aO#S#QO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOz2aO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOz2aO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOz2aO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOz2aO$T2nO$V2pO$W2pO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$U#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOz2aO$V2pO$W2pO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOz2aO$S2mO$T2nO$V2pO$W2pO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$U#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOz2aO$W2pO$z#dOT#yi!S#yi!b#yi!m#yi!v#yi#S#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi$V#yi&s#yi!x#yi!n#yi!q#yi#X#yi!}#yi~P!'WOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m#Ta#u#Ta#w#Ta&s#Ta!x#Ta!n#Ta!q#Ta#X#Ta!}#Ta~P!'WOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m'Pa#u'Pa#w'Pa&s'Pa!x'Pa!n'Pa!q'Pa#X'Pa!}'Pa~P!'WOz2aO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT#Pi!S#Pi!b#Pi!m#Pi#u#Pi#w#Pi&s#Pi!x#Pi!n#Pi!q#Pi#X#Pi!}#Pi~P!'WOz2aO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT#vi!S#vi!b#vi!m#vi#u#vi#w#vi&s#vi!x#vi!n#vi!q#vi#X#vi!}#vi~P!'WOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m#xi#u#xi#w#xi&s#xi!x#xi!n#xi!q#xi#X#xi!}#xi~P!'WOz2aO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT!uq!S!uq!b!uq!m!uq!v!uq#u!uq#w!uq&s!uq!x!uq!n!uq!q!uq#X!uq!}!uq~P!'WOz2aO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT#Pq!S#Pq!b#Pq!m#Pq#u#Pq#w#Pq&s#Pq!x#Pq!n#Pq!q#Pq#X#Pq!}#Pq~P!'WOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m$jq#u$jq#w$jq&s$jq!x$jq!n$jq!q$jq#X$jq!}$jq~P!'WOz2aO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dOT!uy!S!uy!b!uy!m!uy!v!uy#u!uy#w!uy&s!uy!x!uy!n!uy!q!uy#X!uy!}!uy~P!'WOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m$jy#u$jy#w$jy&s$jy!x$jy!n$jy!q$jy#X$jy!}$jy~P!'WOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m$j!R#u$j!R#w$j!R&s$j!R!x$j!R!n$j!R!q$j!R#X$j!R!}$j!R~P!'WOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m$j!Z#u$j!Z#w$j!Z&s$j!Z!x$j!Z!n$j!Z!q$j!Z#X$j!Z!}$j!Z~P!'WOT2cOz2aO!S2dO!b2eO!v4WO#S#QO#z2bO#{2fO#|2gO#}2hO$O2iO$Q2kO$R2lO$S2mO$T2nO$U2oO$V2pO$W2pO$z#dO!m$j!c#u$j!c#w$j!c&s$j!c!x$j!c!n$j!c!q$j!c#X$j!c!}$j!c~P!'WOP6]OU^O[4POo8^Os#hOx3{Oy3{O}`O!O]O!Q4aO!T4VO!U3}O!V3}O!Y4cO!c3yO!s#gO!y[O#S3vO#W_O#bhO#daO#ebO#peO$T4TO$]4RO$^4TO$aqO$z4bO${!OO~P$;lOP6]OU^O[4POo8^Os#hOx3{Oy3{O}`O!O]O!Q4aO!T4VO!U3}O!V3}O!Y4cO!c3yO!s#gO!y[O#W_O#bhO#daO#ebO#peO$T4TO$]4RO$^4TO$aqO$z4bO${!OO~P$;lO#u2uO#w2vO!q&zX#X&zX!}&zX~P0rOP6]OU^O[4POo8^Or2wOs#hOx3{Oy3{O}`O!O]O!Q4aO!T4VO!U3}O!V3}O!Y4cO!c3yO!s#gO!y[O#S2tO#U2sO#W_O#bhO#daO#ebO#peO$T4TO$]4RO$^4TO$aqO$z4bO${!OOT#xXz#xX!S#xX!b#xX!m#xX!o#xX!v#xX#`#xX#a#xX#s#xX#u#xX#w#xX#z#xX#{#xX#|#xX#}#xX$O#xX$Q#xX$R#xX$S#xX$U#xX$V#xX$W#xX&s#xX!x#xX!n#xX!q#xX#X#xX!}#xX~P$;lOP6]OU^O[4POo8^Or4xOs#hOx3{Oy3{O}`O!O]O!Q4aO!T4VO!U3}O!V3}O!Y4cO!c3yO!s#gO!y[O#S4uO#U4tO#W_O#bhO#daO#ebO#peO$T4TO$]4RO$^4TO$aqO$z4bO${!OOT#xXz#xX!S#xX!b#xX!o#xX!v#xX!}#xX#O#xX#X#xX#`#xX#a#xX#s#xX#u#xX#w#xX#z#xX#{#xX#|#xX#}#xX$O#xX$Q#xX$R#xX$S#xX$U#xX$V#xX$W#xX!m#xX&s#xX!x#xX!n#xXV#xX!q#xX~P$;lO!q3PO~P>UO!q5}O#O3gO~OT8vOz8tO!S8wO!b8xO!q3hO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO~P!'WO!q6OO#O3kO~O!q6PO#O3oO~O#O3oO#l'SO~O#O3pO#l'SO~O#O3sO#l'SO~OP6]OU^O[4POo8^Os#hOx3{Oy3{O}`O!O]O!Q4aO!T4VO!U3}O!V3}O!Y4cO!c3yO!s#gO!y[O#W_O#bhO#daO#ebO#peO$T4TO$]4RO$^4TO$aqO$l$tO$z4bO${!OO~P$;lOP6]OU^O[4POo8^Os#hOx3{Oy3{O}`O!O]O!Q4aO!T4VO!U3}O!V3}O!Y4cO!c3yO!s#gO!y[O#S5eO#W_O#bhO#daO#ebO#peO$T4TO$]4RO$^4TO$aqO$z4bO${!OO~P$;lOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}$Xa#O$Xa#X$Xa#u$Xa#w$Xa!m$Xa&s$Xa!x$Xa!n$XaV$Xa!q$Xa~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}$Ya#O$Ya#X$Ya#u$Ya#w$Ya!m$Ya&s$Ya!x$Ya!n$YaV$Ya!q$Ya~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}$Za#O$Za#X$Za#u$Za#w$Za!m$Za&s$Za!x$Za!n$ZaV$Za!q$Za~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}$[a#O$[a#X$[a#u$[a#w$[a!m$[a&s$[a!x$[a!n$[aV$[a!q$[a~P!'WOz4dO!}$[a#O$[a#X$[a#u$[a#w$[aV$[a!q$[a~PNyOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}$_a#O$_a#X$_a#u$_a#w$_a!m$_a&s$_a!x$_a!n$_aV$_a!q$_a~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}$|a#O$|a#X$|a#u$|a#w$|a!m$|a&s$|a!x$|a!n$|aV$|a!q$|a~P!'WOz4dO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#X#yi#u#yi#w#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz4dO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT#yi!S#yi!b#yi!}#yi#O#yi#X#yi#u#yi#w#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOT4fOz4dO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!S#yi!}#yi#O#yi#X#yi#u#yi#w#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOT4fOz4dO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!S#yi!b#yi!}#yi#O#yi#X#yi#u#yi#w#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz4dO#S#QO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#X#yi#u#yi#w#yi#z#yi#{#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz4dO#S#QO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#X#yi#u#yi#w#yi#z#yi#{#yi#|#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz4dO#S#QO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#X#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz4dO#S#QO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#X#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz4dO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz4dO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz4dO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz4dO$T4qO$V4sO$W4sO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$U#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz4dO$V4sO$W4sO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz4dO$S4pO$T4qO$V4sO$W4sO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$U#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz4dO$W4sO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#u#yi#w#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi$V#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}#Ta#O#Ta#X#Ta#u#Ta#w#Ta!m#Ta&s#Ta!x#Ta!n#TaV#Ta!q#Ta~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}'Pa#O'Pa#X'Pa#u'Pa#w'Pa!m'Pa&s'Pa!x'Pa!n'PaV'Pa!q'Pa~P!'WOz4dO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT#Pi!S#Pi!b#Pi!}#Pi#O#Pi#X#Pi#u#Pi#w#Pi!m#Pi&s#Pi!x#Pi!n#PiV#Pi!q#Pi~P!'WOz4dO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT#vi!S#vi!b#vi!}#vi#O#vi#X#vi#u#vi#w#vi!m#vi&s#vi!x#vi!n#viV#vi!q#vi~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}#xi#O#xi#X#xi#u#xi#w#xi!m#xi&s#xi!x#xi!n#xiV#xi!q#xi~P!'WOz4dO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT!uq!S!uq!b!uq!v!uq!}!uq#O!uq#X!uq#u!uq#w!uq!m!uq&s!uq!x!uq!n!uqV!uq!q!uq~P!'WOz4dO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT#Pq!S#Pq!b#Pq!}#Pq#O#Pq#X#Pq#u#Pq#w#Pq!m#Pq&s#Pq!x#Pq!n#PqV#Pq!q#Pq~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}$jq#O$jq#X$jq#u$jq#w$jq!m$jq&s$jq!x$jq!n$jqV$jq!q$jq~P!'WOz4dO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dOT!uy!S!uy!b!uy!v!uy!}!uy#O!uy#X!uy#u!uy#w!uy!m!uy&s!uy!x!uy!n!uyV!uy!q!uy~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}$jy#O$jy#X$jy#u$jy#w$jy!m$jy&s$jy!x$jy!n$jyV$jy!q$jy~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}$j!R#O$j!R#X$j!R#u$j!R#w$j!R!m$j!R&s$j!R!x$j!R!n$j!RV$j!R!q$j!R~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}$j!Z#O$j!Z#X$j!Z#u$j!Z#w$j!Z!m$j!Z&s$j!Z!x$j!Z!n$j!ZV$j!Z!q$j!Z~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}$j!c#O$j!c#X$j!c#u$j!c#w$j!c!m$j!c&s$j!c!x$j!c!n$j!cV$j!c!q$j!c~P!'WO#S5wO~P#.YO!y$hO#S5{O~O!x4ZO#l'SO~O!y$hO#S5|O~OT4fOz4dO!S4gO!b4hO!v6TO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!}$ka#O$ka#X$ka#u$ka#w$ka!m$ka&s$ka!x$ka!n$kaV$ka!q$ka~P!'WOT4fOz4dO!S4gO!b4hO!v6TO#O5vO#S#QO#z4eO#{4iO#|4jO#}4kO$O4lO$Q4nO$R4oO$S4pO$T4qO$U4rO$V4sO$W4sO$z#dO!m'PX#u'PX#w'PX&s'PX!x'PX!n'PX!q'PX#X'PX!}'PX~P!'WO#u4vO#w4wO!}&zX#O&zX#X&zXV&zX!q&zX~P0rO!q5QO~P>UO!q8bO#O5hO~OT8vOz8tO!S8wO!b8xO!q5iO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO~P!'WO!q8cO#O5lO~O!q8dO#O5pO~O#O5pO#l'SO~O#O5qO#l'SO~O#O5tO#l'SO~O$l$tO~P9yOo5zOs$lO~O#S7oO~P9yOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}$Xa#O$Xa#X$Xa!m$Xa&s$Xa!x$Xa!n$XaV$Xa!q$Xa~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}$Ya#O$Ya#X$Ya!m$Ya&s$Ya!x$Ya!n$YaV$Ya!q$Ya~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}$Za#O$Za#X$Za!m$Za&s$Za!x$Za!n$ZaV$Za!q$Za~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}$[a#O$[a#X$[a!m$[a&s$[a!x$[a!n$[aV$[a!q$[a~P!'WOz6gO!}$[a#O$[a#X$[aV$[a!q$[a~PNyOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}$_a#O$_a#X$_a!m$_a&s$_a!x$_a!n$_aV$_a!q$_a~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}$ka#O$ka#X$ka!m$ka&s$ka!x$ka!n$kaV$ka!q$ka~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}$|a#O$|a#X$|a!m$|a&s$|a!x$|a!n$|aV$|a!q$|a~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO!}7sO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x'jX~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO!}7uO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x&|X~P!'WOz6gO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#X#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz6gO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT#yi!S#yi!b#yi!}#yi#O#yi#X#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOT6iOz6gO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!S#yi!}#yi#O#yi#X#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOT6iOz6gO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!S#yi!b#yi!}#yi#O#yi#X#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz6gO#S#QO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#X#yi#z#yi#{#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz6gO#S#QO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#X#yi#z#yi#{#yi#|#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz6gO#S#QO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#X#yi#z#yi#{#yi#|#yi#}#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz6gO#S#QO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#X#yi#z#yi#{#yi#|#yi#}#yi$O#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz6gO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#z#yi#{#yi#|#yi#}#yi$O#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz6gO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz6gO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz6gO$T6tO$V6vO$W6vO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$U#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz6gO$V6vO$W6vO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz6gO$S6sO$T6tO$V6vO$W6vO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$U#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WOz6gO$W6vO$z#dOT#yi!S#yi!b#yi!v#yi!}#yi#O#yi#S#yi#X#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi$V#yi!m#yi&s#yi!x#yi!n#yiV#yi!q#yi~P!'WO#S7zO~P>UO!m#Ta&s#Ta!x#Ta!n#Ta~PCqO!m'Pa&s'Pa!x'Pa!n'Pa~PCqO#S;dO#U;cO!x&WX!}&WX~P9yO!}7lO!x'Oa~Oz6gO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT#Pi!S#Pi!b#Pi!}#Pi#O#Pi#X#Pi!m#Pi&s#Pi!x#Pi!n#PiV#Pi!q#Pi~P!'WOz6gO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT#vi!S#vi!b#vi!}#vi#O#vi#X#vi!m#vi&s#vi!x#vi!n#viV#vi!q#vi~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}#xi#O#xi#X#xi!m#xi&s#xi!x#xi!n#xiV#xi!q#xi~P!'WO!}7sO!x%da~O!x&UX!}&UX~P>UO!}7uO!x&|a~Oz6gO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT!uq!S!uq!b!uq!v!uq!}!uq#O!uq#X!uq!m!uq&s!uq!x!uq!n!uqV!uq!q!uq~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x#Vi!}#Vi~P!'WOz6gO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT#Pq!S#Pq!b#Pq!}#Pq#O#Pq#X#Pq!m#Pq&s#Pq!x#Pq!n#PqV#Pq!q#Pq~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}$jq#O$jq#X$jq!m$jq&s$jq!x$jq!n$jqV$jq!q$jq~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x&ka!}&ka~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x&Ua!}&Ua~P!'WOz6gO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dOT!uy!S!uy!b!uy!v!uy!}!uy#O!uy#X!uy!m!uy&s!uy!x!uy!n!uyV!uy!q!uy~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x#Vq!}#Vq~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}$jy#O$jy#X$jy!m$jy&s$jy!x$jy!n$jyV$jy!q$jy~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}$j!R#O$j!R#X$j!R!m$j!R&s$j!R!x$j!R!n$j!RV$j!R!q$j!R~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}$j!Z#O$j!Z#X$j!Z!m$j!Z&s$j!Z!x$j!Z!n$j!ZV$j!Z!q$j!Z~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!}$j!c#O$j!c#X$j!c!m$j!c&s$j!c!x$j!c!n$j!cV$j!c!q$j!c~P!'WO#S8[O~P9yO#O8ZO!m'PX&s'PX!x'PX!n'PXV'PX!q'PX~PGSO!y$hO#S8`O~O!y$hO#S8aO~O#u6zO#w6{O!}&zX#O&zX#X&zXV&zX!q&zX~P0rOr6|O#S#oO#U#nO!}#xX#O#xX#X#xXV#xX!q#xX~P2yOr;iO#S9XO#U9VOT#xXz#xX!S#xX!b#xX!m#xX!o#xX!q#xX!v#xX#`#xX#a#xX#s#xX#z#xX#{#xX#|#xX#}#xX$O#xX$Q#xX$R#xX$S#xX$U#xX$V#xX$W#xX!n#xX!}#xX~P9yOr9WO#S9WO#U9WOT#xXz#xX!S#xX!b#xX!o#xX!v#xX#`#xX#a#xX#s#xX#z#xX#{#xX#|#xX#}#xX$O#xX$Q#xX$R#xX$S#xX$U#xX$V#xX$W#xX~P9yOr9]O#S;dO#U;cOT#xXz#xX!S#xX!b#xX!o#xX!q#xX!v#xX#`#xX#a#xX#s#xX#z#xX#{#xX#|#xX#}#xX$O#xX$Q#xX$R#xX$S#xX$U#xX$V#xX$W#xX#X#xX!x#xX!}#xX~P9yO$l$tO~P>UO!q7XO~P>UOT6iOz6gO!S6jO!b6kO!v8sO#O7iO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!x'PX!}'PX~P!'WOP6]OU^O[9WOo>SOs#hOx9WOy9WO}`O!O]O!Q:lO!T9WO!U9WO!V9WO!Y9WO!c8hO!s#gO!y[O#W_O#bhO#daO#ebO#peO$T:iO$]9WO$^:iO$aqO$z:nO${!OO~P$;lO!}7lO!x'OX~O#S9yO~P>UOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!q$Xa#X$Xa!x$Xa!}$Xa~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!q$Ya#X$Ya!x$Ya!}$Ya~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!q$Za#X$Za!x$Za!}$Za~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!q$[a#X$[a!x$[a!}$[a~P!'WOz8tO$z#dOT$[a!S$[a!b$[a!q$[a!v$[a#S$[a#z$[a#{$[a#|$[a#}$[a$O$[a$Q$[a$R$[a$S$[a$T$[a$U$[a$V$[a$W$[a#X$[a!x$[a!}$[a~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!q$_a#X$_a!x$_a!}$_a~P!'WO!q=dO#O7rO~OT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!q$ka#X$ka!x$ka!}$ka~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!q$|a#X$|a!x$|a!}$|a~P!'WOT8vOz8tO!S8wO!b8xO!q7wO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO~P!'WOz8tO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT#yi!S#yi!b#yi!q#yi!v#yi#X#yi!x#yi!}#yi~P!'WOz8tO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT#yi!S#yi!b#yi!q#yi#X#yi!x#yi!}#yi~P!'WOT8vOz8tO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!S#yi!q#yi#X#yi!x#yi!}#yi~P!'WOT8vOz8tO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!S#yi!b#yi!q#yi#X#yi!x#yi!}#yi~P!'WOz8tO#S#QO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT#yi!S#yi!b#yi!q#yi!v#yi#z#yi#{#yi#X#yi!x#yi!}#yi~P!'WOz8tO#S#QO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT#yi!S#yi!b#yi!q#yi!v#yi#z#yi#{#yi#|#yi#X#yi!x#yi!}#yi~P!'WOz8tO#S#QO$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT#yi!S#yi!b#yi!q#yi!v#yi#z#yi#{#yi#|#yi#}#yi#X#yi!x#yi!}#yi~P!'WOz8tO#S#QO$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT#yi!S#yi!b#yi!q#yi!v#yi#z#yi#{#yi#|#yi#}#yi$O#yi#X#yi!x#yi!}#yi~P!'WOz8tO$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT#yi!S#yi!b#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi#X#yi!x#yi!}#yi~P!'WOz8tO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT#yi!S#yi!b#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi#X#yi!x#yi!}#yi~P!'WOz8tO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT#yi!S#yi!b#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi#X#yi!x#yi!}#yi~P!'WOz8tO$T9RO$V9TO$W9TO$z#dOT#yi!S#yi!b#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$U#yi#X#yi!x#yi!}#yi~P!'WOz8tO$V9TO$W9TO$z#dOT#yi!S#yi!b#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi#X#yi!x#yi!}#yi~P!'WOz8tO$S9QO$T9RO$V9TO$W9TO$z#dOT#yi!S#yi!b#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$U#yi#X#yi!x#yi!}#yi~P!'WOz8tO$W9TO$z#dOT#yi!S#yi!b#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi$V#yi#X#yi!x#yi!}#yi~P!'WOz8tO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT#Pi!S#Pi!b#Pi!q#Pi#X#Pi!x#Pi!}#Pi~P!'WOz8tO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT#vi!S#vi!b#vi!q#vi#X#vi!x#vi!}#vi~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!q#xi#X#xi!x#xi!}#xi~P!'WO!q=eO#O7|O~Oz8tO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT!uq!S!uq!b!uq!q!uq!v!uq#X!uq!x!uq!}!uq~P!'WOz8tO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT#Pq!S#Pq!b#Pq!q#Pq#X#Pq!x#Pq!}#Pq~P!'WO!q=iO#O8TO~OT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!q$jq#X$jq!x$jq!}$jq~P!'WO#O8TO#l'SO~Oz8tO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dOT!uy!S!uy!b!uy!q!uy!v!uy#X!uy!x!uy!}!uy~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!q$jy#X$jy!x$jy!}$jy~P!'WO#O8UO#l'SO~OT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!q$j!R#X$j!R!x$j!R!}$j!R~P!'WO#O8XO#l'SO~OT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!q$j!Z#X$j!Z!x$j!Z!}$j!Z~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!q$j!c#X$j!c!x$j!c!}$j!c~P!'WO#S:bO~P>UO#O:aO!q'PX!x'PX~PGSO$l$tO~P$8YOP6]OU^O[9WOo>SOs#hOx9WOy9WO}`O!O]O!Q:lO!T9WO!U9WO!V9WO!Y9WO!c8hO!s#gO!y[O#W_O#bhO#daO#ebO#peO$T:iO$]9WO$^:iO$aqO$l$tO$z:nO${!OO~P$;lOo8_Os$lO~O#S<jO~P$8YOP6]OU^O[9WOo>SOs#hOx9WOy9WO}`O!O]O!Q:lO!T9WO!U9WO!V9WO!Y9WO!c8hO!s#gO!y[O#S<kO#W_O#bhO#daO#ebO#peO$T:iO$]9WO$^:iO$aqO$z:nO${!OO~P$;lOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m$Xa!q$Xa!n$Xa!}$Xa~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m$Ya!q$Ya!n$Ya!}$Ya~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m$Za!q$Za!n$Za!}$Za~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m$[a!q$[a!n$[a!}$[a~P!'WOz:pO$z#dOT$[a!S$[a!b$[a!m$[a!q$[a!v$[a#S$[a#z$[a#{$[a#|$[a#}$[a$O$[a$Q$[a$R$[a$S$[a$T$[a$U$[a$V$[a$W$[a!n$[a!}$[a~P!'WOz:qO$z#dOT$[a!S$[a!b$[a!v$[a#S$[a#z$[a#{$[a#|$[a#}$[a$O$[a$Q$[a$R$[a$S$[a$T$[a$U$[a$V$[a$W$[a~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m$_a!q$_a!n$_a!}$_a~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m$ka!q$ka!n$ka!}$ka~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m$|a!q$|a!n$|a!}$|a~P!'WOz:pO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT#yi!S#yi!b#yi!m#yi!q#yi!v#yi!n#yi!}#yi~P!'WOz:qO#S#QO#z:sO#{:{O#|:}O#};PO$O;RO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT#yi!S#yi!b#yi!v#yi~P!'WOz:pO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT#yi!S#yi!b#yi!m#yi!q#yi!n#yi!}#yi~P!'WOz:qO!v=nO#S#QO#z:sO#{:{O#|:}O#};PO$O;RO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT#yi!S#yi!b#yi~P!'WOT:tOz:pO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!S#yi!m#yi!q#yi!n#yi!}#yi~P!'WOT:uOz:qO!b:yO!v=nO#S#QO#z:sO#{:{O#|:}O#};PO$O;RO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dO!S#yi~P!'WOT:tOz:pO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!S#yi!b#yi!m#yi!q#yi!n#yi!}#yi~P!'WOT:uOz:qO!v=nO#S#QO#z:sO#{:{O#|:}O#};PO$O;RO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dO!S#yi!b#yi~P!'WOz:pO#S#QO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT#yi!S#yi!b#yi!m#yi!q#yi!v#yi#z#yi#{#yi!n#yi!}#yi~P!'WOz:qO#S#QO#|:}O#};PO$O;RO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT#yi!S#yi!b#yi!v#yi#z#yi#{#yi~P!'WOz:pO#S#QO#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT#yi!S#yi!b#yi!m#yi!q#yi!v#yi#z#yi#{#yi#|#yi!n#yi!}#yi~P!'WOz:qO#S#QO#};PO$O;RO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT#yi!S#yi!b#yi!v#yi#z#yi#{#yi#|#yi~P!'WOz:pO#S#QO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT#yi!S#yi!b#yi!m#yi!q#yi!v#yi#z#yi#{#yi#|#yi#}#yi!n#yi!}#yi~P!'WOz:qO#S#QO$O;RO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT#yi!S#yi!b#yi!v#yi#z#yi#{#yi#|#yi#}#yi~P!'WOz:pO#S#QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT#yi!S#yi!b#yi!m#yi!q#yi!v#yi#z#yi#{#yi#|#yi#}#yi$O#yi!n#yi!}#yi~P!'WOz:qO#S#QO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT#yi!S#yi!b#yi!v#yi#z#yi#{#yi#|#yi#}#yi$O#yi~P!'WOz:pO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT#yi!S#yi!b#yi!m#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi!n#yi!}#yi~P!'WOz:qO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT#yi!S#yi!b#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi~P!'WOz:pO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT#yi!S#yi!b#yi!m#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi!n#yi!}#yi~P!'WOz:qO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT#yi!S#yi!b#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi~P!'WOz:pO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT#yi!S#yi!b#yi!m#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi!n#yi!}#yi~P!'WOz:qO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT#yi!S#yi!b#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi~P!'WOz:pO$T;[O$V;`O$W;`O$z#dOT#yi!S#yi!b#yi!m#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$U#yi!n#yi!}#yi~P!'WOz:qO$T;]O$V;aO$W;aO$z#dOT#yi!S#yi!b#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$U#yi~P!'WOz:pO$V;`O$W;`O$z#dOT#yi!S#yi!b#yi!m#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi!n#yi!}#yi~P!'WOz:qO$V;aO$W;aO$z#dOT#yi!S#yi!b#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi~P!'WOz:pO$S;YO$T;[O$V;`O$W;`O$z#dOT#yi!S#yi!b#yi!m#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$U#yi!n#yi!}#yi~P!'WOz:qO$S;ZO$T;]O$V;aO$W;aO$z#dOT#yi!S#yi!b#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$U#yi~P!'WOz:pO$W;`O$z#dOT#yi!S#yi!b#yi!m#yi!q#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi$V#yi!n#yi!}#yi~P!'WOz:qO$W;aO$z#dOT#yi!S#yi!b#yi!v#yi#S#yi#z#yi#{#yi#|#yi#}#yi$O#yi$Q#yi$R#yi$S#yi$T#yi$U#yi$V#yi~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x#Ta!}#Ta!q#Ta#X#Ta~P!'WOT8vOz8tO!S8wO!b8xO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO!x'Pa!}'Pa!q'Pa#X'Pa~P!'WOz:pO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT#Pi!S#Pi!b#Pi!m#Pi!q#Pi!n#Pi!}#Pi~P!'WOz:qO!v=nO#S#QO#z:sO#{:{O#|:}O#};PO$O;RO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT#Pi!S#Pi!b#Pi~P!'WOz:pO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT#vi!S#vi!b#vi!m#vi!q#vi!n#vi!}#vi~P!'WOz:qO!v=nO#S#QO#z:sO#{:{O#|:}O#};PO$O;RO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT#vi!S#vi!b#vi~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m#xi!q#xi!n#xi!}#xi~P!'WOz:pO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT!uq!S!uq!b!uq!m!uq!q!uq!v!uq!n!uq!}!uq~P!'WOz:qO#S#QO#z:sO#{:{O#|:}O#};PO$O;RO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT!uq!S!uq!b!uq!v!uq~P!'WOz:pO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT#Pq!S#Pq!b#Pq!m#Pq!q#Pq!n#Pq!}#Pq~P!'WOz:qO!v=nO#S#QO#z:sO#{:{O#|:}O#};PO$O;RO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT#Pq!S#Pq!b#Pq~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m$jq!q$jq!n$jq!}$jq~P!'WOz:pO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dOT!uy!S!uy!b!uy!m!uy!q!uy!v!uy!n!uy!}!uy~P!'WOz:qO#S#QO#z:sO#{:{O#|:}O#};PO$O;RO$Q;VO$R;XO$S;ZO$T;]O$U;_O$V;aO$W;aO$z#dOT!uy!S!uy!b!uy!v!uy~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m$jy!q$jy!n$jy!}$jy~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m$j!R!q$j!R!n$j!R!}$j!R~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m$j!Z!q$j!Z!n$j!Z!}$j!Z~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m$j!c!q$j!c!n$j!c!}$j!c~P!'WO#S=TO~P$8YOP6]OU^O[9WOo>SOs#hOx9WOy9WO}`O!O]O!Q:lO!T9WO!U9WO!V9WO!Y9WO!c8hO!s#gO!y[O#S=UO#W_O#bhO#daO#ebO#peO$T:iO$]9WO$^:iO$aqO$z:nO${!OO~P$;lOT6iOz6gO!S6jO!b6kO!v8sO#O=SO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO~P!'WOT6iOz6gO!S6jO!b6kO!v8sO#O=RO#S#QO#z6hO#{6lO#|6mO#}6nO$O6oO$Q6qO$R6rO$S6sO$T6tO$U6uO$V6vO$W6vO$z#dO!m'PX!q'PX!n'PX!}'PX~P!'WOT&zXz&zX!S&zX!b&zX!o&zX!q&zX!v&zX!y&zX#S&zX#W&zX#`&zX#a&zX#s&zX#z&zX#{&zX#|&zX#}&zX$O&zX$Q&zX$R&zX$S&zX$T&zX$U&zX$V&zX$W&zX$z&zX!}&zX~O#u9ZO#w9[O#X&zX!x&zX~P.8oO!y$hO#S=^O~O!q9hO~P>UO!y$hO#S=cO~O!q>OO#O9}O~OT8vOz8tO!S8wO!b8xO!q:OO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m#Ta!q#Ta!n#Ta!}#Ta~P!'WOT:tOz:pO!S:vO!b:xO!v=mO#S#QO#z:rO#{:zO#|:|O#};OO$O;QO$Q;UO$R;WO$S;YO$T;[O$U;^O$V;`O$W;`O$z#dO!m'Pa!q'Pa!n'Pa!}'Pa~P!'WO!q>PO#O:RO~O!q>QO#O:YO~O#O:YO#l'SO~O#O:ZO#l'SO~O#O:_O#l'SO~O#u;eO#w;gO!m&zX!n&zX~P.8oO#u;fO#w;hOT&zXz&zX!S&zX!b&zX!o&zX!v&zX!y&zX#S&zX#W&zX#`&zX#a&zX#s&zX#z&zX#{&zX#|&zX#}&zX$O&zX$Q&zX$R&zX$S&zX$T&zX$U&zX$V&zX$W&zX$z&zX~O!q;tO~P>UO!q;uO~P>UO!q>XO#O<oO~O!q>YO#O9WO~OT8vOz8tO!S8wO!b8xO!q<pO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO~P!'WOT8vOz8tO!S8wO!b8xO!q<qO!v=ZO#S#QO#z8uO#{8yO#|8zO#}8{O$O8|O$Q9OO$R9PO$S9QO$T9RO$U9SO$V9TO$W9TO$z#dO~P!'WO!q>ZO#O<vO~O!q>[O#O<{O~O#O<{O#l'SO~O#O9WO#l'SO~O#O<|O#l'SO~O#O=PO#l'SO~O!y$hO#S=|O~Oo=[Os$lO~O!y$hO#S=}O~O!y$hO#S>UO~O!y$hO#S>VO~O!y$hO#S>WO~Oo={Os$lO~Oo>TOs$lO~Oo>SOs$lO~O%O$U$}$d!d$V#b%V#e'g!s#d~",
            goto: "%&y'mPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP'nP'uPP'{(OPPP(hP(OP(O*ZP*ZPP2W:j:mPP*Z:sBpPBsPBsPP:sCSCVCZ:s:sPPPC^PP:sK^!$S!$S:s!$WP!$W!$W!%UP!.]!7pP!?oP*ZP*Z*ZPPPPP!?rPPPPPPP*Z*Z*Z*ZPP*Z*ZP!E]!GRP!GV!Gy!GR!GR!HP*Z*ZP!HY!Hl!Ib!J`!Jd!J`!Jo!J}!J}!KV!KY!KY*ZPP*ZPP!K^#%[#%[#%`P#%fP(O#%j(O#&S#&V#&V#&](O#&`(O(O#&f#&i(O#&r#&u(O(O(O(O(O#&x(O(O(O(O(O(O(O(O(O#&{!KR(O(O#'_#'o#'r(O(OP#'u#'|#(S#(o#(y#)P#)Z#)b#)h#*d#4X#5T#5Z#5a#5k#5q#5w#6]#6c#6i#6o#6u#6{#7R#7]#7g#7m#7s#7}PPPPPPPP#8T#8X#8}#NO#NR#N]$(f$(r$)X$)_$)b$)e$)k$,X$5v$>_$>b$>h$>k$>n$>w$>{$?X$?k$Bk$CO$C{$K{PP%%y%%}%&Z%&p%&vQ!nQT!qV!rQUOR%x!mRVO}!hPVX!S!j!r!s!w$}%P%S%U(`+r+u.b.d.l0`0a0i1a|!hPVX!S!j!r!s!w$}%P%S%U(`+r+u.b.d.l0`0a0i1aQ%^!ZQ%g!aQ%l!eQ'd$dQ'q$iQ)[%kQ*y'tQ,](xU-n*v*x+OQ.W+cQ.{,[S/t-s-tQ0T.SS0}/s/wQ1V0RQ1o1OR2P1p0u!OPVX[_bjklmnopxyz!S!W!X!Y!]!g!j!r!s!w!y!z!{!}#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#k#n#o#s#t$R$S$U$y$}%P%R%S%T%U%c%}&S&W&p&s&t&w'O'U'Y'z(O(`(l({)P)i)p)t)v*P*T*U*o+P+r+u+z,T,V,X-Q-R-d-k-z.b.d.l.t/c/i/m/x0V0`0a0d0e0i0v1R1]1a2[2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3u3v3x3y3z3{3|3}4O4P4Q4R4S4T4U4V4W4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t5v5w6T6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6x6y6z6{6|7X7i7l7o7r7s7u7w7z7|8T8U8X8Z8[8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9V9W9X9Z9[9]9h9y9}:O:R:Y:Z:_:a:b:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:};O;P;Q;R;S;T;U;V;W;X;Y;Z;[;];^;_;`;a;c;d;e;f;g;h;i;t;u<j<k<o<p<q<v<{<|=P=R=S=T=U=Z=m=n0t!OPVX[_bjklmnopxyz!S!W!X!Y!]!g!j!r!s!w!y!z!{!}#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#k#n#o#s#t$R$S$U$y$}%P%R%S%T%U%c%}&S&W&p&s&t&w'O'U'Y'z(O(`(l({)P)i)p)t)v*P*T*U*o+P+r+u+z,T,V,X-Q-R-d-k-z.b.d.l.t/c/i/m/x0V0`0a0d0e0i0v1R1]1a2[2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3u3v3x3y3z3{3|3}4O4P4Q4R4S4T4U4V4W4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t5v5w6T6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6x6y6z6{6|7X7i7l7o7r7s7u7w7z7|8T8U8X8Z8[8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9V9W9X9Z9[9]9h9y9}:O:R:Y:Z:_:a:b:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:};O;P;Q;R;S;T;U;V;W;X;Y;Z;[;];^;_;`;a;c;d;e;f;g;h;i;t;u<j<k<o<p<q<v<{<|=P=R=S=T=U=Z=m=nQ#j]Q$}!PQ%O!QQ%P!RQ,S(kQ.b+sR.f+vR&q#jQ)z&pR/a-R0uhPVX[_bjklmnopxyz!S!W!X!Y!]!g!j!r!s!w!y!z!{!}#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#k#n#o#s#t$R$S$U$y$}%P%R%S%T%U%c%}&S&W&p&s&t&w'O'U'Y'z(O(`(l({)P)i)p)t)v*P*T*U*o+P+r+u+z,T,V,X-Q-R-d-k-z.b.d.l.t/c/i/m/x0V0`0a0d0e0i0v1R1]1a2[2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3u3v3x3y3z3{3|3}4O4P4Q4R4S4T4U4V4W4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t5v5w6T6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6x6y6z6{6|7X7i7l7o7r7s7u7w7z7|8T8U8X8Z8[8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9V9W9X9Z9[9]9h9y9}:O:R:Y:Z:_:a:b:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:};O;P;Q;R;S;T;U;V;W;X;Y;Z;[;];^;_;`;a;c;d;e;f;g;h;i;t;u<j<k<o<p<q<v<{<|=P=R=S=T=U=Z=m=nR#l^k#p_j#k#s&s&w3x3y7l8f8g8h8iR#u`T&|#t'OR-Y*U0thPVX[_bjklmnopxyz!S!W!X!Y!]!g!j!r!s!w!y!z!{!}#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#k#n#o#s#t$R$S$U$y$}%P%R%S%T%U%c%}&S&W&p&s&t&w'O'U'Y'z(O(`(l({)P)i)p)t)v*P*T*U*o+P+r+u+z,T,V,X-Q-R-d-k-z.b.d.l.t/c/i/m/x0V0`0a0d0e0i0v1R1]1a2[2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3u3v3x3y3z3{3|3}4O4P4Q4R4S4T4U4V4W4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t5v5w6T6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6x6y6z6{6|7X7i7l7o7r7s7u7w7z7|8T8U8X8Z8[8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9V9W9X9Z9[9]9h9y9}:O:R:Y:Z:_:a:b:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:};O;P;Q;R;S;T;U;V;W;X;Y;Z;[;];^;_;`;a;c;d;e;f;g;h;i;t;u<j<k<o<p<q<v<{<|=P=R=S=T=U=Z=m=nR#va-r#OZ#f#m#w$V$W$X$Y$Z$[$u$v%W%Y%[%`%s%|&O&Q&U&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&u&v&{'X'Z'[(](p)q)s)u*O*[*^+S+V,`,c,y,{,}-V-W-X-i-x.k.w/`/h/n/y0r0u0x1Q1X1d1m1q2q2r2x2y2z2{2|2}3O3Q3R3S3T3U3V3W3X3Y3Z3[3]3^3_3`3a3b3c3e3f3i3j3l3m3n3q3r3t4Y4y4z4{4|4}5O5P5R5S5T5U5V5W5X5Y5Z5[5]5^5_5`5a5b5c5d5f5g5j5k5m5n5o5r5s5u6R6V6}7O7P7Q7R7S7U7V7W7Y7Z7[7]7^7_7`7a7b7c7d7e7f7g7h7j7k7n7p7q7x7y7{7}8O8P8Q8R8S8V8W8Y8]9U9^9_9`9a9b9c9f9g9i9j9k9l9m9n9o9p9q9r9s9t9u9v9w9x9z9{:P:Q:T:V:W:[:^:`:c;j;k;l;m;n;o;p;s;v;w;x;y;z;{;|;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<[<]<^<_<`<a<b<c<d<e<f<g<h<i<l<m<n<r<s<t<u<w<x<y<z<}=O=Q=V=W=_=`=a=q=rQ']$]Y(Q$s7T9e;q;rS(U2Z6QR(X$tT&X!})v!w$Qg#}$h'S'i'm'r(P(T)Z*f*s*z*}+Q+]+`+g,Z-r-u-{.Q/u1P5}6O6P6]8b8c8d=d=e=i>O>P>Q>X>Y>Z>[3ZfPVX[_bgjklmnoprxyz!S!W!X!Y!]!e!f!g!j!r!s!w!y!z!{!}#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#k#n#o#s#t#}$R$S$U$h$y$}%P%R%S%T%U%c%p%r%}&S&W&p&s&t&w'O'S'U'Y'^'i'm'r'z(O(P(R(S(T(`(l({)P)Z)_)c)i)p)t)v*P*T*U*f*o*s*z*}+P+Q+]+`+d+g+r+u+z,T,V,X,Z,u-Q-R-d-k-r-u-z-{-|.Q.b.d.l.t/[/c/i/m/u/x0V0`0a0d0e0i0v1P1R1]1a2[2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3u3v3x3y3z3{3|3}4O4P4Q4R4S4T4U4V4W4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t5v5w5}6O6P6T6]6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6x6y6z6{6|7X7i7l7o7r7s7u7w7z7|8T8U8X8Z8[8b8c8d8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9V9W9X9Z9[9]9h9y9}:O:R:Y:Z:_:a:b:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:};O;P;Q;R;S;T;U;V;W;X;Y;Z;[;];^;_;`;a;c;d;e;f;g;h;i;t;u<j<k<o<p<q<v<{<|=P=R=S=T=U=Z=d=e=i=m=n>O>P>Q>X>Y>Z>[3scPVX[_bdegjklmnoprxyz!S!W!X!Y!]!e!f!g!j!r!s!w!y!z!{!}#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#k#n#o#s#t#{#}$R$S$U$h$y$}%P%R%S%T%U%c%m%n%p%r%}&S&W&p&s&t&w'O'S'U'Y'^'i'm'r'z(O(P(R(S(T(`(l({)P)Z)^)_)c)g)h)i)p)t)v*P*T*U*f*o*s*z*}+P+Q+]+`+d+g+r+u+z,T,V,X,Z,u,x-Q-R-d-k-r-u-z-{-|.Q.b.d.l.t/[/c/i/m/u/x0V0`0a0d0e0i0v1P1R1]1a2W2X2Y2[2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3u3v3x3y3z3{3|3}4O4P4Q4R4S4T4U4V4W4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t5v5w5}6O6P6T6]6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6x6y6z6{6|7X7i7l7o7r7s7u7w7z7|8T8U8X8Z8[8b8c8d8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9V9W9X9Z9[9]9h9y9}:O:R:Y:Z:_:a:b:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:};O;P;Q;R;S;T;U;V;W;X;Y;Z;[;];^;_;`;a;c;d;e;f;g;h;i;t;u<j<k<o<p<q<v<{<|=P=R=S=T=U=Z=d=e=i=m=n>O>P>Q>X>Y>Z>[0phPVX[_bjklmnopxyz!S!W!X!Y!]!g!j!r!s!w!y!z!{!}#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#k#n#o#s#t$R$S$U$y$}%P%R%S%T%U%c%}&S&W&p&s&t&w'O'U'Y'z(O(`(l({)P)i)p)t)v*P*T*U*o+P+r+u+z,T,V,X-Q-R-d-k-z.b.d.l.t/c/i/m/x0`0a0d0e0i0v1R1a2[2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3u3v3x3y3z3{3|3}4O4P4Q4R4S4T4U4V4W4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t5v5w6T6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6x6y6z6{6|7X7i7l7o7r7s7u7w7z7|8T8U8X8Z8[8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9V9W9X9Z9[9]9h9y9}:O:R:Y:Z:_:a:b:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:};O;P;Q;R;S;T;U;V;W;X;Y;Z;[;];^;_;`;a;c;d;e;f;g;h;i;t;u<j<k<o<p<q<v<{<|=P=R=S=T=U=Z=m=nT1Z0V1]R&]#P!n#[Z#f#w$V$W$X$Y$[$s$v%W%Y%[&Q&_&`&a&b&c&d&e&f'X'Z'[(])q)s*^+V,{-x/y1Q1d1q7j7k!Y2j2Z2x2y2z2{2}3O3Q3R3S3T3U3V3W3X3a3b3c3e3f3i3j3l3m3n3q3r3t!^4m2r4y4z4{4|5O5P5R5S5T5U5V5W5X5Y5b5c5d5f5g5j5k5m5n5o5r5s5u6Q6R#Q6p#m%`%s&u&v&{(p*O+S,`,c,y-V-X.w2q6}7O7P7Q7S7T7U7Y7Z7[7]7^7_7`7a7n7p7q7x7{7}8Q8S8V8W8Y8]9U:c=V=W#^8}%|&O&U)u,}-W-i/h/n0r0u0x1m4Y6V7V7W7y8O8P8R9^9_9`9a9c9e9f9g9i9j9k9l9m9n9o9p9x9z9{:P:Q:T:V:W:[:^:`<f<g=_=q=r!^;S.k/`;j;k;l;m;p;q;s;v;x;z;|<O<Q<S<U<h<l<n<r<t<w<x<z<}=O=Q=`=ao;T1X;r;w;y;{;}<P<R<T<V<i<m<s<u<yS$iu#hQ$qwU't$j$l&oQ'v$kS'x$m$rQ*|'uQ+O'wQ+R'yQ4X5xS4[5z5{Q4]5|Q6U8^S6W8_8`Q6X8aQ9d=YS9|=[=^Q:S=cQ=]=yS=b={=|Q=f=}Q=o>RS=p>S>VS=s>T>UR=t>WT'n$h*s!csPVXt!S!j!r!s!w$h$}%P%S%U'i(T(`)W*s+]+g+r+u,g,k.b.d.l0`0a0i1aQ$^rR*`'^Q*x'sQ-t*{R/w-wQ(W$tQ)U%hQ)n%vQ*i'fQ+k(XR-c*jQ(V$tQ)Y%jQ)m%vQ*e'eS*h'f)nS+j(W(XS-b*i*jQ.]+kQ/T,mQ/e-`R/g-cQ(U$tQ)T%hQ)V%iQ)l%vU*g'f)m)nU+i(V(W(XQ,f)UU-a*h*i*jS.[+j+kS/f-b-cQ0X.]R0t/gT+e(T+g[%e!_$b'c+a.R0QR,d)Qb$ov(T+[+]+`+g.P.Q0PR+T'{S+e(T+gT,j)W,kR0W.XT1[0V1]0w|PVX[_bjklmnopxyz!S!W!X!Y!]!g!j!r!s!w!y!z!{!}#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#k#n#o#s#t$R$S$U$y$}%P%R%S%T%U%c%}&S&W&p&s&t&w'O'U'Y'z(O(`(l({)P)i)p)t)v*P*T*U*o+P+r+u+z,T,V,X,_-Q-R-d-k-z.b.d.l.t/c/i/m/x0V0`0a0d0e0i0v1R1]1a2[2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3u3v3x3y3z3{3|3}4O4P4Q4R4S4T4U4V4W4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t5v5w6T6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6x6y6z6{6|7X7i7l7o7r7s7u7w7z7|8T8U8X8Z8[8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9V9W9X9Z9[9]9h9y9}:O:R:Y:Z:_:a:b:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:};O;P;Q;R;S;T;U;V;W;X;Y;Z;[;];^;_;`;a;c;d;e;f;g;h;i;t;u<j<k<o<p<q<v<{<|=P=R=S=T=U=Z=m=nT$x{${Q+p([R._+nT$z{${Q(b$}Q(j%PQ(o%SQ(r%UQ.j+yQ0].fQ0^.iR1g0iR(e%OX+|(c(d+},PR(f%OX(h%P%S%U0iR%S!T_%a!]%R(l,T,V.t0dR%U!UR.x,XR,[(wQ)X%jS*d'e)YS-_*e,mS/d-`/TR0s/eQ%q!fU)]%m%n%rU,o)^)g)hR/_,xR)d%pR/],uSSO!mR!oSQ!rVR%y!rQ!jPS!sV!rQ!wX[%u!j!s!w+r0a1aQ+r(`Q0a.lR1a0`Q)j%sS,z)j7vR7v7WQ-S)zR/b-SQ&x#qS*R&x7mR7m9YS*V&{&|R-Z*VQ)w&YR-P)w!l'T#|'h*n*q*v+W+[,m-`-s-v-y.P.z/s/v/z0P1O1p4^4_4`5y6Y6Z6[:U:X:]=g=h=j=u=v=w=xR*Z'T1^dPVX[_bjklmnoprxyz!S!W!X!Y!]!e!g!j!r!s!w!y!z!{!}#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#k#n#o#s#t$R$S$U$y$}%P%R%S%T%U%c%p%}&S&W&p&s&t&w'O'U'Y'^'z(O(R(S(`(l({)P)_)c)i)p)t)v*P*T*U*o+P+d+r+u+z,T,V,X,u-Q-R-d-k-z-|.b.d.l.t/[/c/i/m/x0V0`0a0d0e0i0v1R1]1a2[2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3u3v3x3y3z3{3|3}4O4P4Q4R4S4T4U4V4W4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t5v5w6T6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6x6y6z6{6|7X7i7l7o7r7s7u7w7z7|8T8U8X8Z8[8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9V9W9X9Z9[9]9h9y9}:O:R:Y:Z:_:a:b:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:};O;P;Q;R;S;T;U;V;W;X;Y;Z;[;];^;_;`;a;c;d;e;f;g;h;i;t;u<j<k<o<p<q<v<{<|=P=R=S=T=U=Z=m=n`#zd#{%m)^)g,x2W2YQ#{eQ%m!fQ)^%nQ)g%rQ,x)h!v2Wg#}$h'S'i'm'r(P(T)Z*f*s*z*}+Q+]+`+g,Z-r-u-{.Q/u1P5}6O6P6]8b8c8d=d=e=i>O>P>Q>X>Y>Z>[R2Y2X|tPVX!S!j!r!s!w$}%P%S%U(`+r+u.b.d.l0`0a0i1aW$`t'i+],gS'i$h*sS+](T+gT,g)W,kQ'_$^R*a'_Q*t'oR-m*tQ/p-oS0{/p0|R0|/qQ-}+XR/|-}Q+g(TR.Y+gS+`(T+gS,h)W,kQ.Q+]W.T+`,h.Q/OR/O,gQ)R%eR,e)RQ'|$oR+U'|Q1]0VR1w1]Q${{R(^${Q+t(aR.c+tQ+w(bR.g+wQ+}(cQ,P(dT.m+},PQ(|%`S,a(|7tR7t7VQ(y%^R,^(yQ,k)WR/R,kQ)`%oS,q)`/WR/W,rQ,v)dR/^,vT!uV!rj!iPVX!j!r!s!w(`+r.l0`0a1aQ%Q!SQ(a$}W(h%P%S%U0iQ.e+uQ0Z.bR0[.d|ZPVX!S!j!r!s!w$}%P%S%U(`+r+u.b.d.l0`0a0i1aQ#f[U#m_#s&wQ#wbQ$VkQ$WlQ$XmQ$YnQ$ZoQ$[pQ$sx^$uy2_4b6e8q:m:nQ$vzQ%W!WQ%Y!XQ%[!YW%`!]%R(l,VU%s!g&p-RQ%|!yQ&O!zQ&Q!{S&U!})v^&^#R2a4d6g8t:p:qQ&_#SQ&`#TQ&a#UQ&b#VQ&c#WQ&d#XQ&e#YQ&f#ZQ&g#[Q&h#]Q&i#^Q&j#_Q&k#`Q&l#aQ&m#bQ&u#nQ&v#oS&{#t'OQ'X$RQ'Z$SQ'[$UQ(]$yQ(p%TQ)q%}Q)s&SQ)u&WQ*O&tS*['U4ZQ*^'Y^*_2[3u5v8Z:a=R=SQ+S'zQ+V(OQ,`({Q,c)PQ,y)iQ,{)pQ,})tQ-V*PQ-W*TQ-X*U^-]2]3v5w8[:b=T=UQ-i*oQ-x+PQ.k+zQ.w,XQ/`-QQ/h-dQ/n-kQ/y-zQ0r/cQ0u/iQ0x/mQ1Q/xU1X0V1]9WQ1d0eQ1m0vQ1q1RQ2Z2^Q2qjQ2r3yQ2x3zQ2y3|Q2z4OQ2{4QQ2|4SQ2}4UQ3O2`Q3Q2bQ3R2cQ3S2dQ3T2eQ3U2fQ3V2gQ3W2hQ3X2iQ3Y2jQ3Z2kQ3[2lQ3]2mQ3^2nQ3_2oQ3`2pQ3a2sQ3b2tQ3c2uQ3e2vQ3f2wQ3i3PQ3j3dQ3l3gQ3m3hQ3n3kQ3q3oQ3r3pQ3t3sQ4Y4WQ4y3{Q4z3}Q4{4PQ4|4RQ4}4TQ5O4VQ5P4cQ5R4eQ5S4fQ5T4gQ5U4hQ5V4iQ5W4jQ5X4kQ5Y4lQ5Z4mQ5[4nQ5]4oQ5^4pQ5_4qQ5`4rQ5a4sQ5b4tQ5c4uQ5d4vQ5f4wQ5g4xQ5j5QQ5k5eQ5m5hQ5n5iQ5o5lQ5r5pQ5s5qQ5u5tQ6Q4aQ6R3xQ6V6TQ6}6^Q7O6_Q7P6`Q7Q6aQ7R6bQ7S6cQ7T6dQ7U6fU7V,T.t0dQ7W%cQ7Y6hQ7Z6iQ7[6jQ7]6kQ7^6lQ7_6mQ7`6nQ7a6oQ7b6pQ7c6qQ7d6rQ7e6sQ7f6tQ7g6uQ7h6vQ7j6xQ7k6yQ7n6zQ7p6{Q7q6|Q7x7XQ7y7iQ7{7oQ7}7rQ8O7sQ8P7uQ8Q7wQ8R7zQ8S7|Q8V8TQ8W8UQ8Y8XQ8]8fU9U#k&s7lQ9^8jQ9_8kQ9`8lQ9a8mQ9b8nQ9c8oQ9e8pQ9f8rQ9g8sQ9i8uQ9j8vQ9k8wQ9l8xQ9m8yQ9n8zQ9o8{Q9p8|Q9q8}Q9r9OQ9s9PQ9t9QQ9u9RQ9v9SQ9w9TQ9x9ZQ9z9[Q9{9]Q:P9hQ:Q9yQ:T9}Q:V:OQ:W:RQ:[:YQ:^:ZQ:`:_Q:c8iQ;j:dQ;k:eQ;l:fQ;m:gQ;n:hQ;o:iQ;p:jQ;q:kQ;r:lQ;s:oQ;v:rQ;w:sQ;x:tQ;y:uQ;z:vQ;{:wQ;|:xQ;}:yQ<O:zQ<P:{Q<Q:|Q<R:}Q<S;OQ<T;PQ<U;QQ<V;RQ<W;SQ<X;TQ<Y;UQ<Z;VQ<[;WQ<];XQ<^;YQ<_;ZQ<`;[Q<a;]Q<b;^Q<c;_Q<d;`Q<e;aQ<f;cQ<g;dQ<h;eQ<i;fQ<l;gQ<m;hQ<n;iQ<r;tQ<s;uQ<t<jQ<u<kQ<w<oQ<x<pQ<y<qQ<z<vQ<}<{Q=O<|Q=Q=PQ=V8hQ=W8gQ=_=ZQ=`9VQ=a9XQ=q=mR=r=nR){&pQ%t!gQ)O%cT)y&p-R$SiPVX[bklmnopxyz!S!W!X!Y!j!r!s!w!{#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b$R$S$U$y$}%P%S%U%}&S'Y(O(`)p+P+r+u-z.b.d.l/x0`0a0e0i1R1a2[2]6x6y!t3w'U2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3z3|4O4Q4S4U5v5w!x6S3u3v3x3y3{3}4P4R4T4V4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t$O8e_j!]!g#k#n#o#s#t%R%T&p&s&t&w'O'z(l({)P)i*P*U,V,X-R6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6z6{6|7X7l7o7r7w7|8T8U8X8Z8[8f8g8h8i#|=X!y!z!}%c&W)t)v*T*o,T-d-k.t/c/i/m0d0v4W6T7i7s7u7z8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9Z9[9]9h9y9}:O:R:Y:Z:_:a:b;c;d=Z=m=n!v=k+z-Q9V9X:d:e:f:g:h:j:k:m:o:p:r:t:v:x:z:|;O;Q;S;U;W;Y;[;^;`;e;g;i;t<j<o<p<v<{<|=P=R=T!]=l0V1]9W:i:l:n:q:s:u:w:y:{:};P;R;T;V;X;Z;];_;a;f;h;u<k<q=S=UQ#r_Q&r#kQ&z#sR)}&sS#q_#s^$Tj3x3y8f8g8h8iS*Q&w7lT9Y#k&sQ&}#tR*X'OR&T!|R&Z!}Q&Y!}R-O)vQ#|gQ'V#}S'h$h*sQ*Y'SQ*n'iQ*q'mQ*v'rQ+W(PS+[(T+gQ,m)ZQ-`*fQ-s*zQ-v*}Q-y+QS.P+]+`Q.z,ZQ/s-rQ/v-uQ/z-{Q0P.QQ1O/uQ1p1PQ4^5}Q4_6OQ4`6PQ5y6]Q6Y8bQ6Z8cQ6[8dQ:U=dQ:X=eQ:]=iQ=g>OQ=h>PQ=j>QQ=u>XQ=v>YQ=w>ZR=x>[0t!OPVX[_bjklmnopxyz!S!W!X!Y!]!g!j!r!s!w!y!z!{!}#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#k#n#o#s#t$R$S$U$y$}%P%R%S%T%U%c%}&S&W&p&s&t&w'O'U'Y'z(O(`(l({)P)i)p)t)v*P*T*U*o+P+r+u+z,T,V,X-Q-R-d-k-z.b.d.l.t/c/i/m/x0V0`0a0d0e0i0v1R1]1a2[2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3u3v3x3y3z3{3|3}4O4P4Q4R4S4T4U4V4W4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t5v5w6T6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6x6y6z6{6|7X7i7l7o7r7s7u7w7z7|8T8U8X8Z8[8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9V9W9X9Z9[9]9h9y9}:O:R:Y:Z:_:a:b:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:};O;P;Q;R;S;T;U;V;W;X;Y;Z;[;];^;_;`;a;c;d;e;f;g;h;i;t;u<j<k<o<p<q<v<{<|=P=R=S=T=U=Z=m=n!v$Pg#}$h'S'i'm'r(P(T)Z*f*s*z*}+Q+]+`+g,Z-r-u-{.Q/u1P5}6O6P6]8b8c8d=d=e=i>O>P>Q>X>Y>Z>[S$]r'^Q%k!eS%o!f%rQ)b%pU+X(R(S+dQ,p)_Q,t)cQ/Z,uQ/{-|R0p/[|vPVX!S!j!r!s!w$}%P%S%U(`+r+u.b.d.l0`0a0i1a#U#i[bklmnopxyz!W!X!Y!{#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b$R$S$U$y%}&S'Y(O)p+P-z/x0e1R2[2]6x6yd+^(T)W+]+`+g,g,h,k.Q/O!t6w'U2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3z3|4O4Q4S4U5v5w!x;b3u3v3x3y3{3}4P4R4T4V4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t$O=z_j!]!g#k#n#o#s#t%R%T&p&s&t&w'O'z(l({)P)i*P*U,V,X-R6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6z6{6|7X7l7o7r7w7|8T8U8X8Z8[8f8g8h8i#|>]!y!z!}%c&W)t)v*T*o,T-d-k.t/c/i/m0d0v4W6T7i7s7u7z8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9Z9[9]9h9y9}:O:R:Y:Z:_:a:b;c;d=Z=m=n!v>^+z-Q9V9X:d:e:f:g:h:j:k:m:o:p:r:t:v:x:z:|;O;Q;S;U;W;Y;[;^;`;e;g;i;t<j<o<p<v<{<|=P=R=T!]>_0V1]9W:i:l:n:q:s:u:w:y:{:};P;R;T;V;X;Z;];_;a;f;h;u<k<q=S=UR'p$hQ'o$hR-l*sR$_rR-q*wQ+Y(RQ+Z(SR.X+dT+f(T+ge+_(T)W+]+`+g,g,h,k.Q/OQ%f!_Q'b$bQ*c'cQ.U+aQ0S.RR1U0QQ#eZQ%X!WQ%Z!XQ%]!YQ'}$pQ(s%VQ(t%WQ(u%YQ(v%[Q(}%bQ)S%fQ)[%kQ)f%qQ)k%tQ*b'bQ,n)]Q-^*cQ.V+bQ.W+cQ.e+xQ.o,QQ.p,RQ.q,SQ.v,WQ.y,YQ.},bQ/U,oQ/}.OQ0T.SQ0U.UQ0W.XQ0[.hQ0k/QQ0q/_Q1S0OQ1V0RQ1W0SQ1`0_Q1h0jQ1r1TQ1s1UQ1v1[Q1y1_Q1}1jQ2T1{R2U1|Q$pvS+b(T+gU.O+[+]+`S0O.P.QR1T0P|!aPVX!S!j!r!s!w$}%P%S%U(`+r+u.b.d.l0`0a0i1aQ$dtW+c(T)W+g,kW.S+]+`,g,hT0R.Q/O0t!OPVX[_bjklmnopxyz!S!W!X!Y!]!g!j!r!s!w!y!z!{!}#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#k#n#o#s#t$R$S$U$y$}%P%R%S%T%U%c%}&S&W&p&s&t&w'O'U'Y'z(O(`(l({)P)i)p)t)v*P*T*U*o+P+r+u+z,T,V,X-Q-R-d-k-z.b.d.l.t/c/i/m/x0V0`0a0d0e0i0v1R1]1a2[2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3u3v3x3y3z3{3|3}4O4P4Q4R4S4T4U4V4W4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t5v5w6T6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6x6y6z6{6|7X7i7l7o7r7s7u7w7z7|8T8U8X8Z8[8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9V9W9X9Z9[9]9h9y9}:O:R:Y:Z:_:a:b:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:};O;P;Q;R;S;T;U;V;W;X;Y;Z;[;];^;_;`;a;c;d;e;f;g;h;i;t;u<j<k<o<p<q<v<{<|=P=R=S=T=U=Z=m=nR.|,_0w}PVX[_bjklmnopxyz!S!W!X!Y!]!g!j!r!s!w!y!z!{!}#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#k#n#o#s#t$R$S$U$y$}%P%R%S%T%U%c%}&S&W&p&s&t&w'O'U'Y'z(O(`(l({)P)i)p)t)v*P*T*U*o+P+r+u+z,T,V,X,_-Q-R-d-k-z.b.d.l.t/c/i/m/x0V0`0a0d0e0i0v1R1]1a2[2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2s2t2u2v2w3P3d3g3h3k3o3p3s3u3v3x3y3z3{3|3}4O4P4Q4R4S4T4U4V4W4Z4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x5Q5e5h5i5l5p5q5t5v5w6T6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6x6y6z6{6|7X7i7l7o7r7s7u7w7z7|8T8U8X8Z8[8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}9O9P9Q9R9S9T9V9W9X9Z9[9]9h9y9}:O:R:Y:Z:_:a:b:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:};O;P;Q;R;S;T;U;V;W;X;Y;Z;[;];^;_;`;a;c;d;e;f;g;h;i;t;u<j<k<o<p<q<v<{<|=P=R=S=T=U=Z=m=nT$w{${Q(i%PQ(n%SQ(q%UR1f0iQ%b!]Q(m%RQ,U(lQ.s,TQ.u,VQ0c.tR1c0dQ%q!fR)]%rR)e%p",
            nodeNames: "⚠ ( HeredocString EscapeSequence abstract LogicOp array as Boolean break case catch clone const continue default declare do echo else elseif enddeclare endfor endforeach endif endswitch endwhile enum extends final finally fn for foreach from function global goto if implements include include_once LogicOp insteadof interface list match namespace new null LogicOp print require require_once return switch throw trait try unset use var Visibility while LogicOp yield LineComment BlockComment TextInterpolation PhpClose Text PhpOpen Template TextInterpolation EmptyStatement ; } { Block : LabelStatement Name ExpressionStatement ConditionalExpression LogicOp MatchExpression ) ( ParenthesizedExpression MatchBlock MatchArm , => AssignmentExpression ArrayExpression ValueList & VariadicUnpacking ... Pair [ ] ListExpression ValueList Pair Pair SubscriptExpression MemberExpression -> ?-> VariableName DynamicVariable $ ${ CallExpression ArgList NamedArgument SpreadArgument CastExpression UnionType LogicOp OptionalType NamedType QualifiedName \\ NamespaceName ScopedExpression :: ClassMemberName AssignOp UpdateExpression UpdateOp YieldExpression BinaryExpression LogicOp LogicOp LogicOp BitOp BitOp BitOp CompareOp CompareOp BitOp ArithOp ConcatOp ArithOp ArithOp IncludeExpression RequireExpression CloneExpression UnaryExpression ControlOp LogicOp PrintIntrinsic FunctionExpression static ParamList Parameter #[ Attributes Attribute VariadicParameter PropertyParameter UseList ArrowFunction NewExpression class BaseClause ClassInterfaceClause DeclarationList ConstDeclaration VariableDeclarator PropertyDeclaration VariableDeclarator MethodDeclaration UseDeclaration UseList UseInsteadOfClause UseAsClause UpdateExpression ArithOp ShellExpression ThrowExpression Integer Float String MemberExpression SubscriptExpression UnaryExpression ArithOp Interpolation String IfStatement ColonBlock SwitchStatement Block CaseStatement DefaultStatement ColonBlock WhileStatement EmptyStatement DoStatement ForStatement ForSpec SequenceExpression ForeachStatement ForSpec Pair GotoStatement ContinueStatement BreakStatement ReturnStatement TryStatement CatchDeclarator DeclareStatement EchoStatement UnsetStatement ConstDeclaration FunctionDefinition ClassDeclaration InterfaceDeclaration TraitDeclaration EnumDeclaration EnumBody EnumCase NamespaceDefinition NamespaceUseDeclaration UseGroup UseClause UseClause GlobalDeclaration FunctionStaticDeclaration Program",
            maxTerm: 304,
            nodeProps: [["group", -36, 2, 8, 49, 81, 83, 85, 88, 93, 94, 102, 106, 107, 110, 111, 114, 118, 123, 126, 130, 132, 133, 147, 148, 149, 150, 153, 154, 164, 165, 179, 181, 182, 183, 184, 185, 191, "Expression", -28, 74, 78, 80, 82, 192, 194, 199, 201, 202, 205, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 230, 231, "Statement", -3, 119, 121, 122, "Type"], ["openedBy", 69, "phpOpen", 76, "{", 86, "(", 101, "#["], ["closedBy", 71, "phpClose", 77, "}", 87, ")", 158, "]"]],
            propSources: [m],
            skippedNodes: [0],
            repeatNodeCount: 29,
            tokenData: "!F|_R!]OX$zXY&^YZ'sZ]$z]^&^^p$zpq&^qr)Rrs+Pst+otu2buv5evw6rwx8Vxy>]yz>yz{?g{|@}|}Bb}!OCO!O!PDh!P!QKT!Q!R!!o!R![!$q![!]!,P!]!^!-a!^!_!-}!_!`!1S!`!a!2d!a!b!3t!b!c!7^!c!d!7z!d!e!9W!e!}!7z!}#O!;^#O#P!;z#P#Q!<h#Q#R!=U#R#S!7z#S#T!=u#T#U!7z#U#V!9W#V#o!7z#o#p!Co#p#q!D]#q#r!Er#r#s!F`#s$f$z$f$g&^$g&j!7z&j$I_$z$I_$I`&^$I`$KW$z$KW$KX&^$KX;'S$z;'S;=`&W<%l?HT$z?HT?HU&^?HUO$zP%PV&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zP%kO&wPP%nWOY$zYZ%fZ!a$z!b;'S$z;'S;=`&W<%l~$z~O$z~~%fP&ZP;=`<%l$zV&ed&wP&vUOX$zXY&^YZ'sZ]$z]^&^^p$zpq&^q!^$z!^!_%k!_$f$z$f$g&^$g$I_$z$I_$I`&^$I`$KW$z$KW$KX&^$KX;'S$z;'S;=`&W<%l?HT$z?HT?HU&^?HUO$zV'zW&wP&vUXY(dYZ(d]^(dpq(d$f$g(d$I_$I`(d$KW$KX(d?HT?HU(dU(iW&vUXY(dYZ(d]^(dpq(d$f$g(d$I_$I`(d$KW$KX(d?HT?HU(dR)YW$^Q&wPOY$zYZ%fZ!^$z!^!_%k!_!`)r!`;'S$z;'S;=`&W<%lO$zR)yW$QQ&wPOY$zYZ%fZ!^$z!^!_%k!_!`*c!`;'S$z;'S;=`&W<%lO$zR*jV$QQ&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zV+YV'fS&wP'gQOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zV+v]&wP!dUOY,oYZ%fZ],o]^$z^!^,o!^!_-i!_!a,o!a!b/y!b!},o!}#O1f#O;'S,o;'S;=`/s<%lO,oV,vZ&wP!dUOY,oYZ%fZ],o]^$z^!^,o!^!_-i!_!a,o!a!b/y!b;'S,o;'S;=`/s<%lO,oV-nZ!dUOY,oYZ%fZ],o]^$z^!a,o!a!b.a!b;'S,o;'S;=`/s<%l~,o~O,o~~%fU.dWOY.|YZ/nZ].|]^/n^!`.|!a;'S.|;'S;=`/h<%lO.|U/RV!dUOY.|Z].|^!a.|!a!b.a!b;'S.|;'S;=`/h<%lO.|U/kP;=`<%l.|U/sO!dUV/vP;=`<%l,oV0OZ&wPOY,oYZ0qZ],o]^0x^!^,o!^!_-i!_!`,o!`!a$z!a;'S,o;'S;=`/s<%lO,oV0xO&wP!dUV1PV&wP!dUOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zV1oZ&wP$dQ!dUOY,oYZ%fZ],o]^$z^!^,o!^!_-i!_!a,o!a!b/y!b;'S,o;'S;=`/s<%lO,o_2i`&wP#dQOY$zYZ%fZ!^$z!^!_%k!_!c$z!c!}3k!}#R$z#R#S3k#S#T$z#T#o3k#o#p4w#p$g$z$g&j3k&j;'S$z;'S;=`&W<%lO$z_3ra&wP#b^OY$zYZ%fZ!Q$z!Q![3k![!^$z!^!_%k!_!c$z!c!}3k!}#R$z#R#S3k#S#T$z#T#o3k#o$g$z$g&j3k&j;'S$z;'S;=`&W<%lO$zV5OV&wP#eUOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zR5lW&wP$VQOY$zYZ%fZ!^$z!^!_%k!_!`6U!`;'S$z;'S;=`&W<%lO$zR6]V#wQ&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zV6yY#SU&wPOY$zYZ%fZv$zvw7iw!^$z!^!_%k!_!`6U!`;'S$z;'S;=`&W<%lO$zR7pV#|Q&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zR8^Z&wP%VQOY8VYZ9PZw8Vwx;_x!^8V!^!_;{!_#O8V#O#P<y#P;'S8V;'S;=`>V<%lO8VR9WV&wP%VQOw9mwx:Xx#O9m#O#P:^#P;'S9m;'S;=`;X<%lO9mQ9rV%VQOw9mwx:Xx#O9m#O#P:^#P;'S9m;'S;=`;X<%lO9mQ:^O%VQQ:aRO;'S9m;'S;=`:j;=`O9mQ:oW%VQOw9mwx:Xx#O9m#O#P:^#P;'S9m;'S;=`;X;=`<%l9m<%lO9mQ;[P;=`<%l9mR;fV&wP%VQOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zR<Q]%VQOY8VYZ9PZw8Vwx;_x!a8V!a!b9m!b#O8V#O#P<y#P;'S8V;'S;=`>V<%l~8V~O8V~~%fR=OW&wPOY8VYZ9PZ!^8V!^!_;{!_;'S8V;'S;=`=h;=`<%l9m<%lO8VR=mW%VQOw9mwx:Xx#O9m#O#P:^#P;'S9m;'S;=`;X;=`<%l8V<%lO9mR>YP;=`<%l8VR>dV!yQ&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zV?QV!xU&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zR?nY&wP$VQOY$zYZ%fZz$zz{@^{!^$z!^!_%k!_!`6U!`;'S$z;'S;=`&W<%lO$zR@eW$WQ&wPOY$zYZ%fZ!^$z!^!_%k!_!`6U!`;'S$z;'S;=`&W<%lO$zRAUY$TQ&wPOY$zYZ%fZ{$z{|At|!^$z!^!_%k!_!`6U!`;'S$z;'S;=`&W<%lO$zRA{V$zQ&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zRBiV!}Q&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$z_CXZ$TQ%TW&wPOY$zYZ%fZ}$z}!OAt!O!^$z!^!_%k!_!`6U!`!aCz!a;'S$z;'S;=`&W<%lO$zVDRV#`U&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zVDo[&wP$UQOY$zYZ%fZ!O$z!O!PEe!P!Q$z!Q![Fs![!^$z!^!_%k!_!`6U!`;'S$z;'S;=`&W<%lO$zVEjX&wPOY$zYZ%fZ!O$z!O!PFV!P!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zVF^V#UU&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zRFz_&wP%OQOY$zYZ%fZ!Q$z!Q![Fs![!^$z!^!_%k!_!g$z!g!hGy!h#R$z#R#SJc#S#X$z#X#YGy#Y;'S$z;'S;=`&W<%lO$zRHO]&wPOY$zYZ%fZ{$z{|Hw|}$z}!OHw!O!Q$z!Q![Ii![!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zRH|X&wPOY$zYZ%fZ!Q$z!Q![Ii![!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zRIpZ&wP%OQOY$zYZ%fZ!Q$z!Q![Ii![!^$z!^!_%k!_#R$z#R#SHw#S;'S$z;'S;=`&W<%lO$zRJhX&wPOY$zYZ%fZ!Q$z!Q![Fs![!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zVK[[&wP$VQOY$zYZ%fZz$zz{LQ{!P$z!P!Q,o!Q!^$z!^!_%k!_!`6U!`;'S$z;'S;=`&W<%lO$zVLVX&wPOYLQYZLrZzLQz{N_{!^LQ!^!_! s!_;'SLQ;'S;=`!!i<%lOLQVLwT&wPOzMWz{Mj{;'SMW;'S;=`NX<%lOMWUMZTOzMWz{Mj{;'SMW;'S;=`NX<%lOMWUMmVOzMWz{Mj{!PMW!P!QNS!Q;'SMW;'S;=`NX<%lOMWUNXO!eUUN[P;=`<%lMWVNdZ&wPOYLQYZLrZzLQz{N_{!PLQ!P!Q! V!Q!^LQ!^!_! s!_;'SLQ;'S;=`!!i<%lOLQV! ^V!eU&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zV! vZOYLQYZLrZzLQz{N_{!aLQ!a!bMW!b;'SLQ;'S;=`!!i<%l~LQ~OLQ~~%fV!!lP;=`<%lLQZ!!vm&wP$}YOY$zYZ%fZ!O$z!O!PFs!P!Q$z!Q![!$q![!^$z!^!_%k!_!d$z!d!e!&o!e!g$z!g!hGy!h!q$z!q!r!(a!r!z$z!z!{!){!{#R$z#R#S!%}#S#U$z#U#V!&o#V#X$z#X#YGy#Y#c$z#c#d!(a#d#l$z#l#m!){#m;'S$z;'S;=`&W<%lO$zZ!$xa&wP$}YOY$zYZ%fZ!O$z!O!PFs!P!Q$z!Q![!$q![!^$z!^!_%k!_!g$z!g!hGy!h#R$z#R#S!%}#S#X$z#X#YGy#Y;'S$z;'S;=`&W<%lO$zZ!&SX&wPOY$zYZ%fZ!Q$z!Q![!$q![!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zZ!&tY&wPOY$zYZ%fZ!Q$z!Q!R!'d!R!S!'d!S!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zZ!'k[&wP$}YOY$zYZ%fZ!Q$z!Q!R!'d!R!S!'d!S!^$z!^!_%k!_#R$z#R#S!&o#S;'S$z;'S;=`&W<%lO$zZ!(fX&wPOY$zYZ%fZ!Q$z!Q!Y!)R!Y!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zZ!)YZ&wP$}YOY$zYZ%fZ!Q$z!Q!Y!)R!Y!^$z!^!_%k!_#R$z#R#S!(a#S;'S$z;'S;=`&W<%lO$zZ!*Q]&wPOY$zYZ%fZ!Q$z!Q![!*y![!^$z!^!_%k!_!c$z!c!i!*y!i#T$z#T#Z!*y#Z;'S$z;'S;=`&W<%lO$zZ!+Q_&wP$}YOY$zYZ%fZ!Q$z!Q![!*y![!^$z!^!_%k!_!c$z!c!i!*y!i#R$z#R#S!){#S#T$z#T#Z!*y#Z;'S$z;'S;=`&W<%lO$zR!,WX!qQ&wPOY$zYZ%fZ![$z![!]!,s!]!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zR!,zV#sQ&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zV!-hV!mU&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zR!.S[$RQOY$zYZ%fZ!^$z!^!_!.x!_!`!/i!`!a*c!a!b!0]!b;'S$z;'S;=`&W<%l~$z~O$z~~%fR!/PW$SQ&wPOY$zYZ%fZ!^$z!^!_%k!_!`6U!`;'S$z;'S;=`&W<%lO$zR!/pX$RQ&wPOY$zYZ%fZ!^$z!^!_%k!_!`$z!`!a*c!a;'S$z;'S;=`&W<%lO$zP!0bR!iP!_!`!0k!r!s!0p#d#e!0pP!0pO!iPP!0sQ!j!k!0y#[#]!0yP!0|Q!r!s!0k#d#e!0kV!1ZX#uQ&wPOY$zYZ%fZ!^$z!^!_%k!_!`)r!`!a!1v!a;'S$z;'S;=`&W<%lO$zV!1}V#OU&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zR!2kX$RQ&wPOY$zYZ%fZ!^$z!^!_%k!_!`!3W!`!a!.x!a;'S$z;'S;=`&W<%lO$zR!3_V$RQ&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zV!3{[!vQ&wPOY$zYZ%fZ}$z}!O!4q!O!^$z!^!_%k!_!`$z!`!a!6P!a!b!6m!b;'S$z;'S;=`&W<%lO$zV!4vX&wPOY$zYZ%fZ!^$z!^!_%k!_!`$z!`!a!5c!a;'S$z;'S;=`&W<%lO$zV!5jV#aU&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zV!6WV!gU&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zR!6tW#zQ&wPOY$zYZ%fZ!^$z!^!_%k!_!`6U!`;'S$z;'S;=`&W<%lO$zR!7eV$]Q&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$z_!8Ra&wP!s^OY$zYZ%fZ!Q$z!Q![!7z![!^$z!^!_%k!_!c$z!c!}!7z!}#R$z#R#S!7z#S#T$z#T#o!7z#o$g$z$g&j!7z&j;'S$z;'S;=`&W<%lO$z_!9_e&wP!s^OY$zYZ%fZr$zrs!:psw$zwx8Vx!Q$z!Q![!7z![!^$z!^!_%k!_!c$z!c!}!7z!}#R$z#R#S!7z#S#T$z#T#o!7z#o$g$z$g&j!7z&j;'S$z;'S;=`&W<%lO$zR!:wV&wP'gQOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zV!;eV#WU&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zV!<RV#pU&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zR!<oV#XQ&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zR!=]W$OQ&wPOY$zYZ%fZ!^$z!^!_%k!_!`6U!`;'S$z;'S;=`&W<%lO$zR!=zZ&wPOY!=uYZ!>mZ!^!=u!^!_!@u!_#O!=u#O#P!Aq#P#S!=u#S#T!B{#T;'S!=u;'S;=`!Ci<%lO!=uR!>rV&wPO#O!?X#O#P!?q#P#S!?X#S#T!@j#T;'S!?X;'S;=`!@o<%lO!?XQ!?[VO#O!?X#O#P!?q#P#S!?X#S#T!@j#T;'S!?X;'S;=`!@o<%lO!?XQ!?tRO;'S!?X;'S;=`!?};=`O!?XQ!@QWO#O!?X#O#P!?q#P#S!?X#S#T!@j#T;'S!?X;'S;=`!@o;=`<%l!?X<%lO!?XQ!@oO${QQ!@rP;=`<%l!?XR!@x]OY!=uYZ!>mZ!a!=u!a!b!?X!b#O!=u#O#P!Aq#P#S!=u#S#T!B{#T;'S!=u;'S;=`!Ci<%l~!=u~O!=u~~%fR!AvW&wPOY!=uYZ!>mZ!^!=u!^!_!@u!_;'S!=u;'S;=`!B`;=`<%l!?X<%lO!=uR!BcWO#O!?X#O#P!?q#P#S!?X#S#T!@j#T;'S!?X;'S;=`!@o;=`<%l!=u<%lO!?XR!CSV${Q&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zR!ClP;=`<%l!=uV!CvV!oU&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zV!DfY#}Q#lS&wPOY$zYZ%fZ!^$z!^!_%k!_!`6U!`#p$z#p#q!EU#q;'S$z;'S;=`&W<%lO$zR!E]V#{Q&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zR!EyV!nQ&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$zR!FgV$^Q&wPOY$zYZ%fZ!^$z!^!_%k!_;'S$z;'S;=`&W<%lO$z",
            tokenizers: [p, h, f, 0, 1, 2, 3, d],
            topRules: {
                Template: [0, 72],
                Program: [1, 232]
            },
            dynamicPrecedences: {
                284: 1
            },
            specialized: [{
                term: 81,
                get: (e,t)=>a(e) << 1,
                external: a
            }, {
                term: 81,
                get: e=>Q[e] || -1
            }],
            tokenPrec: 29354
        });
        var g = O(770)
          , P = O(1303)
          , S = O(168);
        let b = S.qp.define({
            name: "php",
            parser: $.configure({
                props: [S.uj.add({
                    IfStatement: (0,
                    S.tC)({
                        except: /^\s*({|else\b|elseif\b|endif\b)/
                    }),
                    TryStatement: (0,
                    S.tC)({
                        except: /^\s*({|catch\b|finally\b)/
                    }),
                    SwitchBody: e=>{
                        let t = e.textAfter
                          , O = /^\s*\}/.test(t)
                          , n = /^\s*(case|default)\b/.test(t);
                        return e.baseIndent + (O ? 0 : n ? 1 : 2) * e.unit
                    }
                    ,
                    ColonBlock: e=>e.baseIndent + e.unit,
                    "Block EnumBody DeclarationList": (0,
                    S.vw)({
                        closing: "}"
                    }),
                    ArrowFunction: e=>e.baseIndent + e.unit,
                    "String BlockComment": ()=>null,
                    Statement: (0,
                    S.tC)({
                        except: /^({|end(for|foreach|switch|while)\b)/
                    })
                }), S.x0.add({
                    "Block EnumBody DeclarationList SwitchBody ArrayExpression ValueList": S.Dv,
                    ColonBlock: e=>({
                        from: e.from + 1,
                        to: e.to
                    }),
                    BlockComment: e=>({
                        from: e.from + 2,
                        to: e.to - 2
                    })
                })]
            }),
            languageData: {
                commentTokens: {
                    block: {
                        open: "/*",
                        close: "*/"
                    },
                    line: "//"
                },
                indentOnInput: /^\s*(?:case |default:|end(?:if|for(?:each)?|switch|while)|else(?:if)?|\{|\})$/,
                wordChars: "$",
                closeBrackets: {
                    stringPrefixes: ["b", "B"]
                }
            }
        });
        function y(e={}) {
            let t = [], O;
            if (null === e.baseLanguage)
                ;
            else if (e.baseLanguage)
                O = e.baseLanguage;
            else {
                let e = (0,
                P.html)({
                    matchClosingTags: !1
                });
                t.push(e.support),
                O = e.language
            }
            return new S.ri(b.configure({
                wrap: O && (0,
                g.FE)(e=>e.type.isTop ? {
                    parser: O.parser,
                    overlay: e=>"Text" == e.name
                } : null),
                top: e.plain ? "Program" : "Template"
            }),t)
        }
    },
    4246: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            globalCompletion: function() {
                return w
            },
            localCompletionSource: function() {
                return X
            },
            python: function() {
                return W
            },
            pythonLanguage: function() {
                return _
            }
        });
        var n = O(2679)
          , r = O(5306);
        let i = new Set([23, 47, 48, 255, 63, 121, 54, 55, 230, 60, 61, 58, 59, 71, 142, 143, 146]);
        function a(e) {
            return 10 == e || 13 == e
        }
        let o = new n.Jq((e,t)=>{
            if (e.next < 0)
                e.acceptToken(193);
            else if (t.context.depth < 0)
                a(e.next) && e.acceptToken(192, 1);
            else if (a(e.peek(-1)) && t.canShift(191)) {
                let t = 0;
                for (; 32 == e.next || 9 == e.next; )
                    e.advance(),
                    t++;
                (10 == e.next || 13 == e.next || 35 == e.next) && e.acceptToken(191, -t)
            } else
                a(e.next) && e.acceptToken(t.context.depth < 0 ? 192 : 190, 1)
        }
        ,{
            contextual: !0
        })
          , s = new n.Jq((e,t)=>{
            let O = t.context.depth;
            if (O < 0)
                return;
            let n = e.peek(-1);
            if ((10 == n || 13 == n) && t.context.depth >= 0) {
                let t = 0
                  , n = 0;
                for (; ; ) {
                    if (32 == e.next)
                        t++;
                    else if (9 == e.next)
                        t += 8 - t % 8;
                    else
                        break;
                    e.advance(),
                    n++
                }
                t != O && 10 != e.next && 13 != e.next && 35 != e.next && (t < O ? e.acceptToken(189, -n) : e.acceptToken(188))
            }
        }
        );
        function l(e, t) {
            this.parent = e,
            this.depth = t,
            this.hash = (e ? e.hash + e.hash << 8 : 0) + t + (t << 4)
        }
        let c = new l(null,0)
          , u = new n.IK({
            start: c,
            reduce: (e,t)=>e.depth < 0 && i.has(t) ? e.parent : e,
            shift: (e,t,O,n)=>188 == t ? new l(e,function(e) {
                let t = 0;
                for (let O = 0; O < e.length; O++)
                    t += 9 == e.charCodeAt(O) ? 8 - t % 8 : 1;
                return t
            }(n.read(n.pos, O.pos))) : 189 == t ? e.parent : 22 == t || 53 == t || 57 == t ? new l(e,-1) : e,
            hash: e=>e.hash
        })
          , p = new n.Jq(e=>{
            for (let t = 0; t < 5; t++) {
                if (e.next != "print".charCodeAt(t))
                    return;
                e.advance()
            }
            if (!/\w/.test(String.fromCharCode(e.next)))
                for (let t = 0; ; t++) {
                    let O = e.peek(t);
                    if (32 != O && 9 != O) {
                        40 != O && 46 != O && 10 != O && 13 != O && 35 != O && e.acceptToken(1);
                        return
                    }
                }
        }
        )
          , d = (0,
        r.Gv)({
            'async "*" "**" FormatConversion FormatSpec': r.pJ.modifier,
            "for while if elif else try except finally return raise break continue with pass assert await yield match case": r.pJ.controlKeyword,
            "in not and or is del": r.pJ.operatorKeyword,
            "from def class global nonlocal lambda": r.pJ.definitionKeyword,
            import: r.pJ.moduleKeyword,
            "with as print": r.pJ.keyword,
            Boolean: r.pJ.bool,
            None: r.pJ.null,
            VariableName: r.pJ.variableName,
            "CallExpression/VariableName": r.pJ.function(r.pJ.variableName),
            "FunctionDefinition/VariableName": r.pJ.function(r.pJ.definition(r.pJ.variableName)),
            "ClassDefinition/VariableName": r.pJ.definition(r.pJ.className),
            PropertyName: r.pJ.propertyName,
            "CallExpression/MemberExpression/PropertyName": r.pJ.function(r.pJ.propertyName),
            Comment: r.pJ.lineComment,
            Number: r.pJ.number,
            String: r.pJ.string,
            FormatString: r.pJ.special(r.pJ.string),
            UpdateOp: r.pJ.updateOperator,
            "ArithOp!": r.pJ.arithmeticOperator,
            BitOp: r.pJ.bitwiseOperator,
            CompareOp: r.pJ.compareOperator,
            AssignOp: r.pJ.definitionOperator,
            Ellipsis: r.pJ.punctuation,
            At: r.pJ.meta,
            "( )": r.pJ.paren,
            "[ ]": r.pJ.squareBracket,
            "{ }": r.pJ.brace,
            ".": r.pJ.derefOperator,
            ", ;": r.pJ.separator
        })
          , f = {
            __proto__: null,
            await: 40,
            or: 50,
            and: 52,
            in: 56,
            not: 58,
            is: 60,
            if: 66,
            else: 68,
            lambda: 72,
            yield: 90,
            from: 92,
            async: 98,
            for: 100,
            None: 152,
            True: 154,
            False: 154,
            del: 168,
            pass: 172,
            break: 176,
            continue: 180,
            return: 184,
            raise: 192,
            import: 196,
            as: 198,
            global: 202,
            nonlocal: 204,
            assert: 208,
            elif: 218,
            while: 222,
            try: 228,
            except: 230,
            finally: 232,
            with: 236,
            def: 240,
            class: 250,
            match: 261,
            case: 267
        }
          , h = n.WQ.deserialize({
            version: 14,
            states: "!MbO`Q]OOP$_OSOOO%hQdO'#G|OOQS'#Cm'#CmOOQS'#Cn'#CnO'WQ[O'#ClO(yQdO'#G{OOQS'#G|'#G|OOQS'#DS'#DSOOQS'#G{'#G{O)gQ[O'#D]O)zQ[O'#DdO*[Q[O'#DhOOQS'#Ds'#DsO*oOpO'#DsO*wO!bO'#DsO+PO#tO'#DtO+[O&jO'#DtO+gO,UO'#DtO+rO7[O'#DtO-tQdO'#GmOOQS'#Gm'#GmO'WQ[O'#GlO/WQdO'#GlOOQS'#E]'#E]O/oQ[O'#E^OOQS'#Gk'#GkO/yQ[O'#GjOOQV'#Gj'#GjO0UQ[O'#FPOOQS'#GW'#GWO0ZQ[O'#FOOOQV'#Hx'#HxOOQV'#Gi'#GiOOQV'#Fh'#FhQ`Q]OOO'WQ[O'#CoO0iQ[O'#C{O0pQ[O'#DPO1OQ[O'#HQO1`QdO'#EQO'WQ[O'#EROOQS'#ET'#ETOOQS'#EV'#EVOOQS'#EX'#EXO1tQ[O'#EZO2[Q[O'#E_O0UQ[O'#EaO2oQdO'#EaO0UQ[O'#EdO/oQ[O'#EgO/oQ[O'#EkO/oQ[O'#EnO2zQ[O'#EpO3RQ[O'#EuO3^Q[O'#EqO/oQ[O'#EuO0UQ[O'#EwO0UQ[O'#E|O3cQ[O'#FRP3jO[O'#GhPOOO)CB[)CB[OOQS'#Cc'#CcOOQS'#Cd'#CdOOQS'#Ce'#CeOOQS'#Cf'#CfOOQS'#Cg'#CgOOQS'#Ch'#ChOOQS'#Cj'#CjO'WQ[O,58|O'WQ[O,58|O'WQ[O,58|O'WQ[O,58|O'WQ[O,58|O'WQ[O,58|O3uQ[O'#DmOOQS,5:W,5:WO4YQ[O'#H[OOQS,5:Z,5:ZO4gQMlO,5:ZO4lQdO,59WO0iQ[O,59`O0iQ[O,59`O0iQ[O,59`O7[Q[O,59`O7aQ[O,59`O7hQ[O,59hO7oQ[O'#G{O8uQ[O'#GzOOQS'#Gz'#GzOOQS'#DY'#DYO9^Q[O,59_O'WQ[O,59_O9lQ[O,59_OOQS,59w,59wO9qQ[O,5:PO'WQ[O,5:POOQS,5:O,5:OO:PQ[O,5:OO:UQ[O,5:VO'WQ[O,5:VO'WQ[O,5:TOOQS,5:S,5:SO:gQ[O,5:SO:lQ[O,5:UOOOO'#Fp'#FpO:qOpO,5:_OOQS,5:_,5:_OOOO'#Fq'#FqO:yO!bO,5:_O;RQ[O'#DuOOOO'#Fr'#FrO;cO#tO,5:`OOQS,5:`,5:`OOOO'#Fu'#FuO;nO&jO,5:`OOOO'#Fv'#FvO;yO,UO,5:`OOOO'#Fw'#FwO<UO7[O,5:`OOQS'#Fx'#FxO<aQdO,5:dO?RQdO,5=WO?lQ!LUO,5=WO@]QdO,5=WOOQS,5:x,5:xO@tQ]O'#GQOBTQ[O,5;TOOQV,5=U,5=UOB`QdO'#HtOBwQ[O,5;kOOQS-E:U-E:UOOQV,5;j,5;jO3XQ[O'#EwOOQV-E9f-E9fOCPQdO,59ZOEWQdO,59gOEqQ[O'#G}OE|Q[O'#G}O0UQ[O'#G}OFXQ[O'#DROFaQ[O,59kOFfQ[O'#HRO'WQ[O'#HRO/oQ[O,5=lOOQS,5=l,5=lO/oQ[O'#D|OOQS'#D}'#D}OGTQ[O'#FzOGeQ[O,58zOGeQ[O,58zO)mQ[O,5:jOGsQdO'#HTOOQS,5:m,5:mOOQS,5:u,5:uOHWQ[O,5:yOHiQ[O,5:{OOQS'#F}'#F}OHwQdO,5:{OIVQ[O,5:{OI[Q[O'#HwOOQS,5;O,5;OOIjQ[O'#HsOOQS,5;R,5;RO3^Q[O,5;VO3^Q[O,5;YOI{QdO'#HyO'WQ[O'#HyOJVQ[O,5;[O2zQ[O,5;[O/oQ[O,5;aO0UQ[O,5;cOJ[Q]O'#ElOKeQ_O,5;]ONvQ[O'#HzO3^Q[O,5;aO! RQ[O,5;cO! WQ[O,5;hO! `QdO,5;mO'WQ[O,5;mPOOO,5=S,5=SP! gOSO,5=SP! lO[O,5=SO!$aQdO1G.hO!$hQdO1G.hO!'XQdO1G.hO!'cQdO1G.hO!)|QdO1G.hO!*aQdO1G.hO!*tQ[O'#HZO!+SQdO'#GmO/oQ[O'#HZO!+^Q[O'#HYOOQS,5:X,5:XO!+fQ[O,5:XO!+kQ[O'#H]O!+vQ[O'#H]O!,ZQ[O,5=vOOQS'#Dq'#DqOOQS1G/u1G/uOOQS1G.z1G.zO!-ZQdO1G.zO!-bQdO1G.zO0iQ[O1G.zO!-}Q[O1G/SOOQS'#DX'#DXO/oQ[O,59rOOQS1G.y1G.yO!.UQ[O1G/cO!.fQ[O1G/cO!.nQ[O1G/dO'WQ[O'#HSO!.sQ[O'#HSO!.xQdO1G.yO!/YQ[O,59gO!0`Q[O,5=rO!0pQ[O,5=rO!0xQ[O1G/kO!0}QdO1G/kOOQS1G/j1G/jO!1_Q[O,5=mO!2UQ[O,5=mO/oQ[O1G/oO!2sQ[O1G/qO!2xQdO1G/qO!3YQdO1G/oOOQS1G/n1G/nOOQS1G/p1G/pOOOO-E9n-E9nOOQS1G/y1G/yOOOO-E9o-E9oO!3jQ[O'#HhO/oQ[O'#HhO!3xQ[O,5:aOOOO-E9p-E9pOOQS1G/z1G/zOOOO-E9s-E9sOOOO-E9t-E9tOOOO-E9u-E9uOOQS-E9v-E9vO!4TQ!LUO1G2rO!4tQdO1G2rO'WQ[O,5<eOOQS,5<e,5<eOOQS-E9w-E9wOOQS,5<l,5<lOOQS-E:O-E:OOOQV1G0o1G0oO0UQ[O'#F|O!5]QdO,5>`OOQS1G1V1G1VO!5tQ[O1G1VOOQS'#DT'#DTO/oQ[O,5=iOOQS,5=i,5=iO!5yQ[O'#FiO!6UQ[O,59mO!6^Q[O1G/VO!6hQdO,5=mOOQS1G3W1G3WOOQS,5:h,5:hO!7XQ[O'#GlOOQS,5<f,5<fOOQS-E9x-E9xO!7jQ[O1G.fOOQS1G0U1G0UO!7xQ[O,5=oO!8YQ[O,5=oO/oQ[O1G0eO/oQ[O1G0eO0UQ[O1G0gOOQS-E9{-E9{O!8kQ[O1G0gO!8vQ[O1G0gO!8{Q[O,5>cO!9ZQ[O,5>cO!9iQ[O,5>_O!:PQ[O,5>_O!:bQ_O1G0qO!=pQ_O1G0tO!@{Q[O,5>eO!AVQ[O,5>eO!A_QdO,5>eO/oQ[O1G0vO!AiQ[O1G0vO3^Q[O1G0{O! RQ[O1G0}OOQV,5;W,5;WO!AnQ^O,5;WO!AsQ_O1G0wO!EUQ[O'#GTO3^Q[O1G0wO3^Q[O1G0wO!EcQ[O,5>fO!EpQ[O,5>fO0UQ[O,5>fOOQV1G0{1G0{O!ExQ[O'#EyO!FZQMlO1G0}OOQV1G1S1G1SO3^Q[O1G1SO!FcQ[O'#FTOOQV1G1X1G1XO! `QdO1G1XPOOO1G2n1G2nP!FhOSO1G2nOOQS,5=u,5=uOOQS'#Dn'#DnO/oQ[O,5=uO!FmQ[O,5=tO!GQQ[O,5=tOOQS1G/s1G/sO!GYQ[O,5=wO!GjQ[O,5=wO!GrQ[O,5=wO!HVQ[O,5=wO!HgQ[O,5=wOOQS1G3b1G3bOOQS7+$f7+$fO!6^Q[O7+$nO!JYQ[O1G.zO!JaQ[O1G.zOOQS1G/^1G/^OOQS,5<V,5<VO'WQ[O,5<VOOQS7+$}7+$}O!JhQ[O7+$}OOQS-E9i-E9iOOQS7+%O7+%OO!JxQ[O,5=nO'WQ[O,5=nOOQS7+$e7+$eO!J}Q[O7+$}O!KVQ[O7+%OO!K[Q[O1G3^OOQS7+%V7+%VO!KlQ[O1G3^O!KtQ[O7+%VOOQS,5<U,5<UO'WQ[O,5<UO!KyQ[O1G3XOOQS-E9h-E9hO!LpQ[O7+%ZOOQS7+%]7+%]O!MOQ[O1G3XO!MmQ[O7+%]O!MrQ[O1G3_O!NSQ[O1G3_O!N[Q[O7+%ZO!NaQ[O,5>SO!NwQ[O,5>SO!NwQ[O,5>SO# VO$ISO'#DwO# bOWO'#HiOOOO1G/{1G/{O# gQ[O1G/{O# oQ!LUO7+(^O#!`QdO1G2PP#!yQ[O'#FyOOQS,5<h,5<hOOQS-E9z-E9zOOQS7+&q7+&qOOQS1G3T1G3TOOQS,5<T,5<TOOQS-E9g-E9gOOQS7+$q7+$qO##WQ[O,5=WO##qQ[O,5=WO#$SQdO,5<WO#$gQ[O1G3ZOOQS-E9j-E9jOOQS7+&P7+&PO#$wQ[O7+&POOQS7+&R7+&RO#%VQ[O'#HvO0UQ[O'#HuO#%kQ[O7+&ROOQS,5<k,5<kO#%vQ[O1G3}OOQS-E9}-E9}OOQS,5<g,5<gO#&UQ[O1G3yOOQS-E9y-E9yO#&lQ_O7+&]O!EUQ[O'#GRO3^Q[O7+&]O3^Q[O7+&`O#)zQdO,5<nO'WQ[O,5<nO#*UQ[O1G4POOQS-E:Q-E:QO#*`Q[O1G4PO3^Q[O7+&bO/oQ[O7+&bOOQV7+&g7+&gO!FZQMlO7+&iO`Q]O1G0rOOQV-E:R-E:RO3^Q[O7+&cO3^Q[O7+&cOOQV,5<o,5<oO#*hQ[O,5<oOOQV7+&c7+&cO#*sQ_O7+&cO#.OQ[O,5<pO#.ZQ[O1G4QOOQS-E:S-E:SO#.hQ[O1G4QO#.pQ[O'#H|O#/OQ[O'#H|O0UQ[O'#H|OOQS'#H|'#H|O#/ZQ[O'#H{OOQS,5;e,5;eO#/cQ[O,5;eO/oQ[O'#E{OOQV7+&i7+&iO3^Q[O7+&iOOQV7+&n7+&nO#/hQ^O,5;oOOQV7+&s7+&sPOOO7+(Y7+(YOOQS1G3a1G3aOOQS,5<Y,5<YO#/mQ[O1G3`OOQS-E9l-E9lO#0QQ[O,5<ZO#0]Q[O,5<ZO#0pQ[O1G3cOOQS-E9m-E9mO#1QQ[O1G3cO#1YQ[O1G3cO#1jQ[O1G3cO#1QQ[O1G3cOOQS<<HY<<HYO#1uQdO1G1qOOQS<<Hi<<HiP#2SQ[O'#FkO7hQ[O1G3YO#2aQ[O1G3YO#2fQ[O<<HiOOQS<<Hj<<HjO#2vQ[O7+(xOOQS<<Hq<<HqO#3WQdO1G1pP#3wQ[O'#FjO#4UQ[O7+(yO#4fQ[O7+(yO#4nQ[O<<HuO#4sQ[O7+(sOOQS<<Hw<<HwO#5jQ[O,5<XO'WQ[O,5<XOOQS-E9k-E9kOOQS<<Hu<<HuOOQS,5<_,5<_O/oQ[O,5<_O#5oQ[O1G3nOOQS-E9q-E9qO#6VQ[O1G3nOOOO'#Ft'#FtO#6eO$ISO,5:cOOOO,5>T,5>TOOOO7+%g7+%gO#6pQ[O1G2rO#7ZQ[O1G2rP'WQ[O'#FlO/oQ[O<<IkO#7lQ[O,5>bO#7}Q[O,5>bO0UQ[O,5>bO#8`Q[O,5>aOOQS<<Im<<ImP0UQ[O'#GPP/oQ[O'#F{OOQV-E:P-E:PO3^Q[O<<IwOOQV,5<m,5<mO3^Q[O,5<mOOQV<<Iw<<IwOOQV<<Iz<<IzO#8eQdO1G2YP#8oQ[O'#GSO#8vQ[O7+)kO#9QQ_O<<I|O3^Q[O<<I|OOQV<<JT<<JTO3^Q[O<<JTO#<]Q_O7+&^OOQV<<I}<<I}O#<gQ_O<<I}OOQV1G2Z1G2ZO0UQ[O1G2ZO3^Q[O<<I}O0UQ[O1G2[P/oQ[O'#GUO#?rQ[O7+)lO#@PQ[O7+)lOOQS'#Ez'#EzO/oQ[O,5>hO#@XQ[O,5>hOOQS,5>h,5>hO#@dQ[O,5>gO#@uQ[O,5>gOOQS1G1P1G1POOQS,5;g,5;gO#@}Q[O1G1ZP#ASQ[O'#FnO#AdQ[O1G1uO#AwQ[O1G1uO#BXQ[O1G1uP#BdQ[O'#FoO#BqQ[O7+(}O#CRQ[O7+(}O#CRQ[O7+(}O#CZQ[O7+(}O#CkQ[O7+(tO7hQ[O7+(tOOQSAN>TAN>TO#DUQ[O<<LeOOQSAN>aAN>aO/oQ[O1G1sO#DfQdO1G1sP#DpQ[O'#FmOOQS1G1y1G1yP#D}Q[O'#FsO#E[Q[O7+)YOOOO-E9r-E9rO#ErQ[O7+(^OOQSAN?VAN?VO#F]Q[O,5<jO#FqQ[O1G3|OOQS-E9|-E9|O#GSQ[O1G3|OOQS1G3{1G3{OOQVAN?cAN?cOOQV1G2X1G2XO3^Q[OAN?hO#GeQ_OAN?hOOQVAN?oAN?oOOQV<<Ix<<IxO3^Q[OAN?iO3^Q[O7+'uOOQVAN?iAN?iOOQS7+'v7+'vO#JpQ[O<<MWOOQS1G4S1G4SO/oQ[O1G4SOOQS,5<q,5<qO#J}Q[O1G4ROOQS-E:T-E:TOOQU'#GX'#GXO#K`Q^O7+&uO#KkQ[O'#FUO#LcQ[O7+'aO#LsQ[O7+'aOOQS7+'a7+'aO#MOQ[O<<LiO#M`Q[O<<LiO#M`Q[O<<LiO#MhQ[O'#HUOOQS<<L`<<L`O#MrQ[O<<L`OOQS7+'_7+'_O0UQ[O1G2UP0UQ[O'#GOO#N]Q[O7+)hO#NnQ[O7+)hOOQVG25SG25SO3^Q[OG25SOOQVG25TG25TOOQV<<Ka<<KaOOQS7+)n7+)nP$ PQ[O'#GVOOQU-E:V-E:VOOQV<<Ja<<JaO$ sQdO'#FWOOQS'#FY'#FYO$!TQ[O'#FXO$!uQ[O'#FXOOQS'#FX'#FXO$!zQ[O'#IOO#KkQ[O'#F`O#KkQ[O'#F`O$#cQ[O'#FaO#KkQ[O'#FbO$#jQ[O'#IPOOQS'#IP'#IPO$$XQ[O,5;pOOQS<<J{<<J{O$$aQ[O<<J{O$$qQ[OANBTO$%RQ[OANBTO$%ZQ[O'#HVOOQS'#HV'#HVO0pQ[O'#DaO$%tQ[O,5=pOOQSANAzANAzOOQS7+'p7+'pO$&]Q[O<<MSOOQVLD*nLD*nO4gQMlO'#GZO$&nQdO,5;yO#KkQ[O'#FdOOQS,5;},5;}OOQS'#FZ'#FZO$'`Q[O,5;sO$'eQ[O,5;sOOQS'#F^'#F^O#KkQ[O'#GYO$(VQ[O,5;wO$(qQ[O,5>jO$)RQ[O,5>jO0UQ[O,5;vO$)dQ[O,5;zO$)iQ[O,5;zO#KkQ[O'#IQO$)nQ[O'#IQO$)sQ[O,5;{OOQS,5;|,5;|O'WQ[O'#FgOOQU1G1[1G1[O3^Q[O1G1[OOQSAN@gAN@gO$)xQ[OG27oO$*YQ[O,59{OOQS1G3[1G3[OOQS,5<u,5<uOOQS-E:X-E:XO$*_QdO'#FWO$*fQ[O'#IRO$*tQ[O'#IRO$*|Q[O,5<OOOQS1G1_1G1_O$+RQ[O1G1_O$+WQ[O,5<tOOQS-E:W-E:WO$+rQ[O,5<xO$,ZQ[O1G4UOOQS-E:[-E:[OOQS1G1b1G1bOOQS1G1f1G1fO$,kQ[O,5>lO#KkQ[O,5>lOOQS1G1g1G1gO$,yQdO,5<ROOQU7+&v7+&vO#MhQ[O1G/gO#KkQ[O,5<PO$-QQ[O,5>mO$-XQ[O,5>mOOQS1G1j1G1jOOQS7+&y7+&yP#KkQ[O'#G^O$-aQ[O1G4WO$-kQ[O1G4WO$-sQ[O1G4WOOQS7+%R7+%RO$.RQ[O1G1kO$.aQdO'#FWO$.hQ[O,5<wOOQS,5<w,5<wO$.vQ[O1G4XOOQS-E:Z-E:ZO#KkQ[O,5<vO$.}Q[O,5<vO$/SQ[O7+)rOOQS-E:Y-E:YO$/^Q[O7+)rO#KkQ[O,5<QP#KkQ[O'#G]O$/fQ[O1G2bO#KkQ[O1G2bP$/tQ[O'#G[O$/{Q[O<<M^O$0VQ[O1G1lO$0eQ[O7+'|O7hQ[O'#C{O7hQ[O,59`O7hQ[O,59`O7hQ[O,59`O$0sQdO,5=WO7hQ[O1G.zO/oQ[O1G/VO/oQ[O7+$nP$1WQ[O'#FyO'WQ[O'#GlO$1eQ[O,59`O$1jQ[O,59`O$1qQ[O,59kO$1vQ[O1G/SO0pQ[O'#DPO7hQ[O,59h",
            stateData: "$2^~O%ZOS%WOSQOS%VPQ~OPiOTfOdtOfYOmuOq!TOtvO}wO!O!QO!R!WO!S!VO!VZO!Z[O!feO!meO!neO!oeO!vyO!xzO!z{O!||O#O}O#S!OO#U!PO#X!RO#Y!RO#[!SO#c!UO#f!XO#j!YO#l!ZO#q![O#tmO#v!]O%gRO%hRO%lSO%mWO&R]O&S^O&V_O&Y`O&`aO&cbO&ecO~O%V!^O~OT!eO]!eO_!fOf!mO!V!oO!d!qO%b!`O%c!aO%d!bO%e!cO%f!cO%g!dO%h!dO%i!eO%j!eO%k!eO~Oi%pXj%pXk%pXl%pXm%pXn%pXq%pXx%pXy%pX!s%pX#^%pX%U%pX%X%pX%r%pXe%pX!R%pX!S%pX%s%pX!U%pX!Y%pX!O%pX#V%pXr%pX!j%pX~P$dOdtOfYO!VZO!Z[O!feO!meO!neO!oeO%gRO%hRO%lSO%mWO&R]O&S^O&V_O&Y`O&`aO&cbO&ecO~Ox%oXy%oX#^%oX%U%oX%X%oX%r%oX~Oi!tOj!uOk!sOl!sOm!vOn!wOq!xO!s%oX~P(eOT#OOe#QOm/qOt0PO}wO~P'WOT#SOm/qOt0PO!U#TO~P'WOT#WO_#XOm/qOt0PO!Y#YO~P'WO&T#]O&U#_O~O&W#`O&X#_O~O!Z#bO&Z#cO&_#eO~O!Z#bO&a#fO&b#eO~O!Z#bO&U#eO&d#hO~O!Z#bO&X#eO&f#jO~OT%aX]%aX_%aXf%aXi%aXj%aXk%aXl%aXm%aXn%aXq%aXx%aX!V%aX!d%aX%b%aX%c%aX%d%aX%e%aX%f%aX%g%aX%h%aX%i%aX%j%aX%k%aXe%aX!R%aX!S%aX~O&R]O&S^O&V_O&Y`O&`aO&cbO&ecOy%aX!s%aX#^%aX%U%aX%X%aX%r%aX%s%aX!U%aX!Y%aX!O%aX#V%aXr%aX!j%aX~P+}Ox#oOy%`X!s%`X#^%`X%U%`X%X%`X%r%`X~Om/qOt0PO~P'WO#^#rO%U#tO%X#tO~O%mWO~O!R#yO#l!ZO#q![O#tmO~OmuO~P'WOT$OO_$PO%mWOyuP~OT$TOm/qOt0PO!O$UO~P'WOy$WO!s$]O%r$XO#^!tX%U!tX%X!tX~OT$TOm/qOt0PO#^!}X%U!}X%X!}X~P'WOm/qOt0PO#^#RX%U#RX%X#RX~P'WO!d$cO!m$cO%mWO~OT$mO~P'WO!S$oO#j$pO#l$qO~Oy$rO~OT$yO~P'WOQ${O%U$zO%Z$|O~OT%VO_%VOe%XOm/qOt0PO~P'WOm/qOt0POy%[O~P'WO&Q%^O~O_!fOf!mO!V!oO!d!qOT`a]`ai`aj`ak`al`am`an`aq`ax`ay`a!s`a#^`a%U`a%X`a%b`a%c`a%d`a%e`a%f`a%g`a%h`a%i`a%j`a%k`a%r`ae`a!R`a!S`a%s`a!U`a!Y`a!O`a#V`ar`a!j`a~Ol%cO~Om%cO~P'WOm/qO~P'WOi/sOj/tOk/rOl/rOm/{On/|Oq0QOe%oX!R%oX!S%oX%s%oX!U%oX!Y%oX!O%oX#V%oX!j%oX~P(eO%s%eOe%nXx%nX!R%nX!S%nX!U%nXy%nX~Oe%gOx%hO!R%lO!S%kO~Oe%gO~Ox%oO!R%lO!S%kO!U%zX~O!U%sO~Ox%tOy%vO!R%lO!S%kO!Y%uX~O!Y%zO~O!Y%{O~O&T#]O&U%}O~O&W#`O&X%}O~OT&QOm/qOt0PO}wO~P'WO!Z#bO&Z#cO&_&TO~O!Z#bO&a#fO&b&TO~O!Z#bO&U&TO&d#hO~O!Z#bO&X&TO&f#jO~OT!la]!la_!laf!lai!laj!lak!lal!lam!lan!laq!lax!lay!la!V!la!d!la!s!la#^!la%U!la%X!la%b!la%c!la%d!la%e!la%f!la%g!la%h!la%i!la%j!la%k!la%r!lae!la!R!la!S!la%s!la!U!la!Y!la!O!la#V!lar!la!j!la~P#vOx&YOy%`a!s%`a#^%`a%U%`a%X%`a%r%`a~P$dOT&[OmuOtvOy%`a!s%`a#^%`a%U%`a%X%`a%r%`a~P'WOx&YOy%`a!s%`a#^%`a%U%`a%X%`a%r%`a~OPiOTfOmuOtvO}wO!O!QO!vyO!xzO!z{O!||O#O}O#S!OO#U!PO#X!RO#Y!RO#[!SO#^$tX%U$tX%X$tX~P'WO#^#rO%U&aO%X&aO~O!d&bOf&hX%U&hX#V&hX#^&hX%X&hX#U&hX~Of!mO%U&dO~Oicajcakcalcamcancaqcaxcayca!sca#^ca%Uca%Xca%rcaeca!Rca!Sca%sca!Uca!Yca!Oca#Vcarca!jca~P$dOqoaxoayoa#^oa%Uoa%Xoa%roa~Oi!tOj!uOk!sOl!sOm!vOn!wO!soa~PDoO%r&fOx%qXy%qX~O%mWOx%qXy%qX~Ox&iOyuX~Oy&kO~Ox%tO#^%uX%U%uX%X%uXe%uXy%uX!Y%uX!j%uX%r%uX~OT/zOm/qOt0PO}wO~P'WO%r$XO#^Sa%USa%XSa~Ox&tO#^%wX%U%wX%X%wXl%wX~P$dOx&wO!O&vO#^#Ra%U#Ra%X#Ra~O#V&xO#^#Ta%U#Ta%X#Ta~O!d$cO!m$cO#U&zO%mWO~O#U&zO~Ox&|O#^&kX%U&kX%X&kX~Ox'OO#^&gX%U&gX%X&gXy&gX~Ox'SOl&mX~P$dOl'VO~OPiOTfOmuOtvO}wO!O!QO!vyO!xzO!z{O!||O#O}O#S!OO#U!PO#X!RO#Y!RO#[!SO%U'[O~P'WOr'`O#g'^O#h'_OP#eaT#ead#eaf#eam#eaq#eat#ea}#ea!O#ea!R#ea!S#ea!V#ea!Z#ea!f#ea!m#ea!n#ea!o#ea!v#ea!x#ea!z#ea!|#ea#O#ea#S#ea#U#ea#X#ea#Y#ea#[#ea#c#ea#f#ea#j#ea#l#ea#q#ea#t#ea#v#ea%R#ea%g#ea%h#ea%l#ea%m#ea&R#ea&S#ea&V#ea&Y#ea&`#ea&c#ea&e#ea%T#ea%X#ea~Ox'aO#V'cOy&nX~Of'eO~Of!mOy$rO~Oy'iO~P$dO%U'lO~OQ'mO%U'lO~OT!eO]!eO_!fOf!mO!V!oO!d!qO%d!bO%e!cO%f!cO%g!dO%h!dO%i!eO%j!eO%k!eOiUijUikUilUimUinUiqUixUiyUi!sUi#^Ui%UUi%XUi%bUi%rUieUi!RUi!SUi%sUi!UUi!YUi!OUi#VUirUi!jUi~O%c!aO~P! tO%cUi~P! tOT!eO]!eO_!fOf!mO!V!oO!d!qO%g!dO%h!dO%i!eO%j!eO%k!eOiUijUikUilUimUinUiqUixUiyUi!sUi#^Ui%UUi%XUi%bUi%cUi%dUi%rUieUi!RUi!SUi%sUi!UUi!YUi!OUi#VUirUi!jUi~O%e!cO%f!cO~P!$oO%eUi%fUi~P!$oO_!fOf!mO!V!oO!d!qOiUijUikUilUimUinUiqUixUiyUi!sUi#^Ui%UUi%XUi%bUi%cUi%dUi%eUi%fUi%gUi%hUi%rUieUi!RUi!SUi%sUi!UUi!YUi!OUi#VUirUi!jUi~OT!eO]!eO%i!eO%j!eO%k!eO~P!'mOTUi]Ui%iUi%jUi%kUi~P!'mO!R%lO!S%kOe%}Xx%}X~O%r'oO%s'oO~P+}Ox'qOe%|X~Oe'sO~Ox'tOy'vO!U&PX~Om/qOt0POx'tOy'wO!U&PX~P'WO!U'yO~Ok!sOl!sOm!vOn!wOihiqhixhiyhi!shi#^hi%Uhi%Xhi%rhi~Oj!uO~P!,`Ojhi~P!,`Oi/sOj/tOk/rOl/rOm/{On/|O~Or'{O~P!-iOT(QOe(ROm/qOt0PO~P'WOe(ROx(SO~Oe(UO~O!S(WO~Oe(XOx(SO!R%lO!S%kO~P$dOi/sOj/tOk/rOl/rOm/{On/|Oeoa!Roa!Soa%soa!Uoa!Yoa!Ooa#Voaroa!joa~PDoOT(QOm/qOt0PO!U%za~P'WOx([O!U%za~O!U(]O~Ox([O!R%lO!S%kO!U%za~P$dOT(aOm/qOt0PO!Y%ua#^%ua%U%ua%X%uae%uay%ua!j%ua%r%ua~P'WOx(bO!Y%ua#^%ua%U%ua%X%uae%uay%ua!j%ua%r%ua~O!Y(eO~Ox(bO!R%lO!S%kO!Y%ua~P$dOx(hO!R%lO!S%kO!Y%{a~P$dOx(kOy&[X!Y&[X!j&[X~Oy(nO!Y(pO!j(qO~OT&[OmuOtvOy%`i!s%`i#^%`i%U%`i%X%`i%r%`i~P'WOx(rOy%`i!s%`i#^%`i%U%`i%X%`i%r%`i~O!d&bOf&ha%U&ha#V&ha#^&ha%X&ha#U&ha~O%U(wO~OT$OO_$PO%mWO~Ox&iOyua~OmuOtvO~P'WOx(bO#^%ua%U%ua%X%uae%uay%ua!Y%ua!j%ua%r%ua~P$dOx(|O#^%`X%U%`X%X%`X%r%`X~O%r$XO#^Si%USi%XSi~O#^%wa%U%wa%X%wal%wa~P'WOx)PO#^%wa%U%wa%X%wal%wa~OT)TOf)VO%mWO~O#U)WO~O%mWO#^&ka%U&ka%X&ka~Ox)YO#^&ka%U&ka%X&ka~Om/qOt0PO#^&ga%U&ga%X&gay&ga~P'WOx)]O#^&ga%U&ga%X&gay&ga~Or)aO#a)`OP#_iT#_id#_if#_im#_iq#_it#_i}#_i!O#_i!R#_i!S#_i!V#_i!Z#_i!f#_i!m#_i!n#_i!o#_i!v#_i!x#_i!z#_i!|#_i#O#_i#S#_i#U#_i#X#_i#Y#_i#[#_i#c#_i#f#_i#j#_i#l#_i#q#_i#t#_i#v#_i%R#_i%g#_i%h#_i%l#_i%m#_i&R#_i&S#_i&V#_i&Y#_i&`#_i&c#_i&e#_i%T#_i%X#_i~Or)bOP#biT#bid#bif#bim#biq#bit#bi}#bi!O#bi!R#bi!S#bi!V#bi!Z#bi!f#bi!m#bi!n#bi!o#bi!v#bi!x#bi!z#bi!|#bi#O#bi#S#bi#U#bi#X#bi#Y#bi#[#bi#c#bi#f#bi#j#bi#l#bi#q#bi#t#bi#v#bi%R#bi%g#bi%h#bi%l#bi%m#bi&R#bi&S#bi&V#bi&Y#bi&`#bi&c#bi&e#bi%T#bi%X#bi~OT)dOl&ma~P'WOx)eOl&ma~Ox)eOl&ma~P$dOl)iO~O%S)lO~Or)oO#g'^O#h)nOP#eiT#eid#eif#eim#eiq#eit#ei}#ei!O#ei!R#ei!S#ei!V#ei!Z#ei!f#ei!m#ei!n#ei!o#ei!v#ei!x#ei!z#ei!|#ei#O#ei#S#ei#U#ei#X#ei#Y#ei#[#ei#c#ei#f#ei#j#ei#l#ei#q#ei#t#ei#v#ei%R#ei%g#ei%h#ei%l#ei%m#ei&R#ei&S#ei&V#ei&Y#ei&`#ei&c#ei&e#ei%T#ei%X#ei~Om/qOt0POy$rO~P'WOm/qOt0POy&na~P'WOx)uOy&na~OT)yO_)zOe)}O%i){O%mWO~Oy$rO&q*PO~O%U*TO~O%U*VO~OT%VO_%VOm/qOt0POe%|a~P'WOx*YOe%|a~Om/qOt0POy*]O!U&Pa~P'WOx*^O!U&Pa~Om/qOt0POx*^Oy*aO!U&Pa~P'WOm/qOt0POx*^O!U&Pa~P'WOx*^Oy*aO!U&Pa~Ok/rOl/rOm/{On/|Oehiihiqhixhi!Rhi!Shi%shi!Uhiyhi!Yhi#^hi%Uhi%Xhi!Ohi#Vhirhi!jhi%rhi~Oj/tO~P!HrOjhi~P!HrOT(QOe*fOm/qOt0PO~P'WOl*hO~Oe*fOx*jO~Oe*kO~OT(QOm/qOt0PO!U%zi~P'WOx*lO!U%zi~O!U*mO~OT(aOm/qOt0PO!Y%ui#^%ui%U%ui%X%uie%uiy%ui!j%ui%r%ui~P'WOx*pO!R%lO!S%kO!Y%{i~Ox*sO!Y%ui#^%ui%U%ui%X%uie%uiy%ui!j%ui%r%ui~O!Y*tO~O_*vOm/qOt0PO!Y%{i~P'WOx*pO!Y%{i~O!Y*xO~OT*zOm/qOt0POy&[a!Y&[a!j&[a~P'WOx*{Oy&[a!Y&[a!j&[a~O!Z#bO&^+OO!Y!kX~O!Y+QO~Oy(nO!Y+RO~OT&[OmuOtvOy%`q!s%`q#^%`q%U%`q%X%`q%r%`q~P'WOx$miy$mi!s$mi#^$mi%U$mi%X$mi%r$mi~P$dOT&[OmuOtvO~P'WOT&[Om/qOt0PO#^%`a%U%`a%X%`a%r%`a~P'WOx+SO#^%`a%U%`a%X%`a%r%`a~Ox$`a#^$`a%U$`a%X$`al$`a~P$dO#^%wi%U%wi%X%wil%wi~P'WOx+VO#^#Rq%U#Rq%X#Rq~Ox+WO#V+YO#^&jX%U&jX%X&jXe&jX~OT+[Of)VO%mWO~O%mWO#^&ki%U&ki%X&ki~Om/qOt0PO#^&gi%U&gi%X&giy&gi~P'WOr+`O#a)`OP#_qT#_qd#_qf#_qm#_qq#_qt#_q}#_q!O#_q!R#_q!S#_q!V#_q!Z#_q!f#_q!m#_q!n#_q!o#_q!v#_q!x#_q!z#_q!|#_q#O#_q#S#_q#U#_q#X#_q#Y#_q#[#_q#c#_q#f#_q#j#_q#l#_q#q#_q#t#_q#v#_q%R#_q%g#_q%h#_q%l#_q%m#_q&R#_q&S#_q&V#_q&Y#_q&`#_q&c#_q&e#_q%T#_q%X#_q~Ol$vax$va~P$dOT)dOl&mi~P'WOx+gOl&mi~Ox+pOy$rO#V+pO~O#h+qOP#eqT#eqd#eqf#eqm#eqq#eqt#eq}#eq!O#eq!R#eq!S#eq!V#eq!Z#eq!f#eq!m#eq!n#eq!o#eq!v#eq!x#eq!z#eq!|#eq#O#eq#S#eq#U#eq#X#eq#Y#eq#[#eq#c#eq#f#eq#j#eq#l#eq#q#eq#t#eq#v#eq%R#eq%g#eq%h#eq%l#eq%m#eq&R#eq&S#eq&V#eq&Y#eq&`#eq&c#eq&e#eq%T#eq%X#eq~O#V+rOx$xay$xa~Om/qOt0POy&ni~P'WOx+tOy&ni~Oy$WO%r+vOe&pXx&pX~O%mWOe&pXx&pX~Ox+zOe&oX~Oe+|O~O%S,OO~OT%VO_%VOm/qOt0POe%|i~P'WOy,QOx$ca!U$ca~Om/qOt0POy,ROx$ca!U$ca~P'WOm/qOt0POy*]O!U&Pi~P'WOx,UO!U&Pi~Om/qOt0POx,UO!U&Pi~P'WOx,UOy,XO!U&Pi~Oe$_ix$_i!U$_i~P$dOT(QOm/qOt0PO~P'WOl,ZO~OT(QOe,[Om/qOt0PO~P'WOT(QOm/qOt0PO!U%zq~P'WOx$^i!Y$^i#^$^i%U$^i%X$^ie$^iy$^i!j$^i%r$^i~P$dOT(aOm/qOt0PO~P'WO_*vOm/qOt0PO!Y%{q~P'WOx,]O!Y%{q~O!Y,^O~OT(aOm/qOt0PO!Y%uq#^%uq%U%uq%X%uqe%uqy%uq!j%uq%r%uq~P'WOy,_O~OT*zOm/qOt0POy&[i!Y&[i!j&[i~P'WOx,dOy&[i!Y&[i!j&[i~O!Z#bO&^+OO!Y!ka~OT&[Om/qOt0PO#^%`i%U%`i%X%`i%r%`i~P'WOx,fO#^%`i%U%`i%X%`i%r%`i~O%mWO#^&ja%U&ja%X&jae&ja~Ox,iO#^&ja%U&ja%X&jae&ja~Oe,lO~Ol$vix$vi~P$dOT)dO~P'WOT)dOl&mq~P'WOr,oOP#dyT#dyd#dyf#dym#dyq#dyt#dy}#dy!O#dy!R#dy!S#dy!V#dy!Z#dy!f#dy!m#dy!n#dy!o#dy!v#dy!x#dy!z#dy!|#dy#O#dy#S#dy#U#dy#X#dy#Y#dy#[#dy#c#dy#f#dy#j#dy#l#dy#q#dy#t#dy#v#dy%R#dy%g#dy%h#dy%l#dy%m#dy&R#dy&S#dy&V#dy&Y#dy&`#dy&c#dy&e#dy%T#dy%X#dy~O%T,rO%X,rO~P`O#h,sOP#eyT#eyd#eyf#eym#eyq#eyt#ey}#ey!O#ey!R#ey!S#ey!V#ey!Z#ey!f#ey!m#ey!n#ey!o#ey!v#ey!x#ey!z#ey!|#ey#O#ey#S#ey#U#ey#X#ey#Y#ey#[#ey#c#ey#f#ey#j#ey#l#ey#q#ey#t#ey#v#ey%R#ey%g#ey%h#ey%l#ey%m#ey&R#ey&S#ey&V#ey&Y#ey&`#ey&c#ey&e#ey%T#ey%X#ey~Om/qOt0POy&nq~P'WOx,wOy&nq~O%r+vOe&pax&pa~OT)yO_)zO%i){O%mWOe&oa~Ox,{Oe&oa~O#y-PO~OT%VO_%VOm/qOt0PO~P'WOm/qOt0POy-QOx$ci!U$ci~P'WOm/qOt0POx$ci!U$ci~P'WOy-QOx$ci!U$ci~Om/qOt0POy*]O~P'WOm/qOt0POy*]O!U&Pq~P'WOx-TO!U&Pq~Om/qOt0POx-TO!U&Pq~P'WOq-WO!R%lO!S%kOe%vq!U%vq!Y%vqx%vq~P!-iO_*vOm/qOt0PO!Y%{y~P'WOx$ai!Y$ai~P$dO_*vOm/qOt0PO~P'WOT*zOm/qOt0PO~P'WOT*zOm/qOt0POy&[q!Y&[q!j&[q~P'WOT&[Om/qOt0PO#^%`q%U%`q%X%`q%r%`q~P'WO#V-[Ox$ra#^$ra%U$ra%X$rae$ra~O%mWO#^&ji%U&ji%X&jie&ji~Ox-^O#^&ji%U&ji%X&jie&ji~Or-aOP#d!RT#d!Rd#d!Rf#d!Rm#d!Rq#d!Rt#d!R}#d!R!O#d!R!R#d!R!S#d!R!V#d!R!Z#d!R!f#d!R!m#d!R!n#d!R!o#d!R!v#d!R!x#d!R!z#d!R!|#d!R#O#d!R#S#d!R#U#d!R#X#d!R#Y#d!R#[#d!R#c#d!R#f#d!R#j#d!R#l#d!R#q#d!R#t#d!R#v#d!R%R#d!R%g#d!R%h#d!R%l#d!R%m#d!R&R#d!R&S#d!R&V#d!R&Y#d!R&`#d!R&c#d!R&e#d!R%T#d!R%X#d!R~Om/qOt0POy&ny~P'WOT)yO_)zO%i){O%mWOe&oi~O#y-PO%T-gO%X-gO~OT-qOf-oO!V-nO!Z-pO!f-jO!n-lO!o-lO%h-iO%mWO&R]O&S^O&V_O~Om/qOt0POx$cq!U$cq~P'WOy-vOx$cq!U$cq~Om/qOt0POy*]O!U&Py~P'WOx-wO!U&Py~Om/qOt-{O~P'WOq-WO!R%lO!S%kOe%vy!U%vy!Y%vyx%vy~P!-iO%mWO#^&jq%U&jq%X&jqe&jq~Ox.PO#^&jq%U&jq%X&jqe&jq~OT)yO_)zO%i){O%mWO~Of.TO!d.ROx#zX#V#zX%b#zXe#zX~Oq#zXy#zX!U#zX!Y#zX~P$ _O%g.VO%h.VOq#{Xx#{Xy#{X#V#{X%b#{X!U#{Xe#{X!Y#{X~O!f.XO~Ox.]O#V._O%b.YOq&rXy&rX!U&rXe&rX~O_.bO~P#KwOf.TOq&sXx&sXy&sX#V&sX%b&sX!U&sXe&sX!Y&sX~Oq.fOy$rO~Om/qOt0POx$cy!U$cy~P'WOm/qOt0POy*]O!U&P!R~P'WOx.jO!U&P!R~Oe%yXq%yX!R%yX!S%yX!U%yX!Y%yXx%yX~P!-iOq-WO!R%lO!S%kOe%xa!U%xa!Y%xax%xa~O%mWO#^&jy%U&jy%X&jye&jy~O!d.ROf$Raq$Rax$Ray$Ra#V$Ra%b$Ra!U$Rae$Ra!Y$Ra~O!f.sO~O%g.VO%h.VOq#{ax#{ay#{a#V#{a%b#{a!U#{ae#{a!Y#{a~O%b.YOq$Pax$Pay$Pa#V$Pa!U$Pae$Pa!Y$Pa~Oq&ray&ra!U&rae&ra~P#KkOx.xOq&ray&ra!U&rae&ra~O!U.{O~Oe.{O~Oy.}O~O!Y/OO~Om/qOt0POy*]O!U&P!Z~P'WOy/RO~O%r/SO~P$ _Ox/TO#V._O%b.YOe&uX~Ox/TOe&uX~Oe/VO~O!f/WO~O#V._Oq$|ax$|ay$|a%b$|a!U$|ae$|a!Y$|a~O#V._O%b.YOq%Qax%Qay%Qa!U%Qae%Qa~Oq&riy&ri!U&rie&ri~P#KkOx/YO#V._O%b.YO!Y&ta~Oy$Za~P$dOe&ua~P#KkOx/bOe&ua~O_/dO!Y&ti~P#KwOx/fO!Y&ti~Ox/fO#V._O%b.YO!Y&ti~O#V._O%b.YOe$Xix$Xi~O%r/iO~P$ _O#V._O%b.YOe%Pax%Pa~Oe&ui~P#KkOy/lO~O_/dO!Y&tq~P#KwOx/nO!Y&tq~O#V._O%b.YOx%Oi!Y%Oi~O_/dO~P#KwO_/dO!Y&ty~P#KwO#V._O%b.YOe$Yix$Yi~O#V._O%b.YOx%Oq!Y%Oq~Ox+SO#^%`a%U%`a%X%`a%r%`a~P$dOT&[Om/qOt0PO~P'WOl/vO~Om/vO~P'WOy/wO~Or/xO~P!-iO&S&V&c&e&R!Z&Z&a&d&f&Y&`&Y%m~",
            goto: "!:e&vPPPP&wP'P*e*}+h,S,o-]P-zP'P.k.k'PPPP'P2PPPPPPP2P4oPP4oP6{7U=QPP=T=u=xPP'P'PPP>UPP'P'PPP'P'P'P'P'P>Y?P'PP?SP?YC]FuPGZ'PPPPG_Ge&wP&w&wP&wP&wP&wP&wP&w&w&wP&wPP&wPP&wPGkPGrGxPGrPGrGrPPPGrPIwPJQJWJ^IwPGrJdPGrPJkJqPJuKZKxLcJuJuLiLvJuJuJuJuM[MbMeMjMmMwM}NZNmNsN}! T! q! w! }!!T!!_!!e!!k!!q!!w!!}!#a!#k!#q!#w!#}!$X!$_!$e!$k!$u!${!%V!%]!%f!%l!%{!&T!&_!&fPPPPPPPPP!&l!&o!&u!'O!'Y!'ePPPPPPPPPPPP!,T!-i!1_!4kPP!4s!5R!5[!6Q!5w!6Z!6a!6d!6g!6j!6r!7cPPPPPPPPPP!7f!7iPPPPPPPPP!7o!7{!8X!8_!8h!8k!8q!8w!8}!9QP!9Y!9c!:_!:b]jOs#r$r)l+l'ueOTYZ[fistuwy}!O!S!T!U!V!Y!]!g!h!i!j!k!l!m!o!s!t!u!w!x#O#S#W#X#b#o#r$T$U$W$Y$]$m$o$p$r$y%V%[%c%f%h%k%o%t%v&Q&Y&[&g&k&t&v&w'O'S'V'^'a'p'q't'v'w'{(Q(S(W([(a(b(h(k(r(t(|)P)])`)d)e)i)l)u*P*Y*]*^*a*g*h*j*l*o*p*s*v*z*{+S+U+V+^+f+g+l+s+t+w,P,Q,R,T,U,X,Z,],_,a,c,d,f,w,y-Q-T-W-v-w.f.j/R/q/r/s/t/v/w/x/y/z/|0Q}!gQ#n#{$^$l$x%m%r%x%y&l'U'k(s)O)c*e*n+e,`/P/u!P!hQ#n#{$^$l$x$}%m%r%x%y&l'U'k(s)O)c*e*n+e,`/P/u!R!iQ#n#{$^$l$x$}%O%m%r%x%y&l'U'k(s)O)c*e*n+e,`/P/u!T!jQ#n#{$^$l$x$}%O%P%m%r%x%y&l'U'k(s)O)c*e*n+e,`/P/u!V!kQ#n#{$^$l$x$}%O%P%Q%m%r%x%y&l'U'k(s)O)c*e*n+e,`/P/u!X!lQ#n#{$^$l$x$}%O%P%Q%R%m%r%x%y&l'U'k(s)O)c*e*n+e,`/P/u!]!lQ!r#n#{$^$l$x$}%O%P%Q%R%S%m%r%x%y&l'U'k(s)O)c*e*n+e,`/P/u'uTOTYZ[fistuwy}!O!S!T!U!V!Y!]!g!h!i!j!k!l!m!o!s!t!u!w!x#O#S#W#X#b#o#r$T$U$W$Y$]$m$o$p$r$y%V%[%c%f%h%k%o%t%v&Q&Y&[&g&k&t&v&w'O'S'V'^'a'p'q't'v'w'{(Q(S(W([(a(b(h(k(r(t(|)P)])`)d)e)i)l)u*P*Y*]*^*a*g*h*j*l*o*p*s*v*z*{+S+U+V+^+f+g+l+s+t+w,P,Q,R,T,U,X,Z,],_,a,c,d,f,w,y-Q-T-W-v-w.f.j/R/q/r/s/t/v/w/x/y/z/|0Q&ZVOYZ[isuw}!O!S!T!U!Y!m!o!s!t!u!w!x#b#o#r$U$W$Y$]$p$r%V%[%c%f%h%o%t%v&Q&Y&g&k&v&w'O'V'^'a'p'q't'v'w'{(S([(b(h(k(r(t(|)])`)i)l)u*P*Y*]*^*a*g*h*j*l*o*p*s*z*{+S+V+^+l+s+t+w,P,Q,R,T,U,X,Z,],_,a,c,d,f,w,y-Q-T-W-v-w.j/R/q/r/s/t/v/w/x/y/|0Q%eXOYZ[isw}!O!S!T!U!Y!m!o#b#o#r$U$W$Y$]$p$r%V%[%f%h%o%t%v&Q&Y&g&k&v&w'O'V'^'a'p'q't'v'w'{(S([(b(h(k(r(t(|)])`)i)l)u*P*Y*]*^*a*g*j*l*o*p*s*z*{+S+V+^+l+s+t+w,P,Q,R,T,U,X,],_,a,c,d,f,w,y-Q-T-v-w.j/w/x/yQ$RvQ.k-{R/}0P'leOTYZ[fistuwy}!O!S!T!U!V!Y!]!g!h!i!j!k!l!o!s!t!u!w!x#O#S#W#X#b#o#r$T$U$W$Y$]$m$o$p$r$y%V%[%c%f%h%k%o%t%v&Q&Y&[&g&k&t&v&w'O'S'V'^'a'p't'v'w'{(Q(S(W([(a(b(h(k(r(t(|)P)])`)d)e)i)l)u*P*]*^*a*g*h*j*l*o*p*s*v*z*{+S+U+V+^+f+g+l+s+t+w,Q,R,T,U,X,Z,],_,a,c,d,f,w,y-Q-T-W-v-w.f.j/R/q/r/s/t/v/w/x/y/z/|0QW#um!P!Q$dW#}v&i-{0PQ$f!RQ$v!ZQ$w![W%U!m'q*Y,PS&h$O$PQ'Y$qQ(u&bQ)T&xU)U&z)V)WU)X&|)Y+]Q)w'cW)x'e+z,{-eS+y)y)zY,h+W,i-]-^.PQ,k+YQ,t+pQ,v+rl-h-P-n-o-q.Z.].b.x.}/S/X/d/i/lQ.O-[Q.c-pQ.o.TQ.z._U/_/T/b/jX/e/Y/f/m/nR&g#}!_!{YZ!T!U!o%[%h%o't'v'w(S([)`*]*^*a*g*j*l,Q,R,T,U,X-Q-T-v-w.jR%f!zQ#PYQ&R#bQ&p$YR&s$]T-z-W/R![!nQ!r#n#{$^$l$x$}%O%P%Q%R%S%m%r%x%y&l'U'k(s)O)c*e*n+e,`/P/uQ&e#vR'h$wR'p%UQ%_!qR.m.R'tdOTYZ[fistuwy}!O!S!T!U!V!Y!]!g!h!i!j!k!l!m!o!s!t!u!w!x#O#S#W#X#b#o#r$T$U$W$Y$]$m$o$p$r$y%V%[%c%f%h%k%o%t%v&Q&Y&[&g&k&t&v&w'O'S'V'^'a'p'q't'v'w'{(Q(S(W([(a(b(h(k(r(t(|)P)])`)d)e)i)l)u*P*Y*]*^*a*g*h*j*l*o*p*s*v*z*{+S+U+V+^+f+g+l+s+t+w,P,Q,R,T,U,X,Z,],_,a,c,d,f,w,y-Q-T-W-v-w.f.j/R/q/r/s/t/v/w/x/y/z/|0QS#ld#m!P-l-P-n-o-p-q.T.Z.].b.x.}/S/T/X/Y/b/d/f/i/j/l/m/n'tdOTYZ[fistuwy}!O!S!T!U!V!Y!]!g!h!i!j!k!l!m!o!s!t!u!w!x#O#S#W#X#b#o#r$T$U$W$Y$]$m$o$p$r$y%V%[%c%f%h%k%o%t%v&Q&Y&[&g&k&t&v&w'O'S'V'^'a'p'q't'v'w'{(Q(S(W([(a(b(h(k(r(t(|)P)])`)d)e)i)l)u*P*Y*]*^*a*g*h*j*l*o*p*s*v*z*{+S+U+V+^+f+g+l+s+t+w,P,Q,R,T,U,X,Z,],_,a,c,d,f,w,y-Q-T-W-v-w.f.j/R/q/r/s/t/v/w/x/y/z/|0QT#ld#mS#c`#dS#fa#gS#hb#iS#jc#kT+O(n+PT(o&R(qQ$[xR+x)xX$Yx$Z$[&rZlOs$r)l+lXpOs)l+lQ$s!XQ'Q$jQ'R$kQ'd$uQ'g$wQ)j'XQ)p'^Q)r'_Q)s'`Q*Q'fQ*S'hQ+a)`Q+c)aQ+d)bQ+h)hS+j)k*RQ+m)nQ+n)oQ+o)qQ,m+`Q,n+bQ,p+iQ,q+kQ,u+qQ-`,oQ-b,sQ-c,tQ.Q-aQ.g-tR/Q.hWpOs)l+lR#xoQ'f$vR)k'YQ+w)xR,y+xQ*R'fR+k)kZnOos)l+lQ'j$xR*U'kT,},O-Ou-s-P-n-o-q.T.Z.].b.x.}/S/T/X/b/d/i/j/lt-s-P-n-o-q.T.Z.].b.x.}/S/T/X/b/d/i/j/lQ.c-pX/e/Y/f/m/n!P-k-P-n-o-p-q.T.Z.].b.x.}/S/T/X/Y/b/d/f/i/j/l/m/nQ.W-jR.t.Xg.Z-m.[.p.w.|/[/^/`/k/o/pu-r-P-n-o-q.T.Z.].b.x.}/S/T/X/b/d/i/j/lX.U-h-r.o/_R.q.TV/a/T/b/jR.h-tQsOS#zs+lR+l)lQ&j$QR(z&jS%u#V$SS(c%u(fT(f%x&lQ%i!}Q%p#RW(T%i%p(Y(^Q(Y%mR(^%rQ&u$^R)Q&uQ(i%yQ*q(dT*w(i*qQ'r%WR*Z'rS'u%Z%[Y*_'u*`,V-U-xU*`'v'w'xU,V*a*b*cS-U,W,XR-x-VQ#^^R%|#^Q#a_R&O#aQ#d`R&S#dQ(l&PS*|(l*}R*}(mQ+P(nR,e+PQ#gaR&U#gQ#ibR&V#iQ#kcR&W#kQ#mdR&X#mQ#pgQ&Z#nW&^#p&Z(}+TQ(}&oR+T/uQ$ZxS&q$Z&rR&r$[Q'P$hR)^'PQ&c#uR(v&cQ$d!QR&y$dQ+X)US,j+X-_R-_,kQ&}$fR)Z&}Q#skR&`#sQ)_'QR+_)_Q'T$lS)f'T)gR)g'UQ']$sR)m']Q'b$tS)v'b+uR+u)wQ+{)|R,|+{WoOs)l+lR#woQ-O,OR-f-Od.[-m.p.w.|/[/^/`/k/o/pR.v.[U.S-h.o/_R.n.SQ/Z.|S/g/Z/hR/h/[S/U.p.qR/c/UQ.^-mR.y.^R!_PXrOs)l+lWqOs)l+lR'Z$rYkOs$r)l+lR&_#r[xOs#r$r)l+lR&p$Y&YQOYZ[isuw}!O!S!T!U!Y!m!o!s!t!u!w!x#b#o#r$U$W$Y$]$p$r%V%[%c%f%h%o%t%v&Q&Y&g&k&v&w'O'V'^'a'p'q't'v'w'{(S([(b(h(k(r(t(|)])`)i)l)u*P*Y*]*^*a*g*h*j*l*o*p*s*z*{+S+V+^+l+s+t+w,P,Q,R,T,U,X,Z,],_,a,c,d,f,w,y-Q-T-W-v-w.j/R/q/r/s/t/v/w/x/y/|0QQ!rTQ#nfQ#{tU$^y%k(WS$l!V$oQ$x!]Q$}!gQ%O!hQ%P!iQ%Q!jQ%R!kQ%S!lQ%m#OQ%r#SQ%x#WQ%y#XQ&l$TQ'U$mQ'k$yQ(s&[U)O&t)P+UW)c'S)e+f+gQ*e(QQ*n(aQ+e)dQ,`*vQ/P.fR/u/zQ!}YQ#RZQ$j!TQ$k!UQ%Z!oQ'x%[^(P%h%o(S([*g*j*l^*['t*^,T,U-T-w.jQ*b'vQ*c'wQ+b)`Q,S*]Q,W*aQ-R,QQ-S,RQ-V,XQ-u-QR.i-v[gOs#r$r)l+l!^!zYZ!T!U!o%[%h%o't'v'w(S([)`*]*^*a*g*j*l,Q,R,T,U,X-Q-T-v-w.jQ#V[Q#qiS$Sw}Q$a!OW$h!S$]'V)iS$t!Y$pW%T!m'q*Y,PQ&P#b`&]#o&Y(r(t(|+S,f/yQ&m$UQ&n$WQ&o$YQ'n%VQ(O%fW(`%t(b*o*sQ(d%vQ(m&QQ(x&gS({&k/wQ)R&vQ)S&wU)['O)]+^Q)q'^Y)t'a)u+s+t,wQ*W'pS*d'{/xW*u(h*p,],aW*y(k*{,c,dQ+}*PQ,b*zQ,g+VQ,x+wQ-Z,_R-d,yhUOs#o#r$r&Y&k'{(r(t)l+l$z!yYZ[iw}!O!S!T!U!Y!m!o#b$U$W$Y$]$p%V%[%f%h%o%t%v&Q&g&v&w'O'V'^'a'p'q't'v'w(S([(b(h(k(|)])`)i)u*P*Y*]*^*a*g*j*l*o*p*s*z*{+S+V+^+s+t+w,P,Q,R,T,U,X,],_,a,c,d,f,w,y-Q-T-v-w.j/w/x/yQ#|uW%`!s!w/r/|Q%a!tQ%b!uQ%d!xQ%n/qS'z%c/vQ'|/sQ'}/tQ,Y*hQ-Y,ZS-y-W/RR0O0QU$Qv-{0PR(y&i[hOs#r$r)l+lX!|Y#b$Y$]Q#[[Q$VwR$`}Q%j!}Q%q#RQ%w#VQ'n%TQ(Z%mQ(_%rQ(g%xQ(j%yQ*r(dQ-X,YQ-}-YR.l-|Q$_yQ(V%kR*i(WQ-|-WR/]/RR#UZR#Z[R%Y!mQ%W!mV*X'q*Y,P!]!pQ!r#n#{$^$l$x$}%O%P%Q%R%S%m%r%x%y&l'U'k(s)O)c*e*n+e,`/P/uR%]!oR&R#bQ(p&RR+R(qQ$i!SQ&s$]Q)h'VR+i)iQ#vmQ$b!PQ$e!QR&{$dQ)T&zR+[)WQ)T&zQ+Z)VR+[)WR$g!RXqOs)l+lQ$n!VR'W$oQ$u!YR'X$pR*O'eQ)|'eV,z+z,{-eQ-t-PQ.`-nR.a-oU-m-P-n-oQ.e-qQ.p.TQ.u.ZU.w.].x/XQ.|.bQ/[.}Q/^/SU/`/T/b/jQ/k/dQ/o/iR/p/lR.d-pR.r.T",
            nodeNames: "⚠ print Comment Script AssignStatement * BinaryExpression BitOp BitOp BitOp BitOp ArithOp ArithOp @ ArithOp ** UnaryExpression ArithOp BitOp AwaitExpression await ) ( ParenthesizedExpression BinaryExpression or and CompareOp in not is UnaryExpression ConditionalExpression if else LambdaExpression lambda ParamList VariableName AssignOp , : NamedExpression AssignOp YieldExpression yield from TupleExpression ComprehensionExpression async for LambdaExpression ] [ ArrayExpression ArrayComprehensionExpression } { DictionaryExpression DictionaryComprehensionExpression SetExpression SetComprehensionExpression CallExpression ArgList AssignOp MemberExpression . PropertyName Number String FormatString FormatReplacement FormatConversion FormatSpec ContinuedString Ellipsis None Boolean TypeDef AssignOp UpdateStatement UpdateOp ExpressionStatement DeleteStatement del PassStatement pass BreakStatement break ContinueStatement continue ReturnStatement return YieldStatement PrintStatement RaiseStatement raise ImportStatement import as ScopeStatement global nonlocal AssertStatement assert StatementGroup ; IfStatement Body elif WhileStatement while ForStatement TryStatement try except finally WithStatement with FunctionDefinition def ParamList AssignOp TypeDef ClassDefinition class DecoratedStatement Decorator At MatchStatement match MatchBody MatchClause case CapturePattern LiteralPattern ArithOp ArithOp AsPattern OrPattern LogicOp AttributePattern SequencePattern MappingPattern StarPattern ClassPattern PatternArgList KeywordPattern KeywordPattern Guard",
            maxTerm: 267,
            context: u,
            nodeProps: [["group", -14, 4, 80, 82, 83, 85, 87, 89, 91, 93, 94, 95, 97, 100, 103, "Statement Statement", -22, 6, 16, 19, 23, 38, 47, 48, 54, 55, 58, 59, 60, 61, 62, 65, 68, 69, 70, 74, 75, 76, 77, "Expression", -10, 105, 107, 110, 112, 113, 117, 119, 124, 126, 129, "Statement", -9, 134, 135, 138, 139, 141, 142, 143, 144, 145, "Pattern"], ["openedBy", 21, "(", 52, "[", 56, "{"], ["closedBy", 22, ")", 53, "]", 57, "}"]],
            propSources: [d],
            skippedNodes: [0, 2],
            repeatNodeCount: 37,
            tokenData: ")'WMgR!`OX%TXY!EQY[%T[]!EQ]p%Tpq!EQqr!Gkrs!Ktst#J]tu%Tuv&'{vw&*kwx&+}xy'*fyz'+rz{'-O{|'/z|}'1^}!O'2j!O!P'5]!P!Q'Ae!Q!R'Da!R!['Ho![!](&g!]!^()V!^!_(*c!_!`(-_!`!a(.q!a!b%T!b!c(1j!c!d(3O!d!e(4|!e!h(3O!h!i(?z!i!t(3O!t!u(J[!u!w(3O!w!x(>S!x!}(3O!}#O(Ll#O#P!Fp#P#Q(Mx#Q#R) U#R#S(3O#S#T%T#T#U(3O#U#V(4|#V#Y(3O#Y#Z(?z#Z#f(3O#f#g(J[#g#i(3O#i#j(>S#j#o(3O#o#p)!h#p#q)#d#q#r)$v#r#s)%z#s$g%T$g;'S(3O;'S;=`(4v<%lO(3O<r%f]&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%T<Q&j]&^7[&TS&Z`&d!bOr'crs!,gsw'cwx(kx#O'c#O#P!!u#P#o'c#o#p!*^#p#q'c#q#r!#d#r;'S'c;'S;=`!,a<%lO'c<Q'r]&^7[&TS&WW&Z`&d!b&f#tOr'crs&_sw'cwx(kx#O'c#O#P!!u#P#o'c#o#p!*^#p#q'c#q#r!#d#r;'S'c;'S;=`!,a<%lO'c;p(t]&^7[&WW&f#tOr)mrs*ssw)mwxKmx#O)m#O#P7}#P#o)m#o#pDs#p#q)m#q#r8l#r;'S)m;'S;=`Kg<%lO)m;p)z]&^7[&TS&WW&d!b&f#tOr)mrs*ssw)mwx(kx#O)m#O#P7}#P#o)m#o#pDs#p#q)m#q#r8l#r;'S)m;'S;=`Kg<%lO)m;p*|]&^7[&TS&d!bOr)mrs+usw)mwx(kx#O)m#O#P7}#P#o)m#o#pDs#p#q)m#q#r8l#r;'S)m;'S;=`Kg<%lO)m;p,O]&^7[&TS&d!bOr)mrs,wsw)mwx(kx#O)m#O#P7}#P#o)m#o#pDs#p#q)m#q#r8l#r;'S)m;'S;=`Kg<%lO)m8r-QZ&^7[&TS&d!bOw,wwx-sx#O,w#O#P/}#P#o,w#o#p3n#p#q,w#q#r0l#r;'S,w;'S;=`7w<%lO,w8r-xZ&^7[Ow,wwx.kx#O,w#O#P/}#P#o,w#o#p3n#p#q,w#q#r0l#r;'S,w;'S;=`7w<%lO,w8r.pZ&^7[Ow,wwx/cx#O,w#O#P/}#P#o,w#o#p3n#p#q,w#q#r0l#r;'S,w;'S;=`7w<%lO,w7[/hT&^7[O#o/c#p#q/c#r;'S/c;'S;=`/w<%lO/c7[/zP;=`<%l/c8r0SW&^7[O#o,w#o#p0l#p#q,w#q#r0l#r;'S,w;'S;=`7Q;=`<%l0l<%lO,w!f0sX&TS&d!bOw0lwx1`x#O0l#O#P2k#P#o0l#o#p3n#p;'S0l;'S;=`6z<%lO0l!f1cXOw0lwx2Ox#O0l#O#P2k#P#o0l#o#p3n#p;'S0l;'S;=`6z<%lO0l!f2RWOw0lx#O0l#O#P2k#P#o0l#o#p3n#p;'S0l;'S;=`6z<%lO0l!f2nRO;'S0l;'S;=`2w;=`O0l!f3OY&TS&d!bOw0lwx1`x#O0l#O#P2k#P#o0l#o#p3n#p;'S0l;'S;=`6z;=`<%l0l<%lO0l!f3sX&TSOw4`wx4zx#O4`#O#P5y#P#o4`#o#p0l#p;'S4`;'S;=`6t<%lO4`S4eV&TSOw4`wx4zx#O4`#O#P5y#P;'S4`;'S;=`6t<%lO4`S4}VOw4`wx5dx#O4`#O#P5y#P;'S4`;'S;=`6t<%lO4`S5gUOw4`x#O4`#O#P5y#P;'S4`;'S;=`6t<%lO4`S5|RO;'S4`;'S;=`6V;=`O4`S6[W&TSOw4`wx4zx#O4`#O#P5y#P;'S4`;'S;=`6t;=`<%l4`<%lO4`S6wP;=`<%l4`!f6}P;=`<%l0l8r7XY&TS&d!bOw0lwx1`x#O0l#O#P2k#P#o0l#o#p3n#p;'S0l;'S;=`6z;=`<%l,w<%lO0l8r7zP;=`<%l,w;p8SW&^7[O#o)m#o#p8l#p#q)m#q#r8l#r;'S)m;'S;=`Jf;=`<%l8l<%lO)m%d8wZ&TS&WW&d!b&f#tOr8lrs9jsw8lwx;^x#O8l#O#PCf#P#o8l#o#pDs#p;'S8l;'S;=`J`<%lO8l%d9qZ&TS&d!bOr8lrs:dsw8lwx;^x#O8l#O#PCf#P#o8l#o#pDs#p;'S8l;'S;=`J`<%lO8l%d:kZ&TS&d!bOr8lrs0lsw8lwx;^x#O8l#O#PCf#P#o8l#o#pDs#p;'S8l;'S;=`J`<%lO8l%d;eZ&WW&f#tOr8lrs9jsw8lwx<Wx#O8l#O#PCf#P#o8l#o#pDs#p;'S8l;'S;=`J`<%lO8l%d<_Z&WW&f#tOr8lrs9jsw8lwx=Qx#O8l#O#PCf#P#o8l#o#pDs#p;'S8l;'S;=`J`<%lO8l#|=XX&WW&f#tOr=Qrs=ts#O=Q#O#P?P#P#o=Q#o#p@S#p;'S=Q;'S;=`C`<%lO=Q#|=wXOr=Qrs>ds#O=Q#O#P?P#P#o=Q#o#p@S#p;'S=Q;'S;=`C`<%lO=Q#|>gWOr=Qs#O=Q#O#P?P#P#o=Q#o#p@S#p;'S=Q;'S;=`C`<%lO=Q#|?SRO;'S=Q;'S;=`?];=`O=Q#|?dY&WW&f#tOr=Qrs=ts#O=Q#O#P?P#P#o=Q#o#p@S#p;'S=Q;'S;=`C`;=`<%l=Q<%lO=Q#|@XX&WWOr@trsA`s#O@t#O#PB_#P#o@t#o#p=Q#p;'S@t;'S;=`CY<%lO@tW@yV&WWOr@trsA`s#O@t#O#PB_#P;'S@t;'S;=`CY<%lO@tWAcVOr@trsAxs#O@t#O#PB_#P;'S@t;'S;=`CY<%lO@tWA{UOr@ts#O@t#O#PB_#P;'S@t;'S;=`CY<%lO@tWBbRO;'S@t;'S;=`Bk;=`O@tWBpW&WWOr@trsA`s#O@t#O#PB_#P;'S@t;'S;=`CY;=`<%l@t<%lO@tWC]P;=`<%l@t#|CcP;=`<%l=Q%dCiRO;'S8l;'S;=`Cr;=`O8l%dC}[&TS&WW&d!b&f#tOr8lrs9jsw8lwx;^x#O8l#O#PCf#P#o8l#o#pDs#p;'S8l;'S;=`J`;=`<%l8l<%lO8l%dDzZ&TS&WWOrEmrsFaswEmwxGsx#OEm#O#PIV#P#oEm#o#p8l#p;'SEm;'S;=`JY<%lOEm[EtX&TS&WWOrEmrsFaswEmwxGsx#OEm#O#PIV#P;'SEm;'S;=`JY<%lOEm[FfX&TSOrEmrsGRswEmwxGsx#OEm#O#PIV#P;'SEm;'S;=`JY<%lOEm[GWX&TSOrEmrs4`swEmwxGsx#OEm#O#PIV#P;'SEm;'S;=`JY<%lOEm[GxX&WWOrEmrsFaswEmwxHex#OEm#O#PIV#P;'SEm;'S;=`JY<%lOEm[HjX&WWOrEmrsFaswEmwx@tx#OEm#O#PIV#P;'SEm;'S;=`JY<%lOEm[IYRO;'SEm;'S;=`Ic;=`OEm[IjY&TS&WWOrEmrsFaswEmwxGsx#OEm#O#PIV#P;'SEm;'S;=`JY;=`<%lEm<%lOEm[J]P;=`<%lEm%dJcP;=`<%l8l;pJq[&TS&WW&d!b&f#tOr8lrs9jsw8lwx;^x#O8l#O#PCf#P#o8l#o#pDs#p;'S8l;'S;=`J`;=`<%l)m<%lO8l;pKjP;=`<%l)m;pKv]&^7[&WW&f#tOr)mrs*ssw)mwxLox#O)m#O#P7}#P#o)m#o#pDs#p#q)m#q#r8l#r;'S)m;'S;=`Kg<%lO)m:YLxZ&^7[&WW&f#tOrLorsMks#OLo#O#P! Z#P#oLo#o#p@S#p#qLo#q#r=Q#r;'SLo;'S;=`!!o<%lOLo:YMpZ&^7[OrLorsNcs#OLo#O#P! Z#P#oLo#o#p@S#p#qLo#q#r=Q#r;'SLo;'S;=`!!o<%lOLo:YNhZ&^7[OrLors/cs#OLo#O#P! Z#P#oLo#o#p@S#p#qLo#q#r=Q#r;'SLo;'S;=`!!o<%lOLo:Y! `W&^7[O#oLo#o#p=Q#p#qLo#q#r=Q#r;'SLo;'S;=`! x;=`<%l=Q<%lOLo:Y!!PY&WW&f#tOr=Qrs=ts#O=Q#O#P?P#P#o=Q#o#p@S#p;'S=Q;'S;=`C`;=`<%lLo<%lO=Q:Y!!rP;=`<%lLo<Q!!zW&^7[O#o'c#o#p!#d#p#q'c#q#r!#d#r;'S'c;'S;=`!+^;=`<%l!#d<%lO'c%t!#qZ&TS&WW&Z`&d!b&f#tOr!#drs!$dsw!#dwx;^x#O!#d#O#P!(}#P#o!#d#o#p!*^#p;'S!#d;'S;=`!+W<%lO!#d%t!$mZ&TS&Z`&d!bOr!#drs!%`sw!#dwx;^x#O!#d#O#P!(}#P#o!#d#o#p!*^#p;'S!#d;'S;=`!+W<%lO!#d%t!%iZ&TS&Z`&d!bOr!#drs!&[sw!#dwx;^x#O!#d#O#P!(}#P#o!#d#o#p!*^#p;'S!#d;'S;=`!+W<%lO!#d!v!&eX&TS&Z`&d!bOw!&[wx1`x#O!&[#O#P!'Q#P#o!&[#o#p!(V#p;'S!&[;'S;=`!(w<%lO!&[!v!'TRO;'S!&[;'S;=`!'^;=`O!&[!v!'gY&TS&Z`&d!bOw!&[wx1`x#O!&[#O#P!'Q#P#o!&[#o#p!(V#p;'S!&[;'S;=`!(w;=`<%l!&[<%lO!&[!v!([X&TSOw4`wx4zx#O4`#O#P5y#P#o4`#o#p!&[#p;'S4`;'S;=`6t<%lO4`!v!(zP;=`<%l!&[%t!)QRO;'S!#d;'S;=`!)Z;=`O!#d%t!)h[&TS&WW&Z`&d!b&f#tOr!#drs!$dsw!#dwx;^x#O!#d#O#P!(}#P#o!#d#o#p!*^#p;'S!#d;'S;=`!+W;=`<%l!#d<%lO!#d%t!*eZ&TS&WWOrEmrsFaswEmwxGsx#OEm#O#PIV#P#oEm#o#p!#d#p;'SEm;'S;=`JY<%lOEm%t!+ZP;=`<%l!#d<Q!+k[&TS&WW&Z`&d!b&f#tOr!#drs!$dsw!#dwx;^x#O!#d#O#P!(}#P#o!#d#o#p!*^#p;'S!#d;'S;=`!+W;=`<%l'c<%lO!#d<Q!,dP;=`<%l'c<Q!,r]&^7[&TS&Z`&d!bOr'crs!-ksw'cwx(kx#O'c#O#P!!u#P#o'c#o#p!*^#p#q'c#q#r!#d#r;'S'c;'S;=`!,a<%lO'c9S!-vZ&^7[&TS&Z`&d!bOw!-kwx-sx#O!-k#O#P!.i#P#o!-k#o#p!(V#p#q!-k#q#r!&[#r;'S!-k;'S;=`!0P<%lO!-k9S!.nW&^7[O#o!-k#o#p!&[#p#q!-k#q#r!&[#r;'S!-k;'S;=`!/W;=`<%l!&[<%lO!-k9S!/aY&TS&Z`&d!bOw!&[wx1`x#O!&[#O#P!'Q#P#o!&[#o#p!(V#p;'S!&[;'S;=`!(w;=`<%l!-k<%lO!&[9S!0SP;=`<%l!-k<b!0b]&^7[&WW&ap&f#tOr!1Zrs*ssw!1Zwx!<Tx#O!1Z#O#P!2c#P#o!1Z#o#p!9z#p#q!1Z#q#r!3Q#r;'S!1Z;'S;=`!;}<%lO!1Z<b!1j]&^7[&TS&WW&ap&d!b&f#tOr!1Zrs*ssw!1Zwx!0Vx#O!1Z#O#P!2c#P#o!1Z#o#p!9z#p#q!1Z#q#r!3Q#r;'S!1Z;'S;=`!;}<%lO!1Z<b!2hW&^7[O#o!1Z#o#p!3Q#p#q!1Z#q#r!3Q#r;'S!1Z;'S;=`!:z;=`<%l!3Q<%lO!1Z&U!3_Z&TS&WW&ap&d!b&f#tOr!3Qrs9jsw!3Qwx!4Qx#O!3Q#O#P!8k#P#o!3Q#o#p!9z#p;'S!3Q;'S;=`!:t<%lO!3Q&U!4ZZ&WW&ap&f#tOr!3Qrs9jsw!3Qwx!4|x#O!3Q#O#P!8k#P#o!3Q#o#p!9z#p;'S!3Q;'S;=`!:t<%lO!3Q&U!5VZ&WW&ap&f#tOr!3Qrs9jsw!3Qwx!5xx#O!3Q#O#P!8k#P#o!3Q#o#p!9z#p;'S!3Q;'S;=`!:t<%lO!3Q$n!6RX&WW&ap&f#tOr!5xrs=ts#O!5x#O#P!6n#P#o!5x#o#p!7s#p;'S!5x;'S;=`!8e<%lO!5x$n!6qRO;'S!5x;'S;=`!6z;=`O!5x$n!7TY&WW&ap&f#tOr!5xrs=ts#O!5x#O#P!6n#P#o!5x#o#p!7s#p;'S!5x;'S;=`!8e;=`<%l!5x<%lO!5x$n!7xX&WWOr@trsA`s#O@t#O#PB_#P#o@t#o#p!5x#p;'S@t;'S;=`CY<%lO@t$n!8hP;=`<%l!5x&U!8nRO;'S!3Q;'S;=`!8w;=`O!3Q&U!9U[&TS&WW&ap&d!b&f#tOr!3Qrs9jsw!3Qwx!4Qx#O!3Q#O#P!8k#P#o!3Q#o#p!9z#p;'S!3Q;'S;=`!:t;=`<%l!3Q<%lO!3Q&U!:RZ&TS&WWOrEmrsFaswEmwxGsx#OEm#O#PIV#P#oEm#o#p!3Q#p;'SEm;'S;=`JY<%lOEm&U!:wP;=`<%l!3Q<b!;X[&TS&WW&ap&d!b&f#tOr!3Qrs9jsw!3Qwx!4Qx#O!3Q#O#P!8k#P#o!3Q#o#p!9z#p;'S!3Q;'S;=`!:t;=`<%l!1Z<%lO!3Q<b!<QP;=`<%l!1Z<b!<`]&^7[&WW&ap&f#tOr!1Zrs*ssw!1Zwx!=Xx#O!1Z#O#P!2c#P#o!1Z#o#p!9z#p#q!1Z#q#r!3Q#r;'S!1Z;'S;=`!;}<%lO!1Z:z!=dZ&^7[&WW&ap&f#tOr!=XrsMks#O!=X#O#P!>V#P#o!=X#o#p!7s#p#q!=X#q#r!5x#r;'S!=X;'S;=`!?m<%lO!=X:z!>[W&^7[O#o!=X#o#p!5x#p#q!=X#q#r!5x#r;'S!=X;'S;=`!>t;=`<%l!5x<%lO!=X:z!>}Y&WW&ap&f#tOr!5xrs=ts#O!5x#O#P!6n#P#o!5x#o#p!7s#p;'S!5x;'S;=`!8e;=`<%l!=X<%lO!5x:z!?pP;=`<%l!=X<r!?xW&^7[O#o%T#o#p!@b#p#q%T#q#r!@b#r;'S%T;'S;=`!Cu;=`<%l!@b<%lO%T&f!@qZ&TS&WW&Z`&ap&d!b&f#tOr!@brs!$dsw!@bwx!4Qx#O!@b#O#P!Ad#P#o!@b#o#p!Bu#p;'S!@b;'S;=`!Co<%lO!@b&f!AgRO;'S!@b;'S;=`!Ap;=`O!@b&f!BP[&TS&WW&Z`&ap&d!b&f#tOr!@brs!$dsw!@bwx!4Qx#O!@b#O#P!Ad#P#o!@b#o#p!Bu#p;'S!@b;'S;=`!Co;=`<%l!@b<%lO!@b&f!B|Z&TS&WWOrEmrsFaswEmwxGsx#OEm#O#PIV#P#oEm#o#p!@b#p;'SEm;'S;=`JY<%lOEm&f!CrP;=`<%l!@b<r!DU[&TS&WW&Z`&ap&d!b&f#tOr!@brs!$dsw!@bwx!4Qx#O!@b#O#P!Ad#P#o!@b#o#p!Bu#p;'S!@b;'S;=`!Co;=`<%l%T<%lO!@b<r!D}P;=`<%l%TMg!Eec&^7[&TS&WW%Z1s&Z`&ap&d!b&f#tOX%TXY!EQY[%T[]!EQ]p%Tpq!EQqr%Trs&_sw%Twx!0Vx#O%T#O#P!Fp#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TMg!Fu[&^7[OY%TYZ!EQZ]%T]^!EQ^#o%T#o#p!@b#p#q%T#q#r!@b#r;'S%T;'S;=`!Cu;=`<%l!@b<%lO%T<u!G|d&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`!I[!`#O%T#O#P!?s#P#T%T#T#U!Jh#U#f%T#f#g!Jh#g#h!Jh#h#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%T<u!Io]kR&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%T<u!J{]!jR&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{!LTa&bp&^7[&TS&R,X&Z`&d!bOY!MYYZ'cZ]!MY]^'c^r!MYrs#HTsw!MYwx# vx#O!MY#O#P#@t#P#o!MY#o#p#E^#p#q!MY#q#r#Ac#r;'S!MY;'S;=`#G}<%lO!MYGZ!Mka&^7[&TS&WW&R,X&Z`&d!b&f#tOY!MYYZ'cZ]!MY]^'c^r!MYrs!Npsw!MYwx# vx#O!MY#O#P#@t#P#o!MY#o#p#E^#p#q!MY#q#r#Ac#r;'S!MY;'S;=`#G}<%lO!MYGZ!N}]&^7[&TS&R,X&Z`&d!bOr'crs!,gsw'cwx(kx#O'c#O#P!!u#P#o'c#o#p!*^#p#q'c#q#r!#d#r;'S'c;'S;=`!,a<%lO'cFy#!Ra&^7[&WW&R,X&f#tOY##WYZ)mZ]##W]^)m^r##Wrs#$lsw##Wwx#;fx#O##W#O#P#%p#P#o##W#o#p#3d#p#q##W#q#r#&_#r;'S##W;'S;=`#;`<%lO##WFy##ga&^7[&TS&WW&R,X&d!b&f#tOY##WYZ)mZ]##W]^)m^r##Wrs#$lsw##Wwx# vx#O##W#O#P#%p#P#o##W#o#p#3d#p#q##W#q#r#&_#r;'S##W;'S;=`#;`<%lO##WFy#$w]&^7[&TS&R,X&d!bOr)mrs+usw)mwx(kx#O)m#O#P7}#P#o)m#o#pDs#p#q)m#q#r8l#r;'S)m;'S;=`Kg<%lO)mFy#%uW&^7[O#o##W#o#p#&_#p#q##W#q#r#&_#r;'S##W;'S;=`#:P;=`<%l#&_<%lO##W0m#&l_&TS&WW&R,X&d!b&f#tOY#&_YZ8lZ]#&_]^8l^r#&_rs#'ksw#&_wx#(gx#O#&_#O#P#1w#P#o#&_#o#p#3d#p;'S#&_;'S;=`#9y<%lO#&_0m#'tZ&TS&R,X&d!bOr8lrs:dsw8lwx;^x#O8l#O#PCf#P#o8l#o#pDs#p;'S8l;'S;=`J`<%lO8l0m#(p_&WW&R,X&f#tOY#&_YZ8lZ]#&_]^8l^r#&_rs#'ksw#&_wx#)ox#O#&_#O#P#1w#P#o#&_#o#p#3d#p;'S#&_;'S;=`#9y<%lO#&_0m#)x_&WW&R,X&f#tOY#&_YZ8lZ]#&_]^8l^r#&_rs#'ksw#&_wx#*wx#O#&_#O#P#1w#P#o#&_#o#p#3d#p;'S#&_;'S;=`#9y<%lO#&_/V#+Q]&WW&R,X&f#tOY#*wYZ=QZ]#*w]^=Q^r#*wrs#+ys#O#*w#O#P#,k#P#o#*w#o#p#-|#p;'S#*w;'S;=`#1q<%lO#*w/V#,OX&R,XOr=Qrs>ds#O=Q#O#P?P#P#o=Q#o#p@S#p;'S=Q;'S;=`C`<%lO=Q/V#,nRO;'S#*w;'S;=`#,w;=`O#*w/V#-Q^&WW&R,X&f#tOY#*wYZ=QZ]#*w]^=Q^r#*wrs#+ys#O#*w#O#P#,k#P#o#*w#o#p#-|#p;'S#*w;'S;=`#1q;=`<%l#*w<%lO#*w/V#.T]&WW&R,XOY#.|YZ@tZ]#.|]^@t^r#.|rs#/vs#O#.|#O#P#0b#P#o#.|#o#p#*w#p;'S#.|;'S;=`#1k<%lO#.|,a#/TZ&WW&R,XOY#.|YZ@tZ]#.|]^@t^r#.|rs#/vs#O#.|#O#P#0b#P;'S#.|;'S;=`#1k<%lO#.|,a#/{V&R,XOr@trsAxs#O@t#O#PB_#P;'S@t;'S;=`CY<%lO@t,a#0eRO;'S#.|;'S;=`#0n;=`O#.|,a#0u[&WW&R,XOY#.|YZ@tZ]#.|]^@t^r#.|rs#/vs#O#.|#O#P#0b#P;'S#.|;'S;=`#1k;=`<%l#.|<%lO#.|,a#1nP;=`<%l#.|/V#1tP;=`<%l#*w0m#1zRO;'S#&_;'S;=`#2T;=`O#&_0m#2b`&TS&WW&R,X&d!b&f#tOY#&_YZ8lZ]#&_]^8l^r#&_rs#'ksw#&_wx#(gx#O#&_#O#P#1w#P#o#&_#o#p#3d#p;'S#&_;'S;=`#9y;=`<%l#&_<%lO#&_0m#3m_&TS&WW&R,XOY#4lYZEmZ]#4l]^Em^r#4lrs#5nsw#4lwx#6bx#O#4l#O#P#8b#P#o#4l#o#p#&_#p;'S#4l;'S;=`#9s<%lO#4l,e#4u]&TS&WW&R,XOY#4lYZEmZ]#4l]^Em^r#4lrs#5nsw#4lwx#6bx#O#4l#O#P#8b#P;'S#4l;'S;=`#9s<%lO#4l,e#5uX&TS&R,XOrEmrsGRswEmwxGsx#OEm#O#PIV#P;'SEm;'S;=`JY<%lOEm,e#6i]&WW&R,XOY#4lYZEmZ]#4l]^Em^r#4lrs#5nsw#4lwx#7bx#O#4l#O#P#8b#P;'S#4l;'S;=`#9s<%lO#4l,e#7i]&WW&R,XOY#4lYZEmZ]#4l]^Em^r#4lrs#5nsw#4lwx#.|x#O#4l#O#P#8b#P;'S#4l;'S;=`#9s<%lO#4l,e#8eRO;'S#4l;'S;=`#8n;=`O#4l,e#8w^&TS&WW&R,XOY#4lYZEmZ]#4l]^Em^r#4lrs#5nsw#4lwx#6bx#O#4l#O#P#8b#P;'S#4l;'S;=`#9s;=`<%l#4l<%lO#4l,e#9vP;=`<%l#4l0m#9|P;=`<%l#&_Fy#:^`&TS&WW&R,X&d!b&f#tOY#&_YZ8lZ]#&_]^8l^r#&_rs#'ksw#&_wx#(gx#O#&_#O#P#1w#P#o#&_#o#p#3d#p;'S#&_;'S;=`#9y;=`<%l##W<%lO#&_Fy#;cP;=`<%l##WFy#;qa&^7[&WW&R,X&f#tOY##WYZ)mZ]##W]^)m^r##Wrs#$lsw##Wwx#<vx#O##W#O#P#%p#P#o##W#o#p#3d#p#q##W#q#r#&_#r;'S##W;'S;=`#;`<%lO##WEc#=R_&^7[&WW&R,X&f#tOY#<vYZLoZ]#<v]^Lo^r#<vrs#>Qs#O#<v#O#P#>z#P#o#<v#o#p#-|#p#q#<v#q#r#*w#r;'S#<v;'S;=`#@n<%lO#<vEc#>XZ&^7[&R,XOrLorsNcs#OLo#O#P! Z#P#oLo#o#p@S#p#qLo#q#r=Q#r;'SLo;'S;=`!!o<%lOLoEc#?PW&^7[O#o#<v#o#p#*w#p#q#<v#q#r#*w#r;'S#<v;'S;=`#?i;=`<%l#*w<%lO#<vEc#?r^&WW&R,X&f#tOY#*wYZ=QZ]#*w]^=Q^r#*wrs#+ys#O#*w#O#P#,k#P#o#*w#o#p#-|#p;'S#*w;'S;=`#1q;=`<%l#<v<%lO#*wEc#@qP;=`<%l#<vGZ#@yW&^7[O#o!MY#o#p#Ac#p#q!MY#q#r#Ac#r;'S!MY;'S;=`#Fl;=`<%l#Ac<%lO!MY0}#Ar_&TS&WW&R,X&Z`&d!b&f#tOY#AcYZ!#dZ]#Ac]^!#d^r#Acrs#Bqsw#Acwx#(gx#O#Ac#O#P#Co#P#o#Ac#o#p#E^#p;'S#Ac;'S;=`#Ff<%lO#Ac0}#B|Z&TS&R,X&Z`&d!bOr!#drs!%`sw!#dwx;^x#O!#d#O#P!(}#P#o!#d#o#p!*^#p;'S!#d;'S;=`!+W<%lO!#d0}#CrRO;'S#Ac;'S;=`#C{;=`O#Ac0}#D[`&TS&WW&R,X&Z`&d!b&f#tOY#AcYZ!#dZ]#Ac]^!#d^r#Acrs#Bqsw#Acwx#(gx#O#Ac#O#P#Co#P#o#Ac#o#p#E^#p;'S#Ac;'S;=`#Ff;=`<%l#Ac<%lO#Ac0}#Eg_&TS&WW&R,XOY#4lYZEmZ]#4l]^Em^r#4lrs#5nsw#4lwx#6bx#O#4l#O#P#8b#P#o#4l#o#p#Ac#p;'S#4l;'S;=`#9s<%lO#4l0}#FiP;=`<%l#AcGZ#F{`&TS&WW&R,X&Z`&d!b&f#tOY#AcYZ!#dZ]#Ac]^!#d^r#Acrs#Bqsw#Acwx#(gx#O#Ac#O#P#Co#P#o#Ac#o#p#E^#p;'S#Ac;'S;=`#Ff;=`<%l!MY<%lO#AcGZ#HQP;=`<%l!MYGZ#Hb]&^7[&TS&R,X&Z`&d!bOr'crs#IZsw'cwx(kx#O'c#O#P!!u#P#o'c#o#p!*^#p#q'c#q#r!#d#r;'S'c;'S;=`!,a<%lO'cGZ#IjZ&X#|&^7[&TS&V,X&Z`&d!bOw!-kwx-sx#O!-k#O#P!.i#P#o!-k#o#p!(V#p#q!-k#q#r!&[#r;'S!-k;'S;=`!0P<%lO!-kMg#JpaQ1s&^7[&TS&WW&Z`&ap&d!b&f#tOY#J]YZ%TZ]#J]]^%T^r#J]rs#Kusw#J]wx%;ax#O#J]#O#P& a#P#o#J]#o#p&%b#p#q#J]#q#r&!^#r;'S#J];'S;=`&'u<%lO#J]Lu#LSaQ1s&^7[&TS&Z`&d!bOY#MXYZ'cZ]#MX]^'c^r#MXrs%6usw#MXwx#Nox#O#MX#O#P%*Z#P#o#MX#o#p%4^#p#q#MX#q#r%+W#r;'S#MX;'S;=`%6o<%lO#MXLu#MjaQ1s&^7[&TS&WW&Z`&d!b&f#tOY#MXYZ'cZ]#MX]^'c^r#MXrs#Kusw#MXwx#Nox#O#MX#O#P%*Z#P#o#MX#o#p%4^#p#q#MX#q#r%+W#r;'S#MX;'S;=`%6o<%lO#MXLe#NzaQ1s&^7[&WW&f#tOY$!PYZ)mZ]$!P]^)m^r$!Prs$#esw$!Pwx%#ix#O$!P#O#P$6g#P#o$!P#o#p$Hf#p#q$!P#q#r$7d#r;'S$!P;'S;=`%#c<%lO$!PLe$!`aQ1s&^7[&TS&WW&d!b&f#tOY$!PYZ)mZ]$!P]^)m^r$!Prs$#esw$!Pwx#Nox#O$!P#O#P$6g#P#o$!P#o#p$Hf#p#q$!P#q#r$7d#r;'S$!P;'S;=`%#c<%lO$!PLe$#paQ1s&^7[&TS&d!bOY$!PYZ)mZ]$!P]^)m^r$!Prs$$usw$!Pwx#Nox#O$!P#O#P$6g#P#o$!P#o#p$Hf#p#q$!P#q#r$7d#r;'S$!P;'S;=`%#c<%lO$!PLe$%QaQ1s&^7[&TS&d!bOY$!PYZ)mZ]$!P]^)m^r$!Prs$&Vsw$!Pwx#Nox#O$!P#O#P$6g#P#o$!P#o#p$Hf#p#q$!P#q#r$7d#r;'S$!P;'S;=`%#c<%lO$!PIg$&b_Q1s&^7[&TS&d!bOY$&VYZ,wZ]$&V]^,w^w$&Vwx$'ax#O$&V#O#P$+X#P#o$&V#o#p$0h#p#q$&V#q#r$,U#r;'S$&V;'S;=`$6a<%lO$&VIg$'h_Q1s&^7[OY$&VYZ,wZ]$&V]^,w^w$&Vwx$(gx#O$&V#O#P$+X#P#o$&V#o#p$0h#p#q$&V#q#r$,U#r;'S$&V;'S;=`$6a<%lO$&VIg$(n_Q1s&^7[OY$&VYZ,wZ]$&V]^,w^w$&Vwx$)mx#O$&V#O#P$+X#P#o$&V#o#p$0h#p#q$&V#q#r$,U#r;'S$&V;'S;=`$6a<%lO$&VHP$)tZQ1s&^7[OY$)mYZ/cZ]$)m]^/c^#o$)m#o#p$*g#p#q$)m#q#r$*g#r;'S$)m;'S;=`$+R<%lO$)m1s$*lTQ1sOY$*gZ]$*g^;'S$*g;'S;=`$*{<%lO$*g1s$+OP;=`<%l$*gHP$+UP;=`<%l$)mIg$+`[Q1s&^7[OY$&VYZ,wZ]$&V]^,w^#o$&V#o#p$,U#p#q$&V#q#r$,U#r;'S$&V;'S;=`$5j;=`<%l0l<%lO$&V3Z$,_]Q1s&TS&d!bOY$,UYZ0lZ]$,U]^0l^w$,Uwx$-Wx#O$,U#O#P$/S#P#o$,U#o#p$0h#p;'S$,U;'S;=`$5d<%lO$,U3Z$-]]Q1sOY$,UYZ0lZ]$,U]^0l^w$,Uwx$.Ux#O$,U#O#P$/S#P#o$,U#o#p$0h#p;'S$,U;'S;=`$5d<%lO$,U3Z$.Z]Q1sOY$,UYZ0lZ]$,U]^0l^w$,Uwx$*gx#O$,U#O#P$/S#P#o$,U#o#p$0h#p;'S$,U;'S;=`$5d<%lO$,U3Z$/XWQ1sOY$,UYZ0lZ]$,U]^0l^;'S$,U;'S;=`$/q;=`<%l0l<%lO$,U3Z$/xY&TS&d!bOw0lwx1`x#O0l#O#P2k#P#o0l#o#p3n#p;'S0l;'S;=`6z;=`<%l$,U<%lO0l3Z$0o]Q1s&TSOY$1hYZ4`Z]$1h]^4`^w$1hwx$2bx#O$1h#O#P$4Q#P#o$1h#o#p$,U#p;'S$1h;'S;=`$5^<%lO$1h1w$1oZQ1s&TSOY$1hYZ4`Z]$1h]^4`^w$1hwx$2bx#O$1h#O#P$4Q#P;'S$1h;'S;=`$5^<%lO$1h1w$2gZQ1sOY$1hYZ4`Z]$1h]^4`^w$1hwx$3Yx#O$1h#O#P$4Q#P;'S$1h;'S;=`$5^<%lO$1h1w$3_ZQ1sOY$1hYZ4`Z]$1h]^4`^w$1hwx$*gx#O$1h#O#P$4Q#P;'S$1h;'S;=`$5^<%lO$1h1w$4VWQ1sOY$1hYZ4`Z]$1h]^4`^;'S$1h;'S;=`$4o;=`<%l4`<%lO$1h1w$4tW&TSOw4`wx4zx#O4`#O#P5y#P;'S4`;'S;=`6t;=`<%l$1h<%lO4`1w$5aP;=`<%l$1h3Z$5gP;=`<%l$,UIg$5qY&TS&d!bOw0lwx1`x#O0l#O#P2k#P#o0l#o#p3n#p;'S0l;'S;=`6z;=`<%l$&V<%lO0lIg$6dP;=`<%l$&VLe$6n[Q1s&^7[OY$!PYZ)mZ]$!P]^)m^#o$!P#o#p$7d#p#q$!P#q#r$7d#r;'S$!P;'S;=`%!b;=`<%l8l<%lO$!P6X$7q_Q1s&TS&WW&d!b&f#tOY$7dYZ8lZ]$7d]^8l^r$7drs$8psw$7dwx$;Qx#O$7d#O#P$Fv#P#o$7d#o#p$Hf#p;'S$7d;'S;=`%![<%lO$7d6X$8y_Q1s&TS&d!bOY$7dYZ8lZ]$7d]^8l^r$7drs$9xsw$7dwx$;Qx#O$7d#O#P$Fv#P#o$7d#o#p$Hf#p;'S$7d;'S;=`%![<%lO$7d6X$:R_Q1s&TS&d!bOY$7dYZ8lZ]$7d]^8l^r$7drs$,Usw$7dwx$;Qx#O$7d#O#P$Fv#P#o$7d#o#p$Hf#p;'S$7d;'S;=`%![<%lO$7d6X$;Z_Q1s&WW&f#tOY$7dYZ8lZ]$7d]^8l^r$7drs$8psw$7dwx$<Yx#O$7d#O#P$Fv#P#o$7d#o#p$Hf#p;'S$7d;'S;=`%![<%lO$7d6X$<c_Q1s&WW&f#tOY$7dYZ8lZ]$7d]^8l^r$7drs$8psw$7dwx$=bx#O$7d#O#P$Fv#P#o$7d#o#p$Hf#p;'S$7d;'S;=`%![<%lO$7d4q$=k]Q1s&WW&f#tOY$=bYZ=QZ]$=b]^=Q^r$=brs$>ds#O$=b#O#P$@`#P#o$=b#o#p$At#p;'S$=b;'S;=`$Fp<%lO$=b4q$>i]Q1sOY$=bYZ=QZ]$=b]^=Q^r$=brs$?bs#O$=b#O#P$@`#P#o$=b#o#p$At#p;'S$=b;'S;=`$Fp<%lO$=b4q$?g]Q1sOY$=bYZ=QZ]$=b]^=Q^r$=brs$*gs#O$=b#O#P$@`#P#o$=b#o#p$At#p;'S$=b;'S;=`$Fp<%lO$=b4q$@eWQ1sOY$=bYZ=QZ]$=b]^=Q^;'S$=b;'S;=`$@};=`<%l=Q<%lO$=b4q$AUY&WW&f#tOr=Qrs=ts#O=Q#O#P?P#P#o=Q#o#p@S#p;'S=Q;'S;=`C`;=`<%l$=b<%lO=Q4q$A{]Q1s&WWOY$BtYZ@tZ]$Bt]^@t^r$Btrs$Cns#O$Bt#O#P$E^#P#o$Bt#o#p$=b#p;'S$Bt;'S;=`$Fj<%lO$Bt1{$B{ZQ1s&WWOY$BtYZ@tZ]$Bt]^@t^r$Btrs$Cns#O$Bt#O#P$E^#P;'S$Bt;'S;=`$Fj<%lO$Bt1{$CsZQ1sOY$BtYZ@tZ]$Bt]^@t^r$Btrs$Dfs#O$Bt#O#P$E^#P;'S$Bt;'S;=`$Fj<%lO$Bt1{$DkZQ1sOY$BtYZ@tZ]$Bt]^@t^r$Btrs$*gs#O$Bt#O#P$E^#P;'S$Bt;'S;=`$Fj<%lO$Bt1{$EcWQ1sOY$BtYZ@tZ]$Bt]^@t^;'S$Bt;'S;=`$E{;=`<%l@t<%lO$Bt1{$FQW&WWOr@trsA`s#O@t#O#PB_#P;'S@t;'S;=`CY;=`<%l$Bt<%lO@t1{$FmP;=`<%l$Bt4q$FsP;=`<%l$=b6X$F{WQ1sOY$7dYZ8lZ]$7d]^8l^;'S$7d;'S;=`$Ge;=`<%l8l<%lO$7d6X$Gp[&TS&WW&d!b&f#tOr8lrs9jsw8lwx;^x#O8l#O#PCf#P#o8l#o#pDs#p;'S8l;'S;=`J`;=`<%l$7d<%lO8l6X$Ho_Q1s&TS&WWOY$InYZEmZ]$In]^Em^r$Inrs$Jpsw$Inwx$Lpx#O$In#O#P$Np#P#o$In#o#p$7d#p;'S$In;'S;=`%!U<%lO$In2P$Iw]Q1s&TS&WWOY$InYZEmZ]$In]^Em^r$Inrs$Jpsw$Inwx$Lpx#O$In#O#P$Np#P;'S$In;'S;=`%!U<%lO$In2P$Jw]Q1s&TSOY$InYZEmZ]$In]^Em^r$Inrs$Kpsw$Inwx$Lpx#O$In#O#P$Np#P;'S$In;'S;=`%!U<%lO$In2P$Kw]Q1s&TSOY$InYZEmZ]$In]^Em^r$Inrs$1hsw$Inwx$Lpx#O$In#O#P$Np#P;'S$In;'S;=`%!U<%lO$In2P$Lw]Q1s&WWOY$InYZEmZ]$In]^Em^r$Inrs$Jpsw$Inwx$Mpx#O$In#O#P$Np#P;'S$In;'S;=`%!U<%lO$In2P$Mw]Q1s&WWOY$InYZEmZ]$In]^Em^r$Inrs$Jpsw$Inwx$Btx#O$In#O#P$Np#P;'S$In;'S;=`%!U<%lO$In2P$NuWQ1sOY$InYZEmZ]$In]^Em^;'S$In;'S;=`% _;=`<%lEm<%lO$In2P% fY&TS&WWOrEmrsFaswEmwxGsx#OEm#O#PIV#P;'SEm;'S;=`JY;=`<%l$In<%lOEm2P%!XP;=`<%l$In6X%!_P;=`<%l$7dLe%!m[&TS&WW&d!b&f#tOr8lrs9jsw8lwx;^x#O8l#O#PCf#P#o8l#o#pDs#p;'S8l;'S;=`J`;=`<%l$!P<%lO8lLe%#fP;=`<%l$!PLe%#taQ1s&^7[&WW&f#tOY$!PYZ)mZ]$!P]^)m^r$!Prs$#esw$!Pwx%$yx#O$!P#O#P$6g#P#o$!P#o#p$Hf#p#q$!P#q#r$7d#r;'S$!P;'S;=`%#c<%lO$!PJ}%%U_Q1s&^7[&WW&f#tOY%$yYZLoZ]%$y]^Lo^r%$yrs%&Ts#O%$y#O#P%(a#P#o%$y#o#p$At#p#q%$y#q#r$=b#r;'S%$y;'S;=`%*T<%lO%$yJ}%&[_Q1s&^7[OY%$yYZLoZ]%$y]^Lo^r%$yrs%'Zs#O%$y#O#P%(a#P#o%$y#o#p$At#p#q%$y#q#r$=b#r;'S%$y;'S;=`%*T<%lO%$yJ}%'b_Q1s&^7[OY%$yYZLoZ]%$y]^Lo^r%$yrs$)ms#O%$y#O#P%(a#P#o%$y#o#p$At#p#q%$y#q#r$=b#r;'S%$y;'S;=`%*T<%lO%$yJ}%(h[Q1s&^7[OY%$yYZLoZ]%$y]^Lo^#o%$y#o#p$=b#p#q%$y#q#r$=b#r;'S%$y;'S;=`%)^;=`<%l=Q<%lO%$yJ}%)eY&WW&f#tOr=Qrs=ts#O=Q#O#P?P#P#o=Q#o#p@S#p;'S=Q;'S;=`C`;=`<%l%$y<%lO=QJ}%*WP;=`<%l%$yLu%*b[Q1s&^7[OY#MXYZ'cZ]#MX]^'c^#o#MX#o#p%+W#p#q#MX#q#r%+W#r;'S#MX;'S;=`%5l;=`<%l!#d<%lO#MX6i%+g_Q1s&TS&WW&Z`&d!b&f#tOY%+WYZ!#dZ]%+W]^!#d^r%+Wrs%,fsw%+Wwx$;Qx#O%+W#O#P%2l#P#o%+W#o#p%4^#p;'S%+W;'S;=`%5f<%lO%+W6i%,q_Q1s&TS&Z`&d!bOY%+WYZ!#dZ]%+W]^!#d^r%+Wrs%-psw%+Wwx$;Qx#O%+W#O#P%2l#P#o%+W#o#p%4^#p;'S%+W;'S;=`%5f<%lO%+W6i%-{_Q1s&TS&Z`&d!bOY%+WYZ!#dZ]%+W]^!#d^r%+Wrs%.zsw%+Wwx$;Qx#O%+W#O#P%2l#P#o%+W#o#p%4^#p;'S%+W;'S;=`%5f<%lO%+W3k%/V]Q1s&TS&Z`&d!bOY%.zYZ!&[Z]%.z]^!&[^w%.zwx$-Wx#O%.z#O#P%0O#P#o%.z#o#p%1f#p;'S%.z;'S;=`%2f<%lO%.z3k%0TWQ1sOY%.zYZ!&[Z]%.z]^!&[^;'S%.z;'S;=`%0m;=`<%l!&[<%lO%.z3k%0vY&TS&Z`&d!bOw!&[wx1`x#O!&[#O#P!'Q#P#o!&[#o#p!(V#p;'S!&[;'S;=`!(w;=`<%l%.z<%lO!&[3k%1m]Q1s&TSOY$1hYZ4`Z]$1h]^4`^w$1hwx$2bx#O$1h#O#P$4Q#P#o$1h#o#p%.z#p;'S$1h;'S;=`$5^<%lO$1h3k%2iP;=`<%l%.z6i%2qWQ1sOY%+WYZ!#dZ]%+W]^!#d^;'S%+W;'S;=`%3Z;=`<%l!#d<%lO%+W6i%3h[&TS&WW&Z`&d!b&f#tOr!#drs!$dsw!#dwx;^x#O!#d#O#P!(}#P#o!#d#o#p!*^#p;'S!#d;'S;=`!+W;=`<%l%+W<%lO!#d6i%4g_Q1s&TS&WWOY$InYZEmZ]$In]^Em^r$Inrs$Jpsw$Inwx$Lpx#O$In#O#P$Np#P#o$In#o#p%+W#p;'S$In;'S;=`%!U<%lO$In6i%5iP;=`<%l%+WLu%5y[&TS&WW&Z`&d!b&f#tOr!#drs!$dsw!#dwx;^x#O!#d#O#P!(}#P#o!#d#o#p!*^#p;'S!#d;'S;=`!+W;=`<%l#MX<%lO!#dLu%6rP;=`<%l#MXLu%7SaQ1s&^7[&TS&Z`&d!bOY#MXYZ'cZ]#MX]^'c^r#MXrs%8Xsw#MXwx#Nox#O#MX#O#P%*Z#P#o#MX#o#p%4^#p#q#MX#q#r%+W#r;'S#MX;'S;=`%6o<%lO#MXIw%8f_Q1s&^7[&TS&Z`&d!bOY%8XYZ!-kZ]%8X]^!-k^w%8Xwx$'ax#O%8X#O#P%9e#P#o%8X#o#p%1f#p#q%8X#q#r%.z#r;'S%8X;'S;=`%;Z<%lO%8XIw%9l[Q1s&^7[OY%8XYZ!-kZ]%8X]^!-k^#o%8X#o#p%.z#p#q%8X#q#r%.z#r;'S%8X;'S;=`%:b;=`<%l!&[<%lO%8XIw%:kY&TS&Z`&d!bOw!&[wx1`x#O!&[#O#P!'Q#P#o!&[#o#p!(V#p;'S!&[;'S;=`!(w;=`<%l%8X<%lO!&[Iw%;^P;=`<%l%8XMV%;naQ1s&^7[&WW&ap&f#tOY%<sYZ!1ZZ]%<s]^!1Z^r%<srs$#esw%<swx%Jux#O%<s#O#P%>Z#P#o%<s#o#p%H^#p#q%<s#q#r%?W#r;'S%<s;'S;=`%Jo<%lO%<sMV%=UaQ1s&^7[&TS&WW&ap&d!b&f#tOY%<sYZ!1ZZ]%<s]^!1Z^r%<srs$#esw%<swx%;ax#O%<s#O#P%>Z#P#o%<s#o#p%H^#p#q%<s#q#r%?W#r;'S%<s;'S;=`%Jo<%lO%<sMV%>b[Q1s&^7[OY%<sYZ!1ZZ]%<s]^!1Z^#o%<s#o#p%?W#p#q%<s#q#r%?W#r;'S%<s;'S;=`%Il;=`<%l!3Q<%lO%<s6y%?g_Q1s&TS&WW&ap&d!b&f#tOY%?WYZ!3QZ]%?W]^!3Q^r%?Wrs$8psw%?Wwx%@fx#O%?W#O#P%Fl#P#o%?W#o#p%H^#p;'S%?W;'S;=`%If<%lO%?W6y%@q_Q1s&WW&ap&f#tOY%?WYZ!3QZ]%?W]^!3Q^r%?Wrs$8psw%?Wwx%Apx#O%?W#O#P%Fl#P#o%?W#o#p%H^#p;'S%?W;'S;=`%If<%lO%?W6y%A{_Q1s&WW&ap&f#tOY%?WYZ!3QZ]%?W]^!3Q^r%?Wrs$8psw%?Wwx%Bzx#O%?W#O#P%Fl#P#o%?W#o#p%H^#p;'S%?W;'S;=`%If<%lO%?W5c%CV]Q1s&WW&ap&f#tOY%BzYZ!5xZ]%Bz]^!5x^r%Bzrs$>ds#O%Bz#O#P%DO#P#o%Bz#o#p%Ef#p;'S%Bz;'S;=`%Ff<%lO%Bz5c%DTWQ1sOY%BzYZ!5xZ]%Bz]^!5x^;'S%Bz;'S;=`%Dm;=`<%l!5x<%lO%Bz5c%DvY&WW&ap&f#tOr!5xrs=ts#O!5x#O#P!6n#P#o!5x#o#p!7s#p;'S!5x;'S;=`!8e;=`<%l%Bz<%lO!5x5c%Em]Q1s&WWOY$BtYZ@tZ]$Bt]^@t^r$Btrs$Cns#O$Bt#O#P$E^#P#o$Bt#o#p%Bz#p;'S$Bt;'S;=`$Fj<%lO$Bt5c%FiP;=`<%l%Bz6y%FqWQ1sOY%?WYZ!3QZ]%?W]^!3Q^;'S%?W;'S;=`%GZ;=`<%l!3Q<%lO%?W6y%Gh[&TS&WW&ap&d!b&f#tOr!3Qrs9jsw!3Qwx!4Qx#O!3Q#O#P!8k#P#o!3Q#o#p!9z#p;'S!3Q;'S;=`!:t;=`<%l%?W<%lO!3Q6y%Hg_Q1s&TS&WWOY$InYZEmZ]$In]^Em^r$Inrs$Jpsw$Inwx$Lpx#O$In#O#P$Np#P#o$In#o#p%?W#p;'S$In;'S;=`%!U<%lO$In6y%IiP;=`<%l%?WMV%Iy[&TS&WW&ap&d!b&f#tOr!3Qrs9jsw!3Qwx!4Qx#O!3Q#O#P!8k#P#o!3Q#o#p!9z#p;'S!3Q;'S;=`!:t;=`<%l%<s<%lO!3QMV%JrP;=`<%l%<sMV%KSaQ1s&^7[&WW&ap&f#tOY%<sYZ!1ZZ]%<s]^!1Z^r%<srs$#esw%<swx%LXx#O%<s#O#P%>Z#P#o%<s#o#p%H^#p#q%<s#q#r%?W#r;'S%<s;'S;=`%Jo<%lO%<sKo%Lf_Q1s&^7[&WW&ap&f#tOY%LXYZ!=XZ]%LX]^!=X^r%LXrs%&Ts#O%LX#O#P%Me#P#o%LX#o#p%Ef#p#q%LX#q#r%Bz#r;'S%LX;'S;=`& Z<%lO%LXKo%Ml[Q1s&^7[OY%LXYZ!=XZ]%LX]^!=X^#o%LX#o#p%Bz#p#q%LX#q#r%Bz#r;'S%LX;'S;=`%Nb;=`<%l!5x<%lO%LXKo%NkY&WW&ap&f#tOr!5xrs=ts#O!5x#O#P!6n#P#o!5x#o#p!7s#p;'S!5x;'S;=`!8e;=`<%l%LX<%lO!5xKo& ^P;=`<%l%LXMg& h[Q1s&^7[OY#J]YZ%TZ]#J]]^%T^#o#J]#o#p&!^#p#q#J]#q#r&!^#r;'S#J];'S;=`&&p;=`<%l!@b<%lO#J]7Z&!o_Q1s&TS&WW&Z`&ap&d!b&f#tOY&!^YZ!@bZ]&!^]^!@b^r&!^rs%,fsw&!^wx%@fx#O&!^#O#P&#n#P#o&!^#o#p&%b#p;'S&!^;'S;=`&&j<%lO&!^7Z&#sWQ1sOY&!^YZ!@bZ]&!^]^!@b^;'S&!^;'S;=`&$];=`<%l!@b<%lO&!^7Z&$l[&TS&WW&Z`&ap&d!b&f#tOr!@brs!$dsw!@bwx!4Qx#O!@b#O#P!Ad#P#o!@b#o#p!Bu#p;'S!@b;'S;=`!Co;=`<%l&!^<%lO!@b7Z&%k_Q1s&TS&WWOY$InYZEmZ]$In]^Em^r$Inrs$Jpsw$Inwx$Lpx#O$In#O#P$Np#P#o$In#o#p&!^#p;'S$In;'S;=`%!U<%lO$In7Z&&mP;=`<%l&!^Mg&'P[&TS&WW&Z`&ap&d!b&f#tOr!@brs!$dsw!@bwx!4Qx#O!@b#O#P!Ad#P#o!@b#o#p!Bu#p;'S!@b;'S;=`!Co;=`<%l#J]<%lO!@bMg&'xP;=`<%l#J]Gz&(`_%jQ&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`&)_!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGz&)r]!s,W&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGz&+O_%dQ&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`&)_!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{&,^a&_`&^7[&WW&R,X&ap&f#tOY&-cYZ!1ZZ]&-c]^!1Z^r&-crs&.ysw&-cwx'(^x#O&-c#O#P&N}#P#o&-c#o#p'%g#p#q&-c#q#r' l#r;'S&-c;'S;=`'(W<%lO&-cGk&-ta&^7[&TS&WW&R,X&ap&d!b&f#tOY&-cYZ!1ZZ]&-c]^!1Z^r&-crs&.ysw&-cwx&Mwx#O&-c#O#P&N}#P#o&-c#o#p'%g#p#q&-c#q#r' l#r;'S&-c;'S;=`'(W<%lO&-cFy&/Ua&^7[&TS&R,X&d!bOY&0ZYZ)mZ]&0Z]^)m^r&0Zrs&Hisw&0Zwx&1ox#O&0Z#O#P&2s#P#o&0Z#o#p&@g#p#q&0Z#q#r&3b#r;'S&0Z;'S;=`&Hc<%lO&0ZFy&0ja&^7[&TS&WW&R,X&d!b&f#tOY&0ZYZ)mZ]&0Z]^)m^r&0Zrs&.ysw&0Zwx&1ox#O&0Z#O#P&2s#P#o&0Z#o#p&@g#p#q&0Z#q#r&3b#r;'S&0Z;'S;=`&Hc<%lO&0ZFy&1z]&^7[&WW&R,X&f#tOr)mrs*ssw)mwxKmx#O)m#O#P7}#P#o)m#o#pDs#p#q)m#q#r8l#r;'S)m;'S;=`Kg<%lO)mFy&2xW&^7[O#o&0Z#o#p&3b#p#q&0Z#q#r&3b#r;'S&0Z;'S;=`&GS;=`<%l&3b<%lO&0Z0m&3o_&TS&WW&R,X&d!b&f#tOY&3bYZ8lZ]&3b]^8l^r&3brs&4nsw&3bwx&>Ox#O&3b#O#P&>z#P#o&3b#o#p&@g#p;'S&3b;'S;=`&F|<%lO&3b0m&4w_&TS&R,X&d!bOY&3bYZ8lZ]&3b]^8l^r&3brs&5vsw&3bwx&>Ox#O&3b#O#P&>z#P#o&3b#o#p&@g#p;'S&3b;'S;=`&F|<%lO&3b0m&6P_&TS&R,X&d!bOY&3bYZ8lZ]&3b]^8l^r&3brs&7Osw&3bwx&>Ox#O&3b#O#P&>z#P#o&3b#o#p&@g#p;'S&3b;'S;=`&F|<%lO&3b-o&7X]&TS&R,X&d!bOY&7OYZ0lZ]&7O]^0l^w&7Owx&8Qx#O&7O#O#P&8r#P#o&7O#o#p&:T#p;'S&7O;'S;=`&=x<%lO&7O-o&8VX&R,XOw0lwx2Ox#O0l#O#P2k#P#o0l#o#p3n#p;'S0l;'S;=`6z<%lO0l-o&8uRO;'S&7O;'S;=`&9O;=`O&7O-o&9X^&TS&R,X&d!bOY&7OYZ0lZ]&7O]^0l^w&7Owx&8Qx#O&7O#O#P&8r#P#o&7O#o#p&:T#p;'S&7O;'S;=`&=x;=`<%l&7O<%lO&7O-o&:[]&TS&R,XOY&;TYZ4`Z]&;T]^4`^w&;Twx&;}x#O&;T#O#P&<i#P#o&;T#o#p&7O#p;'S&;T;'S;=`&=r<%lO&;T,]&;[Z&TS&R,XOY&;TYZ4`Z]&;T]^4`^w&;Twx&;}x#O&;T#O#P&<i#P;'S&;T;'S;=`&=r<%lO&;T,]&<SV&R,XOw4`wx5dx#O4`#O#P5y#P;'S4`;'S;=`6t<%lO4`,]&<lRO;'S&;T;'S;=`&<u;=`O&;T,]&<|[&TS&R,XOY&;TYZ4`Z]&;T]^4`^w&;Twx&;}x#O&;T#O#P&<i#P;'S&;T;'S;=`&=r;=`<%l&;T<%lO&;T,]&=uP;=`<%l&;T-o&={P;=`<%l&7O0m&>XZ&WW&R,X&f#tOr8lrs9jsw8lwx<Wx#O8l#O#PCf#P#o8l#o#pDs#p;'S8l;'S;=`J`<%lO8l0m&>}RO;'S&3b;'S;=`&?W;=`O&3b0m&?e`&TS&WW&R,X&d!b&f#tOY&3bYZ8lZ]&3b]^8l^r&3brs&4nsw&3bwx&>Ox#O&3b#O#P&>z#P#o&3b#o#p&@g#p;'S&3b;'S;=`&F|;=`<%l&3b<%lO&3b0m&@p_&TS&WW&R,XOY&AoYZEmZ]&Ao]^Em^r&Aors&Bqsw&Aowx&Dqx#O&Ao#O#P&Ee#P#o&Ao#o#p&3b#p;'S&Ao;'S;=`&Fv<%lO&Ao,e&Ax]&TS&WW&R,XOY&AoYZEmZ]&Ao]^Em^r&Aors&Bqsw&Aowx&Dqx#O&Ao#O#P&Ee#P;'S&Ao;'S;=`&Fv<%lO&Ao,e&Bx]&TS&R,XOY&AoYZEmZ]&Ao]^Em^r&Aors&Cqsw&Aowx&Dqx#O&Ao#O#P&Ee#P;'S&Ao;'S;=`&Fv<%lO&Ao,e&Cx]&TS&R,XOY&AoYZEmZ]&Ao]^Em^r&Aors&;Tsw&Aowx&Dqx#O&Ao#O#P&Ee#P;'S&Ao;'S;=`&Fv<%lO&Ao,e&DxX&WW&R,XOrEmrsFaswEmwxHex#OEm#O#PIV#P;'SEm;'S;=`JY<%lOEm,e&EhRO;'S&Ao;'S;=`&Eq;=`O&Ao,e&Ez^&TS&WW&R,XOY&AoYZEmZ]&Ao]^Em^r&Aors&Bqsw&Aowx&Dqx#O&Ao#O#P&Ee#P;'S&Ao;'S;=`&Fv;=`<%l&Ao<%lO&Ao,e&FyP;=`<%l&Ao0m&GPP;=`<%l&3bFy&Ga`&TS&WW&R,X&d!b&f#tOY&3bYZ8lZ]&3b]^8l^r&3brs&4nsw&3bwx&>Ox#O&3b#O#P&>z#P#o&3b#o#p&@g#p;'S&3b;'S;=`&F|;=`<%l&0Z<%lO&3bFy&HfP;=`<%l&0ZFy&Hta&^7[&TS&R,X&d!bOY&0ZYZ)mZ]&0Z]^)m^r&0Zrs&Iysw&0Zwx&1ox#O&0Z#O#P&2s#P#o&0Z#o#p&@g#p#q&0Z#q#r&3b#r;'S&0Z;'S;=`&Hc<%lO&0ZC{&JU_&^7[&TS&R,X&d!bOY&IyYZ,wZ]&Iy]^,w^w&Iywx&KTx#O&Iy#O#P&K}#P#o&Iy#o#p&:T#p#q&Iy#q#r&7O#r;'S&Iy;'S;=`&Mq<%lO&IyC{&K[Z&^7[&R,XOw,wwx.kx#O,w#O#P/}#P#o,w#o#p3n#p#q,w#q#r0l#r;'S,w;'S;=`7w<%lO,wC{&LSW&^7[O#o&Iy#o#p&7O#p#q&Iy#q#r&7O#r;'S&Iy;'S;=`&Ll;=`<%l&7O<%lO&IyC{&Lu^&TS&R,X&d!bOY&7OYZ0lZ]&7O]^0l^w&7Owx&8Qx#O&7O#O#P&8r#P#o&7O#o#p&:T#p;'S&7O;'S;=`&=x;=`<%l&Iy<%lO&7OC{&MtP;=`<%l&IyGk&NU]&^7[&WW&R,X&ap&f#tOr!1Zrs*ssw!1Zwx!<Tx#O!1Z#O#P!2c#P#o!1Z#o#p!9z#p#q!1Z#q#r!3Q#r;'S!1Z;'S;=`!;}<%lO!1ZGk' SW&^7[O#o&-c#o#p' l#p#q&-c#q#r' l#r;'S&-c;'S;=`'&u;=`<%l' l<%lO&-c1_' {_&TS&WW&R,X&ap&d!b&f#tOY' lYZ!3QZ]' l]^!3Q^r' lrs&4nsw' lwx'!zx#O' l#O#P'#x#P#o' l#o#p'%g#p;'S' l;'S;=`'&o<%lO' l1_'#VZ&WW&R,X&ap&f#tOr!3Qrs9jsw!3Qwx!4|x#O!3Q#O#P!8k#P#o!3Q#o#p!9z#p;'S!3Q;'S;=`!:t<%lO!3Q1_'#{RO;'S' l;'S;=`'$U;=`O' l1_'$e`&TS&WW&R,X&ap&d!b&f#tOY' lYZ!3QZ]' l]^!3Q^r' lrs&4nsw' lwx'!zx#O' l#O#P'#x#P#o' l#o#p'%g#p;'S' l;'S;=`'&o;=`<%l' l<%lO' l1_'%p_&TS&WW&R,XOY&AoYZEmZ]&Ao]^Em^r&Aors&Bqsw&Aowx&Dqx#O&Ao#O#P&Ee#P#o&Ao#o#p' l#p;'S&Ao;'S;=`&Fv<%lO&Ao1_'&rP;=`<%l' lGk''U`&TS&WW&R,X&ap&d!b&f#tOY' lYZ!3QZ]' l]^!3Q^r' lrs&4nsw' lwx'!zx#O' l#O#P'#x#P#o' l#o#p'%g#p;'S' l;'S;=`'&o;=`<%l&-c<%lO' lGk'(ZP;=`<%l&-cGk'(k]&^7[&WW&R,X&ap&f#tOr!1Zrs*ssw!1Zwx')dx#O!1Z#O#P!2c#P#o!1Z#o#p!9z#p#q!1Z#q#r!3Q#r;'S!1Z;'S;=`!;}<%lO!1ZGk')sZ&U!f&^7[&WW&S,X&ap&f#tOr!=XrsMks#O!=X#O#P!>V#P#o!=X#o#p!7s#p#q!=X#q#r!5x#r;'S!=X;'S;=`!?m<%lO!=XG{'*y]f,X&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%T<u',V]eR&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{'-caT,X&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vxz%Tz{'.h{!_%T!_!`&)_!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{'.{__R&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`&)_!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{'0__%g,X&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`&)_!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%T<u'1q]xR&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TMg'2}`%h,X&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`&)_!`!a'4P!a#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TB^'4d]&q&j&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{'5pa!dQ&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!O%T!O!P'6u!P!Q%T!Q!['9c![#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{'7W_&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!O%T!O!P'8V!P#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{'8j]!m,X&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy'9vi!f,V&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!Q%T!Q!['9c![!g%T!g!h';e!h!l%T!l!m'@X!m#O%T#O#P!?s#P#R%T#R#S'9c#S#X%T#X#Y';e#Y#^%T#^#_'@X#_#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy';vc&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx{%T{|'=R|}%T}!O'=R!O!Q%T!Q!['>c![#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy'=d_&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!Q%T!Q!['>c![#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy'>ve!f,V&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!Q%T!Q!['>c![!l%T!l!m'@X!m#O%T#O#P!?s#P#R%T#R#S'>c#S#^%T#^#_'@X#_#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy'@l]!f,V&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{'Axa%iR&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!P%T!P!Q'B}!Q!_%T!_!`&)_!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGz'Cb_%kQ&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`&)_!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy'Dtw!f,V&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!O%T!O!P'G_!P!Q%T!Q!['Ho![!d%T!d!e'Jw!e!g%T!g!h';e!h!l%T!l!m'@X!m!q%T!q!r'M}!r!z%T!z!{(!}!{#O%T#O#P!?s#P#R%T#R#S'Ho#S#U%T#U#V'Jw#V#X%T#X#Y';e#Y#^%T#^#_'@X#_#c%T#c#d'M}#d#l%T#l#m(!}#m#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy'Gp_&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!Q%T!Q!['9c![#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy'ISk!f,V&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!O%T!O!P'G_!P!Q%T!Q!['Ho![!g%T!g!h';e!h!l%T!l!m'@X!m#O%T#O#P!?s#P#R%T#R#S'Ho#S#X%T#X#Y';e#Y#^%T#^#_'@X#_#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy'KYb&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!Q%T!Q!R'Lb!R!S'Lb!S#O%T#O#P!?s#P#R%T#R#S'Lb#S#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy'Lub!f,V&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!Q%T!Q!R'Lb!R!S'Lb!S#O%T#O#P!?s#P#R%T#R#S'Lb#S#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy'N`a&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!Q%T!Q!Y( e!Y#O%T#O#P!?s#P#R%T#R#S( e#S#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy( xa!f,V&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!Q%T!Q!Y( e!Y#O%T#O#P!?s#P#R%T#R#S( e#S#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy(#`e&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!Q%T!Q![($q![!c%T!c!i($q!i#O%T#O#P!?s#P#R%T#R#S($q#S#T%T#T#Z($q#Z#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy(%Ue!f,V&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!Q%T!Q![($q![!c%T!c!i($q!i#O%T#O#P!?s#P#R%T#R#S($q#S#T%T#T#Z($q#Z#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TMg(&z_y1s&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`('y!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%T<u((^]%sR&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{()j]#^,X&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{(*vakR&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!^%T!^!_(+{!_!`!I[!`!a!I[!a#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGz(,`_%eQ&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`&)_!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{(-r_%r,X&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`!I[!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{(/U`kR&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`!I[!`!a(0W!a#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGz(0k_%fQ&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`&)_!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TG{(2P_]Q#tP&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`&)_!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TMg(3ee&^7[&TS&WW&Q&j&Z`&ap&d!b&f#t%m,XOr%Trs&_sw%Twx!0Vx!Q%T!Q![(3O![!c%T!c!}(3O!}#O%T#O#P!?s#P#R%T#R#S(3O#S#T%T#T#o(3O#o#p!Bu#p#q%T#q#r!@b#r$g%T$g;'S(3O;'S;=`(4v<%lO(3OMg(4yP;=`<%l(3OMg(5ci&^7[&TS&WW&Q&j&Z`&ap&d!b&f#t%m,XOr%Trs(7Qsw%Twx(:jx!Q%T!Q![(3O![!c%T!c!t(3O!t!u(>S!u!}(3O!}#O%T#O#P!?s#P#R%T#R#S(3O#S#T%T#T#f(3O#f#g(>S#g#o(3O#o#p!Bu#p#q%T#q#r!@b#r$g%T$g;'S(3O;'S;=`(4v<%lO(3OGZ(7_a&^7[&TS&R,X&Z`&d!bOY!MYYZ'cZ]!MY]^'c^r!MYrs(8dsw!MYwx# vx#O!MY#O#P#@t#P#o!MY#o#p#E^#p#q!MY#q#r#Ac#r;'S!MY;'S;=`#G}<%lO!MYGZ(8q]&^7[&TS&R,X&Z`&d!bOr'crs(9jsw'cwx(kx#O'c#O#P!!u#P#o'c#o#p!*^#p#q'c#q#r!#d#r;'S'c;'S;=`!,a<%lO'cD](9wZ&^7[&TS&V,X&Z`&d!bOw!-kwx-sx#O!-k#O#P!.i#P#o!-k#o#p!(V#p#q!-k#q#r!&[#r;'S!-k;'S;=`!0P<%lO!-kGk(:wa&^7[&WW&R,X&ap&f#tOY&-cYZ!1ZZ]&-c]^!1Z^r&-crs&.ysw&-cwx(;|x#O&-c#O#P&N}#P#o&-c#o#p'%g#p#q&-c#q#r' l#r;'S&-c;'S;=`'(W<%lO&-cGk(<Z]&^7[&WW&R,X&ap&f#tOr!1Zrs*ssw!1Zwx(=Sx#O!1Z#O#P!2c#P#o!1Z#o#p!9z#p#q!1Z#q#r!3Q#r;'S!1Z;'S;=`!;}<%lO!1ZFT(=aZ&^7[&WW&S,X&ap&f#tOr!=XrsMks#O!=X#O#P!>V#P#o!=X#o#p!7s#p#q!=X#q#r!5x#r;'S!=X;'S;=`!?m<%lO!=XMg(>ie&^7[&TS&WW&Q&j&Z`&ap&d!b&f#t%m,XOr%Trs(7Qsw%Twx(:jx!Q%T!Q![(3O![!c%T!c!}(3O!}#O%T#O#P!?s#P#R%T#R#S(3O#S#T%T#T#o(3O#o#p!Bu#p#q%T#q#r!@b#r$g%T$g;'S(3O;'S;=`(4v<%lO(3OMg(@ai&^7[&TS&WW&Q&j&Z`&ap&d!b&f#t%m,XOr%Trs(BOsw%Twx(EYx!Q%T!Q![(3O![!c%T!c!t(3O!t!u(Hd!u!}(3O!}#O%T#O#P!?s#P#R%T#R#S(3O#S#T%T#T#f(3O#f#g(Hd#g#o(3O#o#p!Bu#p#q%T#q#r!@b#r$g%T$g;'S(3O;'S;=`(4v<%lO(3OGZ(B]]&^7[&TS&Z`&d!b&`,XOr'crs(CUsw'cwx(kx#O'c#O#P!!u#P#o'c#o#p!*^#p#q'c#q#r!#d#r;'S'c;'S;=`!,a<%lO'cGZ(Ca]&^7[&TS&Z`&d!bOr'crs(DYsw'cwx(kx#O'c#O#P!!u#P#o'c#o#p!*^#p#q'c#q#r!#d#r;'S'c;'S;=`!,a<%lO'cD](DgZ&^7[&TS&e,X&Z`&d!bOw!-kwx-sx#O!-k#O#P!.i#P#o!-k#o#p!(V#p#q!-k#q#r!&[#r;'S!-k;'S;=`!0P<%lO!-kGk(Eg]&^7[&WW&ap&f#t&Y,XOr!1Zrs*ssw!1Zwx(F`x#O!1Z#O#P!2c#P#o!1Z#o#p!9z#p#q!1Z#q#r!3Q#r;'S!1Z;'S;=`!;}<%lO!1ZGk(Fk]&^7[&WW&ap&f#tOr!1Zrs*ssw!1Zwx(Gdx#O!1Z#O#P!2c#P#o!1Z#o#p!9z#p#q!1Z#q#r!3Q#r;'S!1Z;'S;=`!;}<%lO!1ZFT(GqZ&^7[&WW&c,X&ap&f#tOr!=XrsMks#O!=X#O#P!>V#P#o!=X#o#p!7s#p#q!=X#q#r!5x#r;'S!=X;'S;=`!?m<%lO!=XMg(Hye&^7[&TS&WW&Q&j&Z`&ap&d!b&f#t%m,XOr%Trs(BOsw%Twx(EYx!Q%T!Q![(3O![!c%T!c!}(3O!}#O%T#O#P!?s#P#R%T#R#S(3O#S#T%T#T#o(3O#o#p!Bu#p#q%T#q#r!@b#r$g%T$g;'S(3O;'S;=`(4v<%lO(3OMg(Jqm&^7[&TS&WW&Q&j&Z`&ap&d!b&f#t%m,XOr%Trs(7Qsw%Twx(:jx!Q%T!Q![(3O![!c%T!c!h(3O!h!i(Hd!i!t(3O!t!u(>S!u!}(3O!}#O%T#O#P!?s#P#R%T#R#S(3O#S#T%T#T#U(3O#U#V(>S#V#Y(3O#Y#Z(Hd#Z#o(3O#o#p!Bu#p#q%T#q#r!@b#r$g%T$g;'S(3O;'S;=`(4v<%lO(3OG{(MP]!V,X&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%T<u(N]]!UR&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGz) i_%cQ&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`&)_!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%TGy)!qZ&TS&WW!ZGmOrEmrsFaswEmwxGsx#OEm#O#PIV#P#oEm#o#p!@b#p;'SEm;'S;=`JY<%lOEmG{)#w_%bR&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx!_%T!_!`&)_!`#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%T<u)%XZ!Y7_&TS&WW&Z`&ap&d!b&f#tOr!@brs!$dsw!@bwx!4Qx#O!@b#O#P!Ad#P#o!@b#o#p!Bu#p;'S!@b;'S;=`!Co<%lO!@bGy)&_]%l,V&^7[&TS&WW&Z`&ap&d!b&f#tOr%Trs&_sw%Twx!0Vx#O%T#O#P!?s#P#o%T#o#p!Bu#p#q%T#q#r!@b#r;'S%T;'S;=`!Dz<%lO%T",
            tokenizers: [p, s, o, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
            topRules: {
                Script: [0, 3]
            },
            specialized: [{
                term: 213,
                get: e=>f[e] || -1
            }],
            tokenPrec: 7129
        });
        var m = O(168)
          , Q = O(770)
          , $ = O(5338);
        let g = new Q.hr
          , P = new Set(["Script", "Body", "FunctionDefinition", "ClassDefinition", "LambdaExpression", "ForStatement", "MatchClause"]);
        function S(e) {
            return (t,O,n)=>{
                if (n)
                    return !1;
                let r = t.node.getChild("VariableName");
                return r && O(r, e),
                !0
            }
        }
        let b = {
            FunctionDefinition: S("function"),
            ClassDefinition: S("class"),
            ForStatement(e, t, O) {
                if (O) {
                    for (let O = e.node.firstChild; O; O = O.nextSibling)
                        if ("VariableName" == O.name)
                            t(O, "variable");
                        else if ("in" == O.name)
                            break
                }
            },
            ImportStatement(e, t) {
                var O, n;
                let {node: r} = e
                  , i = (null === (O = r.firstChild) || void 0 === O ? void 0 : O.name) == "from";
                for (let e = r.getChild("import"); e; e = e.nextSibling)
                    "VariableName" == e.name && (null === (n = e.nextSibling) || void 0 === n ? void 0 : n.name) != "as" && t(e, i ? "variable" : "namespace")
            },
            AssignStatement(e, t) {
                for (let O = e.node.firstChild; O; O = O.nextSibling)
                    if ("VariableName" == O.name)
                        t(O, "variable");
                    else if (":" == O.name || "AssignOp" == O.name)
                        break
            },
            ParamList(e, t) {
                for (let O = null, n = e.node.firstChild; n; n = n.nextSibling)
                    "VariableName" != n.name || O && /\*|AssignOp/.test(O.name) || t(n, "variable"),
                    O = n
            },
            CapturePattern: S("variable"),
            AsPattern: S("variable"),
            __proto__: null
        }
          , y = /^[\w\xa1-\uffff][\w\d\xa1-\uffff]*$/
          , x = ["String", "FormatString", "Comment", "PropertyName"];
        function X(e) {
            let t = (0,
            m.qz)(e.state).resolveInner(e.pos, -1);
            if (x.indexOf(t.name) > -1)
                return null;
            let O = "VariableName" == t.name || t.to - t.from < 20 && y.test(e.state.sliceDoc(t.from, t.to));
            if (!O && !e.explicit)
                return null;
            let n = [];
            for (let O = t; O; O = O.parent)
                P.has(O.name) && (n = n.concat(function e(t, O) {
                    let n = g.get(O);
                    if (n)
                        return n;
                    let r = []
                      , i = !0;
                    function a(e, O) {
                        let n = t.sliceString(e.from, e.to);
                        r.push({
                            label: n,
                            type: O
                        })
                    }
                    return O.cursor(Q.vj.IncludeAnonymous).iterate(O=>{
                        if (O.name) {
                            let e = b[O.name];
                            if (e && e(O, a, i) || !i && P.has(O.name))
                                return !1;
                            i = !1
                        } else if (O.to - O.from > 8192) {
                            for (let n of e(t, O.node))
                                r.push(n);
                            return !1
                        }
                    }
                    ),
                    g.set(O, r),
                    r
                }(e.state.doc, O)));
            return {
                options: n,
                from: O ? t.from : e.pos,
                validFor: y
            }
        }
        let v = ["__annotations__", "__builtins__", "__debug__", "__doc__", "__import__", "__name__", "__loader__", "__package__", "__spec__", "False", "None", "True"].map(e=>({
            label: e,
            type: "constant"
        })).concat(["ArithmeticError", "AssertionError", "AttributeError", "BaseException", "BlockingIOError", "BrokenPipeError", "BufferError", "BytesWarning", "ChildProcessError", "ConnectionAbortedError", "ConnectionError", "ConnectionRefusedError", "ConnectionResetError", "DeprecationWarning", "EOFError", "Ellipsis", "EncodingWarning", "EnvironmentError", "Exception", "FileExistsError", "FileNotFoundError", "FloatingPointError", "FutureWarning", "GeneratorExit", "IOError", "ImportError", "ImportWarning", "IndentationError", "IndexError", "InterruptedError", "IsADirectoryError", "KeyError", "KeyboardInterrupt", "LookupError", "MemoryError", "ModuleNotFoundError", "NameError", "NotADirectoryError", "NotImplemented", "NotImplementedError", "OSError", "OverflowError", "PendingDeprecationWarning", "PermissionError", "ProcessLookupError", "RecursionError", "ReferenceError", "ResourceWarning", "RuntimeError", "RuntimeWarning", "StopAsyncIteration", "StopIteration", "SyntaxError", "SyntaxWarning", "SystemError", "SystemExit", "TabError", "TimeoutError", "TypeError", "UnboundLocalError", "UnicodeDecodeError", "UnicodeEncodeError", "UnicodeError", "UnicodeTranslateError", "UnicodeWarning", "UserWarning", "ValueError", "Warning", "ZeroDivisionError"].map(e=>({
            label: e,
            type: "type"
        }))).concat(["bool", "bytearray", "bytes", "classmethod", "complex", "float", "frozenset", "int", "list", "map", "memoryview", "object", "range", "set", "staticmethod", "str", "super", "tuple", "type"].map(e=>({
            label: e,
            type: "class"
        }))).concat(["abs", "aiter", "all", "anext", "any", "ascii", "bin", "breakpoint", "callable", "chr", "compile", "delattr", "dict", "dir", "divmod", "enumerate", "eval", "exec", "exit", "filter", "format", "getattr", "globals", "hasattr", "hash", "help", "hex", "id", "input", "isinstance", "issubclass", "iter", "len", "license", "locals", "max", "min", "next", "oct", "open", "ord", "pow", "print", "property", "quit", "repr", "reversed", "round", "setattr", "slice", "sorted", "sum", "vars", "zip"].map(e=>({
            label: e,
            type: "function"
        })))
          , k = [(0,
        $.Gn)("def ${name}(${params}):\n	${}", {
            label: "def",
            detail: "function",
            type: "keyword"
        }), (0,
        $.Gn)("for ${name} in ${collection}:\n	${}", {
            label: "for",
            detail: "loop",
            type: "keyword"
        }), (0,
        $.Gn)("while ${}:\n	${}", {
            label: "while",
            detail: "loop",
            type: "keyword"
        }), (0,
        $.Gn)("try:\n	${}\nexcept ${error}:\n	${}", {
            label: "try",
            detail: "/ except block",
            type: "keyword"
        }), (0,
        $.Gn)("if ${}:\n	\n", {
            label: "if",
            detail: "block",
            type: "keyword"
        }), (0,
        $.Gn)("if ${}:\n	${}\nelse:\n	${}", {
            label: "if",
            detail: "/ else block",
            type: "keyword"
        }), (0,
        $.Gn)("class ${name}:\n	def __init__(self, ${params}):\n			${}", {
            label: "class",
            detail: "definition",
            type: "keyword"
        }), (0,
        $.Gn)("import ${module}", {
            label: "import",
            detail: "statement",
            type: "keyword"
        }), (0,
        $.Gn)("from ${module} import ${names}", {
            label: "from",
            detail: "import",
            type: "keyword"
        })]
          , w = (0,
        $.eC)(x, (0,
        $.Mb)(v.concat(k)));
        function T(e, t) {
            let O = e.lineIndent(t.from)
              , n = e.lineAt(e.pos, -1)
              , r = n.from + n.text.length;
            return /^\s*($|#)/.test(n.text) && e.node.to < r + 100 && !/\S/.test(e.state.sliceDoc(r, e.node.to)) && e.lineIndent(e.pos, -1) <= O || /^\s*(else:|elif |except |finally:)/.test(e.textAfter) && e.lineIndent(e.pos, -1) > O ? null : O + e.unit
        }
        let _ = m.qp.define({
            name: "python",
            parser: h.configure({
                props: [m.uj.add({
                    Body: e=>{
                        var t;
                        return null !== (t = T(e, e.node)) && void 0 !== t ? t : e.continue()
                    }
                    ,
                    IfStatement: e=>/^\s*(else:|elif )/.test(e.textAfter) ? e.baseIndent : e.continue(),
                    TryStatement: e=>/^\s*(except |finally:|else:)/.test(e.textAfter) ? e.baseIndent : e.continue(),
                    "TupleExpression ComprehensionExpression ParamList ArgList ParenthesizedExpression": (0,
                    m.vw)({
                        closing: ")"
                    }),
                    "DictionaryExpression DictionaryComprehensionExpression SetExpression SetComprehensionExpression": (0,
                    m.vw)({
                        closing: "}"
                    }),
                    "ArrayExpression ArrayComprehensionExpression": (0,
                    m.vw)({
                        closing: "]"
                    }),
                    "String FormatString": ()=>null,
                    Script: e=>{
                        if (e.pos + /\s*/.exec(e.textAfter)[0].length >= e.node.to) {
                            let t = null;
                            for (let O = e.node, n = O.to; (O = O.lastChild) && O.to == n; )
                                "Body" == O.type.name && (t = O);
                            if (t) {
                                let O = T(e, t);
                                if (null != O)
                                    return O
                            }
                        }
                        return e.continue()
                    }
                }), m.x0.add({
                    "ArrayExpression DictionaryExpression SetExpression TupleExpression": m.Dv,
                    Body: (e,t)=>({
                        from: e.from + 1,
                        to: e.to - (e.to == t.doc.length ? 0 : 1)
                    })
                })]
            }),
            languageData: {
                closeBrackets: {
                    brackets: ["(", "[", "{", "'", '"', "'''", '"""'],
                    stringPrefixes: ["f", "fr", "rf", "r", "u", "b", "br", "rb", "F", "FR", "RF", "R", "U", "B", "BR", "RB"]
                },
                commentTokens: {
                    line: "#"
                },
                indentOnInput: /^\s*([\}\]\)]|else:|elif |except |finally:)$/
            }
        });
        function W() {
            return new m.ri(_,[_.data.of({
                autocomplete: X
            }), _.data.of({
                autocomplete: w
            })])
        }
    },
    473: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            rust: function() {
                return h
            },
            rustLanguage: function() {
                return f
            }
        });
        var n = O(2679)
          , r = O(5306);
        function i(e) {
            return e >= 48 && e <= 57
        }
        function a(e) {
            return i(e) || 95 == e
        }
        let o = new n.Jq((e,t)=>{
            if (i(e.next)) {
                let t = !1;
                do
                    e.advance();
                while (a(e.next));
                if (46 == e.next) {
                    if (t = !0,
                    e.advance(),
                    i(e.next))
                        do
                            e.advance();
                        while (a(e.next));
                    else if (46 == e.next || e.next > 127 || /\w/.test(String.fromCharCode(e.next)))
                        return
                }
                if (101 == e.next || 69 == e.next) {
                    if (t = !0,
                    e.advance(),
                    (43 == e.next || 45 == e.next) && e.advance(),
                    !a(e.next))
                        return;
                    do
                        e.advance();
                    while (a(e.next))
                }
                if (102 == e.next) {
                    let O = e.peek(1);
                    if ((51 != O || 50 != e.peek(2)) && (54 != O || 52 != e.peek(2)))
                        return;
                    e.advance(3),
                    t = !0
                }
                t && e.acceptToken(5)
            } else if (98 == e.next || 114 == e.next) {
                if (98 == e.next && e.advance(),
                114 != e.next)
                    return;
                e.advance();
                let t = 0;
                for (; 35 == e.next; )
                    t++,
                    e.advance();
                if (34 != e.next)
                    return;
                e.advance();
                r: for (; ; ) {
                    if (e.next < 0)
                        return;
                    let O = 34 == e.next;
                    if (e.advance(),
                    O) {
                        for (let O = 0; O < t; O++) {
                            if (35 != e.next)
                                continue r;
                            e.advance()
                        }
                        e.acceptToken(4);
                        return
                    }
                }
            }
        }
        )
          , s = new n.Jq(e=>{
            124 == e.next && e.acceptToken(1, 1)
        }
        )
          , l = new n.Jq(e=>{
            60 == e.next ? e.acceptToken(2, 1) : 62 == e.next && e.acceptToken(3, 1)
        }
        )
          , c = (0,
        r.Gv)({
            "const macro_rules struct union enum type fn impl trait let static": r.pJ.definitionKeyword,
            "mod use crate": r.pJ.moduleKeyword,
            "pub unsafe async mut extern default move": r.pJ.modifier,
            "for if else loop while match continue break return await": r.pJ.controlKeyword,
            "as in ref": r.pJ.operatorKeyword,
            "where _ crate super dyn": r.pJ.keyword,
            self: r.pJ.self,
            String: r.pJ.string,
            Char: r.pJ.character,
            RawString: r.pJ.special(r.pJ.string),
            Boolean: r.pJ.bool,
            Identifier: r.pJ.variableName,
            "CallExpression/Identifier": r.pJ.function(r.pJ.variableName),
            BoundIdentifier: r.pJ.definition(r.pJ.variableName),
            "FunctionItem/BoundIdentifier": r.pJ.function(r.pJ.definition(r.pJ.variableName)),
            LoopLabel: r.pJ.labelName,
            FieldIdentifier: r.pJ.propertyName,
            "CallExpression/FieldExpression/FieldIdentifier": r.pJ.function(r.pJ.propertyName),
            Lifetime: r.pJ.special(r.pJ.variableName),
            ScopeIdentifier: r.pJ.namespace,
            TypeIdentifier: r.pJ.typeName,
            "MacroInvocation/Identifier MacroInvocation/ScopedIdentifier/Identifier": r.pJ.macroName,
            "MacroInvocation/TypeIdentifier MacroInvocation/ScopedIdentifier/TypeIdentifier": r.pJ.macroName,
            '"!"': r.pJ.macroName,
            UpdateOp: r.pJ.updateOperator,
            LineComment: r.pJ.lineComment,
            BlockComment: r.pJ.blockComment,
            Integer: r.pJ.integer,
            Float: r.pJ.float,
            ArithOp: r.pJ.arithmeticOperator,
            LogicOp: r.pJ.logicOperator,
            BitOp: r.pJ.bitwiseOperator,
            CompareOp: r.pJ.compareOperator,
            "=": r.pJ.definitionOperator,
            ".. ... => ->": r.pJ.punctuation,
            "( )": r.pJ.paren,
            "[ ]": r.pJ.squareBracket,
            "{ }": r.pJ.brace,
            ". DerefOp": r.pJ.derefOperator,
            "&": r.pJ.operator,
            ", ; ::": r.pJ.separator,
            "Attribute/...": r.pJ.meta
        })
          , u = {
            __proto__: null,
            self: 28,
            super: 32,
            crate: 34,
            impl: 46,
            true: 72,
            false: 72,
            pub: 88,
            in: 92,
            const: 96,
            unsafe: 104,
            async: 108,
            move: 110,
            if: 114,
            let: 118,
            ref: 142,
            mut: 144,
            _: 198,
            else: 200,
            match: 204,
            as: 248,
            return: 252,
            await: 262,
            break: 270,
            continue: 276,
            while: 312,
            loop: 316,
            for: 320,
            macro_rules: 327,
            mod: 334,
            extern: 342,
            struct: 346,
            where: 364,
            union: 379,
            enum: 382,
            type: 390,
            default: 395,
            fn: 396,
            trait: 412,
            use: 420,
            static: 438,
            dyn: 476
        }
          , p = n.WQ.deserialize({
            version: 14,
            states: "$2xQ]Q_OOP$wOWOOO&sQWO'#CnO)WQWO'#I`OOQP'#I`'#I`OOQQ'#Ie'#IeO)hO`O'#C}OOQR'#Ih'#IhO)sQWO'#IuOOQO'#Hk'#HkO)xQWO'#DpOOQR'#Iw'#IwO)xQWO'#DpO*ZQWO'#DpOOQO'#Iv'#IvO,SQWO'#J`O,ZQWO'#EiOOQV'#Hp'#HpO,cQYO'#F{OOQV'#El'#ElOOQV'#Em'#EmOOQV'#En'#EnO.YQ_O'#EkO0_Q_O'#EoO2gQWOOO4QQ_O'#FPO7hQWO'#J`OOQV'#FY'#FYO7{Q_O'#F^O:WQ_O'#FaOOQO'#F`'#F`O=sQ_O'#FcO=}Q_O'#FbO@VQWO'#FgOOQO'#J`'#J`OOQV'#Io'#IoOA]Q_O'#InOEPQWO'#InOOQV'#Fw'#FwOF[QWO'#JuOFcQWO'#F|OOQO'#IO'#IOOGrQWO'#GhOOQV'#Im'#ImOOQV'#Il'#IlOOQV'#Hj'#HjQGyQ_OOOKeQ_O'#DUOKlQYO'#CqOOQP'#I_'#I_OOQV'#Hg'#HgQ]Q_OOOLuQWO'#I`ONsQYO'#DXO!!eQWO'#JuO!!lQWO'#JuO!!vQ_O'#DfO!%]Q_O'#E}O!(sQ_O'#FWO!,ZQWO'#FZO!.^QXO'#FbO!.cQ_O'#EeO!!vQ_O'#FmO!0uQWO'#FoO!0zQWO'#FoO!1PQ^O'#FqO!1WQWO'#JuO!1_QWO'#FtO!1dQWO'#FxO!2WQWO'#JjO!2_QWO'#GOO!2_QWO'#G`O!2_QWO'#GbO!2_QWO'#GsOOQO'#Ju'#JuO!2dQWO'#GhO!2lQYO'#GpO!2_QWO'#GqO!3uQ^O'#GtO!3|QWO'#GuO!4hQWO'#HOP!4sOpO'#CcPOOO)CC})CC}OOOO'#Hi'#HiO!5OO`O,59iOOQV,59i,59iO!5ZQYO,5?aOOQO-E;i-E;iOOQO,5:[,5:[OOQP,59Z,59ZO)xQWO,5:[O)xQWO,5:[O!5oQWO,5?kO!5zQYO,5;qO!6PQYO,5;TO!6hQWO,59QO!7kQXO'#CnO!7xQXO'#I`O!9SQWO'#CoO,^QWO'#EiOOQV-E;n-E;nO!9eQWO'#FsOOQV,5<g,5<gO!9SQWO'#CoO!9jQWO'#CoO!9oQWO'#I`O! yQWO'#JuO!9yQWO'#J`O!:aQWO,5;VOOQO'#In'#InO!0zQWO'#DaO!<aQWO'#DcO!<iQWO,5;ZO.YQ_O,5;ZOOQO,5;[,5;[OOQV'#Er'#ErOOQV'#Es'#EsOOQV'#Et'#EtOOQV'#Eu'#EuOOQV'#Ev'#EvOOQV'#Ew'#EwOOQV'#Ex'#ExOOQV'#Ey'#EyO.YQ_O,5;]O.YQ_O,5;]O.YQ_O,5;]O.YQ_O,5;]O.YQ_O,5;]O.YQ_O,5;]O.YQ_O,5;]O.YQ_O,5;]O.YQ_O,5;]O.YQ_O,5;fO!=PQ_O,5;kO!@gQ_O'#FROOQO,5;l,5;lO!BrQWO,5;pO.YQ_O,5;wOKlQYO,5;gO!D_QWO,5;kO!EOQWO,5;xOOQO,5;x,5;xO!E]QWO,5;xO!EbQ_O,5;xO!GmQWO'#CfO!GrQWO,5<QO!G|Q_O,5<QOOQO,5;{,5;{O!JjQXO'#CnO!K{QXO'#I`OOQS'#Dk'#DkOOQP'#Ir'#IrO!LuQ[O'#IrO!L}QXO'#DjO!M{QWO'#DnO!M{QWO'#DnO!N^QWO'#DnOOQP'#It'#ItO!NcQXO'#ItO# ^Q^O'#DoO# hQWO'#DrO# pQ^O'#DzO# zQ^O'#D|O#!RQWO'#EPO#!^QXO'#FdOOQP'#ES'#ESOOQP'#Iq'#IqO#!lQXO'#JfOOQP'#Je'#JeO#!tQXO,5;}O#!yQXO'#I`O!1PQ^O'#DyO!1PQ^O'#FdO##sQWO,5;|OOQO,5;|,5;|OKlQYO,5;|O#$ZQWO'#FhOOQO,5<R,5<ROOQV,5=l,5=lO#&`QYO'#FzOOQV,5<h,5<hO#&gQWO,5<hO#&nQWO,5=SO!1WQWO,59rO!1dQWO,5<dO#&uQWO,5=iO!2_QWO,5<jO!2_QWO,5<zO!2_QWO,5<|O!2_QWO,5=QO#&|QWO,5=]O#'TQWO,5=SO!2_QWO,5=]O!3|QWO,5=aO#']QWO,5=jOOQO-E;|-E;|O#'hQWO'#JjOOQV-E;h-E;hO#(PQWO'#HRO#(WQ_O,59pOOQV,59p,59pO#(_QWO,59pO#(dQ_O,59pO#)SQZO'#CuO#+[QZO'#CvOOQV'#C|'#C|O#-wQWO'#HTO#.OQYO'#IdOOQO'#Hh'#HhO#.WQWO'#CwO#.WQWO'#CwO#.iQWO'#CwOOQR'#Ic'#IcO#.nQZO'#IbO#1TQYO'#HTO#1qQYO'#H[O#2}QYO'#H_OKlQYO'#H`OOQR'#Hb'#HbO#4ZQWO'#HeO#4`QYO,59]OOQR'#Ib'#IbO#5PQZO'#CtO#7[QYO'#HUO#7aQWO'#HTO#7fQYO'#CrO#8VQWO'#H]O#7fQYO'#HcOOQV-E;e-E;eO#8_QWO,59sOOQV,59{,59{O#8mQYO,5=[OOQV,59},59}O!0zQWO,59}O#;aQWO'#IpOOQO'#Ip'#IpO!1PQ^O'#DhO!0zQWO,5:QO#;hQWO,5;iO#<OQWO,5;rO#<fQ_O,5;rOOQO,5;u,5;uO#@PQ_O,5;|O#BXQWO,5;PO!0zQWO,5<XO#B`QWO,5<ZOOQV,5<Z,5<ZO#BkQWO,5<]O!1PQ^O'#EOOOQQ'#D_'#D_O#BsQWO,59rO#BxQWO,5<`O#B}QWO,5<dOOQO,5@U,5@UO#CVQWO,5=iOOQQ'#Cv'#CvO#C[QYO,5<jO#CmQYO,5<zO#CxQYO,5<|O#DTQYO,5=_O#DcQYO,5=SO#E{QYO'#GQO#FYQYO,5=[O#FmQWO,5=[O#F{QYO,5=[O#HUQYO,5=]O#HdQWO,5=`O!1PQ^O,5=`O#HrQWO'#CnO#ITQWO'#I`OOQO'#Jy'#JyO#IfQWO'#IQO#IkQWO'#GwOOQO'#Jz'#JzO#JSQWO'#GzOOQO'#G|'#G|OOQO'#Jx'#JxO#IkQWO'#GwO#JZQWO'#GxO#J`QWO,5=aO#JeQWO,5=jO!1dQWO,5=jO#'`QWO,5=jPOOO'#Hf'#HfP#JjOpO,58}POOO,58},58}OOOO-E;g-E;gOOQV1G/T1G/TO#JuQWO1G4{O#JzQ^O'#CyPOQQ'#Cx'#CxOOQO1G/v1G/vOOQP1G.u1G.uO)xQWO1G/vO#NTQ!fO'#ETO#N[Q!fO'#EaO#NcQ!fO'#EbO$ kQWO1G1yO$!_Q_O1G1yOOQP1G5V1G5VOOQO1G1]1G1]O$&RQWO1G0oO$&WQWO'#CiO!7xQXO'#I`O!6PQYO1G.lO!5oQWO,5<_O!9SQWO,59ZO!9SQWO,59ZO!5oQWO,5?kO$&iQWO1G0uO$(vQWO1G0wO$*nQWO1G0wO$+UQWO1G0wO$-YQWO1G0wO$-aQWO1G0wO$/bQWO1G0wO$/iQWO1G0wO$1jQWO1G0wO$1qQWO1G0wO$3YQWO1G1QO$5ZQWO1G1VO$5zQ_O'#JcO$8SQWO'#JcOOQO'#Jb'#JbO$8^QWO,5;mOOQO'#Dw'#DwOOQO1G1[1G1[OOQO1G1Y1G1YO$8cQWO1G1cOOQO1G1R1G1RO$8jQ_O'#HrO$:xQWO,5@OO.YQ_O1G1dOOQO1G1d1G1dO$;QQWO1G1dO$;_QWO1G1dO$;dQWO1G1eOOQO1G1l1G1lO$;lQWO1G1lOOQP,5?^,5?^O$;vQ^O,5:kO$<aQXO,5:YO!M{QWO,5:YO!M{QWO,5:YO!1PQ^O,5:gO$=bQWO'#IyOOQO'#Ix'#IxO$=pQWO,5:ZO# ^Q^O,5:ZO$=uQWO'#DsOOQP,5:^,5:^O$>WQWO,5:fOOQP,5:h,5:hO!1PQ^O,5:hO!1PQ^O,5:mO$>]QYO,5<OO$>gQ_O'#HsO$>tQXO,5@QOOQV1G1i1G1iOOQP,5:e,5:eO$>|QXO,5<OO$?[QWO1G1hO$?dQWO'#CnO$?oQWO'#FiOOQO'#Fi'#FiO$?wQWO'#FjO.YQ_O'#FkOOQO'#Ji'#JiO$?|QWO'#JhOOQO'#Jg'#JgO$@UQWO,5<SOOQQ'#Hv'#HvO$@ZQYO,5<fOOQV,5<f,5<fO$@bQYO,5<fOOQV1G2S1G2SO$@iQWO1G2nO$@qQWO1G/^O$@vQWO1G2OO#CVQWO1G3TO$AOQYO1G2UO#CmQYO1G2fO#CxQYO1G2hO$AaQYO1G2lO!2_QWO1G2wO#DcQYO1G2nO#HUQYO1G2wO$AiQWO1G2{O$AnQWO1G3UO!1dQWO1G3UO$AsQWO1G3UOOQV1G/[1G/[O$A{QWO1G/[O$BQQ_O1G/[O#7aQWO,5=oO$BXQYO,5?OO$BmQWO,5?OO$BrQZO'#IeOOQO-E;f-E;fOOQR,59c,59cO#.WQWO,59cO#.WQWO,59cOOQR,5=n,5=nO$E_QYO'#HVO$FwQZO,5=oO!5oQWO,5={O$IZQWO,5=oO$IbQZO,5=vO$KqQYO,5=vO$>]QYO,5=vO$LRQWO'#KRO$L^QWO,5=xOOQR,5=y,5=yO$LcQWO,5=zO$>]QYO,5>PO$>]QYO,5>POOQO1G.w1G.wO$>]QYO1G.wO$LnQYO,5=pO$LvQZO,59^OOQR,59^,59^O$>]QYO,5=wO% YQZO,5=}OOQR,5=},5=}O%#lQWO1G/_O!6PQYO1G/_O#FYQYO1G2vO%#qQWO1G2vO%$PQYO1G2vOOQV1G/i1G/iO%%YQWO,5:SO%%bQ_O1G/lO%*kQWO1G1^O%+RQWO1G1hOOQO1G1h1G1hO$>]QYO1G1hO%+iQ^O'#EgOOQV1G0k1G0kOOQV1G1s1G1sO!!vQ_O1G1sO!0zQWO1G1uO!1PQ^O1G1wO!.cQ_O1G1wOOQP,5:j,5:jO$>]QYO1G/^OOQO'#Cn'#CnO%+vQWO1G1zOOQV1G2O1G2OO%,OQWO'#CnO%,WQWO1G3TO%,]QWO1G3TO%,bQYO'#GQO%,sQWO'#G]O%-UQYO'#G_O%.hQYO'#GXOOQV1G2U1G2UO%/wQWO1G2UO%/|QWO1G2UO$ARQWO1G2UOOQV1G2f1G2fO%/wQWO1G2fO#CpQWO1G2fO%0UQWO'#GdOOQV1G2h1G2hO%0gQWO1G2hO#C{QWO1G2hO%0lQYO'#GSO$>]QYO1G2lO$AdQWO1G2lOOQV1G2y1G2yO%1xQWO1G2yO%3hQ^O'#GkO%3rQWO1G2nO#DfQWO1G2nO%4QQYO,5<lO%4[QYO,5<lO%4jQYO,5<lO%5XQYO,5<lOOQQ,5<l,5<lO!1WQWO'#JuO%5dQYO,5<lO%5lQWO1G2vOOQV1G2v1G2vO%5tQWO1G2vO$>]QYO1G2vOOQV1G2w1G2wO%5tQWO1G2wO%5yQWO1G2wO#HXQWO1G2wOOQV1G2z1G2zO.YQ_O1G2zO$>]QYO1G2zO%6RQWO1G2zOOQO,5>l,5>lOOQO-E<O-E<OOOQO,5=c,5=cOOQO,5=e,5=eOOQO,5=g,5=gOOQO,5=h,5=hO%6aQWO'#J|OOQO'#J{'#J{O%6iQWO,5=fO%6nQWO,5=cO!1dQWO,5=dOOQV1G2{1G2{O$>]QYO1G3UPOOO-E;d-E;dPOOO1G.i1G.iOOQO7+*g7+*gO%7VQYO'#IcO%7nQYO'#IfO%7yQYO'#IfO%8RQYO'#IfO%8^QYO,59eOOQO7+%b7+%bOOQP7+$a7+$aO%8cQ!fO'#JTOOQS'#EX'#EXOOQS'#EY'#EYOOQS'#EZ'#EZOOQS'#JT'#JTO%;UQWO'#EWOOQS'#E`'#E`OOQS'#JR'#JROOQS'#Hn'#HnO%;ZQ!fO,5:oOOQV,5:o,5:oOOQV'#JQ'#JQO%;bQ!fO,5:{OOQV,5:{,5:{O%;iQ!fO,5:|OOQV,5:|,5:|OOQV7+'e7+'eOOQV7+&Z7+&ZO%;pQ!fO,59TOOQO,59T,59TO%>YQWO7+$WO%>_QWO1G1yOOQV1G1y1G1yO!9SQWO1G.uO%>dQWO,5?}O%>nQ_O'#HqO%@|QWO,5?}OOQO1G1X1G1XOOQO7+&}7+&}O%AUQWO,5>^OOQO-E;p-E;pO%AcQWO7+'OO.YQ_O7+'OOOQO7+'O7+'OOOQO7+'P7+'PO%AjQWO7+'POOQO7+'W7+'WOOQP1G0V1G0VO%ArQXO1G/tO!M{QWO1G/tO%BsQXO1G0RO%CkQ^O'#HlO%C{QWO,5?eOOQP1G/u1G/uO%DWQWO1G/uO%D]QWO'#D_OOQO'#Dt'#DtO%DhQWO'#DtO%DmQWO'#I{OOQO'#Iz'#IzO%DuQWO,5:_O%DzQWO'#DtO%EPQWO'#DtOOQP1G0Q1G0QOOQP1G0S1G0SOOQP1G0X1G0XO%EXQXO1G1jO%EdQXO'#FeOOQP,5>_,5>_O!1PQ^O'#FeOOQP-E;q-E;qO$>]QYO1G1jOOQO7+'S7+'SOOQO,5<T,5<TO%ErQWO,5<UO.YQ_O,5<UO%EwQWO,5<VO%FRQWO'#HtO%FdQWO,5@SOOQO1G1n1G1nOOQQ-E;t-E;tOOQV1G2Q1G2QO%FlQYO1G2QO#DcQYO7+(YO$>]QYO7+$xOOQV7+'j7+'jO%FsQWO7+(oO%FxQWO7+(oOOQV7+'p7+'pO%/wQWO7+'pO%F}QWO7+'pO%GVQWO7+'pOOQV7+(Q7+(QO%/wQWO7+(QO#CpQWO7+(QOOQV7+(S7+(SO%0gQWO7+(SO#C{QWO7+(SO$>]QYO7+(WO%GeQWO7+(WO#HUQYO7+(cO%GjQWO7+(YO#DfQWO7+(YOOQV7+(c7+(cO%5tQWO7+(cO%5yQWO7+(cO#HXQWO7+(cOOQV7+(g7+(gO$>]QYO7+(pO%GxQWO7+(pO!1dQWO7+(pOOQV7+$v7+$vO%G}QWO7+$vO%HSQZO1G3ZO%JfQWO1G4jOOQO1G4j1G4jOOQR1G.}1G.}O#.WQWO1G.}O%JkQWO'#KQOOQO'#HW'#HWO%J|QWO'#HXO%KXQWO'#KQOOQO'#KP'#KPO%KaQWO,5=qO%KfQYO'#H[O%LrQWO'#GmO%L}QYO'#CtO%MXQWO'#GmO$>]QYO1G3ZOOQR1G3g1G3gO#7aQWO1G3ZO%M^QZO1G3bO$>]QYO1G3bO& mQYO'#IVO& }QWO,5@mOOQR1G3d1G3dOOQR1G3f1G3fO.YQ_O1G3fOOQR1G3k1G3kO&!VQYO7+$cO&!_QYO'#KOOOQQ'#J}'#J}O&!gQYO1G3[O&!lQZO1G3cOOQQ7+$y7+$yO&${QWO7+$yO&%QQWO7+(bOOQV7+(b7+(bO%5tQWO7+(bO$>]QYO7+(bO#FYQYO7+(bO&%YQWO7+(bO!.cQ_O1G/nO&%hQWO7+%WO$?[QWO7+'SO&%pQWO'#EhO&%{Q^O'#EhOOQU'#Ho'#HoO&%{Q^O,5;ROOQV,5;R,5;RO&&VQWO,5;RO&&[Q^O,5;RO!0zQWO7+'_OOQV7+'a7+'aO&&iQWO7+'cO&&qQWO7+'cO&&xQWO7+$xO&'TQ!fO7+'fO&'[Q!fO7+'fOOQV7+(o7+(oO!1dQWO7+(oO&'cQYO,5<lO&'nQYO,5<lO!1dQWO'#GWO&'|QWO'#JpO&([QWO'#G^O!BxQWO'#G^O&(aQWO'#JpOOQO'#Jo'#JoO&(iQWO,5<wOOQO'#DX'#DXO&(nQYO'#JrO&)}QWO'#JrO$>]QYO'#JrOOQO'#Jq'#JqO&*YQWO,5<yO&*_QWO'#GZO#D^QWO'#G[O&*gQWO'#G[O&*oQWO'#JmOOQO'#Jl'#JlO&*zQYO'#GTOOQO,5<s,5<sO&+PQWO7+'pO&+UQWO'#JtO&+dQWO'#GeO#BxQWO'#GeO&+uQWO'#JtOOQO'#Js'#JsO&+}QWO,5=OO$>]QYO'#GUO&,SQYO'#JkOOQQ,5<n,5<nO&,kQWO7+(WOOQV7+(e7+(eO&.TQ^O'#D|O&._QWO'#GlO&.gQ^O'#JwOOQO'#Gn'#GnO&.nQWO'#JwOOQO'#Jv'#JvO&.vQWO,5=VO&.{QWO'#I`O&/]Q^O'#GmO&/dQWO'#IqO&/rQWO'#GmOOQV7+(Y7+(YO&/zQWO7+(YO$>]QYO7+(YO&0SQYO'#HxO&0hQYO1G2WOOQQ1G2W1G2WOOQQ,5<m,5<mO$>]QYO,5<qO&0pQWO,5<rO&0uQWO7+(bO&1QQWO7+(fO&1XQWO7+(fOOQV7+(f7+(fO.YQ_O7+(fO$>]QYO7+(fO&1dQWO'#IRO&1nQWO,5@hOOQO1G3Q1G3QOOQO1G2}1G2}OOQO1G3P1G3POOQO1G3R1G3ROOQO1G3S1G3SOOQO1G3O1G3OO&1vQWO7+(pO$>]QYO,59fO&2RQ^O'#ISO&2xQYO,5?QOOQR1G/P1G/PO&3QQ!bO,5:pO&3VQ!fO,5:rOOQS-E;l-E;lOOQV1G0Z1G0ZOOQV1G0g1G0gOOQV1G0h1G0hO&3^QWO'#JTOOQO1G.o1G.oOOQV<<Gr<<GrO&3iQWO1G5iO$5zQ_O,5>]O&3qQWO,5>]OOQO-E;o-E;oOOQO<<Jj<<JjO&3{QWO<<JjOOQO<<Jk<<JkO&4SQXO7+%`O&5TQWO,5>WOOQO-E;j-E;jOOQP7+%a7+%aO!1PQ^O,5:`O&5cQWO'#HmO&5wQWO,5?gOOQP1G/y1G/yOOQO,5:`,5:`O&6PQWO,5:`O%DzQWO,5:`O$>]QYO,5<PO&6UQXO,5<PO&6dQXO7+'UO.YQ_O1G1pO&6oQWO1G1pOOQO,5>`,5>`OOQO-E;r-E;rOOQV7+'l7+'lO&6yQWO<<KtO#DfQWO<<KtO&7XQWO<<HdOOQV<<LZ<<LZO!1dQWO<<LZOOQV<<K[<<K[O&7dQWO<<K[O%/wQWO<<K[O&7iQWO<<K[OOQV<<Kl<<KlO%/wQWO<<KlOOQV<<Kn<<KnO%0gQWO<<KnO&7qQWO<<KrO$>]QYO<<KrOOQV<<K}<<K}O%5tQWO<<K}O%5yQWO<<K}O#HXQWO<<K}OOQV<<Kt<<KtO&7yQWO<<KtO$>]QYO<<KtO&8RQWO<<L[O$>]QYO<<L[O&8^QWO<<L[OOQV<<Hb<<HbO$>]QYO7+(uOOQO7+*U7+*UOOQR7+$i7+$iO&8cQWO,5@lOOQO'#Gm'#GmO&8kQWO'#GmO&8vQYO'#IUO&8cQWO,5@lOOQR1G3]1G3]O&:cQYO,5=vO&;rQYO,5=XO&;|QWO,5=XOOQO,5=X,5=XOOQR7+(u7+(uO&<RQZO7+(uO&>eQZO7+(|O&@tQWO,5>qOOQO-E<T-E<TO&APQWO7+)QOOQO<<G}<<G}O&AWQYO'#ITO&AcQYO,5@jOOQQ7+(v7+(vOOQQ<<He<<HeO$>]QYO<<K|OOQV<<K|<<K|O&0uQWO<<K|O&AkQWO<<K|O%5tQWO<<K|O&AsQWO7+%YOOQV<<Hr<<HrOOQO<<Jn<<JnO.YQ_O,5;SO&AzQWO,5;SO.YQ_O'#EjO&BPQWO,5;SOOQU-E;m-E;mO&B[QWO1G0mOOQV1G0m1G0mO&%{Q^O1G0mOOQV<<Jy<<JyO!.cQ_O<<J}OOQV<<J}<<J}OOQV<<Hd<<HdO.YQ_O<<HdO&BaQWO'#FvO&BfQWO<<KQO&BnQ!fO<<KQO&BuQWO<<KQO&BzQWO<<KQO&CSQ!fO<<KQOOQV<<KQ<<KQO&CZQWO<<LZO&C`QWO,5@[O$>]QYO,5<xO&ChQWO,5<xO&CmQWO'#H{O&C`QWO,5@[OOQV1G2c1G2cO&DRQWO,5@^O$>]QYO,5@^O&D^QYO'#H|O&EsQWO,5@^OOQO1G2e1G2eO%,nQWO,5<uOOQO,5<v,5<vO&E{QYO'#HzO&G_QWO,5@XO%,bQYO,5=pO$>]QYO,5<oO&GjQWO,5@`O.YQ_O,5=PO&GrQWO,5=PO&G}QWO,5=PO&H`QWO'#H}O&GjQWO,5@`OOQV1G2j1G2jO&HtQYO,5<pO%0lQYO,5>PO&I]QYO,5@VOOQV<<Kr<<KrO&ItQWO,5=XO&KfQ^O,5:hO&KmQWO,5=XO$>]QYO,5=WO&KuQWO,5@cO&K}QWO,5@cO&MvQ^O'#IPO&KuQWO,5@cOOQO1G2q1G2qO&NTQWO,5=WO&N]QWO<<KtO&NkQYO,5>oO&NvQYO,5>dO' UQYO,5>dOOQQ,5>d,5>dOOQQ-E;v-E;vOOQQ7+'r7+'rO' aQYO1G2]O$>]QYO1G2^OOQV<<LQ<<LQO.YQ_O<<LQO' lQWO<<LQO' sQWO<<LQOOQO,5>m,5>mOOQO-E<P-E<POOQV<<L[<<L[O.YQ_O<<L[O'!OQYO1G/QO'!ZQYO,5>nOOQQ,5>n,5>nO'!fQYO,5>nOOQQ-E<Q-E<QOOQS1G0[1G0[O'$tQ!fO1G0^O'%RQ!fO1G0^O'%YQWO1G3wOOQOAN@UAN@UO'%dQWO1G/zOOQO,5>X,5>XOOQO-E;k-E;kO!1PQ^O1G/zOOQO1G/z1G/zO'%oQWO1G/zO'%tQXO1G1kO$>]QYO1G1kO'&PQWO7+'[OOQVANA`ANA`O'&ZQWOANA`O$>]QYOANA`O'&cQWOANA`OOQVAN>OAN>OO.YQ_OAN>OO'&qQWOANAuOOQVAN@vAN@vO'&vQWOAN@vOOQVANAWANAWOOQVANAYANAYOOQVANA^ANA^O'&{QWOANA^OOQVANAiANAiO%5tQWOANAiO%5yQWOANAiO''TQWOANA`OOQVANAvANAvO.YQ_OANAvO''cQWOANAvO$>]QYOANAvOOQR<<La<<LaO''nQWO1G6WO%JkQWO,5>pOOQO'#HY'#HYO''vQWO'#HZOOQO,5>p,5>pOOQO-E<S-E<SO'(RQYO1G2sO'(]QWO1G2sOOQO1G2s1G2sO$>]QYO<<LaOOQR<<Ll<<LlOOQQ,5>o,5>oOOQQ-E<R-E<RO&0uQWOANAhOOQVANAhANAhO%5tQWOANAhO$>]QYOANAhO'(bQWO1G1rO')UQ^O1G0nO.YQ_O1G0nO'*zQWO,5;UO'+RQWO1G0nP'+WQWO'#ERP&%{Q^O'#HpOOQV7+&X7+&XO'+cQWO7+&XO&&qQWOAN@iO'+hQWOAN>OO!5oQWO,5<bOOQS,5>a,5>aO'+oQWOAN@lO'+tQWOAN@lOOQS-E;s-E;sOOQVAN@lAN@lO'+|QWOAN@lOOQVANAuANAuO',UQWO1G5vO',^QWO1G2dO$>]QYO1G2dO&'|QWO,5>gOOQO,5>g,5>gOOQO-E;y-E;yO',iQWO1G5xO',qQWO1G5xO&(nQYO,5>hO',|QWO,5>hO$>]QYO,5>hOOQO-E;z-E;zO'-XQWO'#JnOOQO1G2a1G2aOOQO,5>f,5>fOOQO-E;x-E;xO&'cQYO,5<lO'-gQYO1G2ZO'.RQWO1G5zO'.ZQWO1G2kO.YQ_O1G2kO'.eQWO1G2kO&+UQWO,5>iOOQO,5>i,5>iOOQO-E;{-E;{OOQQ,5>c,5>cOOQQ-E;u-E;uO'.pQWO1G2sO'/QQWO1G2rO'/]QWO1G5}O'/eQ^O,5>kOOQO'#Go'#GoOOQO,5>k,5>kO'/lQWO,5>kOOQO-E;}-E;}O$>]QYO1G2rO'/zQYO7+'xO'0VQWOANAlOOQVANAlANAlO.YQ_OANAlO'0^QWOANAvOOQS7+%x7+%xO'0eQWO7+%xO'0pQ!fO7+%xO'0}QWO7+%fO!1PQ^O7+%fO'1YQXO7+'VOOQVG26zG26zO'1eQWOG26zO'1sQWOG26zO$>]QYOG26zO'1{QWOG23jOOQVG27aG27aOOQVG26bG26bOOQVG26xG26xOOQVG27TG27TO%5tQWOG27TO'2SQWOG27bOOQVG27bG27bO.YQ_OG27bO'2ZQWOG27bOOQO1G4[1G4[OOQO7+(_7+(_OOQRANA{ANA{OOQVG27SG27SO%5tQWOG27SO&0uQWOG27SO'2fQ^O7+&YO'4PQWO7+'^O'4sQ^O7+&YO.YQ_O7+&YP.YQ_O,5;SP'6PQWO,5;SP'6UQWO,5;SOOQV<<Is<<IsOOQVG26TG26TOOQVG23jG23jOOQO1G1|1G1|OOQVG26WG26WO'6aQWOG26WP&B}QWO'#HuO'6fQWO7+(OOOQO1G4R1G4RO'6qQWO7++dO'6yQWO1G4SO$>]QYO1G4SO%,nQWO'#HyO'7UQWO,5@YO'7dQWO7+(VO.YQ_O7+(VOOQO1G4T1G4TOOQO1G4V1G4VO'7nQWO1G4VO'7|QWO7+(^OOQVG27WG27WO'8XQWOG27WOOQS<<Id<<IdO'8`QWO<<IdO'8kQWO<<IQOOQVLD,fLD,fO'8vQWOLD,fO'9OQWOLD,fOOQVLD)ULD)UOOQVLD,oLD,oOOQVLD,|LD,|O'9^QWOLD,|O.YQ_OLD,|OOQVLD,nLD,nO%5tQWOLD,nO'9eQ^O<<ItO';OQWO<<JxO';rQ^O<<ItP'=OQWO1G0nP'=oQ^O1G0nP.YQ_O1G0nP'?bQWO1G0nOOQVLD+rLD+rO'?gQWO7+)nOOQO,5>e,5>eOOQO-E;w-E;wO'?rQWO<<KqOOQVLD,rLD,rOOQSAN?OAN?OOOQV!$(!Q!$(!QO'?|QWO!$(!QOOQV!$(!h!$(!hO'@UQWO!$(!hOOQV!$(!Y!$(!YO'@]Q^OAN?`POQU7+&Y7+&YP'AvQWO7+&YP'BgQ^O7+&YP.YQ_O7+&YOOQV!)9El!)9ElOOQV!)9FS!)9FSPOQU<<It<<ItP'DYQWO<<ItP'DyQ^O<<ItPOQUAN?`AN?`O'FlQWO'#CnO'FsQXO'#CnO'GlQWO'#I`O'IRQXO'#I`O'IxQWO'#DpO'IxQWO'#DpO!.cQ_O'#EkO'JZQ_O'#EoO'JbQ_O'#FPO'MfQ_O'#FbO'MmQXO'#I`O'NdQ_O'#E}O( gQ_O'#FWO'IxQWO,5:[O'IxQWO,5:[O!.cQ_O,5;ZO!.cQ_O,5;]O!.cQ_O,5;]O!.cQ_O,5;]O!.cQ_O,5;]O!.cQ_O,5;]O!.cQ_O,5;]O!.cQ_O,5;]O!.cQ_O,5;]O!.cQ_O,5;]O!.cQ_O,5;fO(!jQ_O,5;kO(%nQWO,5;kO(&OQWO,5;|O(&VQYO'#CuO(&bQYO'#CvO(&mQWO'#CwO(&mQWO'#CwO('OQYO'#CtO('ZQWO,5;iO('bQWO,5;rO('iQ_O,5;rO((oQ_O,5;|O'IxQWO1G/vO((vQWO1G0uO(*eQWO1G0wO(*oQWO1G0wO(,dQWO1G0wO(,kQWO1G0wO(.]QWO1G0wO(.dQWO1G0wO(0UQWO1G0wO(0]QWO1G0wO(0dQWO1G1QO(0tQWO1G1VO(1UQYO'#IeO(&mQWO,59cO(&mQWO,59cO(1aQWO1G1^O(1hQWO1G1hO(&mQWO1G.}O(1oQWO'#DpO!.^QXO'#FbO(1tQWO,5;ZO(1{QWO'#Cw",
            stateData: "(2_~O&|OSUOS&}PQ~OPoOQ!QOSVOTVOZeO[lO^RO_RO`ROa!UOd[Og!nOsVOtVOuVOw!POyvO|!VO}mO!Q!dO!U!WO!W!XO!X!^O!Z!YO!]!pO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO$i!eO$m!fO$q!gO$s!hO%T!iO%V!jO%Z!kO%]!lO%^!mO%f!oO%j!qO%s!rO'Q`O'TQO'ZkO'^UO'gcO'qiO(QdO~O&}!sO~OZbX[bXdbXdlXobXwjX}bX!lbX!qbX!tbX#ObX#PbX#pbX'gbX'qbX'rbX'xbX'ybX'zbX'{bX'|bX'}bX(ObX(PbX(QbX(RbX(TbX~OybXXbX!ebX!PbXvbX#RbX~P$|OZ'SX['SXd'SXd'XXo'SXw'kXy'SX}'SX!l'SX!q'SX!t'SX#O'SX#P'SX#p'SX'g'SX'q'SX'r'SX'x'SX'y'SX'z'SX'{'SX'|'SX'}'SX(O'SX(P'SX(Q'SX(R'SX(T'SXv'SX~OX'SX!e'SX!P'SX#R'SX~P'ZOr!uO']!wO'_!uO~Od!xO~O^RO_RO`ROaRO'TQO~Od!}O~Od#PO[(SXo(SXy(SX}(SX!l(SX!q(SX!t(SX#O(SX#P(SX#p(SX'g(SX'q(SX'r(SX'x(SX'y(SX'z(SX'{(SX'|(SX'}(SX(O(SX(P(SX(Q(SX(R(SX(T(SXv(SX~OZ#OO~P*`OZ#RO[#QO~OQ!QO^#TO_#TO`#TOa#]Od#ZOg!nOyvO|!VO!Q!dO!U#^O!W!lO!]!pO$i!eO$m!fO$q!gO$s!hO%T!iO%V!jO%Z!kO%]!lO%^!mO%f!oO%j!qO%s!rO'Q#VO'T#SO~OPoOQ!QOSVOTVOZeO[lOd[OsVOtVOuVOw!PO}mO!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'ZkO'^UO'gcO'qiO(QdO~P)xOPoOQ!QOSVOTVOZeO[lOd[OsVOtVOuVOw!PO}mO!U#bO!W#cO!X!^O!Z!YO!j#eO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'ZkO'^UO'gcO'qiO(QdO~P)xO[#}Oo#xO}#zO!l#yO!q#jO!t#yO#O#xO#P#uO#p$OO'g#gO'q#yO'r#lO'x#hO'y#iO'z#iO'{#kO'|#nO'}#mO(O#|O(P#gO(Q#hO(R#fO(T#hO~OPoOQ!QOSVOTVOZeOd[OsVOtVOuVOw!PO!U#bO!W#cO!X!^O!Z!YO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'ZkO'^UO[#sXo#sXy#sX}#sX!l#sX!q#sX!t#sX#O#sX#P#sX#p#sX'g#sX'q#sX'r#sX'x#sX'y#sX'z#sX'{#sX'|#sX'}#sX(O#sX(P#sX(Q#sX(R#sX(T#sXX#sX!e#sX!P#sXv#sX#R#sX~P)xOX(SX!e(SX!P(SXw(SX#R(SX~P*`OPoOQ!QOSVOTVOX$ROZeO[lOd[OsVOtVOuVOw!PO}mO!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'Q$UO'ZkO'^UO'gcO'qiO(QdO~P)xOPoOQ!QOSVOTVOZeO[lOd[OsVOtVOuVOw!PO}mO!P$XO!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'Q$UO'ZkO'^UO'gcO'qiO(QdO~P)xOQ!QOSVOTVO[$gO^$pO_$ZO`9yOa9yOd$aOsVOtVOuVO}$eO!i$qO!l$lO!q$hO#V$lO'T$YO'^UO'g$[O~O!j$rOP(XP~P<cOPoOQ!QOSVOTVOZeO[lOd[OsVOtVOuVOw!PO}mO!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Q$uO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'ZkO'^UO'gcO'qiO(QdO~P)xOw$vO~Oo'bX#O'bX#P'bX#p'bX'r'bX'x'bX'y'bX'z'bX'{'bX'|'bX'}'bX(O'bX(P'bX(R'bX(T'bX~OP%tXQ%tXS%tXT%tXZ%tX[%tX^%tX_%tX`%tXa%tXd%tXg%tXs%tXt%tXu%tXw%tXy%tX|%tX}%tX!Q%tX!U%tX!W%tX!X%tX!Z%tX!]%tX!l%tX!q%tX!t%tX#Y%tX#r%tX#{%tX$O%tX$b%tX$d%tX$f%tX$i%tX$m%tX$q%tX$s%tX%T%tX%V%tX%Z%tX%]%tX%^%tX%f%tX%j%tX%s%tX&z%tX'Q%tX'T%tX'Z%tX'^%tX'g%tX'q%tX(Q%tXv%tX~P@[Oy$xO['bX}'bX!l'bX!q'bX!t'bX'g'bX'q'bX(Q'bXv'bX~P@[Ow$yO!Q(iX!U(iX!W(iX$q(iX%](iX%^(iX~Oy$zO~PEsO!Q$}O!U%UO!W!lO$m%OO$q%PO$s%QO%T%RO%V%SO%Z%TO%]!lO%^%VO%f%WO%j%XO%s%YO~O!Q!lO!U!lO!W!lO$q%[O%]!lO~O%^%VO~PGaOPoOQ!QOSVOTVOZeO[lO^RO_RO`ROa!UOd[Og!nOsVOtVOuVOw!POyvO|!VO}mO!Q!dO!U!WO!W!XO!X!^O!Z!YO!]!pO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO$i!eO$m!fO$q!gO$s!hO%T!iO%V!jO%Z!kO%]!lO%^!mO%f!oO%j!qO%s!rO'Q#VO'TQO'ZkO'^UO'gcO'qiO(QdO~Ov%`O~P]OQ!QOZ%rO[%qO^%vO_%cO`TOaTOd%jOg%yO}%pO!q%oO$f%wO%^%xO&W%{O'T%dO'Z%eO(Q%zO~PGaO!Q{X!U{X!W{X$m{X$q{X$s{X%T{X%V{X%Z{X%]{X%^{X%f{X%j{X%s{X~P'ZO!Q{X!U{X!W{X$m{X$q{X$s{X%T{X%V{X%Z{X%]{X%^{X%f{X%j{X%s{X~O}%}O'T{XQ{XZ{X[{X^{X_{X`{Xa{Xd{Xg{X!q{X$f{X&W{X'Z{X(Q{X~PMuOg&PO%f%WO!Q(iX!U(iX!W(iX$q(iX%](iX%^(iX~Ow!PO~P! yOw!PO!X&RO~PEvOPoOQ!QOSVOTVOZeO[lO^9qO_9qO`9qOa9qOd9tOsVOtVOuVOw!PO}mO!U#bO!W#cO!X:zO!Z!YO!]&UO!l9wO!q9vO!t9wO#Y!_O#r9zO#{9{O$O!]O$b!`O$d!bO$f!cO'T9oO'ZkO'^UO'gcO'q9wO(QdO~OPoOQ!QOSVOTVOZeO[lOd[OsVOtVOuVOw!PO}mO!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'ZkO'^UO'gcO'qiO(QdOo#qXy#qX#O#qX#P#qX#p#qX'r#qX'x#qX'y#qX'z#qX'{#qX'|#qX'}#qX(O#qX(P#qX(R#qX(T#qXX#qX!e#qX!P#qXv#qX#R#qX~P)xOPoOQ!QOSVOTVOZeO[lOd[OsVOtVOuVOw!PO}mO!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'ZkO'^UO'gcO'qiO(QdOo#zXy#zX#O#zX#P#zX#p#zX'r#zX'x#zX'y#zX'z#zX'{#zX'|#zX'}#zX(O#zX(P#zX(R#zX(T#zXX#zX!e#zX!P#zXv#zX#R#zX~P)xO'ZkO[#}Xo#}Xy#}X}#}X!l#}X!q#}X!t#}X#O#}X#P#}X#p#}X'g#}X'q#}X'r#}X'x#}X'y#}X'z#}X'{#}X'|#}X'}#}X(O#}X(P#}X(Q#}X(R#}X(T#}XX#}X!e#}X!P#}Xv#}Xw#}X#R#}X~OPoO~OPoOQ!QOSVOTVOZeO[lO^9qO_9qO`9qOa9qOd9tOsVOtVOuVOw!PO}mO!U#bO!W#cO!X:zO!Z!YO!l9wO!q9vO!t9wO#Y!_O#r9zO#{9{O$O!]O$b!`O$d!bO$f!cO'T9oO'ZkO'^UO'gcO'q9wO(QdO~O!S&_O~Ow!PO~O!j&bO~P<cO'T&cO~PEvOZ&eO~O'T&cO~O'^UOw(^Xy(^X!Q(^X!U(^X!W(^X$q(^X%](^X%^(^X~Oa&hO~P!1iO'T&iO~O_&nO'T&cO~OQ&oOZ&pO[%qO^%vO_%cO`TOaTOd%jOg%yO}%pO!q%oO$f%wO%^%xO&W%{O'T%dO'Z%eO(Q%zO~PGaO!j&uO~P<cO^&wO_&wO`&wOa&wOd'POw&|O'T&vO(Q&}O~O!i'UO!j'TO'T&cO~O&}!sO'O'VO'P'XO~Or!uO']'ZO'_!uO~OQ']O^'ia_'ia`'iaa'ia'T'ia~O['cOw'dO}'bO~OQ']O~OQ!QO^#TO_#TO`#TOa'kOd#ZO'T#SO~O['lO~OZbXdlXXbXobXPbX!SbX!ebX'rbX!PbX!ObXybX!ZbX#RbXvbX~O[bXwbX}bX~P!6mOZ'SXd'XXX'SX['SXo'SXw'SX}'SX#p'SXP'SX!S'SX!e'SX'r'SX!P'SX!O'SXy'SX!Z'SX#R'SXv'SX~O^#TO_#TO`#TOa'kO'T#SO~OZ'mO~Od'oO~OZ'SXd'XX~PMuOZ'pOX(SX!e(SX!P(SXw(SX#R(SX~P*`O[#}O}#zO(O#|O(R#fOo#_ay#_a!l#_a!q#_a!t#_a#O#_a#P#_a#p#_a'g#_a'q#_a'r#_a'x#_a'y#_a'z#_a'{#_a'|#_a'}#_a(P#_a(Q#_a(T#_aX#_a!e#_a!P#_av#_aw#_a#R#_a~Ow!PO!X&RO~Oy#caX#ca!e#ca!P#cav#ca#R#ca~P2gOPoOQ!QOSVOTVOZeOd[OsVOtVOuVOw!PO!U#bO!W#cO!X!^O!Z!YO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'ZkO'^UO[#sao#say#sa}#sa!l#sa!q#sa!t#sa#O#sa#P#sa#p#sa'g#sa'q#sa'r#sa'x#sa'y#sa'z#sa'{#sa'|#sa'}#sa(O#sa(P#sa(Q#sa(R#sa(T#saX#sa!e#sa!P#sav#sa#R#sa~P)xOPoOQ!QOSVOTVOZeO[lOd[OsVOtVOuVOw!PO}mO!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'Q#VO'ZkO'^UO'gcO'qiO(QdO!P(UP~P)xOu(SO#w(TO'T(RO~O[#}O}#zO!q#jO'g#gO'r#lO'x#hO'y#iO'z#iO'{#kO'|#nO'}#mO(O#|O(P#gO(Q#hO(R#fO(T#hO!l#sa!t#sa#p#sa'q#sa~Oo#xO#O#xO#P#uOy#saX#sa!e#sa!P#sav#sa#R#sa~P!B}Oy(YO!e(WOX(WX~P2gOX(ZO~OPoOQ!QOSVOTVOX(ZOZeO[lOd[OsVOtVOuVOw!PO}mO!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'Q$UO'ZkO'^UO'gcO'qiO(QdO~P)xOZ#RO~O!P(_O!e(WO~P2gOPoOQ!QOSVOTVOZeO[lOd[OsVOtVOuVOw!PO}mO!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'Q$UO'ZkO'^UO'gcO'qiO(QdO~P)xOZbXdlXwjX}jX!tbX'qbX~OP!RX!S!RX!e!RX'p!RX'r!RX!O!RXo!RXy!RX!P!RXX!RX!Z!RX#R!RXv!RX~P!JUOZ'SXd'XXw'kX}'kX!t'SX'q'SX~OP!`X!S!`X!e!`X'r!`X!O!`Xo!`Xy!`X!P!`XX!`X!Z!`X#R!`Xv!`X~P!KgOT(aOu(aO~O!t(bO'q(bOP!^X!S!^X!e!^X'r!^X!O!^Xo!^Xy!^X!P!^XX!^X!Z!^X#R!^Xv!^X~O^9rO_9rO`9yOa9yO'T9pO~Od(eO~O'p(fOP'hX!S'hX!e'hX'r'hX!O'hXo'hXy'hX!P'hXX'hX!Z'hX#R'hXv'hX~O!j&bO!P'lP~P<cOw(kO}(jO~O!j&bOX'lP~P<cO!j(oO~P<cOZ'pO!t(bO'q(bO~O!S(qO'r(pOP$WX!e$WX~O!e(rOP(YX~OP(tO~OP!aX!S!aX!e!aX'r!aX!O!aXo!aXy!aX!P!aXX!aX!Z!aX#R!aXv!aX~P!KgOy$UaX$Ua!e$Ua!P$Uav$Ua#R$Ua~P2gO!l(|O'Q#VO'T(xOv(ZP~OQ!QO^#TO_#TO`#TOa#]Od#ZOg!nOyvO|!VO!Q!dO!U#^O!W!lO!]!pO$i!eO$m!fO$q!gO$s!hO%T!iO%V!jO%Z!kO%]!lO%^!mO%f!oO%j!qO%s!rO'Q`O'T#SO~Ov)TO~P#$iOy)VO~PEsO%^)WO~PGaOa)ZO~P!1iO%f)`O~PEvO_)aO'T&cO~O!i)fO!j)eO'T&cO~O'^UO!Q(^X!U(^X!W(^X$q(^X%](^X%^(^X~Ov%uX~P2gOv)gO~PGyOv)gO~Ov)gO~P]OQiXQ'XXZiXd'XX}iX#piX(PiX~ORiXwiX$fiX$|iX[iXoiXyiX!liX!qiX!tiX#OiX#PiX'giX'qiX'riX'xiX'yiX'ziX'{iX'|iX'}iX(OiX(QiX(RiX(TiX!PiX!eiXXiXPiXviX!SiX#RiX~P#(kOQjXQlXRjXZjXdlX}jX#pjX(PjXwjX$fjX$|jX[jXojXyjX!ljX!qjX!tjX#OjX#PjX'gjX'qjX'rjX'xjX'yjX'zjX'{jX'|jX'}jX(OjX(QjX(RjX(TjX!PjX!ejXXjX!SjXPjXvjX#RjX~O%^)jO~PGaOQ']Od)kO~O^)mO_)mO`)mOa)mO'T%dO~Od)qO~OQ']OZ)uO})sOR'UX#p'UX(P'UXw'UX$f'UX$|'UX['UXo'UXy'UX!l'UX!q'UX!t'UX#O'UX#P'UX'g'UX'q'UX'r'UX'x'UX'y'UX'z'UX'{'UX'|'UX'}'UX(O'UX(Q'UX(R'UX(T'UX!P'UX!e'UXX'UXP'UXv'UX!S'UX#R'UX~OQ!QO^:bO_:^O`TOaTOd:aO%^)jO'T:_O~PGaOQ!QOZ%rO[%qO^%vO_%cO`TOaTOd%jOg%yO}%pO!j)yO!q%oO$f%wO%^%xO&W%{O'T%dO'Z%eO(Q%zO~PGaOQ!QOZ%rO[%qO^%vO_%cO`TOaTOd%jOg%yO}%pO!P)|O!q%oO$f%wO%^%xO&W%{O'T%dO'Z%eO(Q%zO~PGaO(P*OO~OR*QO#p*RO(P*PO~OQhXQ'XXZhXd'XX}hX(PhX~ORhX#phXwhX$fhX$|hX[hXohXyhX!lhX!qhX!thX#OhX#PhX'ghX'qhX'rhX'xhX'yhX'zhX'{hX'|hX'}hX(OhX(QhX(RhX(ThX!PhX!ehXXhXPhXvhX!ShX#RhX~P#4kOQ*SO~O})sO~OQ!QO^%vO_%cO`TOaTOd%jO$f%wO%^%xO'T%dO~PGaO!Q*VO!j*VO~O^*YO`*YOa*YO!O*ZO~OQ&oOZ*[O[%qO^%vO_%cO`TOaTOd%jOg%yO}%pO!q%oO$f%wO%^%xO&W%{O'T%dO'Z%eO(Q%zO~PGaO[#}Oo:YO}#zO!l:ZO!q#jO!t:ZO#O:YO#P:VO#p$OO'g#gO'q:ZO'r#lO'x#hO'y#iO'z#iO'{#kO'|#nO'}#mO(O#|O(P#gO(Q#hO(R#fO(T#hO~Ow'dX~P#9vOy#qaX#qa!e#qa!P#qav#qa#R#qa~P2gOy#zaX#za!e#za!P#zav#za#R#za~P2gOPoOQ!QOSVOTVOZeO[lOd[OsVOtVOuVOw!PO}mO!S&_O!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'ZkO'^UO'gcO'qiO(QdOo#zay#za#O#za#P#za#p#za'r#za'x#za'y#za'z#za'{#za'|#za'}#za(O#za(P#za(R#za(T#zaX#za!e#za!P#zav#za#R#za~P)xOPoOQ!QOSVOTVOZeO[lOd[OsVOtVOuVOw!PO}mO!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Q*eO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'ZkO'^UO'gcO'qiO(QdO~P)xOw*fO~P#9vO$b*iO$d*jO$f*kO~O!O*lO'r(pO~O!S*nO~O'T*oO~Ow$yOy*qO~O'T*rO~OQ*uOw*vOy*yO}*wO$|*xO~OQ*uOw*vO$|*xO~OQ*uOw+QO$|*xO~OQ*uOo+VOy+XO!S+UO~OQ*uO}+ZO~OQ!QOZ%rO[%qO^%vO`TOaTOd%jOg%yO}%pO!U!lO!W!lO!q%oO$f%wO$q%[O%]!lO%^%xO&W%{O'T%dO'Z%eO(Q%zO~OR+bO_+^O!Q+cO~P#DkO_%cO!Q!lOw&UX$|&UX(P&UX~P#DkOw$yO$f+hO$|*xO(P*PO~OQ!QOZ*[O[%qO^%vO_%cO`TOaTOd%jOg%yO}%pO!q%oO$f%wO%^%xO&W%{O'T%dO'Z%eO(Q%zO~PGaOQ*uOw$yO!S+UO$|*xO~Oo+nOy+mO!S+oO'r(pO~OdlXy!RX#pbXv!RX!e!RX~Od'XXy(mX#p'SXv(mX!e(mX~Od+qO~O^#TO_#TO`#TOa'kOw&|O'T&vO(Q+vO~Ov(oP~P!3|O#p+{O~Oy+|O~O!S+}O~O&}!sO'O'VO'P,PO~Od,QO~OSVOTVO_%cOsVOtVOuVOw!PO!Q!lO'^UO~P#DkOS,^OT,^OZ,^O['cO_,YOd,^Oo,^Os,^Ou,^Ow'dOy,^O}'bO!S,^O!e,^O!l,^O!q,[O!t,^O!y,^O#O,^O#P,^O#Q,^O#R,^O'Q,^O'Z%eO'^UO'g,ZO'r,[O'v,_O'x,ZO'y,[O'z,[O'{,[O'|,]O'},]O(O,^O(P,`O(Q,`O(R,aO~O!P,dO~P#KkOX,gO~P#KkOv,iO~P#KkOo'tX#O'tX#P'tX#p'tX'r'tX'x'tX'y'tX'z'tX'{'tX'|'tX'}'tX(O'tX(P'tX(R'tX(T'tX~Oy,jO['tX}'tX!l'tX!q'tX!t'tX'g'tX'q'tX(Q'tXv'tX~P#NjOP$giQ$giS$giT$giZ$gi[$gi^$gi_$gi`$gia$gid$gig$gis$git$giu$giw$giy$gi|$gi}$gi!Q$gi!U$gi!W$gi!X$gi!Z$gi!]$gi!l$gi!q$gi!t$gi#Y$gi#r$gi#{$gi$O$gi$b$gi$d$gi$f$gi$i$gi$m$gi$q$gi$s$gi%T$gi%V$gi%Z$gi%]$gi%^$gi%f$gi%j$gi%s$gi&z$gi'Q$gi'T$gi'Z$gi'^$gi'g$gi'q$gi(Q$giv$gi~P#NjOX,kO~O['cOo,lOw'dO}'bOX]X~Oy#ciX#ci!e#ci!P#civ#ci#R#ci~P2gO[#}O}#zO'x#hO(O#|O(Q#hO(R#fO(T#hOo#eiy#ei!l#ei!q#ei!t#ei#O#ei#P#ei#p#ei'q#ei'r#ei'y#ei'z#ei'{#ei'|#ei'}#eiX#ei!e#ei!P#eiv#ei#R#ei~O'g#ei(P#ei~P$'PO[#}O}#zO(O#|O(R#fOo#eiy#ei!l#ei!q#ei!t#ei#O#ei#P#ei#p#ei'q#ei'r#ei'y#ei'z#ei'{#ei'|#ei'}#eiX#ei!e#ei!P#eiv#ei#R#ei~O'g#ei'x#ei(P#ei(Q#ei(T#eiw#ei~P$)QO'g#gO(P#gO~P$'PO[#}O}#zO'g#gO'x#hO'y#iO'z#iO(O#|O(P#gO(Q#hO(R#fO(T#hOo#eiy#ei!l#ei!t#ei#O#ei#P#ei#p#ei'q#ei'r#ei'{#ei'|#ei'}#eiX#ei!e#ei!P#eiv#ei#R#ei~O!q#ei~P$+`O!q#jO~P$+`O[#}O}#zO!q#jO'g#gO'x#hO'y#iO'z#iO'{#kO(O#|O(P#gO(Q#hO(R#fO(T#hOo#eiy#ei!l#ei!t#ei#O#ei#P#ei#p#ei'q#ei'|#ei'}#eiX#ei!e#ei!P#eiv#ei#R#ei~O'r#ei~P$-hO'r#lO~P$-hO[#}O}#zO!q#jO#P#uO'g#gO'r#lO'x#hO'y#iO'z#iO'{#kO(O#|O(P#gO(Q#hO(R#fO(T#hOo#eiy#ei!l#ei!t#ei#O#ei#p#ei'q#ei'|#eiX#ei!e#ei!P#eiv#ei#R#ei~O'}#ei~P$/pO'}#mO~P$/pO[#}O}#zO!q#jO'g#gO'r#lO'x#hO'y#iO'z#iO'{#kO'|#nO'}#mO(O#|O(P#gO(Q#hO(R#fO(T#hO!l#ni!t#ni#p#ni'q#ni~Oo#xO#O#xO#P#uOy#niX#ni!e#ni!P#niv#ni#R#ni~P$1xO[#}O}#zO!q#jO'g#gO'r#lO'x#hO'y#iO'z#iO'{#kO'|#nO'}#mO(O#|O(P#gO(Q#hO(R#fO(T#hO!l#si!t#si#p#si'q#si~Oo#xO#O#xO#P#uOy#siX#si!e#si!P#siv#si#R#si~P$3yOPoOQ!QOSVOTVOZeO[lOd[OsVOtVOuVOw!PO}mO!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'Q#VO'ZkO'^UO'gcO'qiO(QdO~P)xO!e,sO!P(VX~P2gO!P,uO~OX,vO~P2gOPoOQ!QOSVOTVOZeO[lOd[OsVOtVOuVOw!PO}mO!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'ZkO'^UO'gcO'qiO(QdOX&fX!e&fX!P&fX~P)xO!e(WOX(Wa~Oy,zO!e(WOX(WX~P2gOX,{O~O!P,|O!e(WO~O!P-OO!e(WO~P2gOSVOTVOsVOtVOuVO'^UO'g$[O~P!6POP!baZca!S!ba!e!ba!tca'qca'r!ba!O!bao!bay!ba!P!baX!ba!Z!ba#R!bav!ba~O!e-TO'r(pO!P'mXX'mX~O!P-VO~O!i-`O!j-_O!l-[O'T-XOv'nP~OX-aO~O_%cO!Q!lO~P#DkO!j-gOP&gX!e&gX~P<cO!e(rOP(Ya~O!S-iO'r(pOP$Wa!e$Wa~Ow!PO(P*PO~OvbX!S!kX!ebX~O'Q#VO'T(xO~O!S-mO~O!e-oOv([X~Ov-qO~Ov-sO~P,cOv-sO~P#$iO_-uO'T&cO~O!S-vO~Ow$yOy-wO~OQ*uOw*vOy-zO}*wO$|*xO~OQ*uOo.UO~Oy._O~O!S.`O~O!j.bO'T&cO~Ov.cO~Ov.cO~PGyOQ']O^'Wa_'Wa`'Waa'Wa'T'Wa~Od.gO~OQ'XXQ'kXR'kXZ'kXd'XX}'kX#p'kX(P'kXw'kX$f'kX$|'kX['kXo'kXy'kX!l'kX!q'kX!t'kX#O'kX#P'kX'g'kX'q'kX'r'kX'x'kX'y'kX'z'kX'{'kX'|'kX'}'kX(O'kX(Q'kX(R'kX(T'kX!P'kX!e'kXX'kXP'kXv'kX!S'kX#R'kX~OQ!QOZ%rO[%qO^.rO_%cO`TOaTOd%jOg%yO}%pO!j.sO!q.pO!t.kO#V.mO$f%wO%^%xO&W%{O'Q#VO'T%dO'Z%eO(Q%zO!P(sP~PGaO#Q.tOR%wa#p%wa(P%waw%wa$f%wa$|%wa[%wao%way%wa}%wa!l%wa!q%wa!t%wa#O%wa#P%wa'g%wa'q%wa'r%wa'x%wa'y%wa'z%wa'{%wa'|%wa'}%wa(O%wa(Q%wa(R%wa(T%wa!P%wa!e%waX%waP%wav%wa!S%wa#R%wa~O%^.vO~PGaO(P*POR&Oa#p&Oaw&Oa$f&Oa$|&Oa[&Oao&Oay&Oa}&Oa!l&Oa!q&Oa!t&Oa#O&Oa#P&Oa'g&Oa'q&Oa'r&Oa'x&Oa'y&Oa'z&Oa'{&Oa'|&Oa'}&Oa(O&Oa(Q&Oa(R&Oa(T&Oa!P&Oa!e&OaX&OaP&Oav&Oa!S&Oa#R&Oa~O_%cO!Q!lO!j.xO(P*OO~P#DkO!e.yO(P*PO!P(uX~O!P.{O~OX.|Oy.}O(P*PO~O'Z%eOR(qP~OQ']O})sORfa#pfa(Pfawfa$ffa$|fa[faofayfa!lfa!qfa!tfa#Ofa#Pfa'gfa'qfa'rfa'xfa'yfa'zfa'{fa'|fa'}fa(Ofa(Qfa(Rfa(Tfa!Pfa!efaXfaPfavfa!Sfa#Rfa~OQ']O})sOR&Va#p&Va(P&Vaw&Va$f&Va$|&Va[&Vao&Vay&Va!l&Va!q&Va!t&Va#O&Va#P&Va'g&Va'q&Va'r&Va'x&Va'y&Va'z&Va'{&Va'|&Va'}&Va(O&Va(Q&Va(R&Va(T&Va!P&Va!e&VaX&VaP&Vav&Va!S&Va#R&Va~O!P/UO~Ow$yO$f/ZO$|*xO(P*PO~OQ!QOZ/[O[%qO^%vO_%cO`TOaTOd%jOg%yO}%pO!q%oO$f%wO%^%xO&W%{O'T%dO'Z%eO(Q%zO~PGaOo/^O'r(pO~O#W/_OP!YiQ!YiS!YiT!YiZ!Yi[!Yi^!Yi_!Yi`!Yia!Yid!Yig!Yio!Yis!Yit!Yiu!Yiw!Yiy!Yi|!Yi}!Yi!Q!Yi!U!Yi!W!Yi!X!Yi!Z!Yi!]!Yi!l!Yi!q!Yi!t!Yi#O!Yi#P!Yi#Y!Yi#p!Yi#r!Yi#{!Yi$O!Yi$b!Yi$d!Yi$f!Yi$i!Yi$m!Yi$q!Yi$s!Yi%T!Yi%V!Yi%Z!Yi%]!Yi%^!Yi%f!Yi%j!Yi%s!Yi&z!Yi'Q!Yi'T!Yi'Z!Yi'^!Yi'g!Yi'q!Yi'r!Yi'x!Yi'y!Yi'z!Yi'{!Yi'|!Yi'}!Yi(O!Yi(P!Yi(Q!Yi(R!Yi(T!YiX!Yi!e!Yi!P!Yiv!Yi!i!Yi!j!Yi#V!Yi#R!Yi~Oy#ziX#zi!e#zi!P#ziv#zi#R#zi~P2gOy$UiX$Ui!e$Ui!P$Uiv$Ui#R$Ui~P2gOv/eO!j&bO'Q`O~P<cOw/nO}/mO~Oy!RX#pbX~Oy/oO~O#p/pO~OR+bO_+dO!Q/sO'T&iO'Z%eO~Oa/zO|!VO'Q#VO'T(ROv(cP~OQ!QOZ%rO[%qO^%vO_%cO`TOa/zOd%jOg%yO|!VO}%pO!q%oO$f%wO%^%xO&W%{O'Q#VO'T%dO'Z%eO(Q%zO!P(eP~PGaOQ!QOZ%rO[%qO^%vO_%cO`TOaTOd%jOg%yO}%pO!q%oO$f0VO%^%xO&W%{O'T%dO'Z%eO(Q%zOw(`Py(`P~PGaOw*vO~Oy-zO$|*xO~Oa/zO|!VO'Q#VO'T*oOv(gP~Ow+QO~OQ!QOZ%rO[%qO^%vO_%cO`TOaTOd%jOg%yO}%pO!q%oO$f0VO%^%xO&W%{O'T%dO'Z%eO(Q%zO(R0`O~PGaOy0dO~OQ!QOSVOTVO[$gO^0lO_$ZO`9yOa9yOd$aOsVOtVOuVO}$eO!i$qO!j0mO!l$lO!q0eO!t0hO'Q#VO'T$YO'Z%eO'^UO'g$[O~O#V0nO!P(jP~P%1}Ow!POy0pO#Q0rO$|*xO~OR0uO!e0sO~P#(kOR0uO!S+UO!e0sO(P*OO~OR0uOo0wO!S+UO!e0sOQ'VXZ'VX}'VX#p'VX(P'VX~OR0uOo0wO!e0sO~OR0uO!e0sO~O$f/ZO(P*PO~Ow$yO~Ow$yO$|*xO~Oo0}Oy0|O!S1OO'r(pO~O!e1POv(pX~Ov1RO~O^#TO_#TO`#TOa'kOw&|O'T&vO(Q1VO~Oo1YOQ'VXR'VXZ'VX}'VX!e'VX(P'VX~O!e1ZO(P*POR'YX~O!e1ZOR'YX~O!e1ZO(P*OOR'YX~OR1]O~O!S1^OS'wXT'wXZ'wX['wX_'wXd'wXo'wXs'wXu'wXw'wXy'wX}'wX!P'wX!e'wX!l'wX!q'wX!t'wX!y'wX#O'wX#P'wX#Q'wX#R'wX'Q'wX'Z'wX'^'wX'g'wX'r'wX'v'wX'x'wX'y'wX'z'wX'{'wX'|'wX'}'wX(O'wX(P'wX(Q'wX(R'wXX'wXv'wX~O}1_O~O!P1aO~P#KkOX1bO~P#KkOv1cO~P#KkOS,^OT,^OZ,^O['cO_1dOd,^Oo,^Os,^Ou,^Ow'dOy,^O}'bO!S,^O!e,^O!l,^O!q,[O!t,^O!y,^O#O,^O#P,^O#Q,^O#R,^O'Q,^O'Z%eO'^UO'g,ZO'r,[O'v,_O'x,ZO'y,[O'z,[O'{,[O'|,]O'},]O(O,^O(P,`O(Q,`O(R,aO~OX1fO~Oy,jO~O!e,sO!P(Va~P2gOPoOQ!QOSVOTVOZeO[lOd[OsVOtVOuVOw!PO}mO!U#bO!W#cO!X!^O!Z!YO!liO!qgO!tiO#Y!_O#r!ZO#{![O$O!]O$b!`O$d!bO$f!cO'Q#VO'ZkO'^UO'gcO'qiO(QdO!P&eX!e&eX~P)xO!e,sO!P(Va~OX&fa!e&fa!P&fa~P2gOX1kO~P2gO!P1mO!e(WO~OP!biZci!S!bi!e!bi!tci'qci'r!bi!O!bio!biy!bi!P!biX!bi!Z!bi#R!biv!bi~O'r(pOP!oi!S!oi!e!oi!O!oio!oiy!oi!P!oiX!oi!Z!oi#R!oiv!oi~O!j&bO!P&`X!e&`XX&`X~P<cO!e-TO!P'maX'ma~O!P1qO~Ov!RX!S!kX!e!RX~O!S1rO~O!e1sOv'oX~Ov1uO~O'T-XO~O!j1xO'T-XO~O(P*POP$Wi!e$Wi~O!S1yO'r(pOP$XX!e$XX~O!S1|O~Ov$_a!e$_a~P2gO!l(|O'Q#VO'T(xOv&hX!e&hX~O!e-oOv([a~Ov2QO~P,cOy2UO~O#p2VO~Oy2WO$|*xO~Ow*vOy2WO}*wO$|*xO~Oo2aO~Ow!POy2fO#Q2hO$|*xO~O!S2jO~Ov2lO~O#Q2mOR%wi#p%wi(P%wiw%wi$f%wi$|%wi[%wio%wiy%wi}%wi!l%wi!q%wi!t%wi#O%wi#P%wi'g%wi'q%wi'r%wi'x%wi'y%wi'z%wi'{%wi'|%wi'}%wi(O%wi(Q%wi(R%wi(T%wi!P%wi!e%wiX%wiP%wiv%wi!S%wi#R%wi~Od2nO~O^2qO!j.sO!q2rO'Q#VO'Z%eO~O(P*PO!P%{X!e%{X~O!e2sO!P(tX~O!P2uO~OQ!QOZ%rO[%qO^2wO_%cO`TOaTOd%jOg%yO}%pO!j2xO!q%oO$f%wO%^%xO&W%{O'T%dO'Z%eO(Q%zO~PGaO^2yO!j2xO(P*OO~O!P%aX!e%aX~P#4kO^2yO~O(P*POR&Oi#p&Oiw&Oi$f&Oi$|&Oi[&Oio&Oiy&Oi}&Oi!l&Oi!q&Oi!t&Oi#O&Oi#P&Oi'g&Oi'q&Oi'r&Oi'x&Oi'y&Oi'z&Oi'{&Oi'|&Oi'}&Oi(O&Oi(Q&Oi(R&Oi(T&Oi!P&Oi!e&OiX&OiP&Oiv&Oi!S&Oi#R&Oi~O_%cO!Q!lO!P&yX!e&yX~P#DkO!e.yO!P(ua~OR3QO(P*PO~O!e3ROR(rX~OR3TO~O(P*POR&Pi#p&Piw&Pi$f&Pi$|&Pi[&Pio&Piy&Pi}&Pi!l&Pi!q&Pi!t&Pi#O&Pi#P&Pi'g&Pi'q&Pi'r&Pi'x&Pi'y&Pi'z&Pi'{&Pi'|&Pi'}&Pi(O&Pi(Q&Pi(R&Pi(T&Pi!P&Pi!e&PiX&PiP&Piv&Pi!S&Pi#R&Pi~O!P3UO~O$f3VO(P*PO~Ow$yO$f3VO$|*xO(P*PO~Ow!PO!Z!YO~O!Z3aO#R3_O'r(pO~O!j&bO'Q#VO~P<cOv3eO~Ov3eO!j&bO'Q`O~P<cO!O3hO'r(pO~Ow!PO~P#9vOo3kOy3jO(P*PO~O!P3oO~P%;pOv3rO~P%;pOR0uO!S+UO!e0sO~OR0uOo0wO!S+UO!e0sO~Oa/zO|!VO'Q#VO'T(RO~O!S3uO~O!e3wOv(dX~Ov3yO~OQ!QOZ%rO[%qO^%vO_%cO`TOa/zOd%jOg%yO|!VO}%pO!q%oO$f%wO%^%xO&W%{O'Q#VO'T%dO'Z%eO(Q%zO~PGaO!e3|O(P*PO!P(fX~O!P4OO~O!S4PO(P*OO~O!S+UO(P*PO~O!e4ROw(aXy(aX~OQ4TO~Oy2WO~Oa/zO|!VO'Q#VO'T*oO~Oo4WOw*vO}*wOv%XX!e%XX~O!e4ZOv(hX~Ov4]O~O(P4_Oy(_Xw(_X$|(_XR(_Xo(_X!e(_X~Oy4aO(P*PO~OQ!QOSVOTVO[$gO^4bO_$ZO`9yOa9yOd$aOsVOtVOuVO}$eO!i$qO!l$lO!q$hO#V$lO'T$YO'^UO'g$[O~O!j4cO'Z%eO~P&,sO!S4eO'r(pO~O#V4gO~P%1}O!e4hO!P(kX~O!P4jO~O!P%aX!S!aX!e%aX'r!aX~P!KgO!j&bO~P&,sO!e4hO!P(kX!S'eX'r'eX~O^2yO!j2xO~Ow!POy2fO~O_4pO!Q/sO'T&iO'Z%eOR&lX!e&lX~OR4rO!e0sO~O!S4tO~Ow$yO$|*xO(P*PO~Oy4uO~P2gOo4vOy4uO(P*PO~Ov&uX!e&uX~P!3|O!e1POv(pa~Oo4|Oy4{O(P*PO~OSVOTVO_%cOsVOtVOuVOw!PO!Q!lO'^UOR&vX!e&vX~P#DkO!e1ZOR'Ya~O!y5SO~O!P5TO~P#KkO!S1^OX'wX#R'wX~O!e,sO!P(Vi~O!P&ea!e&ea~P2gOX5WO~P2gOP!bqZcq!S!bq!e!bq!tcq'qcq'r!bq!O!bqo!bqy!bq!P!bqX!bq!Z!bq#R!bqv!bq~O'r(pO!P&`a!e&`aX&`a~O!i-`O!j-_O!l5YO'T-XOv&aX!e&aX~O!e1sOv'oa~O!S5[O~O!S5`O'r(pOP$Xa!e$Xa~O(P*POP$Wq!e$Wq~Ov$^i!e$^i~P2gOw!POy5bO#Q5dO$|*xO~Oo5gOy5fO(P*PO~Oy5iO~Oy5iO$|*xO~Oy5mO(P*PO~Ow!POy5bO~Oo5tOy5sO(P*PO~O!S5vO~O!e2sO!P(ta~O^2yO!j2xO'Z%eO~OQ!QOZ%rO[%qO^.rO_%cO`TOaTOd%jOg%yO}%pO!j.sO!q.pO!t5zO#V5|O$f%wO%^%xO&W%{O'Q#VO'T%dO'Z%eO(Q%zO!P&xX!e&xX~PGaOQ!QOZ%rO[%qO^6OO_%cO`TOaTOd%jOg%yO}%pO!j6PO!q%oO$f%wO%^%xO&W%{O'T%dO'Z%eO(P*OO(Q%zO~PGaO!P%aa!e%aa~P#4kO^6QO~O#Q6ROR%wq#p%wq(P%wqw%wq$f%wq$|%wq[%wqo%wqy%wq}%wq!l%wq!q%wq!t%wq#O%wq#P%wq'g%wq'q%wq'r%wq'x%wq'y%wq'z%wq'{%wq'|%wq'}%wq(O%wq(Q%wq(R%wq(T%wq!P%wq!e%wqX%wqP%wqv%wq!S%wq#R%wq~O(P*POR&Oq#p&Oqw&Oq$f&Oq$|&Oq[&Oqo&Oqy&Oq}&Oq!l&Oq!q&Oq!t&Oq#O&Oq#P&Oq'g&Oq'q&Oq'r&Oq'x&Oq'y&Oq'z&Oq'{&Oq'|&Oq'}&Oq(O&Oq(Q&Oq(R&Oq(T&Oq!P&Oq!e&OqX&OqP&Oqv&Oq!S&Oq#R&Oq~O(P*PO!P&ya!e&ya~OX6SO~P2gO'Z%eOR&wX!e&wX~O!e3ROR(ra~O$f6YO(P*PO~Ow![q~P#9vO#R6]O~O!Z3aO#R6]O'r(pO~Ov6bO~O#R6fO~Oy6gO!P6hO~O!P6hO~P%;pOy6kO~Ov6kOy6gO~Ov6kO~P%;pOy6mO~O!e3wOv(da~O!S6pO~Oa/zO|!VO'Q#VO'T(ROv&oX!e&oX~O!e3|O(P*PO!P(fa~OQ!QOZ%rO[%qO^%vO_%cO`TOa/zOd%jOg%yO|!VO}%pO!q%oO$f%wO%^%xO&W%{O'Q#VO'T%dO'Z%eO(Q%zO!P&pX!e&pX~PGaO!e3|O!P(fa~OQ!QOZ%rO[%qO^%vO_%cO`TOaTOd%jOg%yO}%pO!q%oO$f0VO%^%xO&W%{O'T%dO'Z%eO(Q%zOw&nX!e&nXy&nX~PGaO!e4ROw(aay(aa~O!e4ZOv(ha~Oo7SOv%Xa!e%Xa~Oo7SOw*vO}*wOv%Xa!e%Xa~Oa/zO|!VO'Q#VO'T*oOv&qX!e&qX~O(P*POy$xaw$xa$|$xaR$xao$xa!e$xa~O(P4_Oy(_aw(_a$|(_aR(_ao(_a!e(_a~O!P%aa!S!aX!e%aa'r!aX~P!KgOQ!QOSVOTVO[$gO_$ZO`9yOa9yOd$aOsVOtVOuVO}$eO!i$qO!j&bO!l$lO!q$hO#V$lO'T$YO'^UO'g$[O~O^7ZO~P&JUO^6QO!j6PO~O!e4hO!P(ka~O!e4hO!P(ka!S'eX'r'eX~OQ!QOSVOTVO[$gO^0lO_$ZO`9yOa9yOd$aOsVOtVOuVO}$eO!i$qO!j0mO!l$lO!q0eO!t7_O'Q#VO'T$YO'Z%eO'^UO'g$[O~O#V7aO!P&sX!e&sX~P&L]O!S7cO'r(pO~Ow!POy5bO$|*xO(P*PO~O!S+UOR&la!e&la~Oo0wO!S+UOR&la!e&la~Oo0wOR&la!e&la~O(P*POR$yi!e$yi~Oy7fO~P2gOo7gOy7fO(P*PO~O(P*PORni!eni~O(P*POR&va!e&va~O(P*OOR&va!e&va~OS,^OT,^OZ,^O_,^Od,^Oo,^Os,^Ou,^Oy,^O!S,^O!e,^O!l,^O!q,[O!t,^O!y,^O#O,^O#P,^O#Q,^O#R,^O'Q,^O'Z%eO'^UO'g,ZO'r,[O'x,ZO'y,[O'z,[O'{,[O'|,]O'},]O(O,^O~O(P7iO(Q7iO(R7iO~P'!qO!P7kO~P#KkO!P&ei!e&ei~P2gO'r(pOv!hi!e!hi~O!S7mO~O(P*POP$Xi!e$Xi~Ov$^q!e$^q~P2gOw!POy7oO~Ow!POy7oO#Q7rO$|*xO~Oy7tO~Oy7uO~Oy7vO(P*PO~Ow!POy7oO$|*xO(P*PO~Oo7{Oy7zO(P*PO~O!e2sO!P(ti~O(P*PO!P%}X!e%}X~O!P%ai!e%ai~P#4kO^8OO~O!e8TO['bXv$`i}'bX!l'bX!q'bX!t'bX'g'bX'q'bX(Q'bX~P@[OQ#[iS#[iT#[i[#[i^#[i_#[i`#[ia#[id#[is#[it#[iu#[iv$`i}#[i!i#[i!j#[i!l#[i!q#[i!t'bX#V#[i'Q#[i'T#[i'^#[i'g#[i'q'bX(Q'bX~P@[O#R#^a~P2gO#R8WO~O!Z3aO#R8XO'r(pO~Ov8[O~Oy8^O~P2gOy8`O~Oy6gO!P8aO~Ov8`Oy6gO~O!e3wOv(di~O(P*POv%Qi!e%Qi~O!e3|O!P(fi~O!e3|O(P*PO!P(fi~O(P*PO!P&pa!e&pa~O(P8hOw(bX!e(bXy(bX~O(P*PO!S$wiy$wiw$wi$|$wiR$wio$wi!e$wi~O!e4ZOv(hi~Ov%Xi!e%Xi~P2gOo8kOv%Xi!e%Xi~O!P%ai!S!aX!e%ai'r!aX~P!KgO(P*PO!P%`i!e%`i~O!e4hO!P(ki~O#V8nO~P&L]O!P&sa!S'eX!e&sa'r'eX~O(P*POR$zq!e$zq~Oy8pO~P2gOy7zO~P2gO(P8rO(Q8rO(R8rO~O(P8rO(Q8rO(R8rO~P'!qO'r(pOv!hq!e!hq~O(P*POP$Xq!e$Xq~Ow!POy8uO$|*xO(P*PO~Ow!POy8uO~Oy8xO~P2gOy8zO~P2gOo8|Oy8zO(P*PO~OQ#[qS#[qT#[q[#[q^#[q_#[q`#[qa#[qd#[qs#[qt#[qu#[qv$`q}#[q!i#[q!j#[q!l#[q!q#[q#V#[q'Q#[q'T#[q'^#[q'g#[q~O!e9PO['bXv$`q}'bX!l'bX!q'bX!t'bX'g'bX'q'bX(Q'bX~P@[Oo'bX!t'bX#O'bX#P'bX#p'bX'q'bX'r'bX'x'bX'y'bX'z'bX'{'bX'|'bX'}'bX(O'bX(P'bX(Q'bX(R'bX(T'bX~P'2fO#R9UO~O!Z3aO#R9UO'r(pO~Oy9WO~O(P*POv%Qq!e%Qq~O!e3|O!P(fq~O(P*PO!P&pi!e&pi~O(P8hOw(ba!e(bay(ba~Ov%Xq!e%Xq~P2gO!P&si!S'eX!e&si'r'eX~O(P*PO!P%`q!e%`q~Oy9]O~P2gO(P9^O(Q9^O(R9^O~O'r(pOv!hy!e!hy~Ow!POy9_O~Ow!POy9_O$|*xO(P*PO~Oy9aO~P2gOQ#[yS#[yT#[y[#[y^#[y_#[y`#[ya#[yd#[ys#[yt#[yu#[yv$`y}#[y!i#[y!j#[y!l#[y!q#[y#V#[y'Q#[y'T#[y'^#[y'g#[y~O!e9dO['bXv$`y}'bX!l'bX!q'bX!t'bX'g'bX'q'bX(Q'bX~P@[Oo'bX!t'bX#O'bX#P'bX#p'bX'q'bX'r'bX'x'bX'y'bX'z'bX'{'bX'|'bX'}'bX(O'bX(P'bX(Q'bX(R'bX(T'bX~P'9eO!e9eO['bX}'bX!l'bX!q'bX!t'bX'g'bX'q'bX(Q'bX~P@[OQ#[iS#[iT#[i[#[i^#[i_#[i`#[ia#[id#[is#[it#[iu#[i}#[i!i#[i!j#[i!l#[i!q#[i!t'bX#V#[i'Q#[i'T#[i'^#[i'g#[i'q'bX(Q'bX~P@[O#R9hO~O(P*PO!P&pq!e&pq~Ov%Xy!e%Xy~P2gOw!POy9iO~Oy9jO~P2gOQ#[!RS#[!RT#[!R[#[!R^#[!R_#[!R`#[!Ra#[!Rd#[!Rs#[!Rt#[!Ru#[!Rv$`!R}#[!R!i#[!R!j#[!R!l#[!R!q#[!R#V#[!R'Q#[!R'T#[!R'^#[!R'g#[!R~O!e9kO['bX}'bX!l'bX!q'bX!t'bX'g'bX'q'bX(Q'bX~P@[OQ#[qS#[qT#[q[#[q^#[q_#[q`#[qa#[qd#[qs#[qt#[qu#[q}#[q!i#[q!j#[q!l#[q!q#[q!t'bX#V#[q'Q#[q'T#[q'^#[q'g#[q'q'bX(Q'bX~P@[O!e9nO['bX}'bX!l'bX!q'bX!t'bX'g'bX'q'bX(Q'bX~P@[OQ#[yS#[yT#[y[#[y^#[y_#[y`#[ya#[yd#[ys#[yt#[yu#[y}#[y!i#[y!j#[y!l#[y!q#[y!t'bX#V#[y'Q#[y'T#[y'^#[y'g#[y'q'bX(Q'bX~P@[OwbX~P$|OwjX}jX!tbX'qbX~P!6mOZ'SXd'XXo'SXw'kX!t'SX'q'SX'r'SX~O['SXd'SXw'SX}'SX!l'SX!q'SX#O'SX#P'SX#p'SX'g'SX'x'SX'y'SX'z'SX'{'SX'|'SX'}'SX(O'SX(P'SX(Q'SX(R'SX(T'SX~P'GTOP'SX}'kX!S'SX!e'SX!O'SXy'SX!P'SXX'SX!Z'SX#R'SXv'SX~P'GTO^9qO_9qO`9qOa9qO'T9oO~O!j:OO~P!.cOPoOQ!QOSVOTVOZeOd9tOsVOtVOuVO!U#bO!W#cO!X:zO!Z!YO#Y!_O#r9zO#{9{O$O!]O$b!`O$d!bO$f!cO'ZkO'^UO[#sXo#sXw#sX}#sX!l#sX!q#sX!t#sX#O#sX#P#sX#p#sX'g#sX'q#sX'r#sX'x#sX'y#sX'z#sX'{#sX'|#sX'}#sX(O#sX(P#sX(Q#sX(R#sX(T#sX~P'IxO#Q$uO~P!.cO}'kXP'SX!S'SX!e'SX!O'SXy'SX!P'SXX'SX!Z'SX#R'SXv'SX~P'GTOo#qX#O#qX#P#qX#p#qX'r#qX'x#qX'y#qX'z#qX'{#qX'|#qX'}#qX(O#qX(P#qX(R#qX(T#qX~P!.cOo#zX#O#zX#P#zX#p#zX'r#zX'x#zX'y#zX'z#zX'{#zX'|#zX'}#zX(O#zX(P#zX(R#zX(T#zX~P!.cOPoOQ!QOSVOTVOZeOd9tOsVOtVOuVO!U#bO!W#cO!X:zO!Z!YO#Y!_O#r9zO#{9{O$O!]O$b!`O$d!bO$f!cO'ZkO'^UO[#sao#saw#sa}#sa!l#sa!q#sa!t#sa#O#sa#P#sa#p#sa'g#sa'q#sa'r#sa'x#sa'y#sa'z#sa'{#sa'|#sa'}#sa(O#sa(P#sa(Q#sa(R#sa(T#sa~P'IxOo:YO#O:YO#P:VOw#sa~P!B}Ow$Ua~P#9vOQ'XXd'XX}iX~OQlXdlX}jX~O^:sO_:sO`:sOa:sO'T:_O~OQ'XXd'XX}hX~Ow#qa~P#9vOw#za~P#9vO!S&_Oo#za#O#za#P#za#p#za'r#za'x#za'y#za'z#za'{#za'|#za'}#za(O#za(P#za(R#za(T#za~P!.cO#Q*eO~P!.cOw#ci~P#9vO[#}O}#zO'x#hO(O#|O(Q#hO(R#fO(T#hOo#eiw#ei!l#ei!q#ei!t#ei#O#ei#P#ei#p#ei'q#ei'r#ei'y#ei'z#ei'{#ei'|#ei'}#ei~O'g#ei(P#ei~P((}O'g#gO(P#gO~P((}O[#}O}#zO'g#gO'x#hO'y#iO'z#iO(O#|O(P#gO(Q#hO(R#fO(T#hOo#eiw#ei!l#ei!t#ei#O#ei#P#ei#p#ei'q#ei'r#ei'{#ei'|#ei'}#ei~O!q#ei~P(*yO!q#jO~P(*yO[#}O}#zO!q#jO'g#gO'x#hO'y#iO'z#iO'{#kO(O#|O(P#gO(Q#hO(R#fO(T#hOo#eiw#ei!l#ei!t#ei#O#ei#P#ei#p#ei'q#ei'|#ei'}#ei~O'r#ei~P(,rO'r#lO~P(,rO[#}O}#zO!q#jO#P:VO'g#gO'r#lO'x#hO'y#iO'z#iO'{#kO(O#|O(P#gO(Q#hO(R#fO(T#hOo#eiw#ei!l#ei!t#ei#O#ei#p#ei'q#ei'|#ei~O'}#ei~P(.kO'}#mO~P(.kOo:YO#O:YO#P:VOw#ni~P$1xOo:YO#O:YO#P:VOw#si~P$3yOQ'XXd'XX}'kX~Ow#zi~P#9vOw$Ui~P#9vOd9}O~Ow#ca~P#9vOd:uO~OU'x_'v'P'O'^s!y'^'T'Z~",
            goto: "$Ku(vPPPPPPP(wPP)OPP)^PPPP)d-hP0f5aP7R7R8v7R>wD_DpPDvHQPPPPPPK`P! P! _PPPPP!!VP!$oP!$oPP!&oP!(rP!(w!)n!*f!*f!*f!(w!+]P!(w!.Q!.TPP!.ZP!(w!(w!(w!(wP!(w!(wP!(w!(w!.y!/dP!/dJ}J}J}PPPP!/d!.y!/sPP!$oP!0^!0a!0g!1h!1t!3t!3t!5r!7t!1t!1t!9p!;_!=O!>k!@U!Am!CS!De!1t!1tP!1tP!1t!1t!Et!1tP!Ge!1t!1tP!Ie!1tP!1t!7t!7t!1t!7t!1t!Kl!Mt!Mw!7t!1t!Mz!M}!M}!M}!NR!$oP!$oP!$oP! P! PP!N]! P! PP!Ni# }! PP! PP#!^##c##k#$Z#$_#$e#$e#$mP#&s#&s#&y#'o#'{! PP! PP#(]#(l! PP! PPP#(x#)W#)d#)|#)^! P! PP! P! P! PP#*S#*S#*Y#*`#*S#*S! P! PP#*m#*v#+Q#+Q#,x#.l#.x#.x#.{#.{5a5a5a5a5a5a5a5aP5a#/O#/U#/p#1{#2R#2b#6^#6d#6j#6|#7W#8w#9R#9b#9h#9n#9x#:S#:Y#:g#:m#:s#:}#;]#;g#=u#>R#>`#>f#>n#>u#?PPPPPPPP#?V#BaP#F^#Jx#Ls#Nr$&^P$&aPPP$)_$)h$)z$/U$1d$1m$3fP!(w$4`$7r$:i$>T$>^$>c$>fPPP$>i$A`$A|P$BaPPPPPPPPPP$BvP$EU$EX$E[$Eb$Ee$Eh$Ek$En$Et$HO$HR$HU$HX$H[$H_$Hb$He$Hh$Hk$Hn$Jt$Jw$Jz#*S$KW$K^$Ka$Kd$Kh$Kl$Ko$KrQ!tPT'V!s'Wi!SOlm!P!T$T$W$y%b)U*f/gQ'i#QR,n'l(OSOY[bfgilmop!O!P!T!Y!Z![!_!`!c!p!q!|!}#Q#U#Z#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W$`$a$e$g$h$q$r$y%X%_%b&U&Y&[&b&u&z&|'P'a'l'n'o'}(W(Y(b(d(e(f(j(o(p(r(|)S)U)i*Z*f*i*k*l+Z+n+z,q,s,z-R-T-g-m-t.}/^/b/d/g0e0g0m0}1P1h1r1|3_3a3f3h3k4W4c4h4v4|5[5g5t6]6a7S7^7g7m7{8W8X8k8|9U9h9s9t9u9v9w9x9z9{9|9}:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f:gS(z$v-oQ*p&eQ*t&hQ-k(yQ-y)ZW0Z+Q0Y4Z7UR4Y0[&w!RObfgilmop!O!P!T!Y!Z![!_!`!c!p#Q#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W$e$g$h$q$r$y%_%b&U&Y&[&b&u'l'}(W(Y(b(f(j(o(p(r(|)S)U)i*Z*f*i*k*l+Z+n,s,z-T-g-m-t.}/^/b/d/g0e0g0m0}1h1r1|3_3a3f3h3k4W4c4h4v4|5[5g5t6]6a7S7^7g7m7{8W8X8k8|9U9h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f#r]Ofgilmp!O!P!T!Z![#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W%_%b&Y&['}(W(Y(|)i+n,s,z-m.}0}1h1|3_3a3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9hb#[b#Q$y'l(b)S)U*Z-t!h$bo!c!p$e$g$h$q$r&U&b&u(f(j(o(p(r*f*k+Z-T-g/b/d/g0e0g0m1r3f4c4h5[6a7^7m$b%k!Q!n$O$u%o%p%q%y%{&P&o&p&r'](q)s)x)y*O*P*R*V*[*^*e*n*w*x+U+V+h+o+}-i-v.U.`.p.t.x.y/Z/[/{/}0`0r0w1O1Y1Z1y2a2h2j2m2s2v3V3u3{3|4R4U4_4e4t5`5d5v6R6Y6p6v6x7c7r8g!W:y!Y!_!`*i*l/^3h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:fR:|%n$_%u!Q!n$O$u%o%p%q&P&o&p&r'](q)s)x)y*O*P*R*V*[*^*e*n*w*x+U+V+h+o+}-i-v.U.`.p.t.x.y/Z/[/{/}0`0r0w1O1Y1Z1y2a2h2j2m2s2v3V3u3{3|4R4U4_4e4t5`5d5v6R6Y6p6v6x7c7r8g$e%l!Q!n$O$u%n%o%p%q%y%{&P&o&p&r'](q)s)x)y*O*P*R*V*[*^*e*n*w*x+U+V+h+o+}-i-v.U.`.p.t.x.y/Z/[/{/}0`0r0w1O1Y1Z1y2a2h2j2m2s2v3V3u3{3|4R4U4_4e4t5`5d5v6R6Y6p6v6x7c7r8g'hZOY[fgilmop!O!P!T!Y!Z![!_!`!c!p!|!}#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W$`$a$e$g$h$q$r%_%b%i%j&U&Y&[&b&u'a'}(W(Y(d(e(f(j(o(p(r(|)i)p)q*f*i*k*l+Z+n,s,z-R-T-g-m.i.}/^/b/d/g0e0g0m0}1h1r1|3_3a3f3h3k4W4c4h4v4|5[5g5t6]6a7S7^7g7m7{8W8X8k8|9U9h9s9t9u9v9w9x9z9{9|9}:O:P:Q:R:S:T:U:V:W:X:Y:Z:`:a:e:f:g:t:u:x$^%l!Q!n$O$u%n%o%p%q%y%{&P&p&r(q)s)x)y*O*P*R*V*[*^*e*n*w*x+U+V+h+o+}-i-v.U.`.p.t.x.y/Z/[/{/}0`0r0w1O1Y1y2a2h2j2m2s2v3V3u3{3|4R4U4_4e4t5`5d5v6R6Y6p6v6x7c7r8gQ&j!hQ&k!iQ&l!jQ&m!kQ&s!oQ)[%QQ)]%RQ)^%SQ)_%TQ)b%WQ+`&oS,R']1ZQ.W)`S/r*u4TR4n0s+yTOY[bfgilmop!O!P!Q!T!Y!Z![!_!`!c!n!p!q!|!}#Q#U#Z#e#o#p#q#r#s#t#u#v#w#x#y#z#}$O$T$W$`$a$e$g$h$q$r$u$y%X%_%b%i%j%n%o%p%q%y%{&P&U&Y&[&b&o&p&r&u&z&|'P']'a'l'n'o'}(W(Y(b(d(e(f(j(o(p(q(r(|)S)U)i)p)q)s)x)y*O*P*R*V*Z*[*^*e*f*i*k*l*n*w*x+U+V+Z+h+n+o+z+},q,s,z-R-T-g-i-m-t-v.U.`.i.p.t.x.y.}/Z/[/^/b/d/g/{/}0`0e0g0m0r0w0}1O1P1Y1Z1h1r1y1|2a2h2j2m2s2v3V3_3a3f3h3k3u3{3|4R4U4W4_4c4e4h4t4v4|5[5`5d5g5t5v6R6Y6]6a6p6v6x7S7^7c7g7m7r7{8W8X8g8k8|9U9h9s9t9u9v9w9x9z9{9|9}:O:P:Q:R:S:T:U:V:W:X:Y:Z:`:a:e:f:g:t:u:xQ'[!xQ'h#PQ)l%gU)r%m*T*WR.f)kQ,T']R5P1Z#t%s!Q!n$O$u%p%q&P&p&r(q)x)y*O*R*V*[*^*e*n*w+V+h+o+}-i-v.U.`.t.x.y/Z/[/{/}0`0r0w1O1Y1y2a2h2j2m2v3V3u3{3|4U4e4t5`5d5v6R6Y6p6v6x7c7r8gQ)x%oQ+_&oQ,U']n,^'b'c'd,c,f,h,l/m/n1_3n3q5T5U7kS.q)s2sQ/O*PQ/Q*SQ/q*uS0Q*x4RQ0a+U[0o+Z.j0g4h5y7^Q2v.pS4d0e2rQ4m0sQ5Q1ZQ6T3RQ6z4PQ7O4TQ7X4_R9Y8h&jVOfgilmop!O!P!T!Y!Z![!_!`!c!p#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W$e$g$h$q$r%_%b&U&Y&[&b&u']'}(W(Y(b(f(j(o(p(r(|)i*f*i*k*l+Z+n,s,z-T-g-m.}/^/b/d/g0e0g0m0}1Z1h1r1|3_3a3f3h3k4W4c4h4v4|5[5g5t6]6a7S7^7g7m7{8W8X8k8|9U9h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:fU&g!g%P%[o,^'b'c'd,c,f,h,l/m/n1_3n3q5T5U7k$nsOfgilm!O!P!T!Y!Z![!_!`#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W%_%b&Y'}(W(Y(|)i*i*l+n,s,z-m.}/^0}1h1|3_3a3h3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9h9u9v9z9{:O:P:Q:R:S:T:U:V:W:X:Y:eS$tp9xS&O!W#bS&Q!X#cQ&`!bQ*_&RQ*a&VS*d&[:fQ*h&^Q,T']Q-j(wQ/i*jQ0p+[S2f.X0qQ3]/_Q3^/`Q3g/hQ3i/kQ5P1ZU5b2R2g4lU7o5c5e5rQ8]6dS8u7p7qS9_8v8wR9i9`i{Ob!O!P!T$y%_%b)S)U)i-thxOb!O!P!T$y%_%b)S)U)i-tW/v*v/t3w6qQ/}*wW0[+Q0Y4Z7UQ3{/{Q6x3|R8g6v!h$do!c!p$e$g$h$q$r&U&b&u(f(j(o(p(r*f*k+Z-T-g/b/d/g0e0g0m1r3f4c4h5[6a7^7mQ&d!dQ&f!fQ&n!mW&x!q%X&|1PQ'S!rQ)X$}Q)Y%OQ)a%VU)d%Y'T'UQ*s&hS+s&z'PS-Y(k1sQ-u)WQ-x)ZS.a)e)fS0x+c/sQ1S+zQ1W+{S1v-_-`Q2k.bQ3s/pQ5]1xR5h2V${sOfgilmp!O!P!T!Y!Z![!_!`#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W%_%b&Y&['}(W(Y(|)i*i*l+n,s,z-m.}/^0}1h1|3_3a3h3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f$zsOfgilmp!O!P!T!Y!Z![!_!`#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W%_%b&Y&['}(W(Y(|)i*i*l+n,s,z-m.}/^0}1h1|3_3a3h3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:fR3]/_V&T!Y!`*i!i$lo!c!p$e$g$h$q$r&U&b&u(f(j(o(p(r*f*k+Z-T-g/b/d/g0e0g0m1r3f4c4h5[6a7^7m!k$^o!c!p$e$g$h$q$r&U&b&u(b(f(j(o(p(r*f*k+Z-T-g/b/d/g0e0g0m1r3f4c4h5[6a7^7m!i$co!c!p$e$g$h$q$r&U&b&u(f(j(o(p(r*f*k+Z-T-g/b/d/g0e0g0m1r3f4c4h5[6a7^7m&e^Ofgilmop!O!P!T!Y!Z![!_!`!c!p#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W$e$g$h$q$r%_%b&U&Y&[&b&u'}(W(Y(f(j(o(p(r(|)i*f*i*k*l+Z+n,s,z-T-g-m.}/^/b/d/g0e0g0m0}1h1r1|3_3a3f3h3k4W4c4h4v4|5[5g5t6]6a7S7^7g7m7{8W8X8k8|9U9h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:fR(l$fQ-[(kR5Y1sQ(S#|S({$v-oS-Z(k1sQ-l(yW/u*v/t3w6qS1w-_-`Q3v/vR5^1xQ'e#Or,e'b'c'd'j'p)u,c,f,h,l/m/n1_3n3q5U6fR,o'mk,a'b'c'd,c,f,h,l/m/n1_3n3q5UQ'f#Or,e'b'c'd'j'p)u,c,f,h,l/m/n1_3n3q5U6fR,p'mR*g&]X/c*f/d/g3f!}aOb!O!P!T#z$v$y%_%b'}(y)S)U)i)s*f*v*w+Q+Z,s-o-t.j/b/d/g/t/{0Y0g1h2s3f3w3|4Z4h5y6a6q6v7U7^Q3`/aQ6_3bQ8Y6`R9V8Z${rOfgilmp!O!P!T!Y!Z![!_!`#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W%_%b&Y&['}(W(Y(|)i*i*l+n,s,z-m.}/^0}1h1|3_3a3h3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f#nfOfglmp!O!P!T!Z![#e#o#p#q#r#s#t#u#v#w#x#z#}$T$W%_%b&Y&['}(W(Y(|)i+n,s,z-m.}0}1h1|3_3a3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9h!T9u!Y!_!`*i*l/^3h9u9v9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:e:f#rfOfgilmp!O!P!T!Z![#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W%_%b&Y&['}(W(Y(|)i+n,s,z-m.}0}1h1|3_3a3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9h!X9u!Y!_!`*i*l/^3h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f$srOfglmp!O!P!T!Y!Z![!_!`#e#o#p#q#r#s#t#u#v#w#x#z#}$T$W%_%b&Y&['}(W(Y(|)i*i*l+n,s,z-m.}/^0}1h1|3_3a3h3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9h9u9v9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:e:f#U#oh#d$P$Q$V$s%^&W&X'q't'u'v'w'x'y'z'{'|(O(U([(`*b*c,r,w,y-n0z1i1l1}3P4w5V5a6^6e7R7e7h7s7y8j8q8{9[9b}:P&S&]/k3[6d:[:]:c:d:h:j:k:l:m:n:o:p:q:r:v:w:{#W#ph#d$P$Q$V$s%^&W&X'q'r't'u'v'w'x'y'z'{'|(O(U([(`*b*c,r,w,y-n0z1i1l1}3P4w5V5a6^6e7R7e7h7s7y8j8q8{9[9b!P:Q&S&]/k3[6d:[:]:c:d:h:i:j:k:l:m:n:o:p:q:r:v:w:{#S#qh#d$P$Q$V$s%^&W&X'q'u'v'w'x'y'z'{'|(O(U([(`*b*c,r,w,y-n0z1i1l1}3P4w5V5a6^6e7R7e7h7s7y8j8q8{9[9b{:R&S&]/k3[6d:[:]:c:d:h:k:l:m:n:o:p:q:r:v:w:{#Q#rh#d$P$Q$V$s%^&W&X'q'v'w'x'y'z'{'|(O(U([(`*b*c,r,w,y-n0z1i1l1}3P4w5V5a6^6e7R7e7h7s7y8j8q8{9[9by:S&S&]/k3[6d:[:]:c:d:h:l:m:n:o:p:q:r:v:w:{#O#sh#d$P$Q$V$s%^&W&X'q'w'x'y'z'{'|(O(U([(`*b*c,r,w,y-n0z1i1l1}3P4w5V5a6^6e7R7e7h7s7y8j8q8{9[9bw:T&S&]/k3[6d:[:]:c:d:h:m:n:o:p:q:r:v:w:{!|#th#d$P$Q$V$s%^&W&X'q'x'y'z'{'|(O(U([(`*b*c,r,w,y-n0z1i1l1}3P4w5V5a6^6e7R7e7h7s7y8j8q8{9[9bu:U&S&]/k3[6d:[:]:c:d:h:n:o:p:q:r:v:w:{!x#vh#d$P$Q$V$s%^&W&X'q'z'{'|(O(U([(`*b*c,r,w,y-n0z1i1l1}3P4w5V5a6^6e7R7e7h7s7y8j8q8{9[9bq:W&S&]/k3[6d:[:]:c:d:h:p:q:r:v:w:{!v#wh#d$P$Q$V$s%^&W&X'q'{'|(O(U([(`*b*c,r,w,y-n0z1i1l1}3P4w5V5a6^6e7R7e7h7s7y8j8q8{9[9bo:X&S&]/k3[6d:[:]:c:d:h:q:r:v:w:{$]#{h#`#d$P$Q$V$s%^&S&W&X&]'q'r's't'u'v'w'x'y'z'{'|(O(U([(`*b*c,r,w,y-n/k0z1i1l1}3P3[4w5V5a6^6d6e7R7e7h7s7y8j8q8{9[9b:[:]:c:d:h:i:j:k:l:m:n:o:p:q:r:v:w:{${jOfgilmp!O!P!T!Y!Z![!_!`#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W%_%b&Y&['}(W(Y(|)i*i*l+n,s,z-m.}/^0}1h1|3_3a3h3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f$v!aOfgilmp!O!P!T!Y!Z!_!`#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W%_%b&Y&['}(W(Y(|)i*i*l+n,s,z-m.}/^0}1h1|3_3a3h3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9h9u9v9w9x9z:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:fQ&Y![Q&Z!]R:e9{#rpOfgilmp!O!P!T!Z![#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W%_%b&Y&['}(W(Y(|)i+n,s,z-m.}0}1h1|3_3a3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9hQ&[!^!W9x!Y!_!`*i*l/^3h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:fR:f:zR$moR-f(rR$wqT(}$v-oQ/f*fS3d/d/gR6c3fQ3m/mQ3p/nQ6i3nR6l3qQ$zwQ)V${Q*q&fQ+f&qQ+i&sQ-w)YW.Z)b+j+k+lS/X*]+gW2b.W.[.].^U3W/Y/]0yU5o2c2d2eS6W3X3ZS7w5p5qS8Q6V6XQ8y7xS8}8R8SR9c9O^|O!O!P!T%_%b)iX)R$y)S)U-tQ&r!nQ*^&PQ*|&jQ+P&kQ+T&lQ+W&mQ+]&nQ+l&sQ-})[Q.Q)]Q.T)^Q.V)_Q.Y)aQ.^)bQ2S-uQ2e.WR4U0VU+a&o*u4TR4o0sQ+Y&mQ+k&sS.])b+l^0v+_+`/q/r4m4n7OS2d.W.^S4Q0R0SR5q2eS0R*x4RQ0a+UR7X4_U+d&o*u4TR4p0sQ*z&jQ+O&kQ+S&lQ+g&qQ+j&sS-{)[*|S.P)]+PS.S)^+TU.[)b+k+lQ/Y*]Q0X*{Q0q+[Q2X-|Q2Y-}Q2].QQ2_.TU2c.W.].^Q2g.XS3Z/]0yS5c2R4lQ5j2ZS5p2d2eQ6X3XS7q5e5rQ7x5qQ8R6VQ8v7pQ9O8SR9`8wQ0T*xR6|4RQ*y&jQ*}&kU-z)[*z*|U.O)]+O+PS2W-{-}S2[.P.QQ4X0ZQ5i2YQ5k2]R7T4YQ/w*vQ3t/tQ6r3wR8d6qQ*{&jS-|)[*|Q2Z-}Q4X0ZR7T4YQ+R&lU.R)^+S+TS2^.S.TR5l2_Q0]+QQ4V0YQ7V4ZR8l7UQ+[&nS.X)a+]S2R-u.YR5e2SQ0i+ZQ4f0gQ7`4hR8m7^Q.m)sQ0i+ZQ2p.jQ4f0gQ5|2sQ7`4hQ7}5yR8m7^Q0i+ZR4f0gX'O!q%X&|1PX&{!q%X&|1PW'O!q%X&|1PS+u&z'PR1U+z_|O!O!P!T%_%b)iQ%a!PS)h%_%bR.d)i$^%u!Q!n$O$u%o%p%q&P&o&p&r'](q)s)x)y*O*P*R*V*[*^*e*n*w*x+U+V+h+o+}-i-v.U.`.p.t.x.y/Z/[/{/}0`0r0w1O1Y1Z1y2a2h2j2m2s2v3V3u3{3|4R4U4_4e4t5`5d5v6R6Y6p6v6x7c7r8gQ*U%yR*X%{$c%n!Q!n$O$u%o%p%q%y%{&P&o&p&r'](q)s)x)y*O*P*R*V*[*^*e*n*w*x+U+V+h+o+}-i-v.U.`.p.t.x.y/Z/[/{/}0`0r0w1O1Y1Z1y2a2h2j2m2s2v3V3u3{3|4R4U4_4e4t5`5d5v6R6Y6p6v6x7c7r8gW)t%m%x*T*WQ.e)jR2{.vR.m)sR5|2sQ'W!sR,O'WQ!TOQ$TlQ$WmQ%b!P[%|!T$T$W%b)U/gQ)U$yR/g*f$b%i!Q!n$O$u%o%p%q%y%{&P&o&p&r'](q)s)x)y*O*P*R*V*[*^*e*n*w*x+U+V+h+o+}-i-v.U.`.p.t.x.y/Z/[/{/}0`0r0w1O1Y1Z1y2a2h2j2m2s2v3V3u3{3|4R4U4_4e4t5`5d5v6R6Y6p6v6x7c7r8g[)n%i)p.i:`:t:xQ)p%jQ.i)qQ:`%nQ:t:aR:x:uQ!vUR'Y!vS!OO!TU%]!O%_)iQ%_!PR)i%b#rYOfgilmp!O!P!T!Z![#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W%_%b&Y&['}(W(Y(|)i+n,s,z-m.}0}1h1|3_3a3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9hh!yY!|#U$`'a'n(d,q-R9s9|:gQ!|[b#Ub#Q$y'l(b)S)U*Z-t!h$`o!c!p$e$g$h$q$r&U&b&u(f(j(o(p(r*f*k+Z-T-g/b/d/g0e0g0m1r3f4c4h5[6a7^7mQ'a!}Q'n#ZQ(d$aQ,q'oQ-R(e!W9s!Y!_!`*i*l/^3h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:fQ9|9tR:g9}Q-U(gR1p-UQ1t-[R5Z1tQ,c'bQ,f'cQ,h'dW1`,c,f,h5UR5U1_Q/d*fS3c/d3fR3f/gfbO!O!P!T$y%_%b)S)U)i-tp#Wb'}(y.j/b/t/{0Y0g1h5y6a6q6v7U7^Q'}#zS(y$v-oQ.j)sW/b*f/d/g3fQ/t*vQ/{*wQ0Y+QQ0g+ZQ1h,sQ5y2sQ6q3wQ6v3|Q7U4ZR7^4hQ,t(OQ1g,rT1j,t1gS(X$Q([Q(^$VU,x(X(^,}R,}(`Q(s$mR-h(sQ-p)OR2P-pQ3n/mQ3q/nT6j3n3qQ)S$yS-r)S-tR-t)UQ4`0aR7Y4``0t+^+_+`+a+d/q/r7OR4q0tQ8i6zR9Z8iQ4S0TR6}4SQ3x/wQ6n3tT6s3x6nQ3}/|Q6t3zU6y3}6t8eR8e6uQ4[0]Q7Q4VT7W4[7QhzOb!O!P!T$y%_%b)S)U)i-tQ$|xW%Zz$|%f)v$b%f!Q!n$O$u%o%p%q%y%{&P&o&p&r'](q)s)x)y*O*P*R*V*[*^*e*n*w*x+U+V+h+o+}-i-v.U.`.p.t.x.y/Z/[/{/}0`0r0w1O1Y1Z1y2a2h2j2m2s2v3V3u3{3|4R4U4_4e4t5`5d5v6R6Y6p6v6x7c7r8gR)v%nS4i0i0nS7]4f4gT7b4i7]W&z!q%X&|1PS+r&z+zR+z'PQ1Q+wR4z1QU1[,S,T,UR5R1[S3S/Q7OR6U3SQ2t.mQ5x2pT5}2t5xQ.z)zR3O.z^_O!O!P!T%_%b)iY#Xb$y)S)U-t$l#_fgilmp!Y!Z![!_!`#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W&Y&['}(W(Y(|*i*l+n,s,z-m.}/^0}1h1|3_3a3h3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f!h$io!c!p$e$g$h$q$r&U&b&u(f(j(o(p(r*f*k+Z-T-g/b/d/g0e0g0m1r3f4c4h5[6a7^7mS'j#Q'lQ-P(bR/V*Z&v!RObfgilmop!O!P!T!Y!Z![!_!`!c!p#Q#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W$e$g$h$q$r$y%_%b&U&Y&[&b&u'l'}(W(Y(b(f(j(o(p(r(|)S)U)i*Z*f*i*k*l+Z+n,s,z-T-g-m-t.}/^/b/d/g0e0g0m0}1h1r1|3_3a3f3h3k4W4c4h4v4|5[5g5t6]6a7S7^7g7m7{8W8X8k8|9U9h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f[!{Y[#U#Z9s9tW&{!q%X&|1P['`!|!}'n'o9|9}S(c$`$aS+t&z'PU,X'a,q:gS-Q(d(eQ1T+zR1n-RS%t!Q&oQ&q!nQ(V$OQ(w$uS)w%o.pQ)z%pQ)}%qS*]&P&rQ+e&pQ,S']Q-d(qQ.l)sU.w)x)y2vS/O*O*PQ/P*RQ/T*VQ/W*[Q/]*^Q/`*eQ/l*nQ/|*wS0S*x4RQ0a+UQ0c+VQ0y+hQ0{+oQ1X+}Q1{-iQ2T-vQ2`.UQ2i.`Q2z.tQ2|.xQ2}.yQ3X/ZQ3Y/[S3z/{/}Q4^0`Q4l0rQ4s0wQ4x1OQ4}1YQ5O1ZQ5_1yQ5n2aQ5r2hQ5u2jQ5w2mQ5{2sQ6V3VQ6o3uQ6u3{Q6w3|Q7P4UQ7X4_Q7[4eQ7d4tQ7n5`Q7p5dQ7|5vQ8P6RQ8S6YQ8c6pS8f6v6xQ8o7cQ8w7rR9X8g$^%m!Q!n$O$u%o%p%q&P&o&p&r'](q)s)x)y*O*P*R*V*[*^*e*n*w*x+U+V+h+o+}-i-v.U.`.p.t.x.y/Z/[/{/}0`0r0w1O1Y1Z1y2a2h2j2m2s2v3V3u3{3|4R4U4_4e4t5`5d5v6R6Y6p6v6x7c7r8gQ)j%nQ*T%yR*W%{$y%h!Q!n$O$u%i%j%n%o%p%q%y%{&P&o&p&r'](q)p)q)s)x)y*O*P*R*V*[*^*e*n*w*x+U+V+h+o+}-i-v.U.`.i.p.t.x.y/Z/[/{/}0`0r0w1O1Y1Z1y2a2h2j2m2s2v3V3u3{3|4R4U4_4e4t5`5d5v6R6Y6p6v6x7c7r8g:`:a:t:u:x'pWOY[bfgilmop!O!P!T!Y!Z![!_!`!c!p!|!}#Q#U#Z#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W$`$a$e$g$h$q$r$y%_%b&U&Y&[&b&u'a'l'n'o'}(W(Y(b(d(e(f(j(o(p(r(|)S)U)i*Z*f*i*k*l+Z+n,q,s,z-R-T-g-m-t.}/^/b/d/g0e0g0m0}1h1r1|3_3a3f3h3k4W4c4h4v4|5[5g5t6]6a7S7^7g7m7{8W8X8k8|9U9h9s9t9u9v9w9x9z9{9|9}:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f:g$x%g!Q!n$O$u%i%j%n%o%p%q%y%{&P&o&p&r'](q)p)q)s)x)y*O*P*R*V*[*^*e*n*w*x+U+V+h+o+}-i-v.U.`.i.p.t.x.y/Z/[/{/}0`0r0w1O1Y1Z1y2a2h2j2m2s2v3V3u3{3|4R4U4_4e4t5`5d5v6R6Y6p6v6x7c7r8g:`:a:t:u:x_&y!q%X&z&|'P+z1PR,V']$zrOfgilmp!O!P!T!Y!Z![!_!`#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W%_%b&Y&['}(W(Y(|)i*i*l+n,s,z-m.}/^0}1h1|3_3a3h3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f!j$]o!c!p$e$g$h$q$r&U&b&u(b(f(j(o(p(r*f*k+Z-T-g/b/d/g0e0g0m1r3f4c4h5[6a7^7mQ,T']R5P1Z_}O!O!P!T%_%b)i^|O!O!P!T%_%b)iQ#YbX)R$y)S)U-tbhO!O!T3_6]8W8X9U9hS#`f9uQ#dgQ$PiQ$QlQ$VmQ$spW%^!P%_%b)iU&S!Y!`*iQ&W!ZQ&X![Q&]!_Q'q#eQ'r#oS's#p:QQ't#qQ'u#rQ'v#sQ'w#tQ'x#uQ'y#vQ'z#wQ'{#xQ'|#yQ(O#zQ(U#}Q([$TQ(`$WQ*b&YQ*c&[Q,r'}Q,w(WQ,y(YQ-n(|Q/k*lQ0z+nQ1i,sQ1l,zQ1}-mQ3P.}Q3[/^Q4w0}Q5V1hQ5a1|Q6^3aQ6d3hQ6e3kQ7R4WQ7e4vQ7h4|Q7s5gQ7y5tQ8j7SQ8q7gQ8{7{Q9[8kQ9b8|Q:[9wQ:]9xQ:c9zQ:d9{Q:h:OQ:i:PQ:j:RQ:k:SQ:l:TQ:m:UQ:n:VQ:o:WQ:p:XQ:q:YQ:r:ZQ:v:eQ:w:fR:{9v^tO!O!P!T%_%b)i$`#afgilmp!Y!Z![!_!`#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W&Y&['}(W(Y(|*i*l+n,s,z-m.}/^0}1h1|3a3h3k4W4v4|5g5t7S7g7{8k8|9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:fQ6[3_Q8V6]Q9R8WQ9T8XQ9g9UR9m9hQ&V!YQ&^!`R/h*iQ$joQ&a!cQ&t!pU(g$e$g(jS(n$h0eQ(u$qQ(v$rQ*`&UQ*m&bQ+p&uQ-S(fS-b(o4cQ-c(pQ-e(rW/a*f/d/g3fQ/j*kW0f+Z0g4h7^Q1o-TQ1z-gQ3b/bQ4k0mQ5X1rQ7l5[Q8Z6aR8t7m!h$_o!c!p$e$g$h$q$r&U&b&u(f(j(o(p(r*f*k+Z-T-g/b/d/g0e0g0m1r3f4c4h5[6a7^7mR-P(b'qXOY[bfgilmop!O!P!T!Y!Z![!_!`!c!p!|!}#Q#U#Z#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W$`$a$e$g$h$q$r$y%_%b&U&Y&[&b&u'a'l'n'o'}(W(Y(b(d(e(f(j(o(p(r(|)S)U)i*Z*f*i*k*l+Z+n,q,s,z-R-T-g-m-t.}/^/b/d/g0e0g0m0}1h1r1|3_3a3f3h3k4W4c4h4v4|5[5g5t6]6a7S7^7g7m7{8W8X8k8|9U9h9s9t9u9v9w9x9z9{9|9}:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f:g$zqOfgilmp!O!P!T!Y!Z![!_!`#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W%_%b&Y&['}(W(Y(|)i*i*l+n,s,z-m.}/^0}1h1|3_3a3h3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f!i$fo!c!p$e$g$h$q$r&U&b&u(f(j(o(p(r*f*k+Z-T-g/b/d/g0e0g0m1r3f4c4h5[6a7^7m&d^Ofgilmop!O!P!T!Y!Z![!_!`!c!p#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W$e$g$h$q$r%_%b&U&Y&[&b&u'}(W(Y(f(j(o(p(r(|)i*f*i*k*l+Z+n,s,z-T-g-m.}/^/b/d/g0e0g0m0}1h1r1|3_3a3f3h3k4W4c4h4v4|5[5g5t6]6a7S7^7g7m7{8W8X8k8|9U9h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f[!zY[$`$a9s9t['_!|!}(d(e9|9}W)o%i%j:`:aU,W'a-R:gW.h)p)q:t:uT2o.i:xQ(i$eQ(m$gR-W(jV(h$e$g(jR-^(kR-](k$znOfgilmp!O!P!T!Y!Z![!_!`#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W%_%b&Y&['}(W(Y(|)i*i*l+n,s,z-m.}/^0}1h1|3_3a3h3k4W4v4|5g5t6]7S7g7{8W8X8k8|9U9h9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:f!i$ko!c!p$e$g$h$q$r&U&b&u(f(j(o(p(r*f*k+Z-T-g/b/d/g0e0g0m1r3f4c4h5[6a7^7mS'g#O'pj,a'b'c'd,c,f,h,l/m/n1_3n3q5UQ,m'jQ.u)uR8_6f`,b'b'c'd,c,f,h1_5UQ1e,lX3l/m/n3n3qj,a'b'c'd,c,f,h,l/m/n1_3n3q5UQ7j5TR8s7k^uO!O!P!T%_%b)i$`#afgilmp!Y!Z![!_!`#e#o#p#q#r#s#t#u#v#w#x#y#z#}$T$W&Y&['}(W(Y(|*i*l+n,s,z-m.}/^0}1h1|3a3h3k4W4v4|5g5t7S7g7{8k8|9u9v9w9x9z9{:O:P:Q:R:S:T:U:V:W:X:Y:Z:e:fQ6Z3_Q8U6]Q9Q8WQ9S8XQ9f9UR9l9hR(Q#zR(P#zQ$SlR(]$TR$ooR$noR)Q$vR)P$vQ)O$vR2O-ohwOb!O!P!T$y%_%b)S)U)i-t$l!lz!Q!n$O$u$|%f%n%o%p%q%y%{&P&o&p&r'](q)s)v)x)y*O*P*R*V*[*^*e*n*w*x+U+V+h+o+}-i-v.U.`.p.t.x.y/Z/[/{/}0`0r0w1O1Y1Z1y2a2h2j2m2s2v3V3u3{3|4R4U4_4e4t5`5d5v6R6Y6p6v6x7c7r8gR${xR0b+UR0W*xR0U*xR6{4PR/y*vR/x*vR0P*wR0O*wR0_+QR0^+Q%XyObxz!O!P!Q!T!n$O$u$y$|%_%b%f%n%o%p%q%y%{&P&o&p&r'](q)S)U)i)s)v)x)y*O*P*R*V*[*^*e*n*w*x+U+V+h+o+}-i-t-v.U.`.p.t.x.y/Z/[/{/}0`0r0w1O1Y1Z1y2a2h2j2m2s2v3V3u3{3|4R4U4_4e4t5`5d5v6R6Y6p6v6x7c7r8gR0k+ZR0j+ZQ'R!qQ)c%XQ+w&|R4y1PX'Q!q%X&|1PR+y&|R+x&|T/S*S4TT/R*S4TR.o)sR.n)sR){%p",
            nodeNames: "⚠ | < > RawString Float LineComment BlockComment SourceFile ] InnerAttribute ! [ MetaItem self Metavariable super crate Identifier ScopedIdentifier :: QualifiedScope AbstractType impl SelfType MetaType TypeIdentifier ScopedTypeIdentifier ScopeIdentifier TypeArgList TypeBinding = Lifetime String Escape Char Boolean Integer } { Block ; ConstItem Vis pub ( in ) const BoundIdentifier : UnsafeBlock unsafe AsyncBlock async move IfExpression if LetDeclaration let LiteralPattern ArithOp MetaPattern SelfPattern ScopedIdentifier TuplePattern ScopedTypeIdentifier , StructPattern FieldPatternList FieldPattern ref mut FieldIdentifier .. RefPattern SlicePattern CapturedPattern ReferencePattern & MutPattern RangePattern ... OrPattern MacroPattern ParenthesizedTokens TokenBinding Identifier TokenRepetition ArithOp BitOp LogicOp UpdateOp CompareOp -> => ArithOp BracketedTokens BracedTokens _ else MatchExpression match MatchBlock MatchArm Attribute Guard UnaryExpression ArithOp DerefOp LogicOp ReferenceExpression TryExpression BinaryExpression ArithOp ArithOp BitOp BitOp BitOp BitOp LogicOp LogicOp AssignmentExpression TypeCastExpression as ReturnExpression return RangeExpression CallExpression ArgList AwaitExpression await FieldExpression GenericFunction BreakExpression break LoopLabel ContinueExpression continue IndexExpression ArrayExpression TupleExpression MacroInvocation UnitExpression ClosureExpression ParamList Parameter Parameter ParenthesizedExpression StructExpression FieldInitializerList ShorthandFieldInitializer FieldInitializer BaseFieldInitializer MatchArm WhileExpression while LoopExpression loop ForExpression for MacroInvocation MacroDefinition macro_rules MacroRule EmptyStatement ModItem mod DeclarationList AttributeItem ForeignModItem extern StructItem struct TypeParamList ConstrainedTypeParameter TraitBounds HigherRankedTraitBound RemovedTraitBound OptionalTypeParameter ConstParameter WhereClause where LifetimeClause TypeBoundClause FieldDeclarationList FieldDeclaration OrderedFieldDeclarationList UnionItem union EnumItem enum EnumVariantList EnumVariant TypeItem type FunctionItem default fn ParamList Parameter SelfParameter VariadicParameter VariadicParameter ImplItem TraitItem trait AssociatedType LetDeclaration UseDeclaration use ScopedIdentifier UseAsClause ScopedIdentifier UseList ScopedUseList UseWildcard ExternCrateDeclaration StaticItem static ExpressionStatement ExpressionStatement GenericType FunctionType ForLifetimes ParamList VariadicParameter Parameter VariadicParameter Parameter ReferenceType PointerType TupleType UnitType ArrayType MacroInvocation EmptyType DynamicType dyn BoundedType",
            maxTerm: 359,
            nodeProps: [["group", -42, 4, 5, 14, 15, 16, 17, 18, 19, 33, 35, 36, 37, 40, 51, 53, 56, 101, 107, 111, 112, 113, 122, 123, 125, 127, 128, 130, 132, 133, 134, 137, 139, 140, 141, 142, 143, 144, 148, 149, 155, 157, 159, "Expression", -16, 22, 24, 25, 26, 27, 222, 223, 230, 231, 232, 233, 234, 235, 236, 237, 239, "Type", -20, 42, 161, 162, 165, 166, 169, 170, 172, 188, 190, 194, 196, 204, 205, 207, 208, 209, 217, 218, 220, "Statement", -17, 49, 60, 62, 63, 64, 65, 68, 74, 75, 76, 77, 78, 80, 81, 83, 84, 99, "Pattern"], ["openedBy", 9, "[", 38, "{", 47, "("], ["closedBy", 12, "]", 39, "}", 45, ")"]],
            propSources: [c],
            skippedNodes: [0, 6, 7, 240],
            repeatNodeCount: 32,
            tokenData: "#?|_R!VOX$hXY1_YZ2ZZ]$h]^1_^p$hpq1_qr2srs4qst5Ztu6Vuv9lvw;jwx=nxy!!ayz!#]z{!$X{|!&R|}!'T}!O!(P!O!P!*Q!P!Q!-|!Q!R!6X!R![!7|![!]!Jw!]!^!Lu!^!_!Mq!_!`# x!`!a##y!a!b#&Q!b!c#&|!c!}#'x!}#O#)o#O#P#*k#P#Q#1b#Q#R#2^#R#S#'x#S#T$h#T#U#'x#U#V#3`#V#f#'x#f#g#6s#g#o#'x#o#p#<Q#p#q#<|#q#r#?Q#r${$h${$|#'x$|4w$h4w5b#'x5b5i$h5i6S#'x6S~$hU$oZ'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$hU%iT'_Q'OSOz%xz{&^{!P%x!P!Q'S!Q~%xS%}T'OSOz%xz{&^{!P%x!P!Q'S!Q~%xS&aTOz&pz{&^{!P&p!P!Q({!Q~&pS&sTOz%xz{&^{!P%x!P!Q'S!Q~%xS'VSOz&p{!P&p!P!Q'c!Q~&pS'fSOz'r{!P'r!P!Q'c!Q~'rS'uTOz(Uz{(l{!P(U!P!Q'c!Q~(US(]T'PS'OSOz(Uz{(l{!P(U!P!Q'c!Q~(US(oSOz'rz{(l{!P'r!Q~'rS)QO'PSU)VZ'_QOY)xYZ+hZr)xrs&psz)xz{)Q{!P)x!P!Q0w!Q#O)x#O#P&p#P~)xU)}Z'_QOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$hU*uZ'_QOY)xYZ+hZr)xrs&psz)xz{+|{!P)x!P!Q,g!Q#O)x#O#P&p#P~)xU+mT'_QOz%xz{&^{!P%x!P!Q'S!Q~%xQ,RT'_QOY+|YZ,bZr+|s#O+|#P~+|Q,gO'_QU,lZ'_QOY-_YZ0cZr-_rs'rsz-_z{+|{!P-_!P!Q,g!Q#O-_#O#P'r#P~-_U-dZ'_QOY.VYZ/RZr.Vrs(Usz.Vz{/k{!P.V!P!Q,g!Q#O.V#O#P(U#P~.VU.`Z'_Q'PS'OSOY.VYZ/RZr.Vrs(Usz.Vz{/k{!P.V!P!Q,g!Q#O.V#O#P(U#P~.VU/[T'_Q'PS'OSOz(Uz{(l{!P(U!P!Q'c!Q~(UU/pZ'_QOY-_YZ0cZr-_rs'rsz-_z{/k{!P-_!P!Q+|!Q#O-_#O#P'r#P~-_U0hT'_QOz(Uz{(l{!P(U!P!Q'c!Q~(UU1OT'_Q'PSOY+|YZ,bZr+|s#O+|#P~+|_1hZ'_Q&|X'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_2dT'_Q&|X'OSOz%xz{&^{!P%x!P!Q'S!Q~%x_2|]ZX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!_$h!_!`3u!`#O$h#O#P%x#P~$h_4OZ#PX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_4zT']Q'OS'^XOz%xz{&^{!P%x!P!Q'S!Q~%x_5dZ'QX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_6`g'_Q'vW'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!c$h!c!}7w!}#O$h#O#P%x#P#R$h#R#S7w#S#T$h#T#o7w#o${$h${$|7w$|4w$h4w5b7w5b5i$h5i6S7w6S~$h_8Qh'_Q_X'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q![7w![!c$h!c!}7w!}#O$h#O#P%x#P#R$h#R#S7w#S#T$h#T#o7w#o${$h${$|7w$|4w$h4w5b7w5b5i$h5i6S7w6S~$h_9u](TP'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!_$h!_!`:n!`#O$h#O#P%x#P~$h_:wZ#OX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_;s_!qX'_Q'OSOY$hYZ%bZr$hrs%xsv$hvw<rwz$hz{)Q{!P$h!P!Q*p!Q!_$h!_!`:n!`#O$h#O#P%x#P~$h_<{Z'}X'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_=ui'_Q'OSOY?dYZA`Zr?drsBdsw?dwx@dxz?dz{CO{!P?d!P!QDv!Q!c?d!c!}Et!}#O?d#O#PId#P#R?d#R#SEt#S#T?d#T#oEt#o${?d${$|Et$|4w?d4w5bEt5b5i?d5i6SEt6S~?d_?k]'_Q'OSOY$hYZ%bZr$hrs%xsw$hwx@dxz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_@mZ'_Q'OSsXOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_AgV'_Q'OSOw%xwxA|xz%xz{&^{!P%x!P!Q'S!Q~%x]BTT'OSsXOz%xz{&^{!P%x!P!Q'S!Q~%x]BiV'OSOw%xwxA|xz%xz{&^{!P%x!P!Q'S!Q~%x_CT]'_QOY)xYZ+hZr)xrs&psw)xwxC|xz)xz{)Q{!P)x!P!Q0w!Q#O)x#O#P&p#P~)x_DTZ'_QsXOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_D{]'_QOY)xYZ+hZr)xrs&psw)xwxC|xz)xz{+|{!P)x!P!Q,g!Q#O)x#O#P&p#P~)x_E}j'_Q'OS'ZXOY$hYZ%bZr$hrs%xsw$hwx@dxz$hz{)Q{!P$h!P!Q*p!Q![Go![!c$h!c!}Go!}#O$h#O#P%x#P#R$h#R#SGo#S#T$h#T#oGo#o${$h${$|Go$|4w$h4w5bGo5b5i$h5i6SGo6S~$h_Gxh'_Q'OS'ZXOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q![Go![!c$h!c!}Go!}#O$h#O#P%x#P#R$h#R#SGo#S#T$h#T#oGo#o${$h${$|Go$|4w$h4w5bGo5b5i$h5i6SGo6S~$h]IiX'OSOzBdz{JU{!PBd!P!QKS!Q#iBd#i#jKi#j#lBd#l#mMX#m~Bd]JXVOw&pwxJnxz&pz{&^{!P&p!P!Q({!Q~&p]JsTsXOz%xz{&^{!P%x!P!Q'S!Q~%x]KVUOw&pwxJnxz&p{!P&p!P!Q'c!Q~&p]Kn['OSOz%xz{&^{!P%x!P!Q'S!Q![Ld![!c%x!c!iLd!i#T%x#T#ZLd#Z#o%x#o#pNq#p~%x]LiY'OSOz%xz{&^{!P%x!P!Q'S!Q![MX![!c%x!c!iMX!i#T%x#T#ZMX#Z~%x]M^Y'OSOz%xz{&^{!P%x!P!Q'S!Q![M|![!c%x!c!iM|!i#T%x#T#ZM|#Z~%x]NRY'OSOz%xz{&^{!P%x!P!Q'S!Q![Bd![!c%x!c!iBd!i#T%x#T#ZBd#Z~%x]NvY'OSOz%xz{&^{!P%x!P!Q'S!Q![! f![!c%x!c!i! f!i#T%x#T#Z! f#Z~%x]! k['OSOz%xz{&^{!P%x!P!Q'S!Q![! f![!c%x!c!i! f!i#T%x#T#Z! f#Z#q%x#q#rBd#r~%x_!!jZ}X'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_!#fZ!PX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_!$`](QX'_QOY)xYZ+hZr)xrs&psz)xz{)Q{!P)x!P!Q0w!Q!_)x!_!`!%X!`#O)x#O#P&p#P~)x_!%`Z#OX'_QOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_!&[](PX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!_$h!_!`:n!`#O$h#O#P%x#P~$h_!'^Z!eX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_!(Y^'gX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!_$h!_!`:n!`!a!)U!a#O$h#O#P%x#P~$h_!)_Z#QX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_!*Z[(OX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!O$h!O!P!+P!P!Q*p!Q#O$h#O#P%x#P~$h_!+Y^!lX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!O$h!O!P!,U!P!Q*p!Q!_$h!_!`!-Q!`#O$h#O#P%x#P~$h_!,_Z!tX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$hV!-ZZ'qP'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_!.T]'_Q'xXOY)xYZ+hZr)xrs&psz)xz{!.|{!P)x!P!Q!/d!Q!_)x!_!`!%X!`#O)x#O#P&p#P~)x_!/TT&}]'_QOY+|YZ,bZr+|s#O+|#P~+|_!/kZ'_QUXOY!0^YZ0cZr!0^rs!3`sz!0^z{!5k{!P!0^!P!Q!/d!Q#O!0^#O#P!3`#P~!0^_!0eZ'_QUXOY!1WYZ/RZr!1Wrs!2Usz!1Wz{!4q{!P!1W!P!Q!/d!Q#O!1W#O#P!2U#P~!1W_!1cZ'_QUX'PS'OSOY!1WYZ/RZr!1Wrs!2Usz!1Wz{!4q{!P!1W!P!Q!/d!Q#O!1W#O#P!2U#P~!1W]!2_VUX'PS'OSOY!2UYZ(UZz!2Uz{!2t{!P!2U!P!Q!3z!Q~!2U]!2yVUXOY!3`YZ'rZz!3`z{!2t{!P!3`!P!Q!4f!Q~!3`]!3eVUXOY!2UYZ(UZz!2Uz{!2t{!P!2U!P!Q!3z!Q~!2U]!4PVUXOY!3`YZ'rZz!3`z{!4f{!P!3`!P!Q!3z!Q~!3`X!4kQUXOY!4fZ~!4f_!4xZ'_QUXOY!0^YZ0cZr!0^rs!3`sz!0^z{!4q{!P!0^!P!Q!5k!Q#O!0^#O#P!3`#P~!0^Z!5rV'_QUXOY!5kYZ,bZr!5krs!4fs#O!5k#O#P!4f#P~!5k_!6bhuX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q![!7|![#O$h#O#P%x#P#R$h#R#S!7|#S#U$h#U#V!By#V#]$h#]#^!9_#^#c$h#c#d!Ee#d#i$h#i#j!9_#j#l$h#l#m!Gy#m~$h_!8VbuX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q![!7|![#O$h#O#P%x#P#R$h#R#S!7|#S#]$h#]#^!9_#^#i$h#i#j!9_#j~$h_!9fe'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!R$h!R!S!:w!S!T$h!T!U!=y!U!W$h!W!X!>y!X!Y$h!Y!Z!<}!Z#O$h#O#P%x#P#g$h#g#h!?y#h~$h_!;O_'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!S$h!S!T!;}!T!W$h!W!X!<}!X#O$h#O#P%x#P~$h_!<U]'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!Y$h!Y!Z!<}!Z#O$h#O#P%x#P~$h_!=WZuX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_!>Q]'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!S$h!S!T!<}!T#O$h#O#P%x#P~$h_!?Q]'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!U$h!U!V!<}!V#O$h#O#P%x#P~$h_!@Q]'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P#]$h#]#^!@y#^~$h_!AQ]'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P#n$h#n#o!Ay#o~$h_!BQ]'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P#X$h#X#Y!<}#Y~$h_!CQ_'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!R!DP!R!S!DP!S#O$h#O#P%x#P#R$h#R#S!DP#S~$h_!DYcuX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!R!DP!R!S!DP!S#O$h#O#P%x#P#R$h#R#S!DP#S#]$h#]#^!9_#^#i$h#i#j!9_#j~$h_!El^'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!Y!Fh!Y#O$h#O#P%x#P#R$h#R#S!Fh#S~$h_!FqbuX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!Y!Fh!Y#O$h#O#P%x#P#R$h#R#S!Fh#S#]$h#]#^!9_#^#i$h#i#j!9_#j~$h_!HQb'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q![!IY![!c$h!c!i!IY!i#O$h#O#P%x#P#R$h#R#S!IY#S#T$h#T#Z!IY#Z~$h_!IcfuX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q![!IY![!c$h!c!i!IY!i#O$h#O#P%x#P#R$h#R#S!IY#S#T$h#T#Z!IY#Z#]$h#]#^!9_#^#i$h#i#j!9_#j~$h_!KQ]!SX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q![$h![!]!Ky!]#O$h#O#P%x#P~$h_!LSZdX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_!MOZyX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_!Mz^#PX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!^$h!^!_!Nv!_!`3u!`#O$h#O#P%x#P~$h_# P]'yX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!_$h!_!`:n!`#O$h#O#P%x#P~$h_#!R^oX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!_$h!_!`3u!`!a#!}!a#O$h#O#P%x#P~$h_##WZ#RX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_#$S^#PX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!_$h!_!`3u!`!a#%O!a#O$h#O#P%x#P~$h_#%X]'zX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!_$h!_!`:n!`#O$h#O#P%x#P~$h_#&ZZ(RX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$hV#'VZ'pP'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_#(Th'_Q'OS!yW'TPOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q![#'x![!c$h!c!}#'x!}#O$h#O#P%x#P#R$h#R#S#'x#S#T$h#T#o#'x#o${$h${$|#'x$|4w$h4w5b#'x5b5i$h5i6S#'x6S~$h_#)xZ[X'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$hU#*pX'OSOz#+]z{#+s{!P#+]!P!Q#,X!Q#i#+]#i#j#,j#j#l#+]#l#m#.Y#m~#+]U#+dTrQ'OSOz%xz{&^{!P%x!P!Q'S!Q~%xU#+xTrQOz&pz{&^{!P&p!P!Q({!Q~&pU#,^SrQOz&p{!P&p!P!Q'c!Q~&pU#,o['OSOz%xz{&^{!P%x!P!Q'S!Q![#-e![!c%x!c!i#-e!i#T%x#T#Z#-e#Z#o%x#o#p#/r#p~%xU#-jY'OSOz%xz{&^{!P%x!P!Q'S!Q![#.Y![!c%x!c!i#.Y!i#T%x#T#Z#.Y#Z~%xU#._Y'OSOz%xz{&^{!P%x!P!Q'S!Q![#.}![!c%x!c!i#.}!i#T%x#T#Z#.}#Z~%xU#/SY'OSOz%xz{&^{!P%x!P!Q'S!Q![#+]![!c%x!c!i#+]!i#T%x#T#Z#+]#Z~%xU#/wY'OSOz%xz{&^{!P%x!P!Q'S!Q![#0g![!c%x!c!i#0g!i#T%x#T#Z#0g#Z~%xU#0l['OSOz%xz{&^{!P%x!P!Q'S!Q![#0g![!c%x!c!i#0g!i#T%x#T#Z#0g#Z#q%x#q#r#+]#r~%x_#1kZXX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_#2g]'{X'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!_$h!_!`:n!`#O$h#O#P%x#P~$h_#3kj'_Q'OS!yW'TPOY$hYZ%bZr$hrs#5]sw$hwx#5sxz$hz{)Q{!P$h!P!Q*p!Q![#'x![!c$h!c!}#'x!}#O$h#O#P%x#P#R$h#R#S#'x#S#T$h#T#o#'x#o${$h${$|#'x$|4w$h4w5b#'x5b5i$h5i6S#'x6S~$h]#5dT'OS'^XOz%xz{&^{!P%x!P!Q'S!Q~%x_#5z]'_Q'OSOY?dYZA`Zr?drsBdsw?dwx@dxz?dz{CO{!P?d!P!QDv!Q#O?d#O#PId#P~?d_#7Oi'_Q'OS!yW'TPOY$hYZ%bZr$hrs%xst#8mtz$hz{)Q{!P$h!P!Q*p!Q![#'x![!c$h!c!}#'x!}#O$h#O#P%x#P#R$h#R#S#'x#S#T$h#T#o#'x#o${$h${$|#'x$|4w$h4w5b#'x5b5i$h5i6S#'x6S~$hV#8tg'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!c$h!c!}#:]!}#O$h#O#P%x#P#R$h#R#S#:]#S#T$h#T#o#:]#o${$h${$|#:]$|4w$h4w5b#:]5b5i$h5i6S#:]6S~$hV#:fh'_Q'OS'TPOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q![#:]![!c$h!c!}#:]!}#O$h#O#P%x#P#R$h#R#S#:]#S#T$h#T#o#:]#o${$h${$|#:]$|4w$h4w5b#:]5b5i$h5i6S#:]6S~$h_#<ZZwX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_#=V_'rX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q!_$h!_!`:n!`#O$h#O#P%x#P#p$h#p#q#>U#q~$h_#>_Z'|X'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h_#?ZZvX'_Q'OSOY$hYZ%bZr$hrs%xsz$hz{)Q{!P$h!P!Q*p!Q#O$h#O#P%x#P~$h",
            tokenizers: [s, l, o, 0, 1, 2, 3],
            topRules: {
                SourceFile: [0, 8]
            },
            specialized: [{
                term: 281,
                get: e=>u[e] || -1
            }],
            tokenPrec: 15596
        });
        var d = O(168);
        let f = d.qp.define({
            name: "rust",
            parser: p.configure({
                props: [d.uj.add({
                    IfExpression: (0,
                    d.tC)({
                        except: /^\s*({|else\b)/
                    }),
                    "String BlockComment": ()=>null,
                    AttributeItem: e=>e.continue(),
                    "Statement MatchArm": (0,
                    d.tC)()
                }), d.x0.add(e=>/(Block|edTokens|List)$/.test(e.name) ? d.Dv : "BlockComment" == e.name ? e=>({
                    from: e.from + 2,
                    to: e.to - 2
                }) : void 0)]
            }),
            languageData: {
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                },
                indentOnInput: /^\s*(?:\{|\})$/,
                closeBrackets: {
                    stringPrefixes: ["b", "r", "br"]
                }
            }
        });
        function h() {
            return new d.ri(f)
        }
    },
    2140: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            Cassandra: function() {
                return N
            },
            MSSQL: function() {
                return I
            },
            MariaSQL: function() {
                return A
            },
            MySQL: function() {
                return C
            },
            PLSQL: function() {
                return D
            },
            PostgreSQL: function() {
                return V
            },
            SQLDialect: function() {
                return W
            },
            SQLite: function() {
                return J
            },
            StandardSQL: function() {
                return U
            },
            keywordCompletion: function() {
                return z
            },
            keywordCompletionSource: function() {
                return Z
            },
            schemaCompletion: function() {
                return Y
            },
            schemaCompletionSource: function() {
                return q
            },
            sql: function() {
                return R
            }
        });
        var n = O(168)
          , r = O(5306)
          , i = O(2679)
          , a = O(5338);
        function o(e) {
            return e >= 65 && e <= 90 || e >= 97 && e <= 122 || e >= 48 && e <= 57
        }
        function s(e, t, O) {
            for (let n = !1; ; ) {
                if (e.next < 0)
                    return;
                if (e.next == t && !n) {
                    e.advance();
                    return
                }
                n = O && !n && 92 == e.next,
                e.advance()
            }
        }
        function l(e, t) {
            for (; 95 == e.next || o(e.next); )
                null != t && (t += String.fromCharCode(e.next)),
                e.advance();
            return t
        }
        function c(e, t) {
            for (; 48 == e.next || 49 == e.next; )
                e.advance();
            t && e.next == t && e.advance()
        }
        function u(e, t) {
            for (; ; ) {
                if (46 == e.next) {
                    if (t)
                        break;
                    t = !0
                } else if (e.next < 48 || e.next > 57)
                    break;
                e.advance()
            }
            if (69 == e.next || 101 == e.next)
                for (e.advance(),
                (43 == e.next || 45 == e.next) && e.advance(); e.next >= 48 && e.next <= 57; )
                    e.advance()
        }
        function p(e) {
            for (; !(e.next < 0 || 10 == e.next); )
                e.advance()
        }
        function d(e, t) {
            for (let O = 0; O < t.length; O++)
                if (t.charCodeAt(O) == e)
                    return !0;
            return !1
        }
        let f = " 	\r\n";
        function h(e, t, O) {
            let n = Object.create(null);
            for (let t of (n.true = n.false = 5,
            n.null = n.unknown = 6,
            e.split(" ")))
                t && (n[t] = 20);
            for (let e of t.split(" "))
                e && (n[e] = 21);
            for (let e of (O || "").split(" "))
                e && (n[e] = 24);
            return n
        }
        let m = "array binary bit boolean char character clob date decimal double float int integer interval large national nchar nclob numeric object precision real smallint time timestamp varchar varying "
          , Q = "absolute action add after all allocate alter and any are as asc assertion at authorization before begin between both breadth by call cascade cascaded case cast catalog check close collate collation column commit condition connect connection constraint constraints constructor continue corresponding count create cross cube current current_date current_default_transform_group current_transform_group_for_type current_path current_role current_time current_timestamp current_user cursor cycle data day deallocate declare default deferrable deferred delete depth deref desc describe descriptor deterministic diagnostics disconnect distinct do domain drop dynamic each else elseif end end-exec equals escape except exception exec execute exists exit external fetch first for foreign found from free full function general get global go goto grant group grouping handle having hold hour identity if immediate in indicator initially inner inout input insert intersect into is isolation join key language last lateral leading leave left level like limit local localtime localtimestamp locator loop map match method minute modifies module month names natural nesting new next no none not of old on only open option or order ordinality out outer output overlaps pad parameter partial path prepare preserve primary prior privileges procedure public read reads recursive redo ref references referencing relative release repeat resignal restrict result return returns revoke right role rollback rollup routine row rows savepoint schema scroll search second section select session session_user set sets signal similar size some space specific specifictype sql sqlexception sqlstate sqlwarning start state static system_user table temporary then timezone_hour timezone_minute to trailing transaction translation treat trigger under undo union unique unnest until update usage user using value values view when whenever where while with without work write year zone "
          , $ = {
            backslashEscapes: !1,
            hashComments: !1,
            spaceAfterDashes: !1,
            slashComments: !1,
            doubleQuotedStrings: !1,
            doubleDollarQuotedStrings: !1,
            unquotedBitLiterals: !1,
            treatBitsAsBytes: !1,
            charSetCasts: !1,
            operatorChars: "*+-%<>!=&|~^/",
            specialVar: "?",
            identifierQuotes: '"',
            words: h(Q, m)
        };
        function g(e) {
            return new i.Jq(t=>{
                var O, n;
                let {next: r} = t;
                if (t.advance(),
                d(r, f)) {
                    for (; d(t.next, f); )
                        t.advance();
                    t.acceptToken(36)
                } else if (36 == r && 36 == t.next && e.doubleDollarQuotedStrings)
                    !function(e) {
                        for (; ; ) {
                            if (e.next < 0 || 0 > e.peek(1))
                                return;
                            if (36 == e.next && 36 == e.peek(1)) {
                                e.advance(2);
                                return
                            }
                            e.advance()
                        }
                    }(t),
                    t.acceptToken(3);
                else if (39 == r || 34 == r && e.doubleQuotedStrings)
                    s(t, r, e.backslashEscapes),
                    t.acceptToken(3);
                else if (35 == r && e.hashComments || 47 == r && 47 == t.next && e.slashComments)
                    p(t),
                    t.acceptToken(1);
                else if (45 != r || 45 != t.next || e.spaceAfterDashes && 32 != t.peek(1)) {
                    if (47 == r && 42 == t.next) {
                        t.advance();
                        for (let e = 1; ; ) {
                            let O = t.next;
                            if (t.next < 0)
                                break;
                            if (t.advance(),
                            42 == O && 47 == t.next) {
                                if (e--,
                                t.advance(),
                                !e)
                                    break
                            } else
                                47 == O && 42 == t.next && (e++,
                                t.advance())
                        }
                        t.acceptToken(2)
                    } else if ((101 == r || 69 == r) && 39 == t.next)
                        t.advance(),
                        s(t, 39, !0);
                    else if ((110 == r || 78 == r) && 39 == t.next && e.charSetCasts)
                        t.advance(),
                        s(t, 39, e.backslashEscapes),
                        t.acceptToken(3);
                    else if (95 == r && e.charSetCasts)
                        for (let O = 0; ; O++) {
                            if (39 == t.next && O > 1) {
                                t.advance(),
                                s(t, 39, e.backslashEscapes),
                                t.acceptToken(3);
                                break
                            }
                            if (!o(t.next))
                                break;
                            t.advance()
                        }
                    else if (40 == r)
                        t.acceptToken(7);
                    else if (41 == r)
                        t.acceptToken(8);
                    else if (123 == r)
                        t.acceptToken(9);
                    else if (125 == r)
                        t.acceptToken(10);
                    else if (91 == r)
                        t.acceptToken(11);
                    else if (93 == r)
                        t.acceptToken(12);
                    else if (59 == r)
                        t.acceptToken(13);
                    else if (e.unquotedBitLiterals && 48 == r && 98 == t.next)
                        t.advance(),
                        c(t),
                        t.acceptToken(22);
                    else if ((98 == r || 66 == r) && (39 == t.next || 34 == t.next)) {
                        let O = t.next;
                        t.advance(),
                        e.treatBitsAsBytes ? (s(t, O, e.backslashEscapes),
                        t.acceptToken(23)) : (c(t, O),
                        t.acceptToken(22))
                    } else if (48 == r && (120 == t.next || 88 == t.next) || (120 == r || 88 == r) && 39 == t.next) {
                        let e = 39 == t.next;
                        for (t.advance(); (n = t.next) >= 48 && n <= 57 || n >= 97 && n <= 102 || n >= 65 && n <= 70; )
                            t.advance();
                        e && 39 == t.next && t.advance(),
                        t.acceptToken(4)
                    } else if (46 == r && t.next >= 48 && t.next <= 57)
                        u(t, !0),
                        t.acceptToken(4);
                    else if (46 == r)
                        t.acceptToken(14);
                    else if (r >= 48 && r <= 57)
                        u(t, !1),
                        t.acceptToken(4);
                    else if (d(r, e.operatorChars)) {
                        for (; d(t.next, e.operatorChars); )
                            t.advance();
                        t.acceptToken(15)
                    } else if (d(r, e.specialVar))
                        t.next == r && t.advance(),
                        function(e) {
                            if (39 == e.next || 34 == e.next || 96 == e.next) {
                                let t = e.next;
                                e.advance(),
                                s(e, t, !1)
                            } else
                                l(e)
                        }(t),
                        t.acceptToken(17);
                    else if (d(r, e.identifierQuotes))
                        s(t, r, !1),
                        t.acceptToken(19);
                    else if (58 == r || 44 == r)
                        t.acceptToken(16);
                    else if (o(r)) {
                        let n = l(t, String.fromCharCode(r));
                        t.acceptToken(46 == t.next ? 18 : null !== (O = e.words[n.toLowerCase()]) && void 0 !== O ? O : 18)
                    }
                } else
                    p(t),
                    t.acceptToken(1)
            }
            )
        }
        let P = g($)
          , S = i.WQ.deserialize({
            version: 14,
            states: "%vQ]QQOOO#wQRO'#DSO$OQQO'#CwO%eQQO'#CxO%lQQO'#CyO%sQQO'#CzOOQQ'#DS'#DSOOQQ'#C}'#C}O'UQRO'#C{OOQQ'#Cv'#CvOOQQ'#C|'#C|Q]QQOOQOQQOOO'`QQO'#DOO(xQRO,59cO)PQQO,59cO)UQQO'#DSOOQQ,59d,59dO)cQQO,59dOOQQ,59e,59eO)jQQO,59eOOQQ,59f,59fO)qQQO,59fOOQQ-E6{-E6{OOQQ,59b,59bOOQQ-E6z-E6zOOQQ,59j,59jOOQQ-E6|-E6|O+VQRO1G.}O+^QQO,59cOOQQ1G/O1G/OOOQQ1G/P1G/POOQQ1G/Q1G/QP+kQQO'#C}O+rQQO1G.}O)PQQO,59cO,PQQO'#Cw",
            stateData: ",[~OtOSPOSQOS~ORUOSUOTUOUUOVROXSOZTO]XO^QO_UO`UOaPObPOcPOdUOeUOfUOgUOhUO~O^]ORvXSvXTvXUvXVvXXvXZvX]vX_vX`vXavXbvXcvXdvXevXfvXgvXhvX~OsvX~P!jOa_Ob_Oc_O~ORUOSUOTUOUUOVROXSOZTO^tO_UO`UOa`Ob`Oc`OdUOeUOfUOgUOhUO~OWaO~P$ZOYcO~P$ZO[eO~P$ZORUOSUOTUOUUOVROXSOZTO^QO_UO`UOaPObPOcPOdUOeUOfUOgUOhUO~O]hOsoX~P%zOajObjOcjO~O^]ORkaSkaTkaUkaVkaXkaZka]ka_ka`kaakabkackadkaekafkagkahka~Oska~P'kO^]O~OWvXYvX[vX~P!jOWnO~P$ZOYoO~P$ZO[pO~P$ZO^]ORkiSkiTkiUkiVkiXkiZki]ki_ki`kiakibkickidkiekifkigkihki~Oski~P)xOWkaYka[ka~P'kO]hO~P$ZOWkiYki[ki~P)xOasObsOcsO~O",
            goto: "#hwPPPPPPPPPPPPPPPPPPPPPPPPPPx||||!Y!^!d!xPPP#[TYOZeUORSTWZbdfqT[OZQZORiZSWOZQbRQdSQfTZgWbdfqQ^PWk^lmrQl_Qm`RrseVORSTWZbdfq",
            nodeNames: "⚠ LineComment BlockComment String Number Bool Null ( ) { } [ ] ; . Operator Punctuation SpecialVar Identifier QuotedIdentifier Keyword Type Bits Bytes Builtin Script Statement CompositeIdentifier Parens Braces Brackets Statement",
            maxTerm: 38,
            skippedNodes: [0, 1, 2],
            repeatNodeCount: 3,
            tokenData: "RORO",
            tokenizers: [0, P],
            topRules: {
                Script: [0, 25]
            },
            tokenPrec: 0
        });
        function b(e) {
            let t = e.cursor().moveTo(e.from, -1);
            for (; /Comment/.test(t.name); )
                t.moveTo(t.from, -1);
            return t.node
        }
        function y(e, t) {
            let O = e.sliceString(t.from, t.to)
              , n = /^([`'"])(.*)\1$/.exec(O);
            return n ? n[2] : O
        }
        function x(e) {
            return e && ("Identifier" == e.name || "QuotedIdentifier" == e.name)
        }
        function X(e, t) {
            for (let O = []; ; ) {
                if (!t || "." != t.name)
                    return O;
                let n = b(t);
                if (!x(n))
                    return O;
                O.unshift(y(e, n)),
                t = b(n)
            }
        }
        let v = new Set("where group having order union intersect except all distinct limit offset fetch for".split(" "))
          , k = /^\w*$/
          , w = /^[`'"]?\w*[`'"]?$/;
        class T {
            constructor() {
                this.list = [],
                this.children = void 0
            }
            child(e) {
                let t = this.children || (this.children = Object.create(null));
                return t[e] || (t[e] = new T)
            }
            childCompletions(e) {
                return this.children ? Object.keys(this.children).filter(e=>e).map(t=>({
                    label: t,
                    type: e
                })) : []
            }
        }
        let _ = S.configure({
            props: [n.uj.add({
                Statement: (0,
                n.tC)()
            }), n.x0.add({
                Statement: e=>({
                    from: e.firstChild.to,
                    to: e.to
                }),
                BlockComment: e=>({
                    from: e.from + 2,
                    to: e.to - 2
                })
            }), (0,
            r.Gv)({
                Keyword: r.pJ.keyword,
                Type: r.pJ.typeName,
                Builtin: r.pJ.standard(r.pJ.name),
                Bits: r.pJ.number,
                Bytes: r.pJ.string,
                Bool: r.pJ.bool,
                Null: r.pJ.null,
                Number: r.pJ.number,
                String: r.pJ.string,
                Identifier: r.pJ.name,
                QuotedIdentifier: r.pJ.special(r.pJ.string),
                SpecialVar: r.pJ.special(r.pJ.name),
                LineComment: r.pJ.lineComment,
                BlockComment: r.pJ.blockComment,
                Operator: r.pJ.operator,
                "Semi Punctuation": r.pJ.punctuation,
                "( )": r.pJ.paren,
                "{ }": r.pJ.brace,
                "[ ]": r.pJ.squareBracket
            })]
        });
        class W {
            constructor(e, t) {
                this.dialect = e,
                this.language = t
            }
            get extension() {
                return this.language.extension
            }
            static define(e) {
                let t = function(e, t, O, n) {
                    let r = {};
                    for (let t in $)
                        r[t] = (e.hasOwnProperty(t) ? e : $)[t];
                    return t && (r.words = h(t, O || "", n)),
                    r
                }(e, e.keywords, e.types, e.builtin)
                  , O = n.qp.define({
                    name: "sql",
                    parser: _.configure({
                        tokenizers: [{
                            from: P,
                            to: g(t)
                        }]
                    }),
                    languageData: {
                        commentTokens: {
                            line: "--",
                            block: {
                                open: "/*",
                                close: "*/"
                            }
                        },
                        closeBrackets: {
                            brackets: ["(", "[", "{", "'", '"', "`"]
                        }
                    }
                });
                return new W(t,O)
            }
        }
        function Z(e, t=!1) {
            var O;
            let n;
            return n = Object.keys(O = e.dialect.words).map(e=>({
                label: t ? e.toUpperCase() : e,
                type: 21 == O[e] ? "type" : 20 == O[e] ? "keyword" : "variable",
                boost: -1
            })),
            (0,
            a.eC)(["QuotedIdentifier", "SpecialVar", "String", "LineComment", "BlockComment", "."], (0,
            a.Mb)(n))
        }
        function z(e, t=!1) {
            return e.language.data.of({
                autocomplete: Z(e, t)
            })
        }
        function q(e) {
            return e.schema ? function(e, t, O, r, i) {
                let a = new T
                  , o = a.child(i || "");
                for (let t in e) {
                    let O = t.indexOf(".");
                    (O > -1 ? a.child(t.slice(0, O)) : o).child(O > -1 ? t.slice(O + 1) : t).list = e[t].map(e=>"string" == typeof e ? {
                        label: e,
                        type: "property"
                    } : e)
                }
                for (let e in o.list = (t || o.childCompletions("type")).concat(r ? o.child(r).list : []),
                a.children) {
                    let t = a.child(e);
                    t.list.length || (t.list = t.childCompletions("type"))
                }
                return a.list = o.list.concat(O || a.childCompletions("type")),
                e=>{
                    var t, O, i;
                    let s, l;
                    let {parents: c, from: u, quoted: p, empty: d, aliases: f} = (t = e.state,
                    O = e.pos,
                    s = (0,
                    n.qz)(t).resolveInner(O, -1),
                    l = function(e, t) {
                        let O;
                        for (let e = t; !O; e = e.parent) {
                            if (!e)
                                return null;
                            "Statement" == e.name && (O = e)
                        }
                        let n = null;
                        for (let t = O.firstChild, r = !1, i = null; t; t = t.nextSibling) {
                            let O = "Keyword" == t.name ? e.sliceString(t.from, t.to).toLowerCase() : null
                              , a = null;
                            if (r) {
                                if ("as" == O && i && x(t.nextSibling))
                                    a = y(e, t.nextSibling);
                                else if (O && v.has(O))
                                    break;
                                else
                                    i && x(t) && (a = y(e, t))
                            } else
                                r = "from" == O;
                            a && (n || (n = Object.create(null)),
                            n[a] = function(e, t) {
                                if ("CompositeIdentifier" == t.name) {
                                    let O = [];
                                    for (let n = t.firstChild; n; n = n.nextSibling)
                                        x(n) && O.push(y(e, n));
                                    return O
                                }
                                return [y(e, t)]
                            }(e, i)),
                            i = /Identifier$/.test(t.name) ? t : null
                        }
                        return n
                    }(t.doc, s),
                    "Identifier" == s.name || "QuotedIdentifier" == s.name || "Keyword" == s.name ? {
                        from: s.from,
                        quoted: "QuotedIdentifier" == s.name ? t.doc.sliceString(s.from, s.from + 1) : null,
                        parents: X(t.doc, b(s)),
                        aliases: l
                    } : "." == s.name ? {
                        from: O,
                        quoted: null,
                        parents: X(t.doc, s),
                        aliases: l
                    } : {
                        from: O,
                        quoted: null,
                        parents: [],
                        empty: !0,
                        aliases: l
                    });
                    if (d && !e.explicit)
                        return null;
                    f && 1 == c.length && (c = f[c[0]] || c);
                    let h = a;
                    for (let e of c) {
                        for (; !h.children || !h.children[e]; )
                            if (h == a)
                                h = o;
                            else {
                                if (h != o || !r)
                                    return null;
                                h = h.child(r)
                            }
                        h = h.child(e)
                    }
                    let m = p && e.state.sliceDoc(e.pos, e.pos + 1) == p
                      , Q = h.list;
                    return h == a && f && (Q = Q.concat(Object.keys(f).map(e=>({
                        label: e,
                        type: "constant"
                    })))),
                    {
                        from: u,
                        to: m ? e.pos + 1 : void 0,
                        options: (i = Q,
                        p ? i.map(e=>Object.assign(Object.assign({}, e), {
                            label: p + e.label + p,
                            apply: void 0
                        })) : i),
                        validFor: p ? w : k
                    }
                }
            }(e.schema, e.tables, e.schemas, e.defaultTable, e.defaultSchema) : ()=>null
        }
        function Y(e) {
            return e.schema ? (e.dialect || U).language.data.of({
                autocomplete: q(e)
            }) : []
        }
        function R(e={}) {
            let t = e.dialect || U;
            return new n.ri(t.language,[Y(e), z(t, !!e.upperCaseKeywords)])
        }
        let U = W.define({})
          , V = W.define({
            charSetCasts: !0,
            doubleDollarQuotedStrings: !0,
            operatorChars: "+-*/<>=~!@#%^&|`?",
            specialVar: "",
            keywords: Q + "a abort abs absent access according ada admin aggregate alias also always analyse analyze array_agg array_max_cardinality asensitive assert assignment asymmetric atomic attach attribute attributes avg backward base64 begin_frame begin_partition bernoulli bit_length blocked bom c cache called cardinality catalog_name ceil ceiling chain char_length character_length character_set_catalog character_set_name character_set_schema characteristics characters checkpoint class class_origin cluster coalesce cobol collation_catalog collation_name collation_schema collect column_name columns command_function command_function_code comment comments committed concurrently condition_number configuration conflict connection_name constant constraint_catalog constraint_name constraint_schema contains content control conversion convert copy corr cost covar_pop covar_samp csv cume_dist current_catalog current_row current_schema cursor_name database datalink datatype datetime_interval_code datetime_interval_precision db debug defaults defined definer degree delimiter delimiters dense_rank depends derived detach detail dictionary disable discard dispatch dlnewcopy dlpreviouscopy dlurlcomplete dlurlcompleteonly dlurlcompletewrite dlurlpath dlurlpathonly dlurlpathwrite dlurlscheme dlurlserver dlvalue document dump dynamic_function dynamic_function_code element elsif empty enable encoding encrypted end_frame end_partition endexec enforced enum errcode error event every exclude excluding exclusive exp explain expression extension extract family file filter final first_value flag floor following force foreach fortran forward frame_row freeze fs functions fusion g generated granted greatest groups handler header hex hierarchy hint id ignore ilike immediately immutable implementation implicit import include including increment indent index indexes info inherit inherits inline insensitive instance instantiable instead integrity intersection invoker isnull k key_member key_type label lag last_value lead leakproof least length library like_regex link listen ln load location lock locked log logged lower m mapping matched materialized max max_cardinality maxvalue member merge message message_length message_octet_length message_text min minvalue mod mode more move multiset mumps name namespace nfc nfd nfkc nfkd nil normalize normalized nothing notice notify notnull nowait nth_value ntile nullable nullif nulls number occurrences_regex octet_length octets off offset oids operator options ordering others over overlay overriding owned owner p parallel parameter_mode parameter_name parameter_ordinal_position parameter_specific_catalog parameter_specific_name parameter_specific_schema parser partition pascal passing passthrough password percent percent_rank percentile_cont percentile_disc perform period permission pg_context pg_datatype_name pg_exception_context pg_exception_detail pg_exception_hint placing plans pli policy portion position position_regex power precedes preceding prepared print_strict_params procedural procedures program publication query quote raise range rank reassign recheck recovery refresh regr_avgx regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy regr_syy reindex rename repeatable replace replica requiring reset respect restart restore result_oid returned_cardinality returned_length returned_octet_length returned_sqlstate returning reverse routine_catalog routine_name routine_schema routines row_count row_number rowtype rule scale schema_name schemas scope scope_catalog scope_name scope_schema security selective self sensitive sequence sequences serializable server server_name setof share show simple skip slice snapshot source specific_name sqlcode sqlerror sqrt stable stacked standalone statement statistics stddev_pop stddev_samp stdin stdout storage strict strip structure style subclass_origin submultiset subscription substring substring_regex succeeds sum symmetric sysid system system_time t table_name tables tablesample tablespace temp template ties token top_level_count transaction_active transactions_committed transactions_rolled_back transform transforms translate translate_regex trigger_catalog trigger_name trigger_schema trim trim_array truncate trusted type types uescape unbounded uncommitted unencrypted unlink unlisten unlogged unnamed untyped upper uri use_column use_variable user_defined_type_catalog user_defined_type_code user_defined_type_name user_defined_type_schema vacuum valid validate validator value_of var_pop var_samp varbinary variable_conflict variadic verbose version versioning views volatile warning whitespace width_bucket window within wrapper xmlagg xmlattributes xmlbinary xmlcast xmlcomment xmlconcat xmldeclaration xmldocument xmlelement xmlexists xmlforest xmliterate xmlnamespaces xmlparse xmlpi xmlquery xmlroot xmlschema xmlserialize xmltable xmltext xmlvalidate yes",
            types: m + "bigint int8 bigserial serial8 varbit bool box bytea cidr circle precision float8 inet int4 json jsonb line lseg macaddr macaddr8 money numeric pg_lsn point polygon float4 int2 smallserial serial2 serial serial4 text timetz timestamptz tsquery tsvector txid_snapshot uuid xml"
        })
          , E = "accessible algorithm analyze asensitive authors auto_increment autocommit avg avg_row_length binlog btree cache catalog_name chain change changed checkpoint checksum class_origin client_statistics coalesce code collations columns comment committed completion concurrent consistent contains contributors convert database databases day_hour day_microsecond day_minute day_second delay_key_write delayed delimiter des_key_file dev_pop dev_samp deviance directory disable discard distinctrow div dual dumpfile enable enclosed ends engine engines enum errors escaped even event events every explain extended fast field fields flush force found_rows fulltext grants handler hash high_priority hosts hour_microsecond hour_minute hour_second ignore ignore_server_ids import index index_statistics infile innodb insensitive insert_method install invoker iterate keys kill linear lines list load lock logs low_priority master master_heartbeat_period master_ssl_verify_server_cert masters max max_rows maxvalue message_text middleint migrate min min_rows minute_microsecond minute_second mod mode modify mutex mysql_errno no_write_to_binlog offline offset one online optimize optionally outfile pack_keys parser partition partitions password phase plugin plugins prev processlist profile profiles purge query quick range read_write rebuild recover regexp relaylog remove rename reorganize repair repeatable replace require resume rlike row_format rtree schedule schema_name schemas second_microsecond security sensitive separator serializable server share show slave slow snapshot soname spatial sql_big_result sql_buffer_result sql_cache sql_calc_found_rows sql_no_cache sql_small_result ssl starting starts std stddev stddev_pop stddev_samp storage straight_join subclass_origin sum suspend table_name table_statistics tables tablespace terminated triggers truncate uncommitted uninstall unlock upgrade use use_frm user_resources user_statistics utc_date utc_time utc_timestamp variables views warnings xa xor year_month zerofill"
          , j = m + "bool blob long longblob longtext medium mediumblob mediumint mediumtext tinyblob tinyint tinytext text bigint int1 int2 int3 int4 int8 float4 float8 varbinary varcharacter precision datetime unsigned signed"
          , G = "charset clear edit ego help nopager notee nowarning pager print prompt quit rehash source status system tee"
          , C = W.define({
            operatorChars: "*+-%<>!=&|^",
            charSetCasts: !0,
            doubleQuotedStrings: !0,
            unquotedBitLiterals: !0,
            hashComments: !0,
            spaceAfterDashes: !0,
            specialVar: "@?",
            identifierQuotes: "`",
            keywords: Q + "group_concat " + E,
            types: j,
            builtin: G
        })
          , A = W.define({
            operatorChars: "*+-%<>!=&|^",
            charSetCasts: !0,
            doubleQuotedStrings: !0,
            unquotedBitLiterals: !0,
            hashComments: !0,
            spaceAfterDashes: !0,
            specialVar: "@?",
            identifierQuotes: "`",
            keywords: Q + "always generated groupby_concat hard persistent shutdown soft virtual " + E,
            types: j,
            builtin: G
        })
          , I = W.define({
            keywords: Q + "trigger proc view index for add constraint key primary foreign collate clustered nonclustered declare exec go if use index holdlock nolock nowait paglock pivot readcommitted readcommittedlock readpast readuncommitted repeatableread rowlock serializable snapshot tablock tablockx unpivot updlock with",
            types: m + "bigint smallint smallmoney tinyint money real text nvarchar ntext varbinary image hierarchyid uniqueidentifier sql_variant xml",
            builtin: "binary_checksum checksum connectionproperty context_info current_request_id error_line error_message error_number error_procedure error_severity error_state formatmessage get_filestream_transaction_context getansinull host_id host_name isnull isnumeric min_active_rowversion newid newsequentialid rowcount_big xact_state object_id",
            operatorChars: "*+-%<>!=^&|/",
            specialVar: "@"
        })
          , J = W.define({
            keywords: Q + "abort analyze attach autoincrement conflict database detach exclusive fail glob ignore index indexed instead isnull notnull offset plan pragma query raise regexp reindex rename replace temp vacuum virtual",
            types: m + "bool blob long longblob longtext medium mediumblob mediumint mediumtext tinyblob tinyint tinytext text bigint int2 int8 unsigned signed real",
            builtin: "auth backup bail changes clone databases dbinfo dump echo eqp explain fullschema headers help import imposter indexes iotrace lint load log mode nullvalue once print prompt quit restore save scanstats separator shell show stats system tables testcase timeout timer trace vfsinfo vfslist vfsname width",
            operatorChars: "*+-%<>!=&|/~",
            identifierQuotes: '`"',
            specialVar: "@:?$"
        })
          , N = W.define({
            keywords: "add all allow alter and any apply as asc authorize batch begin by clustering columnfamily compact consistency count create custom delete desc distinct drop each_quorum exists filtering from grant if in index insert into key keyspace keyspaces level limit local_one local_quorum modify nan norecursive nosuperuser not of on one order password permission permissions primary quorum rename revoke schema select set storage superuser table three to token truncate ttl two type unlogged update use user users using values where with writetime infinity NaN",
            types: m + "ascii bigint blob counter frozen inet list map static text timeuuid tuple uuid varint",
            slashComments: !0
        })
          , D = W.define({
            keywords: Q + "abort accept access add all alter and any arraylen as asc assert assign at attributes audit authorization avg base_table begin between binary_integer body by case cast char_base check close cluster clusters colauth column comment commit compress connected constant constraint crash create current currval cursor data_base database dba deallocate debugoff debugon declare default definition delay delete desc digits dispose distinct do drop else elseif elsif enable end entry exception exception_init exchange exclusive exists external fast fetch file for force form from function generic goto grant group having identified if immediate in increment index indexes indicator initial initrans insert interface intersect into is key level library like limited local lock log logging loop master maxextents maxtrans member minextents minus mislabel mode modify multiset new next no noaudit nocompress nologging noparallel not nowait number_base of off offline on online only option or order out package parallel partition pctfree pctincrease pctused pls_integer positive positiven pragma primary prior private privileges procedure public raise range raw rebuild record ref references refresh rename replace resource restrict return returning returns reverse revoke rollback row rowid rowlabel rownum rows run savepoint schema segment select separate set share snapshot some space split sql start statement storage subtype successful synonym tabauth table tables tablespace task terminate then to trigger truncate type union unique unlimited unrecoverable unusable update use using validate value values variable view views when whenever where while with work",
            builtin: "appinfo arraysize autocommit autoprint autorecovery autotrace blockterminator break btitle cmdsep colsep compatibility compute concat copycommit copytypecheck define echo editfile embedded feedback flagger flush heading headsep instance linesize lno loboffset logsource longchunksize markup native newpage numformat numwidth pagesize pause pno recsep recsepchar repfooter repheader serveroutput shiftinout show showmode spool sqlblanklines sqlcase sqlcode sqlcontinue sqlnumber sqlpluscompatibility sqlprefix sqlprompt sqlterminator suffix tab term termout timing trimout trimspool ttitle underline verify version wrap",
            types: m + "ascii bfile bfilename bigserial bit blob dec long number nvarchar nvarchar2 serial smallint string text uid varchar2 xml",
            operatorChars: "*/+-%<>!=~",
            doubleQuotedStrings: !0,
            charSetCasts: !0
        })
    },
    658: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            wast: function() {
                return l
            },
            wastLanguage: function() {
                return s
            }
        });
        var n = O(168)
          , r = O(5306)
          , i = O(2679);
        let a = {
            __proto__: null,
            anyref: 34,
            dataref: 34,
            eqref: 34,
            externref: 34,
            i31ref: 34,
            funcref: 34,
            i8: 34,
            i16: 34,
            i32: 34,
            i64: 34,
            f32: 34,
            f64: 34
        }
          , o = i.WQ.deserialize({
            version: 14,
            states: "!^Q]QPOOOqQPO'#CbOOQO'#Cd'#CdOOQO'#Cl'#ClOOQO'#Ch'#ChQ]QPOOOOQO,58|,58|OxQPO,58|OOQO-E6f-E6fOOQO1G.h1G.h",
            stateData: "!P~O_OSPOSQOS~OTPOVROXROYROZROaQO~OSUO~P]OSXO~P]O",
            goto: "xaPPPPPPbPbPPPhPPPrXROPTVQTOQVPTWTVXSOPTV",
            nodeNames: "⚠ LineComment BlockComment Module ) ( App Identifier Type Keyword Number String",
            maxTerm: 17,
            nodeProps: [["openedBy", 4, "("], ["closedBy", 5, ")"], ["group", -6, 6, 7, 8, 9, 10, 11, "Expression"]],
            skippedNodes: [0, 1, 2],
            repeatNodeCount: 1,
            tokenData: "/Q~R^XY}YZ}]^}pq}rs!Stu!qxy&Vyz'S{|'X}!O'X!Q!R'b!R![)_!]!^,{#T#o-^~!SO_~~!VTOr!Srs!fs#O!S#O#P!k#P~!S~!kOZ~~!nPO~!S~!tiqr$cst$ctu$cuv$cvw$cwx$cz{$c{|$c}!O$c!O!P$c!P!Q$c!Q![$c![!]$c!^!_$c!_!`$c!`!a$c!a!b$c!b!c$c!c!}$c#Q#R$c#R#S$c#S#T$c#T#o$c#p#q$c#r#s$c~$hiV~qr$cst$ctu$cuv$cvw$cwx$cz{$c{|$c}!O$c!O!P$c!P!Q$c!Q![$c![!]$c!^!_$c!_!`$c!`!a$c!a!b$c!b!c$c!c!}$c#Q#R$c#R#S$c#S#T$c#T#o$c#p#q$c#r#s$c~&[PT~!]!^&_~&bRO!]&_!]!^&k!^~&_~&nTOy&_yz&}z!]&_!]!^&k!^~&_~'SOQ~~'XOS~~'[Q!Q!R'b!R![)_~'gUY~!O!P'y!Q![)_!g!h(j#R#S)s#X#Y(j#l#m)y~(ORY~!Q![(X!g!h(j#X#Y(j~(^SY~!Q![(X!g!h(j#R#S)X#X#Y(j~(mR{|(v}!O(v!Q![(|~(yP!Q![(|~)RQY~!Q![(|#R#S(v~)[P!Q![(X~)dTY~!O!P'y!Q![)_!g!h(j#R#S)s#X#Y(j~)vP!Q![)_~)|R!Q![*V!c!i*V#T#Z*V~*[VY~!O!P*q!Q![*V!c!i*V!r!s+n#R#S)y#T#Z*V#d#e+n~*vTY~!Q![+V!c!i+V!r!s+n#T#Z+V#d#e+n~+[UY~!Q![+V!c!i+V!r!s+n#R#S,o#T#Z+V#d#e+n~+qT{|,Q}!O,Q!Q![,^!c!i,^#T#Z,^~,TR!Q![,^!c!i,^#T#Z,^~,cSY~!Q![,^!c!i,^#R#S,Q#T#Z,^~,rR!Q![+V!c!i+V#T#Z+V~-OP!]!^-R~-WQP~OY-RZ~-R~-ciX~qr-^st-^tu-^uv-^vw-^wx-^z{-^{|-^}!O-^!O!P-^!P!Q-^!Q![-^![!]-^!^!_-^!_!`-^!`!a-^!a!b-^!b!c-^!c!}-^#Q#R-^#R#S-^#S#T-^#T#o-^#p#q-^#r#s-^",
            tokenizers: [0],
            topRules: {
                Module: [0, 3]
            },
            specialized: [{
                term: 9,
                get: e=>a[e] || -1
            }],
            tokenPrec: 0
        })
          , s = n.qp.define({
            name: "wast",
            parser: o.configure({
                props: [n.uj.add({
                    App: (0,
                    n.vw)({
                        closing: ")",
                        align: !1
                    })
                }), n.x0.add({
                    App: n.Dv,
                    BlockComment: e=>({
                        from: e.from + 2,
                        to: e.to - 2
                    })
                }), (0,
                r.Gv)({
                    Keyword: r.pJ.keyword,
                    Type: r.pJ.typeName,
                    Number: r.pJ.number,
                    String: r.pJ.string,
                    Identifier: r.pJ.variableName,
                    LineComment: r.pJ.lineComment,
                    BlockComment: r.pJ.blockComment,
                    "( )": r.pJ.paren
                })]
            }),
            languageData: {
                commentTokens: {
                    line: ";;",
                    block: {
                        open: "(;",
                        close: ";)"
                    }
                },
                closeBrackets: {
                    brackets: ["(", '"']
                }
            }
        });
        function l() {
            return new n.ri(s)
        }
    },
    6456: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            completeFromSchema: function() {
                return v
            },
            xml: function() {
                return w
            },
            xmlLanguage: function() {
                return k
            }
        });
        var n = O(2679)
          , r = O(5306);
        let i = null
          , a = null
          , o = 0;
        function s(e, t) {
            var O;
            let n = e.pos + t;
            if (a == e && o == n)
                return i;
            for (; 9 == (O = e.peek(t)) || 10 == O || 13 == O || 32 == O; )
                t++;
            let r = "";
            for (; ; ) {
                let O = e.peek(t);
                if (!(45 == O || 46 == O || 58 == O || O >= 65 && O <= 90 || 95 == O || O >= 97 && O <= 122 || O >= 161))
                    break;
                r += String.fromCharCode(O),
                t++
            }
            return a = e,
            o = n,
            i = r || null
        }
        function l(e, t) {
            this.name = e,
            this.parent = t,
            this.hash = t ? t.hash : 0;
            for (let t = 0; t < e.length; t++)
                this.hash += (this.hash << 4) + e.charCodeAt(t) + (e.charCodeAt(t) << 8)
        }
        let c = new n.IK({
            start: null,
            shift: (e,t,O,n)=>1 == t ? new l(s(n, 1) || "",e) : e,
            reduce: (e,t)=>11 == t && e ? e.parent : e,
            reuse(e, t, O, n) {
                let r = t.type.id;
                return 1 == r || 13 == r ? new l(s(n, 1) || "",e) : e
            },
            hash: e=>e ? e.hash : 0,
            strict: !1
        })
          , u = new n.Jq((e,t)=>{
            if (60 == e.next) {
                if (e.advance(),
                47 == e.next) {
                    e.advance();
                    let O = s(e, 0);
                    if (!O)
                        return e.acceptToken(5);
                    if (t.context && O == t.context.name)
                        return e.acceptToken(2);
                    for (let n = t.context; n; n = n.parent)
                        if (n.name == O)
                            return e.acceptToken(3, -2);
                    e.acceptToken(4)
                } else if (33 != e.next && 63 != e.next)
                    return e.acceptToken(1)
            }
        }
        ,{
            contextual: !0
        });
        function p(e, t) {
            return new n.Jq(O=>{
                for (let n = 0, r = 0; ; r++) {
                    if (O.next < 0) {
                        r && O.acceptToken(e);
                        break
                    }
                    if (O.next == t.charCodeAt(n)) {
                        if (++n == t.length) {
                            r >= t.length && O.acceptToken(e, 1 - t.length);
                            break
                        }
                    } else
                        n = O.next == t.charCodeAt(0) ? 1 : 0;
                    O.advance()
                }
            }
            )
        }
        let d = p(35, "-->")
          , f = p(36, "?>")
          , h = p(37, "]]>")
          , m = (0,
        r.Gv)({
            Text: r.pJ.content,
            "StartTag StartCloseTag EndTag SelfCloseEndTag": r.pJ.angleBracket,
            TagName: r.pJ.tagName,
            "MismatchedCloseTag/Tagname": [r.pJ.tagName, r.pJ.invalid],
            AttributeName: r.pJ.attributeName,
            AttributeValue: r.pJ.attributeValue,
            Is: r.pJ.definitionOperator,
            "EntityReference CharacterReference": r.pJ.character,
            Comment: r.pJ.blockComment,
            ProcessingInst: r.pJ.processingInstruction,
            DoctypeDecl: r.pJ.documentMeta,
            Cdata: r.pJ.special(r.pJ.string)
        })
          , Q = n.WQ.deserialize({
            version: 14,
            states: ",SOQOaOOOrOxO'#CfOzOpO'#CiO!tOaO'#CgOOOP'#Cg'#CgO!{OrO'#CrO#TOtO'#CsO#]OpO'#CtOOOP'#DS'#DSOOOP'#Cv'#CvQQOaOOOOOW'#Cw'#CwO#eOxO,59QOOOP,59Q,59QOOOO'#Cx'#CxO#mOpO,59TO#uO!bO,59TOOOP'#C{'#C{O$TOaO,59RO$[OpO'#CoOOOP,59R,59ROOOQ'#C|'#C|O$dOrO,59^OOOP,59^,59^OOOS'#C}'#C}O$lOtO,59_OOOP,59_,59_O$tOpO,59`O$|OpO,59`OOOP-E6t-E6tOOOW-E6u-E6uOOOP1G.l1G.lOOOO-E6v-E6vO%UO!bO1G.oO%UO!bO1G.oO%dOpO'#CkO%lO!bO'#CyO%zO!bO1G.oOOOP1G.o1G.oOOOP1G.w1G.wOOOP-E6y-E6yOOOP1G.m1G.mO&VOpO,59ZO&_OpO,59ZOOOQ-E6z-E6zOOOP1G.x1G.xOOOS-E6{-E6{OOOP1G.y1G.yO&gOpO1G.zO&gOpO1G.zOOOP1G.z1G.zO&oO!bO7+$ZO&}O!bO7+$ZOOOP7+$Z7+$ZOOOP7+$c7+$cO'YOpO,59VO'bOpO,59VO'jO!bO,59eOOOO-E6w-E6wO'xOpO1G.uO'xOpO1G.uOOOP1G.u1G.uO(QOpO7+$fOOOP7+$f7+$fO(YO!bO<<GuOOOP<<Gu<<GuOOOP<<G}<<G}O'bOpO1G.qO'bOpO1G.qO(eO#tO'#CnOOOO1G.q1G.qO(sOpO7+$aOOOP7+$a7+$aOOOP<<HQ<<HQOOOPAN=aAN=aOOOPAN=iAN=iO'bOpO7+$]OOOO7+$]7+$]OOOO'#Cz'#CzO({O#tO,59YOOOO,59Y,59YOOOP<<G{<<G{OOOO<<Gw<<GwOOOO-E6x-E6xOOOO1G.t1G.t",
            stateData: ")Z~OPQOSVOTWOVWOWWOXWOiXOxPO}TO!PUO~OuZOw]O~O^`Oy^O~OPQOQcOSVOTWOVWOWWOXWOxPO}TO!PUO~ORdO~P!SOseO|gO~OthO!OjO~O^lOy^O~OuZOwoO~O^qOy^O~O[vO`sOdwOy^O~ORyO~P!SO^{Oy^O~OseO|}O~OthO!O!PO~O^!QOy^O~O[!SOy^O~O[!VO`sOd!WOy^O~Oa!YOy^O~Oy^O[mX`mXdmX~O[!VO`sOd!WO~O^!]Oy^O~O[!_Oy^O~O[!aOy^O~O[!cO`sOd!dOy^O~O[!cO`sOd!dO~Oa!eOy^O~Oy^Oz!gO~Oy^O[ma`madma~O[!jOy^O~O[!kOy^O~O[!lO`sOd!mO~OW!pOX!pOz!rO{!pO~O[!sOy^O~OW!pOX!pOz!vO{!pO~O",
            goto: "%[wPPPPPPPPPPxxP!OP!UPP!_!iP!oxxxP!u!{#R$Z$j$p$v$|PPPP%SXWORYbXRORYb_t`qru!T!U!bQ!h!YS!o!e!fR!t!nQdRRybXSORYbQYORmYQ[PRn[Q_QQkVjp_krz!R!T!X!Z!^!`!f!i!nQr`QzcQ!RlQ!TqQ!XsQ!ZtQ!^{Q!`!QQ!f!YQ!i!]R!n!eQu`S!UqrU![u!U!bR!b!TQ!q!gR!u!qQbRRxbQfTR|fQiUR!OiSXOYTaRb",
            nodeNames: "⚠ StartTag StartCloseTag MissingCloseTag StartCloseTag StartCloseTag Document Text EntityReference CharacterReference Cdata Element EndTag OpenTag TagName Attribute AttributeName Is AttributeValue CloseTag SelfCloseEndTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag DoctypeDecl",
            maxTerm: 47,
            context: c,
            nodeProps: [["closedBy", 1, "SelfCloseEndTag EndTag", 13, "CloseTag MissingCloseTag"], ["openedBy", 12, "StartTag StartCloseTag", 19, "OpenTag", 20, "StartTag"]],
            propSources: [m],
            skippedNodes: [0],
            repeatNodeCount: 8,
            tokenData: "IX~R!XOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs'ssv$nvw(Zw}$n}!O*l!O!P$n!P!Q,{!Q![$n![!].e!]!^$n!^!_1v!_!`Cz!`!aDm!a!bE`!b!c$n!c!}.e!}#P$n#P#QFx#Q#R$n#R#S.e#S#T$n#T#o.e#o%W$n%W%o.e%o%p$n%p&a.e&a&b$n&b1p.e1p4U$n4U4d.e4d4e$n4e$IS.e$IS$I`$n$I`$Ib.e$Ib$Kh$n$Kh%#t.e%#t&/x$n&/x&Et.e&Et&FV$n&FV;'S.e;'S;:j1p;:j;=`&e<%l?&r$n?&r?Ah.e?Ah?BY$n?BY?Mn.e?MnO$nX$uWVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nP%dTVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_P%vP;=`<%l%_W&OT{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yW&bP;=`<%l%yX&hP;=`<%l$n_&t_VP{WyUOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ'zTzYVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_~(^VOp(sqs(sst)ht!](s!^;'S(s;'S;=`)b<%lO(s~(vVOp(sqs(st!](s!]!^)]!^;'S(s;'S;=`)b<%lO(s~)bOW~~)eP;=`<%l(s~)kTOp)zq!])z!^;'S)z;'S;=`*f<%lO)z~)}UOp)zq!])z!]!^*a!^;'S)z;'S;=`*f<%lO)z~*fOX~~*iP;=`<%l)zZ*sYVP{WOr$nrs%_sv$nw}$n}!O+c!O!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ+jYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a,Y!a;'S$n;'S;=`&e<%lO$nZ,cW|QVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n]-SYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a-r!a;'S$n;'S;=`&e<%lO$n]-{WdSVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_.p!O`S^QVP{WOr$nrs%_sv$nw}$n}!O.e!O!P.e!P!Q$n!Q![.e![!].e!]!^$n!^!_%y!_!c$n!c!}.e!}#R$n#R#S.e#S#T$n#T#o.e#o$}$n$}%O.e%O%W$n%W%o.e%o%p$n%p&a.e&a&b$n&b1p.e1p4U.e4U4d.e4d4e$n4e$IS.e$IS$I`$n$I`$Ib.e$Ib$Je$n$Je$Jg.e$Jg$Kh$n$Kh%#t.e%#t&/x$n&/x&Et.e&Et&FV$n&FV;'S.e;'S;:j1p;:j;=`&e<%l?&r$n?&r?Ah.e?Ah?BY$n?BY?Mn.e?MnO$n_1sP;=`<%l.eX1{W{WOq%yqr2esv%yw!a%y!a!bCd!b;'S%y;'S;=`&_<%lO%yX2j]{WOr%ysv%yw}%y}!O3c!O!f%y!f!g4e!g!}%y!}#O9t#O#W%y#W#X@Q#X;'S%y;'S;=`&_<%lO%yX3hV{WOr%ysv%yw}%y}!O3}!O;'S%y;'S;=`&_<%lO%yX4UT}P{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX4jV{WOr%ysv%yw!q%y!q!r5P!r;'S%y;'S;=`&_<%lO%yX5UV{WOr%ysv%yw!e%y!e!f5k!f;'S%y;'S;=`&_<%lO%yX5pV{WOr%ysv%yw!v%y!v!w6V!w;'S%y;'S;=`&_<%lO%yX6[V{WOr%ysv%yw!{%y!{!|6q!|;'S%y;'S;=`&_<%lO%yX6vV{WOr%ysv%yw!r%y!r!s7]!s;'S%y;'S;=`&_<%lO%yX7bV{WOr%ysv%yw!g%y!g!h7w!h;'S%y;'S;=`&_<%lO%yX7|X{WOr7wrs8isv7wvw8iw!`7w!`!a9W!a;'S7w;'S;=`9n<%lO7wP8lTO!`8i!`!a8{!a;'S8i;'S;=`9Q<%lO8iP9QOiPP9TP;=`<%l8iX9_TiP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX9qP;=`<%l7wX9yX{WOr%ysv%yw!e%y!e!f:f!f#V%y#V#W=t#W;'S%y;'S;=`&_<%lO%yX:kV{WOr%ysv%yw!f%y!f!g;Q!g;'S%y;'S;=`&_<%lO%yX;VV{WOr%ysv%yw!c%y!c!d;l!d;'S%y;'S;=`&_<%lO%yX;qV{WOr%ysv%yw!v%y!v!w<W!w;'S%y;'S;=`&_<%lO%yX<]V{WOr%ysv%yw!c%y!c!d<r!d;'S%y;'S;=`&_<%lO%yX<wV{WOr%ysv%yw!}%y!}#O=^#O;'S%y;'S;=`&_<%lO%yX=eT{WxPOr%ysv%yw;'S%y;'S;=`&_<%lO%yX=yV{WOr%ysv%yw#W%y#W#X>`#X;'S%y;'S;=`&_<%lO%yX>eV{WOr%ysv%yw#T%y#T#U>z#U;'S%y;'S;=`&_<%lO%yX?PV{WOr%ysv%yw#h%y#h#i?f#i;'S%y;'S;=`&_<%lO%yX?kV{WOr%ysv%yw#T%y#T#U<r#U;'S%y;'S;=`&_<%lO%yX@VV{WOr%ysv%yw#c%y#c#d@l#d;'S%y;'S;=`&_<%lO%yX@qV{WOr%ysv%yw#V%y#V#WAW#W;'S%y;'S;=`&_<%lO%yXA]V{WOr%ysv%yw#h%y#h#iAr#i;'S%y;'S;=`&_<%lO%yXAwV{WOr%ysv%yw#m%y#m#nB^#n;'S%y;'S;=`&_<%lO%yXBcV{WOr%ysv%yw#d%y#d#eBx#e;'S%y;'S;=`&_<%lO%yXB}V{WOr%ysv%yw#X%y#X#Y7w#Y;'S%y;'S;=`&_<%lO%yXCkT!PP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yZDTWaQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_DvW[UVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZEgYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aFV!a;'S$n;'S;=`&e<%lO$nZF`W!OQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZGPYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_#P$n#P#QGo#Q;'S$n;'S;=`&e<%lO$nZGvYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aHf!a;'S$n;'S;=`&e<%lO$nZHoWwQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n",
            tokenizers: [u, d, f, h, 0, 1, 2, 3],
            topRules: {
                Document: [0, 6]
            },
            tokenPrec: 0
        });
        var $ = O(168);
        function g(e, t) {
            let O = t && t.getChild("TagName");
            return O ? e.sliceString(O.from, O.to) : ""
        }
        function P(e, t) {
            let O = t && t.firstChild;
            return O && "OpenTag" == O.name ? g(e, O) : ""
        }
        function S(e) {
            for (let t = e && e.parent; t; t = t.parent)
                if ("Element" == t.name)
                    return t;
            return null
        }
        class b {
            constructor(e, t, O) {
                this.attrs = t,
                this.attrValues = O,
                this.children = [],
                this.name = e.name,
                this.completion = Object.assign(Object.assign({
                    type: "type"
                }, e.completion || {}), {
                    label: this.name
                }),
                this.openCompletion = Object.assign(Object.assign({}, this.completion), {
                    label: "<" + this.name
                }),
                this.closeCompletion = Object.assign(Object.assign({}, this.completion), {
                    label: "</" + this.name + ">",
                    boost: 2
                }),
                this.closeNameCompletion = Object.assign(Object.assign({}, this.completion), {
                    label: this.name + ">"
                }),
                this.text = e.textContent ? e.textContent.map(e=>({
                    label: e,
                    type: "text"
                })) : []
            }
        }
        let y = /^[:\-\.\w\u00b7-\uffff]*$/;
        function x(e) {
            return Object.assign(Object.assign({
                type: "property"
            }, e.completion || {}), {
                label: e.name
            })
        }
        function X(e) {
            return "string" == typeof e ? {
                label: `"${e}"`,
                type: "constant"
            } : /^"/.test(e.label) ? e : Object.assign(Object.assign({}, e), {
                label: `"${e.label}"`
            })
        }
        function v(e, t) {
            let O = []
              , n = []
              , r = Object.create(null);
            for (let e of t) {
                let t = x(e);
                O.push(t),
                e.global && n.push(t),
                e.values && (r[e.name] = e.values.map(X))
            }
            let i = []
              , a = []
              , o = Object.create(null);
            for (let t of e) {
                let e = n
                  , s = r;
                t.attributes && (e = e.concat(t.attributes.map(e=>"string" == typeof e ? O.find(t=>t.label == e) || {
                    label: e,
                    type: "property"
                } : (e.values && (s == r && (s = Object.create(s)),
                s[e.name] = e.values.map(X)),
                x(e)))));
                let l = new b(t,e,s);
                o[l.name] = l,
                i.push(l),
                t.top && a.push(l)
            }
            a.length || (a = i);
            for (let t = 0; t < i.length; t++) {
                let O = e[t]
                  , n = i[t];
                if (O.children)
                    for (let e of O.children)
                        o[e] && n.children.push(o[e]);
                else
                    n.children = i
            }
            return e=>{
                var t;
                let {doc: O} = e.state
                  , s = function(e, t) {
                    var O;
                    let n = (0,
                    $.qz)(e).resolveInner(t, -1)
                      , r = null;
                    for (let e = n; !r && e.parent; e = e.parent)
                        ("OpenTag" == e.name || "CloseTag" == e.name || "SelfClosingTag" == e.name || "MismatchedCloseTag" == e.name) && (r = e);
                    if (r && (r.to > t || r.lastChild.type.isError)) {
                        let e = r.parent;
                        if ("TagName" == n.name)
                            return "CloseTag" == r.name || "MismatchedCloseTag" == r.name ? {
                                type: "closeTag",
                                from: n.from,
                                context: e
                            } : {
                                type: "openTag",
                                from: n.from,
                                context: S(e)
                            };
                        if ("AttributeName" == n.name)
                            return {
                                type: "attrName",
                                from: n.from,
                                context: r
                            };
                        if ("AttributeValue" == n.name)
                            return {
                                type: "attrValue",
                                from: n.from,
                                context: r
                            };
                        let O = n == r || "Attribute" == n.name ? n.childBefore(t) : n;
                        return (null == O ? void 0 : O.name) == "StartTag" ? {
                            type: "openTag",
                            from: t,
                            context: S(e)
                        } : (null == O ? void 0 : O.name) == "StartCloseTag" && O.to <= t ? {
                            type: "closeTag",
                            from: t,
                            context: e
                        } : (null == O ? void 0 : O.name) == "Is" ? {
                            type: "attrValue",
                            from: t,
                            context: r
                        } : O ? {
                            type: "attrName",
                            from: t,
                            context: r
                        } : null
                    }
                    if ("StartCloseTag" == n.name)
                        return {
                            type: "closeTag",
                            from: t,
                            context: n.parent
                        };
                    for (; n.parent && n.to == t && !(null === (O = n.lastChild) || void 0 === O ? void 0 : O.type.isError); )
                        n = n.parent;
                    return "Element" == n.name || "Text" == n.name || "Document" == n.name ? {
                        type: "tag",
                        from: t,
                        context: "Element" == n.name ? n : S(n)
                    } : null
                }(e.state, e.pos);
                if (!s || "tag" == s.type && !e.explicit)
                    return null;
                let {type: l, from: c, context: u} = s;
                if ("openTag" == l) {
                    let e = a
                      , t = P(O, u);
                    if (t) {
                        let O = o[t];
                        e = (null == O ? void 0 : O.children) || i
                    }
                    return {
                        from: c,
                        options: e.map(e=>e.completion),
                        validFor: y
                    }
                }
                if ("closeTag" == l) {
                    let n = P(O, u);
                    return n ? {
                        from: c,
                        to: e.pos + (">" == O.sliceString(e.pos, e.pos + 1) ? 1 : 0),
                        options: [(null === (t = o[n]) || void 0 === t ? void 0 : t.closeNameCompletion) || {
                            label: n + ">",
                            type: "type"
                        }],
                        validFor: y
                    } : null
                }
                if ("attrName" == l) {
                    let e = o[g(O, u)];
                    return {
                        from: c,
                        options: (null == e ? void 0 : e.attrs) || n,
                        validFor: y
                    }
                }
                if ("attrValue" == l) {
                    let t, n;
                    let i = (n = (t = u && u.getChildren("Attribute").find(e=>e.from <= c && e.to >= c)) && t.getChild("AttributeName")) ? O.sliceString(n.from, n.to) : "";
                    if (!i)
                        return null;
                    let a = o[g(O, u)]
                      , s = ((null == a ? void 0 : a.attrValues) || r)[i];
                    return s && s.length ? {
                        from: c,
                        to: e.pos + ('"' == O.sliceString(e.pos, e.pos + 1) ? 1 : 0),
                        options: s,
                        validFor: /^"[^"]*"?$/
                    } : null
                }
                {
                    if ("tag" != l)
                        return null;
                    let t = P(O, u)
                      , n = o[t]
                      , r = []
                      , s = u && u.lastChild;
                    t && (!s || "CloseTag" != s.name || g(O, s) != t) && r.push(n ? n.closeCompletion : {
                        label: "</" + t + ">",
                        type: "type",
                        boost: 2
                    });
                    let p = r.concat(((null == n ? void 0 : n.children) || (u ? i : a)).map(e=>e.openCompletion));
                    if (u && (null == n ? void 0 : n.text.length)) {
                        let t = u.firstChild;
                        t.to > e.pos - 20 && !/\S/.test(e.state.sliceDoc(t.to, e.pos)) && (p = p.concat(n.text))
                    }
                    return {
                        from: c,
                        options: p,
                        validFor: /^<\/?[:\-\.\w\u00b7-\uffff]*$/
                    }
                }
            }
        }
        let k = $.qp.define({
            name: "xml",
            parser: Q.configure({
                props: [$.uj.add({
                    Element(e) {
                        let t = /^\s*<\//.test(e.textAfter);
                        return e.lineIndent(e.node.from) + (t ? 0 : e.unit)
                    },
                    "OpenTag CloseTag SelfClosingTag": e=>e.column(e.node.from) + e.unit
                }), $.x0.add({
                    Element(e) {
                        let t = e.firstChild
                          , O = e.lastChild;
                        return t && "OpenTag" == t.name ? {
                            from: t.to,
                            to: "CloseTag" == O.name ? O.from : e.to
                        } : null
                    }
                }), $.a0.add({
                    "OpenTag CloseTag": e=>e.getChild("TagName")
                })]
            }),
            languageData: {
                commentTokens: {
                    block: {
                        open: "<!--",
                        close: "-->"
                    }
                },
                indentOnInput: /^\s*<\/$/
            }
        });
        function w(e={}) {
            return new $.ri(k,k.data.of({
                autocomplete: v(e.elements || [], e.attributes || [])
            }))
        }
    },
    168: function(e, t, O) {
        "use strict";
        O.d(t, {
            Be: function() {
                return $
            },
            Dv: function() {
                return I
            },
            Gn: function() {
                return Z
            },
            K0: function() {
                return W
            },
            KC: function() {
                return u
            },
            Qf: function() {
                return ed
            },
            R_: function() {
                return eg
            },
            SQ: function() {
                return p
            },
            SS: function() {
                return _
            },
            Um: function() {
                return eZ
            },
            a0: function() {
                return eT
            },
            c: function() {
                return w
            },
            c6: function() {
                return v
            },
            e7: function() {
                return er
            },
            il: function() {
                return eU
            },
            kU: function() {
                return c
            },
            mi: function() {
                return eu
            },
            n$: function() {
                return ew
            },
            nF: function() {
                return eQ
            },
            nY: function() {
                return G
            },
            pp: function() {
                return l
            },
            qp: function() {
                return f
            },
            qz: function() {
                return h
            },
            ri: function() {
                return X
            },
            rs: function() {
                return C
            },
            tC: function() {
                return j
            },
            uj: function() {
                return z
            },
            vw: function() {
                return U
            },
            x0: function() {
                return A
            },
            y1: function() {
                return T
            },
            ze: function() {
                return E
            }
        });
        var n, r = O(770), i = O(4091), a = O(6470), o = O(5306), s = O(5227);
        let l = new r.md;
        function c(e) {
            return i.r$.define({
                combine: e ? t=>t.concat(e) : void 0
            })
        }
        let u = new r.md;
        class p {
            constructor(e, t, O=[], n="") {
                this.data = e,
                this.name = n,
                i.yy.prototype.hasOwnProperty("tree") || Object.defineProperty(i.yy.prototype, "tree", {
                    get() {
                        return h(this)
                    }
                }),
                this.parser = t,
                this.extension = [x.of(this), i.yy.languageData.of((e,t,O)=>{
                    let n = d(e, t, O)
                      , r = n.type.prop(l);
                    if (!r)
                        return [];
                    let i = e.facet(r)
                      , a = n.type.prop(u);
                    if (a) {
                        let r = n.resolve(t - n.from, O);
                        for (let t of a)
                            if (t.test(r, e)) {
                                let O = e.facet(t.facet);
                                return "replace" == t.type ? O : O.concat(i)
                            }
                    }
                    return i
                }
                )].concat(O)
            }
            isActiveAt(e, t, O=-1) {
                return d(e, t, O).type.prop(l) == this.data
            }
            findRegions(e) {
                let t = e.facet(x);
                if ((null == t ? void 0 : t.data) == this.data)
                    return [{
                        from: 0,
                        to: e.doc.length
                    }];
                if (!t || !t.allowsNesting)
                    return [];
                let O = []
                  , n = (e,t)=>{
                    if (e.prop(l) == this.data) {
                        O.push({
                            from: t,
                            to: t + e.length
                        });
                        return
                    }
                    let i = e.prop(r.md.mounted);
                    if (i) {
                        if (i.tree.prop(l) == this.data) {
                            if (i.overlay)
                                for (let e of i.overlay)
                                    O.push({
                                        from: e.from + t,
                                        to: e.to + t
                                    });
                            else
                                O.push({
                                    from: t,
                                    to: t + e.length
                                });
                            return
                        }
                        if (i.overlay) {
                            let e = O.length;
                            if (n(i.tree, i.overlay[0].from + t),
                            O.length > e)
                                return
                        }
                    }
                    for (let O = 0; O < e.children.length; O++) {
                        let i = e.children[O];
                        i instanceof r.mp && n(i, e.positions[O] + t)
                    }
                }
                ;
                return n(h(e), 0),
                O
            }
            get allowsNesting() {
                return !0
            }
        }
        function d(e, t, O) {
            let n = e.facet(x)
              , i = h(e).topNode;
            if (!n || n.allowsNesting)
                for (let e = i; e; e = e.enter(t, O, r.vj.ExcludeBuffers))
                    e.type.isTop && (i = e);
            return i
        }
        p.setState = i.Py.define();
        class f extends p {
            constructor(e, t, O) {
                super(e, t, [], O),
                this.parser = t
            }
            static define(e) {
                let t = c(e.languageData);
                return new f(t,e.parser.configure({
                    props: [l.add(e=>e.isTop ? t : void 0)]
                }),e.name)
            }
            configure(e, t) {
                return new f(this.data,this.parser.configure(e),t || this.name)
            }
            get allowsNesting() {
                return this.parser.hasWrappers()
            }
        }
        function h(e) {
            let t = e.field(p.state, !1);
            return t ? t.tree : r.mp.empty
        }
        class m {
            constructor(e) {
                this.doc = e,
                this.cursorPos = 0,
                this.string = "",
                this.cursor = e.iter()
            }
            get length() {
                return this.doc.length
            }
            syncTo(e) {
                return this.string = this.cursor.next(e - this.cursorPos).value,
                this.cursorPos = e + this.string.length,
                this.cursorPos - this.string.length
            }
            chunk(e) {
                return this.syncTo(e),
                this.string
            }
            get lineChunks() {
                return !0
            }
            read(e, t) {
                let O = this.cursorPos - this.string.length;
                return e < O || t >= this.cursorPos ? this.doc.sliceString(e, t) : this.string.slice(e - O, t - O)
            }
        }
        let Q = null;
        class $ {
            constructor(e, t, O=[], n, r, i, a, o) {
                this.parser = e,
                this.state = t,
                this.fragments = O,
                this.tree = n,
                this.treeLen = r,
                this.viewport = i,
                this.skipped = a,
                this.scheduleOn = o,
                this.parse = null,
                this.tempSkipped = []
            }
            static create(e, t, O) {
                return new $(e,t,[],r.mp.empty,0,O,[],null)
            }
            startParse() {
                return this.parser.startParse(new m(this.state.doc), this.fragments)
            }
            work(e, t) {
                return (null != t && t >= this.state.doc.length && (t = void 0),
                this.tree != r.mp.empty && this.isDone(null != t ? t : this.state.doc.length)) ? (this.takeTree(),
                !0) : this.withContext(()=>{
                    var O;
                    if ("number" == typeof e) {
                        let t = Date.now() + e;
                        e = ()=>Date.now() > t
                    }
                    for (this.parse || (this.parse = this.startParse()),
                    null != t && (null == this.parse.stoppedAt || this.parse.stoppedAt > t) && t < this.state.doc.length && this.parse.stopAt(t); ; ) {
                        let n = this.parse.advance();
                        if (n) {
                            if (this.fragments = this.withoutTempSkipped(r.i9.addTree(n, this.fragments, null != this.parse.stoppedAt)),
                            this.treeLen = null !== (O = this.parse.stoppedAt) && void 0 !== O ? O : this.state.doc.length,
                            this.tree = n,
                            this.parse = null,
                            !(this.treeLen < (null != t ? t : this.state.doc.length)))
                                return !0;
                            this.parse = this.startParse()
                        }
                        if (e())
                            return !1
                    }
                }
                )
            }
            takeTree() {
                let e, t;
                this.parse && (e = this.parse.parsedPos) >= this.treeLen && ((null == this.parse.stoppedAt || this.parse.stoppedAt > e) && this.parse.stopAt(e),
                this.withContext(()=>{
                    for (; !(t = this.parse.advance()); )
                        ;
                }
                ),
                this.treeLen = e,
                this.tree = t,
                this.fragments = this.withoutTempSkipped(r.i9.addTree(this.tree, this.fragments, !0)),
                this.parse = null)
            }
            withContext(e) {
                let t = Q;
                Q = this;
                try {
                    return e()
                } finally {
                    Q = t
                }
            }
            withoutTempSkipped(e) {
                for (let t; t = this.tempSkipped.pop(); )
                    e = g(e, t.from, t.to);
                return e
            }
            changes(e, t) {
                let {fragments: O, tree: n, treeLen: i, viewport: a, skipped: o} = this;
                if (this.takeTree(),
                !e.empty) {
                    let t = [];
                    if (e.iterChangedRanges((e,O,n,r)=>t.push({
                        fromA: e,
                        toA: O,
                        fromB: n,
                        toB: r
                    })),
                    O = r.i9.applyChanges(O, t),
                    n = r.mp.empty,
                    i = 0,
                    a = {
                        from: e.mapPos(a.from, -1),
                        to: e.mapPos(a.to, 1)
                    },
                    this.skipped.length)
                        for (let t of (o = [],
                        this.skipped)) {
                            let O = e.mapPos(t.from, 1)
                              , n = e.mapPos(t.to, -1);
                            O < n && o.push({
                                from: O,
                                to: n
                            })
                        }
                }
                return new $(this.parser,t,O,n,i,a,o,this.scheduleOn)
            }
            updateViewport(e) {
                if (this.viewport.from == e.from && this.viewport.to == e.to)
                    return !1;
                this.viewport = e;
                let t = this.skipped.length;
                for (let t = 0; t < this.skipped.length; t++) {
                    let {from: O, to: n} = this.skipped[t];
                    O < e.to && n > e.from && (this.fragments = g(this.fragments, O, n),
                    this.skipped.splice(t--, 1))
                }
                return !(this.skipped.length >= t) && (this.reset(),
                !0)
            }
            reset() {
                this.parse && (this.takeTree(),
                this.parse = null)
            }
            skipUntilInView(e, t) {
                this.skipped.push({
                    from: e,
                    to: t
                })
            }
            static getSkippingParser(e) {
                return new class extends r._b {
                    createParse(t, O, n) {
                        let i = n[0].from
                          , a = n[n.length - 1].to;
                        return {
                            parsedPos: i,
                            advance() {
                                let t = Q;
                                if (t) {
                                    for (let e of n)
                                        t.tempSkipped.push(e);
                                    e && (t.scheduleOn = t.scheduleOn ? Promise.all([t.scheduleOn, e]) : e)
                                }
                                return this.parsedPos = a,
                                new r.mp(r.Jq.none,[],[],a - i)
                            },
                            stoppedAt: null,
                            stopAt() {}
                        }
                    }
                }
            }
            isDone(e) {
                e = Math.min(e, this.state.doc.length);
                let t = this.fragments;
                return this.treeLen >= e && t.length && 0 == t[0].from && t[0].to >= e
            }
            static get() {
                return Q
            }
        }
        function g(e, t, O) {
            return r.i9.applyChanges(e, [{
                fromA: t,
                toA: O,
                fromB: t,
                toB: O
            }])
        }
        class P {
            constructor(e) {
                this.context = e,
                this.tree = e.tree
            }
            apply(e) {
                if (!e.docChanged && this.tree == this.context.tree)
                    return this;
                let t = this.context.changes(e.changes, e.state)
                  , O = this.context.treeLen == e.startState.doc.length ? void 0 : Math.max(e.changes.mapPos(this.context.treeLen), t.viewport.to);
                return t.work(20, O) || t.takeTree(),
                new P(t)
            }
            static init(e) {
                let t = Math.min(3e3, e.doc.length)
                  , O = $.create(e.facet(x).parser, e, {
                    from: 0,
                    to: t
                });
                return O.work(20, t) || O.takeTree(),
                new P(O)
            }
        }
        p.state = i.QQ.define({
            create: P.init,
            update(e, t) {
                for (let e of t.effects)
                    if (e.is(p.setState))
                        return e.value;
                return t.startState.facet(x) != t.state.facet(x) ? P.init(t.state) : e.apply(t)
            }
        });
        let S = e=>{
            let t = setTimeout(()=>e(), 500);
            return ()=>clearTimeout(t)
        }
        ;
        "undefined" != typeof requestIdleCallback && (S = e=>{
            let t = -1
              , O = setTimeout(()=>{
                t = requestIdleCallback(e, {
                    timeout: 400
                })
            }
            , 100);
            return ()=>t < 0 ? clearTimeout(O) : cancelIdleCallback(t)
        }
        );
        let b = "undefined" != typeof navigator && (null === (n = navigator.scheduling) || void 0 === n ? void 0 : n.isInputPending) ? ()=>navigator.scheduling.isInputPending() : null
          , y = a.lg.fromClass(class {
            constructor(e) {
                this.view = e,
                this.working = null,
                this.workScheduled = 0,
                this.chunkEnd = -1,
                this.chunkBudget = -1,
                this.work = this.work.bind(this),
                this.scheduleWork()
            }
            update(e) {
                let t = this.view.state.field(p.state).context;
                (t.updateViewport(e.view.viewport) || this.view.viewport.to > t.treeLen) && this.scheduleWork(),
                e.docChanged && (this.view.hasFocus && (this.chunkBudget += 50),
                this.scheduleWork()),
                this.checkAsyncSchedule(t)
            }
            scheduleWork() {
                if (this.working)
                    return;
                let {state: e} = this.view
                  , t = e.field(p.state);
                t.tree == t.context.tree && t.context.isDone(e.doc.length) || (this.working = S(this.work))
            }
            work(e) {
                this.working = null;
                let t = Date.now();
                if (this.chunkEnd < t && (this.chunkEnd < 0 || this.view.hasFocus) && (this.chunkEnd = t + 3e4,
                this.chunkBudget = 3e3),
                this.chunkBudget <= 0)
                    return;
                let {state: O, viewport: {to: n}} = this.view
                  , r = O.field(p.state);
                if (r.tree == r.context.tree && r.context.isDone(n + 1e5))
                    return;
                let i = Date.now() + Math.min(this.chunkBudget, 100, e && !b ? Math.max(25, e.timeRemaining() - 5) : 1e9)
                  , a = r.context.treeLen < n && O.doc.length > n + 1e3
                  , o = r.context.work(()=>b && b() || Date.now() > i, n + (a ? 0 : 1e5));
                this.chunkBudget -= Date.now() - t,
                (o || this.chunkBudget <= 0) && (r.context.takeTree(),
                this.view.dispatch({
                    effects: p.setState.of(new P(r.context))
                })),
                this.chunkBudget > 0 && !(o && !a) && this.scheduleWork(),
                this.checkAsyncSchedule(r.context)
            }
            checkAsyncSchedule(e) {
                e.scheduleOn && (this.workScheduled++,
                e.scheduleOn.then(()=>this.scheduleWork()).catch(e=>(0,
                a.OO)(this.view.state, e)).then(()=>this.workScheduled--),
                e.scheduleOn = null)
            }
            destroy() {
                this.working && this.working()
            }
            isWorking() {
                return !!(this.working || this.workScheduled > 0)
            }
        }
        , {
            eventHandlers: {
                focus() {
                    this.scheduleWork()
                }
            }
        })
          , x = i.r$.define({
            combine: e=>e.length ? e[0] : null,
            enables: e=>[p.state, y, a.tk.contentAttributes.compute([e], t=>{
                let O = t.facet(e);
                return O && O.name ? {
                    "data-language": O.name
                } : {}
            }
            )]
        });
        class X {
            constructor(e, t=[]) {
                this.language = e,
                this.support = t,
                this.extension = [e, t]
            }
        }
        class v {
            constructor(e, t, O, n, r, i) {
                this.name = e,
                this.alias = t,
                this.extensions = O,
                this.filename = n,
                this.loadFunc = r,
                this.support = i,
                this.loading = null
            }
            load() {
                return this.loading || (this.loading = this.loadFunc().then(e=>this.support = e, e=>{
                    throw this.loading = null,
                    e
                }
                ))
            }
            static of(e) {
                let {load: t, support: O} = e;
                if (!t) {
                    if (!O)
                        throw RangeError("Must pass either 'load' or 'support' to LanguageDescription.of");
                    t = ()=>Promise.resolve(O)
                }
                return new v(e.name,(e.alias || []).concat(e.name).map(e=>e.toLowerCase()),e.extensions || [],e.filename,t,O)
            }
            static matchFilename(e, t) {
                for (let O of e)
                    if (O.filename && O.filename.test(t))
                        return O;
                let O = /\.([^.]+)$/.exec(t);
                if (O) {
                    for (let t of e)
                        if (t.extensions.indexOf(O[1]) > -1)
                            return t
                }
                return null
            }
            static matchLanguageName(e, t, O=!0) {
                for (let O of (t = t.toLowerCase(),
                e))
                    if (O.alias.some(e=>e == t))
                        return O;
                if (O)
                    for (let O of e)
                        for (let e of O.alias) {
                            let n = t.indexOf(e);
                            if (n > -1 && (e.length > 2 || !/\w/.test(t[n - 1]) && !/\w/.test(t[n + e.length])))
                                return O
                        }
                return null
            }
        }
        let k = i.r$.define()
          , w = i.r$.define({
            combine: e=>{
                if (!e.length)
                    return "  ";
                let t = e[0];
                if (!t || /\S/.test(t) || Array.from(t).some(e=>e != t[0]))
                    throw Error("Invalid indent unit: " + JSON.stringify(e[0]));
                return t
            }
        });
        function T(e) {
            let t = e.facet(w);
            return 9 == t.charCodeAt(0) ? e.tabSize * t.length : t.length
        }
        function _(e, t) {
            let O = ""
              , n = e.tabSize
              , r = e.facet(w)[0];
            if ("	" == r) {
                for (; t >= n; )
                    O += "	",
                    t -= n;
                r = " "
            }
            for (let e = 0; e < t; e++)
                O += r;
            return O
        }
        function W(e, t) {
            var O;
            for (let O of (e instanceof i.yy && (e = new Z(e)),
            e.state.facet(k))) {
                let n = O(e, t);
                if (void 0 !== n)
                    return n
            }
            let n = h(e.state);
            return n ? (O = e,
            q(n.resolveInner(t).enterUnfinishedNodesBefore(t), t, O)) : null
        }
        class Z {
            constructor(e, t={}) {
                this.state = e,
                this.options = t,
                this.unit = T(e)
            }
            lineAt(e, t=1) {
                let O = this.state.doc.lineAt(e)
                  , {simulateBreak: n, simulateDoubleBreak: r} = this.options;
                return null != n && n >= O.from && n <= O.to ? r && n == e ? {
                    text: "",
                    from: e
                } : (t < 0 ? n < e : n <= e) ? {
                    text: O.text.slice(n - O.from),
                    from: n
                } : {
                    text: O.text.slice(0, n - O.from),
                    from: O.from
                } : O
            }
            textAfterPos(e, t=1) {
                if (this.options.simulateDoubleBreak && e == this.options.simulateBreak)
                    return "";
                let {text: O, from: n} = this.lineAt(e, t);
                return O.slice(e - n, Math.min(O.length, e + 100 - n))
            }
            column(e, t=1) {
                let {text: O, from: n} = this.lineAt(e, t)
                  , r = this.countColumn(O, e - n)
                  , i = this.options.overrideIndentation ? this.options.overrideIndentation(n) : -1;
                return i > -1 && (r += i - this.countColumn(O, O.search(/\S|$/))),
                r
            }
            countColumn(e, t=e.length) {
                return (0,
                i.IS)(e, this.state.tabSize, t)
            }
            lineIndent(e, t=1) {
                let {text: O, from: n} = this.lineAt(e, t)
                  , r = this.options.overrideIndentation;
                if (r) {
                    let e = r(n);
                    if (e > -1)
                        return e
                }
                return this.countColumn(O, O.search(/\S|$/))
            }
            get simulatedBreak() {
                return this.options.simulateBreak || null
            }
        }
        let z = new r.md;
        function q(e, t, O) {
            for (; e; e = e.parent) {
                let n = function(e) {
                    let t = e.type.prop(z);
                    if (t)
                        return t;
                    let O = e.firstChild, n;
                    if (O && (n = O.type.prop(r.md.closedBy))) {
                        let t = e.lastChild
                          , O = t && n.indexOf(t.name) > -1;
                        return e=>V(e, !0, 1, void 0, O && !(e.pos == e.options.simulateBreak && e.options.simulateDoubleBreak) ? t.from : void 0)
                    }
                    return null == e.parent ? Y : null
                }(e);
                if (n)
                    return n(R.create(O, t, e))
            }
            return null
        }
        function Y() {
            return 0
        }
        class R extends Z {
            constructor(e, t, O) {
                super(e.state, e.options),
                this.base = e,
                this.pos = t,
                this.node = O
            }
            static create(e, t, O) {
                return new R(e,t,O)
            }
            get textAfter() {
                return this.textAfterPos(this.pos)
            }
            get baseIndent() {
                let e = this.state.doc.lineAt(this.node.from);
                for (; ; ) {
                    let t = this.node.resolve(e.from);
                    for (; t.parent && t.parent.from == t.from; )
                        t = t.parent;
                    if (function(e, t) {
                        for (let O = t; O; O = O.parent)
                            if (e == O)
                                return !0;
                        return !1
                    }(t, this.node))
                        break;
                    e = this.state.doc.lineAt(t.from)
                }
                return this.lineIndent(e.from)
            }
            continue() {
                let e = this.node.parent;
                return e ? q(e, this.pos, this.base) : 0
            }
        }
        function U({closing: e, align: t=!0, units: O=1}) {
            return n=>V(n, t, O, e)
        }
        function V(e, t, O, n, r) {
            let i = e.textAfter
              , a = i.match(/^\s*/)[0].length
              , o = n && i.slice(a, a + n.length) == n || r == e.pos + a
              , s = t ? function(e) {
                let t = e.node
                  , O = t.childAfter(t.from)
                  , n = t.lastChild;
                if (!O)
                    return null;
                let r = e.options.simulateBreak
                  , i = e.state.doc.lineAt(O.from)
                  , a = null == r || r <= i.from ? i.to : Math.min(i.to, r);
                for (let e = O.to; ; ) {
                    let r = t.childAfter(e);
                    if (!r || r == n)
                        return null;
                    if (!r.type.isSkipped)
                        return r.from < a ? O : null;
                    e = r.to
                }
            }(e) : null;
            return s ? o ? e.column(s.from) : e.column(s.to) : e.baseIndent + (o ? 0 : e.unit * O)
        }
        let E = e=>e.baseIndent;
        function j({except: e, units: t=1}={}) {
            return O=>{
                let n = e && e.test(O.textAfter);
                return O.baseIndent + (n ? 0 : t * O.unit)
            }
        }
        function G() {
            return i.yy.transactionFilter.of(e=>{
                if (!e.docChanged || !e.isUserEvent("input.type") && !e.isUserEvent("input.complete"))
                    return e;
                let t = e.startState.languageDataAt("indentOnInput", e.startState.selection.main.head);
                if (!t.length)
                    return e;
                let O = e.newDoc
                  , {head: n} = e.newSelection.main
                  , r = O.lineAt(n);
                if (n > r.from + 200)
                    return e;
                let i = O.sliceString(r.from, n);
                if (!t.some(e=>e.test(i)))
                    return e;
                let {state: a} = e
                  , o = -1
                  , s = [];
                for (let {head: e} of a.selection.ranges) {
                    let t = a.doc.lineAt(e);
                    if (t.from == o)
                        continue;
                    o = t.from;
                    let O = W(a, t.from);
                    if (null == O)
                        continue;
                    let n = /^\s*/.exec(t.text)[0]
                      , r = _(a, O);
                    n != r && s.push({
                        from: t.from,
                        to: t.from + n.length,
                        insert: r
                    })
                }
                return s.length ? [e, {
                    changes: s,
                    sequential: !0
                }] : e
            }
            )
        }
        let C = i.r$.define()
          , A = new r.md;
        function I(e) {
            let t = e.firstChild
              , O = e.lastChild;
            return t && t.to < O.from ? {
                from: t.to,
                to: O.type.isError ? e.to : O.from
            } : null
        }
        function J(e, t, O) {
            for (let n of e.facet(C)) {
                let r = n(e, t, O);
                if (r)
                    return r
            }
            return function(e, t, O) {
                let n = h(e);
                if (n.length < O)
                    return null;
                let r = n.resolveInner(O, 1)
                  , i = null;
                for (let a = r; a; a = a.parent) {
                    if (a.to <= O || a.from > O)
                        continue;
                    if (i && a.from < t)
                        break;
                    let r = a.type.prop(A);
                    if (r && (a.to < n.length - 50 || n.length == e.doc.length || !function(e) {
                        let t = e.lastChild;
                        return t && t.to == e.to && t.type.isError
                    }(a))) {
                        let n = r(a, e);
                        n && n.from <= O && n.from >= t && n.to > O && (i = n)
                    }
                }
                return i
            }(e, t, O)
        }
        function N(e, t) {
            let O = t.mapPos(e.from, 1)
              , n = t.mapPos(e.to, -1);
            return O >= n ? void 0 : {
                from: O,
                to: n
            }
        }
        let D = i.Py.define({
            map: N
        })
          , L = i.Py.define({
            map: N
        });
        function F(e) {
            let t = [];
            for (let {head: O} of e.state.selection.ranges)
                t.some(e=>e.from <= O && e.to >= O) || t.push(e.lineBlockAt(O));
            return t
        }
        let M = i.QQ.define({
            create: ()=>a.p.none,
            update(e, t) {
                for (let O of (e = e.map(t.changes),
                t.effects))
                    O.is(D) && !function(e, t, O) {
                        let n = !1;
                        return e.between(t, t, (e,r)=>{
                            e == t && r == O && (n = !0)
                        }
                        ),
                        n
                    }(e, O.value.from, O.value.to) ? e = e.update({
                        add: [es.range(O.value.from, O.value.to)]
                    }) : O.is(L) && (e = e.update({
                        filter: (e,t)=>O.value.from != e || O.value.to != t,
                        filterFrom: O.value.from,
                        filterTo: O.value.to
                    }));
                if (t.selection) {
                    let O = !1
                      , {head: n} = t.selection.main;
                    e.between(n, n, (e,t)=>{
                        e < n && t > n && (O = !0)
                    }
                    ),
                    O && (e = e.update({
                        filterFrom: n,
                        filterTo: n,
                        filter: (e,t)=>t <= n || e >= n
                    }))
                }
                return e
            },
            provide: e=>a.tk.decorations.from(e),
            toJSON(e, t) {
                let O = [];
                return e.between(0, t.doc.length, (e,t)=>{
                    O.push(e, t)
                }
                ),
                O
            },
            fromJSON(e) {
                if (!Array.isArray(e) || e.length % 2)
                    throw RangeError("Invalid JSON for fold state");
                let t = [];
                for (let O = 0; O < e.length; ) {
                    let n = e[O++]
                      , r = e[O++];
                    if ("number" != typeof n || "number" != typeof r)
                        throw RangeError("Invalid JSON for fold state");
                    t.push(es.range(n, r))
                }
                return a.p.set(t, !0)
            }
        });
        function B(e, t, O) {
            var n;
            let r = null;
            return null === (n = e.field(M, !1)) || void 0 === n || n.between(t, O, (e,t)=>{
                (!r || r.from > e) && (r = {
                    from: e,
                    to: t
                })
            }
            ),
            r
        }
        function H(e, t) {
            return e.field(M, !1) ? t : t.concat(i.Py.appendConfig.of(eo()))
        }
        let K = e=>{
            for (let t of F(e)) {
                let O = J(e.state, t.from, t.to);
                if (O)
                    return e.dispatch({
                        effects: H(e.state, [D.of(O), et(e, O)])
                    }),
                    !0
            }
            return !1
        }
          , ee = e=>{
            if (!e.state.field(M, !1))
                return !1;
            let t = [];
            for (let O of F(e)) {
                let n = B(e.state, O.from, O.to);
                n && t.push(L.of(n), et(e, n, !1))
            }
            return t.length && e.dispatch({
                effects: t
            }),
            t.length > 0
        }
        ;
        function et(e, t, O=!0) {
            let n = e.state.doc.lineAt(t.from).number
              , r = e.state.doc.lineAt(t.to).number;
            return a.tk.announce.of(`${e.state.phrase(O ? "Folded lines" : "Unfolded lines")} ${n} ${e.state.phrase("to")} ${r}.`)
        }
        let eO = e=>{
            let {state: t} = e
              , O = [];
            for (let n = 0; n < t.doc.length; ) {
                let r = e.lineBlockAt(n)
                  , i = J(t, r.from, r.to);
                i && O.push(D.of(i)),
                n = (i ? e.lineBlockAt(i.to) : r).to + 1
            }
            return O.length && e.dispatch({
                effects: H(e.state, O)
            }),
            !!O.length
        }
          , en = e=>{
            let t = e.state.field(M, !1);
            if (!t || !t.size)
                return !1;
            let O = [];
            return t.between(0, e.state.doc.length, (e,t)=>{
                O.push(L.of({
                    from: e,
                    to: t
                }))
            }
            ),
            e.dispatch({
                effects: O
            }),
            !0
        }
          , er = [{
            key: "Ctrl-Shift-[",
            mac: "Cmd-Alt-[",
            run: K
        }, {
            key: "Ctrl-Shift-]",
            mac: "Cmd-Alt-]",
            run: ee
        }, {
            key: "Ctrl-Alt-[",
            run: eO
        }, {
            key: "Ctrl-Alt-]",
            run: en
        }]
          , ei = {
            placeholderDOM: null,
            placeholderText: "…"
        }
          , ea = i.r$.define({
            combine: e=>(0,
            i.BO)(e, ei)
        });
        function eo(e) {
            let t = [M, ep];
            return e && t.push(ea.of(e)),
            t
        }
        let es = a.p.replace({
            widget: new class extends a.l9 {
                toDOM(e) {
                    let {state: t} = e
                      , O = t.facet(ea)
                      , n = t=>{
                        let O = e.lineBlockAt(e.posAtDOM(t.target))
                          , n = B(e.state, O.from, O.to);
                        n && e.dispatch({
                            effects: L.of(n)
                        }),
                        t.preventDefault()
                    }
                    ;
                    if (O.placeholderDOM)
                        return O.placeholderDOM(e, n);
                    let r = document.createElement("span");
                    return r.textContent = O.placeholderText,
                    r.setAttribute("aria-label", t.phrase("folded code")),
                    r.title = t.phrase("unfold"),
                    r.className = "cm-foldPlaceholder",
                    r.onclick = n,
                    r
                }
            }
        })
          , el = {
            openText: "⌄",
            closedText: "›",
            markerDOM: null,
            domEventHandlers: {},
            foldingChanged: ()=>!1
        };
        class ec extends a.SJ {
            constructor(e, t) {
                super(),
                this.config = e,
                this.open = t
            }
            eq(e) {
                return this.config == e.config && this.open == e.open
            }
            toDOM(e) {
                if (this.config.markerDOM)
                    return this.config.markerDOM(this.open);
                let t = document.createElement("span");
                return t.textContent = this.open ? this.config.openText : this.config.closedText,
                t.title = e.state.phrase(this.open ? "Fold line" : "Unfold line"),
                t
            }
        }
        function eu(e={}) {
            let t = Object.assign(Object.assign({}, el), e)
              , O = new ec(t,!0)
              , n = new ec(t,!1)
              , r = a.lg.fromClass(class {
                constructor(e) {
                    this.from = e.viewport.from,
                    this.markers = this.buildMarkers(e)
                }
                update(e) {
                    (e.docChanged || e.viewportChanged || e.startState.facet(x) != e.state.facet(x) || e.startState.field(M, !1) != e.state.field(M, !1) || h(e.startState) != h(e.state) || t.foldingChanged(e)) && (this.markers = this.buildMarkers(e.view))
                }
                buildMarkers(e) {
                    let t = new i.f_;
                    for (let r of e.viewportLineBlocks) {
                        let i = B(e.state, r.from, r.to) ? n : J(e.state, r.from, r.to) ? O : null;
                        i && t.add(r.from, r.from, i)
                    }
                    return t.finish()
                }
            }
            )
              , {domEventHandlers: o} = t;
            return [r, (0,
            a.v5)({
                class: "cm-foldGutter",
                markers(e) {
                    var t;
                    return (null === (t = e.plugin(r)) || void 0 === t ? void 0 : t.markers) || i.Xs.empty
                },
                initialSpacer: ()=>new ec(t,!1),
                domEventHandlers: Object.assign(Object.assign({}, o), {
                    click: (e,t,O)=>{
                        if (o.click && o.click(e, t, O))
                            return !0;
                        let n = B(e.state, t.from, t.to);
                        if (n)
                            return e.dispatch({
                                effects: L.of(n)
                            }),
                            !0;
                        let r = J(e.state, t.from, t.to);
                        return !!r && (e.dispatch({
                            effects: D.of(r)
                        }),
                        !0)
                    }
                })
            }), eo()]
        }
        let ep = a.tk.baseTheme({
            ".cm-foldPlaceholder": {
                backgroundColor: "#eee",
                border: "1px solid #ddd",
                color: "#888",
                borderRadius: ".2em",
                margin: "0 1px",
                padding: "0 1px",
                cursor: "pointer"
            },
            ".cm-foldGutter span": {
                padding: "0 1px",
                cursor: "pointer"
            }
        });
        class ed {
            constructor(e, t) {
                let O;
                function n(e) {
                    let t = s.V.newName();
                    return (O || (O = Object.create(null)))["." + t] = e,
                    t
                }
                this.specs = e;
                let r = "string" == typeof t.all ? t.all : t.all ? n(t.all) : void 0
                  , i = t.scope;
                this.scope = i instanceof p ? e=>e.prop(l) == i.data : i ? e=>e == i : void 0,
                this.style = (0,
                o.QR)(e.map(e=>({
                    tag: e.tag,
                    class: e.class || n(Object.assign({}, e, {
                        tag: null
                    }))
                })), {
                    all: r
                }).style,
                this.module = O ? new s.V(O) : null,
                this.themeType = t.themeType
            }
            static define(e, t) {
                return new ed(e,t || {})
            }
        }
        let ef = i.r$.define()
          , eh = i.r$.define({
            combine: e=>e.length ? [e[0]] : null
        });
        function em(e) {
            let t = e.facet(ef);
            return t.length ? t : e.facet(eh)
        }
        function eQ(e, t) {
            let O = [e$], n;
            return e instanceof ed && (e.module && O.push(a.tk.styleModule.of(e.module)),
            n = e.themeType),
            (null == t ? void 0 : t.fallback) ? O.push(eh.of(e)) : n ? O.push(ef.computeN([a.tk.darkTheme], t=>t.facet(a.tk.darkTheme) == ("dark" == n) ? [e] : [])) : O.push(ef.of(e)),
            O
        }
        let e$ = i.Wl.high(a.lg.fromClass(class {
            constructor(e) {
                this.markCache = Object.create(null),
                this.tree = h(e.state),
                this.decorations = this.buildDeco(e, em(e.state))
            }
            update(e) {
                let t = h(e.state)
                  , O = em(e.state)
                  , n = O != em(e.startState);
                t.length < e.view.viewport.to && !n && t.type == this.tree.type ? this.decorations = this.decorations.map(e.changes) : (t != this.tree || e.viewportChanged || n) && (this.tree = t,
                this.decorations = this.buildDeco(e.view, O))
            }
            buildDeco(e, t) {
                if (!t || !this.tree.length)
                    return a.p.none;
                let O = new i.f_;
                for (let {from: n, to: r} of e.visibleRanges)
                    (0,
                    o.bW)(this.tree, t, (e,t,n)=>{
                        O.add(e, t, this.markCache[n] || (this.markCache[n] = a.p.mark({
                            class: n
                        })))
                    }
                    , n, r);
                return O.finish()
            }
        }
        , {
            decorations: e=>e.decorations
        }))
          , eg = ed.define([{
            tag: o.pJ.meta,
            color: "#404740"
        }, {
            tag: o.pJ.link,
            textDecoration: "underline"
        }, {
            tag: o.pJ.heading,
            textDecoration: "underline",
            fontWeight: "bold"
        }, {
            tag: o.pJ.emphasis,
            fontStyle: "italic"
        }, {
            tag: o.pJ.strong,
            fontWeight: "bold"
        }, {
            tag: o.pJ.strikethrough,
            textDecoration: "line-through"
        }, {
            tag: o.pJ.keyword,
            color: "#708"
        }, {
            tag: [o.pJ.atom, o.pJ.bool, o.pJ.url, o.pJ.contentSeparator, o.pJ.labelName],
            color: "#219"
        }, {
            tag: [o.pJ.literal, o.pJ.inserted],
            color: "#164"
        }, {
            tag: [o.pJ.string, o.pJ.deleted],
            color: "#a11"
        }, {
            tag: [o.pJ.regexp, o.pJ.escape, o.pJ.special(o.pJ.string)],
            color: "#e40"
        }, {
            tag: o.pJ.definition(o.pJ.variableName),
            color: "#00f"
        }, {
            tag: o.pJ.local(o.pJ.variableName),
            color: "#30a"
        }, {
            tag: [o.pJ.typeName, o.pJ.namespace],
            color: "#085"
        }, {
            tag: o.pJ.className,
            color: "#167"
        }, {
            tag: [o.pJ.special(o.pJ.variableName), o.pJ.macroName],
            color: "#256"
        }, {
            tag: o.pJ.definition(o.pJ.propertyName),
            color: "#00c"
        }, {
            tag: o.pJ.comment,
            color: "#940"
        }, {
            tag: o.pJ.invalid,
            color: "#f00"
        }])
          , eP = a.tk.baseTheme({
            "&.cm-focused .cm-matchingBracket": {
                backgroundColor: "#328c8252"
            },
            "&.cm-focused .cm-nonmatchingBracket": {
                backgroundColor: "#bb555544"
            }
        })
          , eS = "()[]{}"
          , eb = i.r$.define({
            combine: e=>(0,
            i.BO)(e, {
                afterCursor: !0,
                brackets: eS,
                maxScanDistance: 1e4,
                renderMatch: eX
            })
        })
          , ey = a.p.mark({
            class: "cm-matchingBracket"
        })
          , ex = a.p.mark({
            class: "cm-nonmatchingBracket"
        });
        function eX(e) {
            let t = []
              , O = e.matched ? ey : ex;
            return t.push(O.range(e.start.from, e.start.to)),
            e.end && t.push(O.range(e.end.from, e.end.to)),
            t
        }
        let ev = i.QQ.define({
            create: ()=>a.p.none,
            update(e, t) {
                if (!t.docChanged && !t.selection)
                    return e;
                let O = []
                  , n = t.state.facet(eb);
                for (let e of t.state.selection.ranges) {
                    if (!e.empty)
                        continue;
                    let r = eZ(t.state, e.head, -1, n) || e.head > 0 && eZ(t.state, e.head - 1, 1, n) || n.afterCursor && (eZ(t.state, e.head, 1, n) || e.head < t.state.doc.length && eZ(t.state, e.head + 1, -1, n));
                    r && (O = O.concat(n.renderMatch(r, t.state)))
                }
                return a.p.set(O, !0)
            },
            provide: e=>a.tk.decorations.from(e)
        })
          , ek = [ev, eP];
        function ew(e={}) {
            return [eb.of(e), ek]
        }
        let eT = new r.md;
        function e_(e, t, O) {
            let n = e.prop(t < 0 ? r.md.openedBy : r.md.closedBy);
            if (n)
                return n;
            if (1 == e.name.length) {
                let n = O.indexOf(e.name);
                if (n > -1 && n % 2 == (t < 0 ? 1 : 0))
                    return [O[n + t]]
            }
            return null
        }
        function eW(e) {
            let t = e.type.prop(eT);
            return t ? t(e.node) : e
        }
        function eZ(e, t, O, n={}) {
            let r = n.maxScanDistance || 1e4
              , i = n.brackets || eS
              , a = h(e)
              , o = a.resolveInner(t, O);
            for (let e = o; e; e = e.parent) {
                let n = e_(e.type, O, i);
                if (n && e.from < e.to) {
                    let r = eW(e);
                    if (r && (O > 0 ? t >= r.from && t < r.to : t > r.from && t <= r.to))
                        return function(e, t, O, n, r, i, a) {
                            let o = n.parent
                              , s = {
                                from: r.from,
                                to: r.to
                            }
                              , l = 0
                              , c = null == o ? void 0 : o.cursor();
                            if (c && (O < 0 ? c.childBefore(n.from) : c.childAfter(n.to)))
                                do
                                    if (O < 0 ? c.to <= n.from : c.from >= n.to) {
                                        if (0 == l && i.indexOf(c.type.name) > -1 && c.from < c.to) {
                                            let e = eW(c);
                                            return {
                                                start: s,
                                                end: e ? {
                                                    from: e.from,
                                                    to: e.to
                                                } : void 0,
                                                matched: !0
                                            }
                                        }
                                        if (e_(c.type, O, a))
                                            l++;
                                        else if (e_(c.type, -O, a)) {
                                            if (0 == l) {
                                                let e = eW(c);
                                                return {
                                                    start: s,
                                                    end: e && e.from < e.to ? {
                                                        from: e.from,
                                                        to: e.to
                                                    } : void 0,
                                                    matched: !1
                                                }
                                            }
                                            l--
                                        }
                                    }
                                while (O < 0 ? c.prevSibling() : c.nextSibling());
                            return {
                                start: s,
                                matched: !1
                            }
                        }(0, 0, O, e, r, n, i)
                }
            }
            return function(e, t, O, n, r, i, a) {
                let o = O < 0 ? e.sliceDoc(t - 1, t) : e.sliceDoc(t, t + 1)
                  , s = a.indexOf(o);
                if (s < 0 || s % 2 == 0 != O > 0)
                    return null;
                let l = {
                    from: O < 0 ? t - 1 : t,
                    to: O > 0 ? t + 1 : t
                }
                  , c = e.doc.iterRange(t, O > 0 ? e.doc.length : 0)
                  , u = 0;
                for (let e = 0; !c.next().done && e <= i; ) {
                    let i = c.value;
                    O < 0 && (e += i.length);
                    let o = t + e * O;
                    for (let e = O > 0 ? 0 : i.length - 1, t = O > 0 ? i.length : -1; e != t; e += O) {
                        let t = a.indexOf(i[e]);
                        if (!(t < 0) && n.resolveInner(o + e, 1).type == r) {
                            if (t % 2 == 0 == O > 0)
                                u++;
                            else {
                                if (1 == u)
                                    return {
                                        start: l,
                                        end: {
                                            from: o + e,
                                            to: o + e + 1
                                        },
                                        matched: t >> 1 == s >> 1
                                    };
                                u--
                            }
                        }
                    }
                    O > 0 && (e += i.length)
                }
                return c.done ? {
                    start: l,
                    matched: !1
                } : null
            }(e, t, O, a, o.type, r, i)
        }
        function ez(e, t, O, n=0, r=0) {
            null == t && -1 == (t = e.search(/[^\s\u00a0]/)) && (t = e.length);
            let i = r;
            for (let r = n; r < t; r++)
                9 == e.charCodeAt(r) ? i += O - i % O : i++;
            return i
        }
        class eq {
            constructor(e, t, O, n) {
                this.string = e,
                this.tabSize = t,
                this.indentUnit = O,
                this.overrideIndent = n,
                this.pos = 0,
                this.start = 0,
                this.lastColumnPos = 0,
                this.lastColumnValue = 0
            }
            eol() {
                return this.pos >= this.string.length
            }
            sol() {
                return 0 == this.pos
            }
            peek() {
                return this.string.charAt(this.pos) || void 0
            }
            next() {
                if (this.pos < this.string.length)
                    return this.string.charAt(this.pos++)
            }
            eat(e) {
                let t = this.string.charAt(this.pos);
                if ("string" == typeof e ? t == e : t && (e instanceof RegExp ? e.test(t) : e(t)))
                    return ++this.pos,
                    t
            }
            eatWhile(e) {
                let t = this.pos;
                for (; this.eat(e); )
                    ;
                return this.pos > t
            }
            eatSpace() {
                let e = this.pos;
                for (; /[\s\u00a0]/.test(this.string.charAt(this.pos)); )
                    ++this.pos;
                return this.pos > e
            }
            skipToEnd() {
                this.pos = this.string.length
            }
            skipTo(e) {
                let t = this.string.indexOf(e, this.pos);
                if (t > -1)
                    return this.pos = t,
                    !0
            }
            backUp(e) {
                this.pos -= e
            }
            column() {
                return this.lastColumnPos < this.start && (this.lastColumnValue = ez(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue),
                this.lastColumnPos = this.start),
                this.lastColumnValue
            }
            indentation() {
                var e;
                return null !== (e = this.overrideIndent) && void 0 !== e ? e : ez(this.string, null, this.tabSize)
            }
            match(e, t, O) {
                if ("string" == typeof e) {
                    let n = e=>O ? e.toLowerCase() : e;
                    return n(this.string.substr(this.pos, e.length)) == n(e) ? (!1 !== t && (this.pos += e.length),
                    !0) : null
                }
                {
                    let O = this.string.slice(this.pos).match(e);
                    return O && O.index > 0 ? null : (O && !1 !== t && (this.pos += O[0].length),
                    O)
                }
            }
            current() {
                return this.string.slice(this.start, this.pos)
            }
        }
        function eY(e) {
            if ("object" != typeof e)
                return e;
            let t = {};
            for (let O in e) {
                let n = e[O];
                t[O] = n instanceof Array ? n.slice() : n
            }
            return t
        }
        let eR = new WeakMap;
        class eU extends p {
            constructor(e) {
                let t, O = c(e.languageData), n = {
                    name: e.name || "",
                    token: e.token,
                    blankLine: e.blankLine || (()=>{}
                    ),
                    startState: e.startState || (()=>!0),
                    copyState: e.copyState || eY,
                    indent: e.indent || (()=>null),
                    languageData: e.languageData || {},
                    tokenTable: e.tokenTable || eG
                }, i;
                super(O, new class extends r._b {
                    createParse(e, t, O) {
                        return new eE(i,e,t,O)
                    }
                }
                , [k.of((e,t)=>this.getIndent(e, t))], e.name),
                this.topNode = (t = r.Jq.define({
                    id: eC.length,
                    name: "Document",
                    props: [l.add(()=>O)]
                }),
                eC.push(t),
                t),
                i = this,
                this.streamParser = n,
                this.stateAfter = new r.md({
                    perNode: !0
                }),
                this.tokenTable = e.tokenTable ? new eN(n.tokenTable) : eD
            }
            static define(e) {
                return new eU(e)
            }
            getIndent(e, t) {
                let O, n = h(e.state), r = n.resolve(t);
                for (; r && r.type != this.topNode; )
                    r = r.parent;
                if (!r)
                    return null;
                let {overrideIndentation: i} = e.options;
                i && null != (O = eR.get(e.state)) && O < t - 1e4 && (O = void 0);
                let a = eV(this, n, 0, r.from, null != O ? O : t), o, s;
                if (a ? (s = a.state,
                o = a.pos + 1) : (s = this.streamParser.startState(e.unit),
                o = 0),
                t - o > 1e4)
                    return null;
                for (; o < t; ) {
                    let O = e.state.doc.lineAt(o)
                      , n = Math.min(t, O.to);
                    if (O.length) {
                        let t = i ? i(O.from) : -1
                          , r = new eq(O.text,e.state.tabSize,e.unit,t < 0 ? void 0 : t);
                        for (; r.pos < n - O.from; )
                            ej(this.streamParser.token, r, s)
                    } else
                        this.streamParser.blankLine(s, e.unit);
                    if (n == t)
                        break;
                    o = O.to + 1
                }
                let l = e.lineAt(t);
                return i && null == O && eR.set(e.state, l.from),
                this.streamParser.indent(s, /^\s*(.*)/.exec(l.text)[1], e)
            }
            get allowsNesting() {
                return !1
            }
        }
        function eV(e, t, O, n, i) {
            let a = O >= n && O + t.length <= i && t.prop(e.stateAfter);
            if (a)
                return {
                    state: e.streamParser.copyState(a),
                    pos: O + t.length
                };
            for (let a = t.children.length - 1; a >= 0; a--) {
                let o = t.children[a]
                  , s = O + t.positions[a]
                  , l = o instanceof r.mp && s < i && eV(e, o, s, n, i);
                if (l)
                    return l
            }
            return null
        }
        class eE {
            constructor(e, t, O, n) {
                this.lang = e,
                this.input = t,
                this.fragments = O,
                this.ranges = n,
                this.stoppedAt = null,
                this.chunks = [],
                this.chunkPos = [],
                this.chunk = [],
                this.chunkReused = void 0,
                this.rangeIndex = 0,
                this.to = n[n.length - 1].to;
                let i = $.get()
                  , a = n[0].from
                  , {state: o, tree: s} = function(e, t, O, n) {
                    for (let n of t) {
                        let t = n.from + (n.openStart ? 25 : 0), i = n.to - (n.openEnd ? 25 : 0), a = t <= O && i > O && eV(e, n.tree, 0 - n.offset, O, i), o;
                        if (a && (o = function e(t, O, n, i, a) {
                            if (a && n <= 0 && i >= O.length)
                                return O;
                            a || O.type != t.topNode || (a = !0);
                            for (let o = O.children.length - 1; o >= 0; o--) {
                                let s = O.positions[o], l = O.children[o], c;
                                if (s < i && l instanceof r.mp) {
                                    if (!(c = e(t, l, n - s, i - s, a)))
                                        break;
                                    return a ? new r.mp(O.type,O.children.slice(0, o).concat(c),O.positions.slice(0, o + 1),s + c.length) : c
                                }
                            }
                            return null
                        }(e, n.tree, O + n.offset, a.pos + n.offset, !1)))
                            return {
                                state: a.state,
                                tree: o
                            }
                    }
                    return {
                        state: e.streamParser.startState(n ? T(n) : 4),
                        tree: r.mp.empty
                    }
                }(e, O, a, null == i ? void 0 : i.state);
                this.state = o,
                this.parsedPos = this.chunkStart = a + s.length;
                for (let e = 0; e < s.children.length; e++)
                    this.chunks.push(s.children[e]),
                    this.chunkPos.push(s.positions[e]);
                i && this.parsedPos < i.viewport.from - 1e5 && (this.state = this.lang.streamParser.startState(T(i.state)),
                i.skipUntilInView(this.parsedPos, i.viewport.from),
                this.parsedPos = i.viewport.from),
                this.moveRangeIndex()
            }
            advance() {
                let e = $.get()
                  , t = null == this.stoppedAt ? this.to : Math.min(this.to, this.stoppedAt)
                  , O = Math.min(t, this.chunkStart + 2048);
                for (e && (O = Math.min(O, e.viewport.to)); this.parsedPos < O; )
                    this.parseLine(e);
                return (this.chunkStart < this.parsedPos && this.finishChunk(),
                this.parsedPos >= t) ? this.finish() : e && this.parsedPos >= e.viewport.to ? (e.skipUntilInView(this.parsedPos, t),
                this.finish()) : null
            }
            stopAt(e) {
                this.stoppedAt = e
            }
            lineAfter(e) {
                let t = this.input.chunk(e);
                if (this.input.lineChunks)
                    "\n" == t && (t = "");
                else {
                    let e = t.indexOf("\n");
                    e > -1 && (t = t.slice(0, e))
                }
                return e + t.length <= this.to ? t : t.slice(0, this.to - e)
            }
            nextLine() {
                let e = this.parsedPos
                  , t = this.lineAfter(e)
                  , O = e + t.length;
                for (let e = this.rangeIndex; ; ) {
                    let n = this.ranges[e].to;
                    if (n >= O || (t = t.slice(0, n - (O - t.length)),
                    ++e == this.ranges.length))
                        break;
                    let r = this.ranges[e].from
                      , i = this.lineAfter(r);
                    t += i,
                    O = r + i.length
                }
                return {
                    line: t,
                    end: O
                }
            }
            skipGapsTo(e, t, O) {
                for (; ; ) {
                    let n = this.ranges[this.rangeIndex].to
                      , r = e + t;
                    if (O > 0 ? n > r : n >= r)
                        break;
                    t += this.ranges[++this.rangeIndex].from - n
                }
                return t
            }
            moveRangeIndex() {
                for (; this.ranges[this.rangeIndex].to < this.parsedPos; )
                    this.rangeIndex++
            }
            emitToken(e, t, O, n, r) {
                if (this.ranges.length > 1) {
                    r = this.skipGapsTo(t, r, 1),
                    t += r;
                    let e = this.chunk.length;
                    r = this.skipGapsTo(O, r, -1),
                    O += r,
                    n += this.chunk.length - e
                }
                return this.chunk.push(e, t, O, n),
                r
            }
            parseLine(e) {
                let {line: t, end: O} = this.nextLine()
                  , n = 0
                  , {streamParser: r} = this.lang
                  , i = new eq(t,e ? e.state.tabSize : 4,e ? T(e.state) : 2);
                if (i.eol())
                    r.blankLine(this.state, i.indentUnit);
                else
                    for (; !i.eol(); ) {
                        let e = ej(r.token, i, this.state);
                        if (e && (n = this.emitToken(this.lang.tokenTable.resolve(e), this.parsedPos + i.start, this.parsedPos + i.pos, 4, n)),
                        i.start > 1e4)
                            break
                    }
                this.parsedPos = O,
                this.moveRangeIndex(),
                this.parsedPos < this.to && this.parsedPos++
            }
            finishChunk() {
                let e = r.mp.build({
                    buffer: this.chunk,
                    start: this.chunkStart,
                    length: this.parsedPos - this.chunkStart,
                    nodeSet: eA,
                    topID: 0,
                    maxBufferLength: 2048,
                    reused: this.chunkReused
                });
                e = new r.mp(e.type,e.children,e.positions,e.length,[[this.lang.stateAfter, this.lang.streamParser.copyState(this.state)]]),
                this.chunks.push(e),
                this.chunkPos.push(this.chunkStart - this.ranges[0].from),
                this.chunk = [],
                this.chunkReused = void 0,
                this.chunkStart = this.parsedPos
            }
            finish() {
                return new r.mp(this.lang.topNode,this.chunks,this.chunkPos,this.parsedPos - this.ranges[0].from).balance()
            }
        }
        function ej(e, t, O) {
            t.start = t.pos;
            for (let n = 0; n < 10; n++) {
                let n = e(t, O);
                if (t.pos > t.start)
                    return n
            }
            throw Error("Stream parser failed to advance stream.")
        }
        let eG = Object.create(null)
          , eC = [r.Jq.none]
          , eA = new r.Lj(eC)
          , eI = []
          , eJ = Object.create(null);
        for (let[e,t] of [["variable", "variableName"], ["variable-2", "variableName.special"], ["string-2", "string.special"], ["def", "variableName.definition"], ["tag", "tagName"], ["attribute", "attributeName"], ["type", "typeName"], ["builtin", "variableName.standard"], ["qualifier", "modifier"], ["error", "invalid"], ["header", "heading"], ["property", "propertyName"]])
            eJ[e] = eF(eG, t);
        class eN {
            constructor(e) {
                this.extra = e,
                this.table = Object.assign(Object.create(null), eJ)
            }
            resolve(e) {
                return e ? this.table[e] || (this.table[e] = eF(this.extra, e)) : 0
            }
        }
        let eD = new eN(eG);
        function eL(e, t) {
            eI.indexOf(e) > -1 || (eI.push(e),
            console.warn(t))
        }
        function eF(e, t) {
            let O = null;
            for (let n of t.split(".")) {
                let t = e[n] || o.pJ[n];
                t ? "function" == typeof t ? O ? O = t(O) : eL(n, `Modifier ${n} used at start of tag`) : O ? eL(n, `Tag ${n} used as modifier`) : O = t : eL(n, `Unknown highlighting tag ${n}`)
            }
            if (!O)
                return 0;
            let n = t.replace(/ /g, "_")
              , i = r.Jq.define({
                id: eC.length,
                name: n,
                props: [(0,
                o.Gv)({
                    [n]: O
                })]
            });
            return eC.push(i),
            i.id
        }
    },
    725: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            apl: function() {
                return c
            }
        });
        var n = {
            "+": ["conjugate", "add"],
            "−": ["negate", "subtract"],
            "\xd7": ["signOf", "multiply"],
            "\xf7": ["reciprocal", "divide"],
            "⌈": ["ceiling", "greaterOf"],
            "⌊": ["floor", "lesserOf"],
            "∣": ["absolute", "residue"],
            "⍳": ["indexGenerate", "indexOf"],
            "?": ["roll", "deal"],
            "⋆": ["exponentiate", "toThePowerOf"],
            "⍟": ["naturalLog", "logToTheBase"],
            "○": ["piTimes", "circularFuncs"],
            "!": ["factorial", "binomial"],
            "⌹": ["matrixInverse", "matrixDivide"],
            "<": [null, "lessThan"],
            "≤": [null, "lessThanOrEqual"],
            "=": [null, "equals"],
            ">": [null, "greaterThan"],
            "≥": [null, "greaterThanOrEqual"],
            "≠": [null, "notEqual"],
            "≡": ["depth", "match"],
            "≢": [null, "notMatch"],
            "∈": ["enlist", "membership"],
            "⍷": [null, "find"],
            "∪": ["unique", "union"],
            "∩": [null, "intersection"],
            "∼": ["not", "without"],
            "∨": [null, "or"],
            "∧": [null, "and"],
            "⍱": [null, "nor"],
            "⍲": [null, "nand"],
            "⍴": ["shapeOf", "reshape"],
            ",": ["ravel", "catenate"],
            "⍪": [null, "firstAxisCatenate"],
            "⌽": ["reverse", "rotate"],
            "⊖": ["axis1Reverse", "axis1Rotate"],
            "⍉": ["transpose", null],
            "↑": ["first", "take"],
            "↓": [null, "drop"],
            "⊂": ["enclose", "partitionWithAxis"],
            "⊃": ["diclose", "pick"],
            "⌷": [null, "index"],
            "⍋": ["gradeUp", null],
            "⍒": ["gradeDown", null],
            "⊤": ["encode", null],
            "⊥": ["decode", null],
            "⍕": ["format", "formatByExample"],
            "⍎": ["execute", null],
            "⊣": ["stop", "left"],
            "⊢": ["pass", "right"]
        }
          , r = /[\.\/⌿⍀¨⍣]/
          , i = /⍬/
          , a = /[\+−×÷⌈⌊∣⍳\?⋆⍟○!⌹<≤=>≥≠≡≢∈⍷∪∩∼∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⌷⍋⍒⊤⊥⍕⍎⊣⊢]/
          , o = /←/
          , s = /[⍝#].*$/
          , l = function(e) {
            var t;
            return t = !1,
            function(O) {
                return t = O,
                O !== e || "\\" === t
            }
        };
        let c = {
            name: "apl",
            startState: function() {
                return {
                    prev: !1,
                    func: !1,
                    op: !1,
                    string: !1,
                    escape: !1
                }
            },
            token: function(e, t) {
                var O;
                return e.eatSpace() ? null : '"' === (O = e.next()) || "'" === O ? (e.eatWhile(l(O)),
                e.next(),
                t.prev = !0,
                "string") : /[\[{\(]/.test(O) ? (t.prev = !1,
                null) : /[\]}\)]/.test(O) ? (t.prev = !0,
                null) : i.test(O) ? (t.prev = !1,
                "atom") : /[¯\d]/.test(O) ? (t.func ? (t.func = !1,
                t.prev = !1) : t.prev = !0,
                e.eatWhile(/[\w\.]/),
                "number") : r.test(O) || o.test(O) ? "operator" : a.test(O) ? (t.func = !0,
                t.prev = !1,
                n[O] ? "variableName.function.standard" : "variableName.function") : s.test(O) ? (e.skipToEnd(),
                "comment") : "∘" === O && "." === e.peek() ? (e.next(),
                "variableName.function") : (e.eatWhile(/[\w\$_]/),
                t.prev = !0,
                "keyword")
            }
        }
    },
    9439: function(e, t, O) {
        "use strict";
        function n(e) {
            var t = e.match(/^\s*\S/);
            return e.skipToEnd(),
            t ? "error" : null
        }
        O.r(t),
        O.d(t, {
            asciiArmor: function() {
                return r
            }
        });
        let r = {
            name: "asciiarmor",
            token: function(e, t) {
                var O;
                if ("top" == t.state)
                    return e.sol() && (O = e.match(/^-----BEGIN (.*)?-----\s*$/)) ? (t.state = "headers",
                    t.type = O[1],
                    "tag") : n(e);
                if ("headers" == t.state) {
                    if (e.sol() && e.match(/^\w+:/))
                        return t.state = "header",
                        "atom";
                    var r = n(e);
                    return r && (t.state = "body"),
                    r
                }
                return "header" == t.state ? (e.skipToEnd(),
                t.state = "headers",
                "string") : "body" == t.state ? e.sol() && (O = e.match(/^-----END (.*)?-----\s*$/)) ? O[1] != t.type ? "error" : (t.state = "end",
                "tag") : e.eatWhile(/[A-Za-z0-9+\/=]/) ? null : (e.next(),
                "error") : "end" == t.state ? n(e) : void 0
            },
            blankLine: function(e) {
                "headers" == e.state && (e.state = "body")
            },
            startState: function() {
                return {
                    state: "top",
                    type: null
                }
            }
        }
    },
    5027: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            asterisk: function() {
                return a
            }
        });
        var n = ["exten", "same", "include", "ignorepat", "switch"]
          , r = ["#include", "#exec"]
          , i = ["addqueuemember", "adsiprog", "aelsub", "agentlogin", "agentmonitoroutgoing", "agi", "alarmreceiver", "amd", "answer", "authenticate", "background", "backgrounddetect", "bridge", "busy", "callcompletioncancel", "callcompletionrequest", "celgenuserevent", "changemonitor", "chanisavail", "channelredirect", "chanspy", "clearhash", "confbridge", "congestion", "continuewhile", "controlplayback", "dahdiacceptr2call", "dahdibarge", "dahdiras", "dahdiscan", "dahdisendcallreroutingfacility", "dahdisendkeypadfacility", "datetime", "dbdel", "dbdeltree", "deadagi", "dial", "dictate", "directory", "disa", "dumpchan", "eagi", "echo", "endwhile", "exec", "execif", "execiftime", "exitwhile", "extenspy", "externalivr", "festival", "flash", "followme", "forkcdr", "getcpeid", "gosub", "gosubif", "goto", "gotoif", "gotoiftime", "hangup", "iax2provision", "ices", "importvar", "incomplete", "ivrdemo", "jabberjoin", "jabberleave", "jabbersend", "jabbersendgroup", "jabberstatus", "jack", "log", "macro", "macroexclusive", "macroexit", "macroif", "mailboxexists", "meetme", "meetmeadmin", "meetmechanneladmin", "meetmecount", "milliwatt", "minivmaccmess", "minivmdelete", "minivmgreet", "minivmmwi", "minivmnotify", "minivmrecord", "mixmonitor", "monitor", "morsecode", "mp3player", "mset", "musiconhold", "nbscat", "nocdr", "noop", "odbc", "odbc", "odbcfinish", "originate", "ospauth", "ospfinish", "osplookup", "ospnext", "page", "park", "parkandannounce", "parkedcall", "pausemonitor", "pausequeuemember", "pickup", "pickupchan", "playback", "playtones", "privacymanager", "proceeding", "progress", "queue", "queuelog", "raiseexception", "read", "readexten", "readfile", "receivefax", "receivefax", "receivefax", "record", "removequeuemember", "resetcdr", "retrydial", "return", "ringing", "sayalpha", "saycountedadj", "saycountednoun", "saycountpl", "saydigits", "saynumber", "sayphonetic", "sayunixtime", "senddtmf", "sendfax", "sendfax", "sendfax", "sendimage", "sendtext", "sendurl", "set", "setamaflags", "setcallerpres", "setmusiconhold", "sipaddheader", "sipdtmfmode", "sipremoveheader", "skel", "slastation", "slatrunk", "sms", "softhangup", "speechactivategrammar", "speechbackground", "speechcreate", "speechdeactivategrammar", "speechdestroy", "speechloadgrammar", "speechprocessingsound", "speechstart", "speechunloadgrammar", "stackpop", "startmusiconhold", "stopmixmonitor", "stopmonitor", "stopmusiconhold", "stopplaytones", "system", "testclient", "testserver", "transfer", "tryexec", "trysystem", "unpausemonitor", "unpausequeuemember", "userevent", "verbose", "vmauthenticate", "vmsayname", "voicemail", "voicemailmain", "wait", "waitexten", "waitfornoise", "waitforring", "waitforsilence", "waitmusiconhold", "waituntil", "while", "zapateller"];
        let a = {
            name: "asterisk",
            startState: function() {
                return {
                    blockComment: !1,
                    extenStart: !1,
                    extenSame: !1,
                    extenInclude: !1,
                    extenExten: !1,
                    extenPriority: !1,
                    extenApplication: !1
                }
            },
            token: function(e, t) {
                var O = "";
                return e.eatSpace() ? null : t.extenStart ? (e.eatWhile(/[^\s]/),
                O = e.current(),
                /^=>?$/.test(O)) ? (t.extenExten = !0,
                t.extenStart = !1,
                "strong") : (t.extenStart = !1,
                e.skipToEnd(),
                "error") : t.extenExten ? (t.extenExten = !1,
                t.extenPriority = !0,
                e.eatWhile(/[^,]/),
                t.extenInclude && (e.skipToEnd(),
                t.extenPriority = !1,
                t.extenInclude = !1),
                t.extenSame && (t.extenPriority = !1,
                t.extenSame = !1,
                t.extenApplication = !0),
                "tag") : t.extenPriority ? (t.extenPriority = !1,
                t.extenApplication = !0,
                e.next(),
                t.extenSame) ? null : (e.eatWhile(/[^,]/),
                "number") : t.extenApplication ? (e.eatWhile(/,/),
                "," === (O = e.current())) ? null : (e.eatWhile(/\w/),
                O = e.current().toLowerCase(),
                t.extenApplication = !1,
                -1 !== i.indexOf(O)) ? "def" : null : function(e, t) {
                    var O = ""
                      , i = e.next();
                    if (t.blockComment)
                        return "-" == i && e.match("-;", !0) ? t.blockComment = !1 : e.skipTo("--;") ? (e.next(),
                        e.next(),
                        e.next(),
                        t.blockComment = !1) : e.skipToEnd(),
                        "comment";
                    if (";" == i)
                        return e.match("--", !0) && !e.match("-", !1) ? (t.blockComment = !0,
                        "comment") : (e.skipToEnd(),
                        "comment");
                    if ("[" == i)
                        return e.skipTo("]"),
                        e.eat("]"),
                        "header";
                    if ('"' == i)
                        return e.skipTo('"'),
                        "string";
                    if ("'" == i)
                        return e.skipTo("'"),
                        "string.special";
                    if ("#" == i && (e.eatWhile(/\w/),
                    O = e.current(),
                    -1 !== r.indexOf(O)))
                        return e.skipToEnd(),
                        "strong";
                    if ("$" == i && "{" == e.peek())
                        return e.skipTo("}"),
                        e.eat("}"),
                        "variableName.special";
                    if (e.eatWhile(/\w/),
                    O = e.current(),
                    -1 !== n.indexOf(O)) {
                        switch (t.extenStart = !0,
                        O) {
                        case "same":
                            t.extenSame = !0;
                            break;
                        case "include":
                        case "switch":
                        case "ignorepat":
                            t.extenInclude = !0
                        }
                        return "atom"
                    }
                }(e, t)
            },
            languageData: {
                commentTokens: {
                    line: ";",
                    block: {
                        open: ";--",
                        close: "--;"
                    }
                }
            }
        }
    },
    4676: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            brainfuck: function() {
                return r
            }
        });
        var n = "><+-.,[]".split("");
        let r = {
            name: "brainfuck",
            startState: function() {
                return {
                    commentLine: !1,
                    left: 0,
                    right: 0,
                    commentLoop: !1
                }
            },
            token: function(e, t) {
                if (e.eatSpace())
                    return null;
                e.sol() && (t.commentLine = !1);
                var O = e.next().toString();
                return -1 === n.indexOf(O) ? (t.commentLine = !0,
                e.eol() && (t.commentLine = !1),
                "comment") : !0 === t.commentLine ? (e.eol() && (t.commentLine = !1),
                "comment") : "]" === O || "[" === O ? ("[" === O ? t.left++ : t.right++,
                "bracket") : "+" === O || "-" === O ? "keyword" : "<" === O || ">" === O ? "atom" : "." === O || "," === O ? "def" : void (e.eol() && (t.commentLine = !1))
            }
        }
    },
    3957: function(e, t, O) {
        "use strict";
        function n(e, t, O, n, r, i) {
            this.indented = e,
            this.column = t,
            this.type = O,
            this.info = n,
            this.align = r,
            this.prev = i
        }
        function r(e, t, O, r) {
            var i = e.indented;
            return e.context && "statement" == e.context.type && "statement" != O && (i = e.context.indented),
            e.context = new n(i,t,O,r,null,e.context)
        }
        function i(e) {
            var t = e.context.type;
            return (")" == t || "]" == t || "}" == t) && (e.indented = e.context.indented),
            e.context = e.context.prev
        }
        function a(e, t, O) {
            if ("variable" == t.prevToken || "type" == t.prevToken || /\S(?:[^- ]>|[*\]])\s*$|\*$/.test(e.string.slice(0, O)) || t.typeAtEndOfLine && e.column() == e.indentation())
                return !0
        }
        function o(e) {
            for (; ; ) {
                if (!e || "top" == e.type)
                    return !0;
                if ("}" == e.type && "namespace" != e.prev.info)
                    return !1;
                e = e.prev
            }
        }
        function s(e) {
            var t, O, s = e.statementIndentUnit, l = e.dontAlignCalls, u = e.keywords || {}, p = e.types || {}, d = e.builtin || {}, f = e.blockKeywords || {}, h = e.defKeywords || {}, m = e.atoms || {}, Q = e.hooks || {}, $ = e.multiLineStrings, g = !1 !== e.indentStatements, P = !1 !== e.indentSwitch, S = e.namespaceSeparator, b = e.isPunctuationChar || /[\[\]{}\(\),;\:\.]/, y = e.numberStart || /[\d\.]/, x = e.number || /^(?:0x[a-f\d]+|0b[01]+|(?:\d+\.?\d*|\.\d+)(?:e[-+]?\d+)?)(u|ll?|l|f)?/i, X = e.isOperatorChar || /[+\-*&%=<>!?|\/]/, v = e.isIdentifierChar || /[\w\$_\xa1-\uffff]/, k = e.isReservedIdentifier || !1;
            function w(e, n) {
                var r = e.next();
                if (Q[r]) {
                    var i = Q[r](e, n);
                    if (!1 !== i)
                        return i
                }
                if ('"' == r || "'" == r)
                    return n.tokenize = function(e, t) {
                        for (var O, n = !1, i = !1; null != (O = e.next()); ) {
                            if (O == r && !n) {
                                i = !0;
                                break
                            }
                            n = !n && "\\" == O
                        }
                        return (i || !(n || $)) && (t.tokenize = null),
                        "string"
                    }
                    ,
                    n.tokenize(e, n);
                if (y.test(r)) {
                    if (e.backUp(1),
                    e.match(x))
                        return "number";
                    e.next()
                }
                if (b.test(r))
                    return t = r,
                    null;
                if ("/" == r) {
                    if (e.eat("*"))
                        return n.tokenize = T,
                        T(e, n);
                    if (e.eat("/"))
                        return e.skipToEnd(),
                        "comment"
                }
                if (X.test(r)) {
                    for (; !e.match(/^\/[\/*]/, !1) && e.eat(X); )
                        ;
                    return "operator"
                }
                if (e.eatWhile(v),
                S)
                    for (; e.match(S); )
                        e.eatWhile(v);
                var a = e.current();
                return c(u, a) ? (c(f, a) && (t = "newstatement"),
                c(h, a) && (O = !0),
                "keyword") : c(p, a) ? "type" : c(d, a) || k && k(a) ? (c(f, a) && (t = "newstatement"),
                "builtin") : c(m, a) ? "atom" : "variable"
            }
            function T(e, t) {
                for (var O, n = !1; O = e.next(); ) {
                    if ("/" == O && n) {
                        t.tokenize = null;
                        break
                    }
                    n = "*" == O
                }
                return "comment"
            }
            function _(t, O) {
                e.typeFirstDefinitions && t.eol() && o(O.context) && (O.typeAtEndOfLine = a(t, O, t.pos))
            }
            return {
                name: e.name,
                startState: function(e) {
                    return {
                        tokenize: null,
                        context: new n(-e,0,"top",null,!1),
                        indented: 0,
                        startOfLine: !0,
                        prevToken: null
                    }
                },
                token: function(n, s) {
                    var l = s.context;
                    if (n.sol() && (null == l.align && (l.align = !1),
                    s.indented = n.indentation(),
                    s.startOfLine = !0),
                    n.eatSpace())
                        return _(n, s),
                        null;
                    t = O = null;
                    var c = (s.tokenize || w)(n, s);
                    if ("comment" == c || "meta" == c)
                        return c;
                    if (null == l.align && (l.align = !0),
                    ";" == t || ":" == t || "," == t && n.match(/^\s*(?:\/\/.*)?$/, !1))
                        for (; "statement" == s.context.type; )
                            i(s);
                    else if ("{" == t)
                        r(s, n.column(), "}");
                    else if ("[" == t)
                        r(s, n.column(), "]");
                    else if ("(" == t)
                        r(s, n.column(), ")");
                    else if ("}" == t) {
                        for (; "statement" == l.type; )
                            l = i(s);
                        for ("}" == l.type && (l = i(s)); "statement" == l.type; )
                            l = i(s)
                    } else
                        t == l.type ? i(s) : g && (("}" == l.type || "top" == l.type) && ";" != t || "statement" == l.type && "newstatement" == t) && r(s, n.column(), "statement", n.current());
                    if ("variable" == c && ("def" == s.prevToken || e.typeFirstDefinitions && a(n, s, n.start) && o(s.context) && n.match(/^\s*\(/, !1)) && (c = "def"),
                    Q.token) {
                        var u = Q.token(n, s, c);
                        void 0 !== u && (c = u)
                    }
                    return "def" == c && !1 === e.styleDefs && (c = "variable"),
                    s.startOfLine = !1,
                    s.prevToken = O ? "def" : c || t,
                    _(n, s),
                    c
                },
                indent: function(t, O, n) {
                    if (t.tokenize != w && null != t.tokenize || t.typeAtEndOfLine)
                        return null;
                    var r = t.context
                      , i = O && O.charAt(0)
                      , a = i == r.type;
                    if ("statement" == r.type && "}" == i && (r = r.prev),
                    e.dontIndentStatements)
                        for (; "statement" == r.type && e.dontIndentStatements.test(r.info); )
                            r = r.prev;
                    if (Q.indent) {
                        var o = Q.indent(t, r, O, n.unit);
                        if ("number" == typeof o)
                            return o
                    }
                    var c = r.prev && "switch" == r.prev.info;
                    if (e.allmanIndentation && /[{(]/.test(i)) {
                        for (; "top" != r.type && "}" != r.type; )
                            r = r.prev;
                        return r.indented
                    }
                    return "statement" == r.type ? r.indented + ("{" == i ? 0 : s || n.unit) : r.align && (!l || ")" != r.type) ? r.column + (a ? 0 : 1) : ")" != r.type || a ? r.indented + (a ? 0 : n.unit) + (a || !c || /^(?:case|default)\b/.test(O) ? 0 : n.unit) : r.indented + (s || n.unit)
                },
                languageData: {
                    indentOnInput: P ? /^\s*(?:case .*?:|default:|\{\}?|\})$/ : /^\s*[{}]$/,
                    commentTokens: {
                        line: "//",
                        block: {
                            open: "/*",
                            close: "*/"
                        }
                    },
                    autocomplete: Object.keys(u).concat(Object.keys(p)).concat(Object.keys(d)).concat(Object.keys(m)),
                    ...e.languageData
                }
            }
        }
        function l(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        function c(e, t) {
            return "function" == typeof e ? e(t) : e.propertyIsEnumerable(t)
        }
        O.r(t),
        O.d(t, {
            c: function() {
                return T
            },
            ceylon: function() {
                return A
            },
            clike: function() {
                return s
            },
            cpp: function() {
                return _
            },
            csharp: function() {
                return Z
            },
            dart: function() {
                return L
            },
            java: function() {
                return W
            },
            kotlin: function() {
                return R
            },
            nesC: function() {
                return V
            },
            objectiveC: function() {
                return E
            },
            objectiveCpp: function() {
                return j
            },
            scala: function() {
                return Y
            },
            shader: function() {
                return U
            },
            squirrel: function() {
                return G
            }
        });
        var u = "auto if break case register continue return default do sizeof static else struct switch extern typedef union for goto while enum const volatile inline restrict asm fortran"
          , p = "alignas alignof and and_eq audit axiom bitand bitor catch class compl concept constexpr const_cast decltype delete dynamic_cast explicit export final friend import module mutable namespace new noexcept not not_eq operator or or_eq override private protected public reinterpret_cast requires static_assert static_cast template this thread_local throw try typeid typename using virtual xor xor_eq"
          , d = "bycopy byref in inout oneway out self super atomic nonatomic retain copy readwrite readonly strong weak assign typeof nullable nonnull null_resettable _cmd @interface @implementation @end @protocol @encode @property @synthesize @dynamic @class @public @package @private @protected @required @optional @try @catch @finally @import @selector @encode @defs @synchronized @autoreleasepool @compatibility_alias @available"
          , f = "FOUNDATION_EXPORT FOUNDATION_EXTERN NS_INLINE NS_FORMAT_FUNCTION  NS_RETURNS_RETAINEDNS_ERROR_ENUM NS_RETURNS_NOT_RETAINED NS_RETURNS_INNER_POINTER NS_DESIGNATED_INITIALIZER NS_ENUM NS_OPTIONS NS_REQUIRES_NIL_TERMINATION NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END NS_SWIFT_NAME NS_REFINED_FOR_SWIFT"
          , h = l("int long char short double float unsigned signed void bool")
          , m = l("SEL instancetype id Class Protocol BOOL");
        function Q(e) {
            return c(h, e) || /.+_t$/.test(e)
        }
        function $(e) {
            return Q(e) || c(m, e)
        }
        var g = "case do else for if switch while struct enum union"
          , P = "struct enum union";
        function S(e, t) {
            if (!t.startOfLine)
                return !1;
            for (var O, n = null; O = e.peek(); ) {
                if ("\\" == O && e.match(/^.$/)) {
                    n = S;
                    break
                }
                if ("/" == O && e.match(/^\/[\/\*]/, !1))
                    break;
                e.next()
            }
            return t.tokenize = n,
            "meta"
        }
        function b(e, t) {
            return "type" == t.prevToken && "type"
        }
        function y(e) {
            return !!e && !(e.length < 2) && "_" == e[0] && ("_" == e[1] || e[1] !== e[1].toLowerCase())
        }
        function x(e) {
            return e.eatWhile(/[\w\.']/),
            "number"
        }
        function X(e, t) {
            if (e.backUp(1),
            e.match(/^(?:R|u8R|uR|UR|LR)/)) {
                var O = e.match(/^"([^\s\\()]{0,16})\(/);
                return !!O && (t.cpp11RawStringDelim = O[1],
                t.tokenize = w,
                w(e, t))
            }
            return e.match(/^(?:u8|u|U|L)/) ? !!e.match(/^["']/, !1) && "string" : (e.next(),
            !1)
        }
        function v(e) {
            var t = /(\w+)::~?(\w+)$/.exec(e);
            return t && t[1] == t[2]
        }
        function k(e, t) {
            for (var O; null != (O = e.next()); )
                if ('"' == O && !e.eat('"')) {
                    t.tokenize = null;
                    break
                }
            return "string"
        }
        function w(e, t) {
            var O = t.cpp11RawStringDelim.replace(/[^\w\s]/g, "\\$&");
            return e.match(RegExp(".*?\\)" + O + '"')) ? t.tokenize = null : e.skipToEnd(),
            "string"
        }
        let T = s({
            name: "c",
            keywords: l(u),
            types: Q,
            blockKeywords: l(g),
            defKeywords: l(P),
            typeFirstDefinitions: !0,
            atoms: l("NULL true false"),
            isReservedIdentifier: y,
            hooks: {
                "#": S,
                "*": b
            }
        })
          , _ = s({
            name: "cpp",
            keywords: l(u + " " + p),
            types: Q,
            blockKeywords: l(g + " class try catch"),
            defKeywords: l(P + " class namespace"),
            typeFirstDefinitions: !0,
            atoms: l("true false NULL nullptr"),
            dontIndentStatements: /^template$/,
            isIdentifierChar: /[\w\$_~\xa1-\uffff]/,
            isReservedIdentifier: y,
            hooks: {
                "#": S,
                "*": b,
                u: X,
                U: X,
                L: X,
                R: X,
                0: x,
                1: x,
                2: x,
                3: x,
                4: x,
                5: x,
                6: x,
                7: x,
                8: x,
                9: x,
                token: function(e, t, O) {
                    if ("variable" == O && "(" == e.peek() && (";" == t.prevToken || null == t.prevToken || "}" == t.prevToken) && v(e.current()))
                        return "def"
                }
            },
            namespaceSeparator: "::"
        })
          , W = s({
            name: "java",
            keywords: l("abstract assert break case catch class const continue default do else enum extends final finally for goto if implements import instanceof interface native new package private protected public return static strictfp super switch synchronized this throw throws transient try volatile while @interface"),
            types: l("var byte short int long float double boolean char void Boolean Byte Character Double Float Integer Long Number Object Short String StringBuffer StringBuilder Void"),
            blockKeywords: l("catch class do else finally for if switch try while"),
            defKeywords: l("class interface enum @interface"),
            typeFirstDefinitions: !0,
            atoms: l("true false null"),
            number: /^(?:0x[a-f\d_]+|0b[01_]+|(?:[\d_]+\.?\d*|\.\d+)(?:e[-+]?[\d_]+)?)(u|ll?|l|f)?/i,
            hooks: {
                "@": function(e) {
                    return !e.match("interface", !1) && (e.eatWhile(/[\w\$_]/),
                    "meta")
                },
                '"': function(e, t) {
                    return !!e.match(/""$/) && (t.tokenize = z,
                    t.tokenize(e, t))
                }
            }
        })
          , Z = s({
            name: "csharp",
            keywords: l("abstract as async await base break case catch checked class const continue default delegate do else enum event explicit extern finally fixed for foreach goto if implicit in interface internal is lock namespace new operator out override params private protected public readonly ref return sealed sizeof stackalloc static struct switch this throw try typeof unchecked unsafe using virtual void volatile while add alias ascending descending dynamic from get global group into join let orderby partial remove select set value var yield"),
            types: l("Action Boolean Byte Char DateTime DateTimeOffset Decimal Double Func Guid Int16 Int32 Int64 Object SByte Single String Task TimeSpan UInt16 UInt32 UInt64 bool byte char decimal double short int long object sbyte float string ushort uint ulong"),
            blockKeywords: l("catch class do else finally for foreach if struct switch try while"),
            defKeywords: l("class interface namespace struct var"),
            typeFirstDefinitions: !0,
            atoms: l("true false null"),
            hooks: {
                "@": function(e, t) {
                    return e.eat('"') ? (t.tokenize = k,
                    k(e, t)) : (e.eatWhile(/[\w\$_]/),
                    "meta")
                }
            }
        });
        function z(e, t) {
            for (var O = !1; !e.eol(); ) {
                if (!O && e.match('"""')) {
                    t.tokenize = null;
                    break
                }
                O = "\\" == e.next() && !O
            }
            return "string"
        }
        function q(e) {
            return function(t, O) {
                for (var n; n = t.next(); ) {
                    if ("*" == n && t.eat("/")) {
                        if (1 != e)
                            return O.tokenize = q(e - 1),
                            O.tokenize(t, O);
                        O.tokenize = null;
                        break
                    }
                    if ("/" == n && t.eat("*"))
                        return O.tokenize = q(e + 1),
                        O.tokenize(t, O)
                }
                return "comment"
            }
        }
        let Y = s({
            name: "scala",
            keywords: l("abstract case catch class def do else extends final finally for forSome if implicit import lazy match new null object override package private protected return sealed super this throw trait try type val var while with yield _ assert assume require print println printf readLine readBoolean readByte readShort readChar readInt readLong readFloat readDouble"),
            types: l("AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either Enumeration Equiv Error Exception Fractional Function IndexedSeq Int Integral Iterable Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable Compiler Double Exception Float Integer Long Math Number Object Package Pair Process Runtime Runnable SecurityManager Short StackTraceElement StrictMath String StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void"),
            multiLineStrings: !0,
            blockKeywords: l("catch class enum do else finally for forSome if match switch try while"),
            defKeywords: l("class enum def object package trait type val var"),
            atoms: l("true false null"),
            indentStatements: !1,
            indentSwitch: !1,
            isOperatorChar: /[+\-*&%=<>!?|\/#:@]/,
            hooks: {
                "@": function(e) {
                    return e.eatWhile(/[\w\$_]/),
                    "meta"
                },
                '"': function(e, t) {
                    return !!e.match('""') && (t.tokenize = z,
                    t.tokenize(e, t))
                },
                "'": function(e) {
                    return e.match(/^(\\[^'\s]+|[^\\'])'/) ? "character" : (e.eatWhile(/[\w\$_\xa1-\uffff]/),
                    "atom")
                },
                "=": function(e, t) {
                    var O = t.context;
                    return !!("}" == O.type && O.align && e.eat(">")) && (t.context = new n(O.indented,O.column,O.type,O.info,null,O.prev),
                    "operator")
                },
                "/": function(e, t) {
                    return !!e.eat("*") && (t.tokenize = q(1),
                    t.tokenize(e, t))
                }
            },
            languageData: {
                closeBrackets: {
                    brackets: ["(", "[", "{", "'", '"', '"""']
                }
            }
        })
          , R = s({
            name: "kotlin",
            keywords: l("package as typealias class interface this super val operator var fun for is in This throw return annotation break continue object if else while do try when !in !is as? file import where by get set abstract enum open inner override private public internal protected catch finally out final vararg reified dynamic companion constructor init sealed field property receiver param sparam lateinit data inline noinline tailrec external annotation crossinline const operator infix suspend actual expect setparam"),
            types: l("Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable Compiler Double Exception Float Integer Long Math Number Object Package Pair Process Runtime Runnable SecurityManager Short StackTraceElement StrictMath String StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void Annotation Any BooleanArray ByteArray Char CharArray DeprecationLevel DoubleArray Enum FloatArray Function Int IntArray Lazy LazyThreadSafetyMode LongArray Nothing ShortArray Unit"),
            intendSwitch: !1,
            indentStatements: !1,
            multiLineStrings: !0,
            number: /^(?:0x[a-f\d_]+|0b[01_]+|(?:[\d_]+(\.\d+)?|\.\d+)(?:e[-+]?[\d_]+)?)(u|ll?|l|f)?/i,
            blockKeywords: l("catch class do else finally for if where try while enum"),
            defKeywords: l("class val var object interface fun"),
            atoms: l("true false null this"),
            hooks: {
                "@": function(e) {
                    return e.eatWhile(/[\w\$_]/),
                    "meta"
                },
                "*": function(e, t) {
                    return "." == t.prevToken ? "variable" : "operator"
                },
                '"': function(e, t) {
                    var O;
                    return t.tokenize = (O = e.match('""'),
                    function(e, t) {
                        for (var n, r = !1, i = !1; !e.eol(); ) {
                            if (!O && !r && e.match('"') || O && e.match('"""')) {
                                i = !0;
                                break
                            }
                            n = e.next(),
                            !r && "$" == n && e.match("{") && e.skipTo("}"),
                            r = !r && "\\" == n && !O
                        }
                        return (i || !O) && (t.tokenize = null),
                        "string"
                    }
                    ),
                    t.tokenize(e, t)
                },
                "/": function(e, t) {
                    return !!e.eat("*") && (t.tokenize = q(1),
                    t.tokenize(e, t))
                },
                indent: function(e, t, O, n) {
                    var r = O && O.charAt(0);
                    return ("}" == e.prevToken || ")" == e.prevToken) && "" == O ? e.indented : "operator" == e.prevToken && "}" != O && "}" != e.context.type || "variable" == e.prevToken && "." == r || ("}" == e.prevToken || ")" == e.prevToken) && "." == r ? 2 * n + t.indented : t.align && "}" == t.type ? t.indented + (e.context.type == (O || "").charAt(0) ? 0 : n) : void 0
                }
            },
            languageData: {
                closeBrackets: {
                    brackets: ["(", "[", "{", "'", '"', '"""']
                }
            }
        })
          , U = s({
            name: "shader",
            keywords: l("sampler1D sampler2D sampler3D samplerCube sampler1DShadow sampler2DShadow const attribute uniform varying break continue discard return for while do if else struct in out inout"),
            types: l("float int bool void vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 mat2 mat3 mat4"),
            blockKeywords: l("for while do if else struct"),
            builtin: l("radians degrees sin cos tan asin acos atan pow exp log exp2 sqrt inversesqrt abs sign floor ceil fract mod min max clamp mix step smoothstep length distance dot cross normalize ftransform faceforward reflect refract matrixCompMult lessThan lessThanEqual greaterThan greaterThanEqual equal notEqual any all not texture1D texture1DProj texture1DLod texture1DProjLod texture2D texture2DProj texture2DLod texture2DProjLod texture3D texture3DProj texture3DLod texture3DProjLod textureCube textureCubeLod shadow1D shadow2D shadow1DProj shadow2DProj shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod dFdx dFdy fwidth noise1 noise2 noise3 noise4"),
            atoms: l("true false gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 gl_FogCoord gl_PointCoord gl_Position gl_PointSize gl_ClipVertex gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor gl_TexCoord gl_FogFragCoord gl_FragCoord gl_FrontFacing gl_FragData gl_FragDepth gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse gl_TextureMatrixTranspose gl_ModelViewMatrixInverseTranspose gl_ProjectionMatrixInverseTranspose gl_ModelViewProjectionMatrixInverseTranspose gl_TextureMatrixInverseTranspose gl_NormalScale gl_DepthRange gl_ClipPlane gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel gl_FrontLightModelProduct gl_BackLightModelProduct gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ gl_FogParameters gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits gl_MaxDrawBuffers"),
            indentSwitch: !1,
            hooks: {
                "#": S
            }
        })
          , V = s({
            name: "nesc",
            keywords: l(u + " as atomic async call command component components configuration event generic implementation includes interface module new norace nx_struct nx_union post provides signal task uses abstract extends"),
            types: Q,
            blockKeywords: l(g),
            atoms: l("null true false"),
            hooks: {
                "#": S
            }
        })
          , E = s({
            name: "objectivec",
            keywords: l(u + " " + d),
            types: $,
            builtin: l(f),
            blockKeywords: l(g + " @synthesize @try @catch @finally @autoreleasepool @synchronized"),
            defKeywords: l(P + " @interface @implementation @protocol @class"),
            dontIndentStatements: /^@.*$/,
            typeFirstDefinitions: !0,
            atoms: l("YES NO NULL Nil nil true false nullptr"),
            isReservedIdentifier: y,
            hooks: {
                "#": S,
                "*": b
            }
        })
          , j = s({
            name: "objectivecpp",
            keywords: l(u + " " + d + " " + p),
            types: $,
            builtin: l(f),
            blockKeywords: l(g + " @synthesize @try @catch @finally @autoreleasepool @synchronized class try catch"),
            defKeywords: l(P + " @interface @implementation @protocol @class class namespace"),
            dontIndentStatements: /^@.*$|^template$/,
            typeFirstDefinitions: !0,
            atoms: l("YES NO NULL Nil nil true false nullptr"),
            isReservedIdentifier: y,
            hooks: {
                "#": S,
                "*": b,
                u: X,
                U: X,
                L: X,
                R: X,
                0: x,
                1: x,
                2: x,
                3: x,
                4: x,
                5: x,
                6: x,
                7: x,
                8: x,
                9: x,
                token: function(e, t, O) {
                    if ("variable" == O && "(" == e.peek() && (";" == t.prevToken || null == t.prevToken || "}" == t.prevToken) && v(e.current()))
                        return "def"
                }
            },
            namespaceSeparator: "::"
        })
          , G = s({
            name: "squirrel",
            keywords: l("base break clone continue const default delete enum extends function in class foreach local resume return this throw typeof yield constructor instanceof static"),
            types: Q,
            blockKeywords: l("case catch class else for foreach if switch try while"),
            defKeywords: l("function local class"),
            typeFirstDefinitions: !0,
            atoms: l("true false null"),
            hooks: {
                "#": S
            }
        });
        var C = null;
        let A = s({
            name: "ceylon",
            keywords: l("abstracts alias assembly assert assign break case catch class continue dynamic else exists extends finally for function given if import in interface is let module new nonempty object of out outer package return satisfies super switch then this throw try value void while"),
            types: function(e) {
                var t = e.charAt(0);
                return t === t.toUpperCase() && t !== t.toLowerCase()
            },
            blockKeywords: l("case catch class dynamic else finally for function if interface module new object switch try while"),
            defKeywords: l("class dynamic function interface module object package value"),
            builtin: l("abstract actual aliased annotation by default deprecated doc final formal late license native optional sealed see serializable shared suppressWarnings tagged throws variable"),
            isPunctuationChar: /[\[\]{}\(\),;\:\.`]/,
            isOperatorChar: /[+\-*&%=<>!?|^~:\/]/,
            numberStart: /[\d#$]/,
            number: /^(?:#[\da-fA-F_]+|\$[01_]+|[\d_]+[kMGTPmunpf]?|[\d_]+\.[\d_]+(?:[eE][-+]?\d+|[kMGTPmunpf]|)|)/i,
            multiLineStrings: !0,
            typeFirstDefinitions: !0,
            atoms: l("true false null larger smaller equal empty finished"),
            indentSwitch: !1,
            styleDefs: !1,
            hooks: {
                "@": function(e) {
                    return e.eatWhile(/[\w\$_]/),
                    "meta"
                },
                '"': function(e, t) {
                    return t.tokenize = function e(t) {
                        return function(O, n) {
                            for (var r, i = !1, a = !1; !O.eol(); ) {
                                if (!i && O.match('"') && ("single" == t || O.match('""'))) {
                                    a = !0;
                                    break
                                }
                                if (!i && O.match("``")) {
                                    C = e(t),
                                    a = !0;
                                    break
                                }
                                r = O.next(),
                                i = "single" == t && !i && "\\" == r
                            }
                            return a && (n.tokenize = null),
                            "string"
                        }
                    }(e.match('""') ? "triple" : "single"),
                    t.tokenize(e, t)
                },
                "`": function(e, t) {
                    return !!(C && e.match("`")) && (t.tokenize = C,
                    C = null,
                    t.tokenize(e, t))
                },
                "'": function(e) {
                    return e.eatWhile(/[\w\$_\xa1-\uffff]/),
                    "atom"
                },
                token: function(e, t, O) {
                    if (("variable" == O || "type" == O) && "." == t.prevToken)
                        return "variableName.special"
                }
            },
            languageData: {
                closeBrackets: {
                    brackets: ["(", "[", "{", "'", '"', '"""']
                }
            }
        });
        function I(e) {
            return (e.interpolationStack || (e.interpolationStack = [])).pop()
        }
        function J(e, t, O, n) {
            var r = !1;
            if (t.eat(e)) {
                if (!t.eat(e))
                    return "string";
                r = !0
            }
            function i(t, O) {
                for (var i = !1; !t.eol(); ) {
                    if (!n && !i && "$" == t.peek()) {
                        !function(e) {
                            (e.interpolationStack || (e.interpolationStack = [])).push(e.tokenize)
                        }(O),
                        O.tokenize = N;
                        break
                    }
                    var a = t.next();
                    if (a == e && !i && (!r || t.match(e + e))) {
                        O.tokenize = null;
                        break
                    }
                    i = !n && !i && "\\" == a
                }
                return "string"
            }
            return O.tokenize = i,
            i(t, O)
        }
        function N(e, t) {
            return e.eat("$"),
            e.eat("{") ? t.tokenize = null : t.tokenize = D,
            null
        }
        function D(e, t) {
            return e.eatWhile(/[\w_]/),
            t.tokenize = I(t),
            "variable"
        }
        let L = s({
            name: "dart",
            keywords: l("this super static final const abstract class extends external factory implements mixin get native set typedef with enum throw rethrow assert break case continue default in return new deferred async await covariant try catch finally do else for if switch while import library export part of show hide is as extension on yield late required"),
            blockKeywords: l("try catch finally do else for if switch while"),
            builtin: l("void bool num int double dynamic var String Null Never"),
            atoms: l("true false null"),
            hooks: {
                "@": function(e) {
                    return e.eatWhile(/[\w\$_\.]/),
                    "meta"
                },
                "'": function(e, t) {
                    return J("'", e, t, !1)
                },
                '"': function(e, t) {
                    return J('"', e, t, !1)
                },
                r: function(e, t) {
                    var O = e.peek();
                    return ("'" == O || '"' == O) && J(e.next(), e, t, !0)
                },
                "}": function(e, t) {
                    return (t.interpolationStack ? t.interpolationStack.length : 0) > 0 && (t.tokenize = I(t),
                    null)
                },
                "/": function(e, t) {
                    return !!e.eat("*") && (t.tokenize = q(1),
                    t.tokenize(e, t))
                },
                token: function(e, t, O) {
                    if ("variable" == O && RegExp("^[_$]*[A-Z][a-zA-Z0-9_$]*$", "g").test(e.current()))
                        return "type"
                }
            }
        })
    },
    6260: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            clojure: function() {
                return g
            }
        });
        var n = ["false", "nil", "true"]
          , r = [".", "catch", "def", "do", "if", "monitor-enter", "monitor-exit", "new", "quote", "recur", "set!", "throw", "try", "var"]
          , i = ["*", "*'", "*1", "*2", "*3", "*agent*", "*allow-unresolved-vars*", "*assert*", "*clojure-version*", "*command-line-args*", "*compile-files*", "*compile-path*", "*compiler-options*", "*data-readers*", "*default-data-reader-fn*", "*e", "*err*", "*file*", "*flush-on-newline*", "*fn-loader*", "*in*", "*math-context*", "*ns*", "*out*", "*print-dup*", "*print-length*", "*print-level*", "*print-meta*", "*print-namespace-maps*", "*print-readably*", "*read-eval*", "*reader-resolver*", "*source-path*", "*suppress-read*", "*unchecked-math*", "*use-context-classloader*", "*verbose-defrecords*", "*warn-on-reflection*", "+", "+'", "-", "-'", "->", "->>", "->ArrayChunk", "->Eduction", "->Vec", "->VecNode", "->VecSeq", "-cache-protocol-fn", "-reset-methods", "..", "/", "<", "<=", "=", "==", ">", ">=", "EMPTY-NODE", "Inst", "StackTraceElement->vec", "Throwable->map", "accessor", "aclone", "add-classpath", "add-watch", "agent", "agent-error", "agent-errors", "aget", "alength", "alias", "all-ns", "alter", "alter-meta!", "alter-var-root", "amap", "ancestors", "and", "any?", "apply", "areduce", "array-map", "as->", "aset", "aset-boolean", "aset-byte", "aset-char", "aset-double", "aset-float", "aset-int", "aset-long", "aset-short", "assert", "assoc", "assoc!", "assoc-in", "associative?", "atom", "await", "await-for", "await1", "bases", "bean", "bigdec", "bigint", "biginteger", "binding", "bit-and", "bit-and-not", "bit-clear", "bit-flip", "bit-not", "bit-or", "bit-set", "bit-shift-left", "bit-shift-right", "bit-test", "bit-xor", "boolean", "boolean-array", "boolean?", "booleans", "bound-fn", "bound-fn*", "bound?", "bounded-count", "butlast", "byte", "byte-array", "bytes", "bytes?", "case", "cast", "cat", "char", "char-array", "char-escape-string", "char-name-string", "char?", "chars", "chunk", "chunk-append", "chunk-buffer", "chunk-cons", "chunk-first", "chunk-next", "chunk-rest", "chunked-seq?", "class", "class?", "clear-agent-errors", "clojure-version", "coll?", "comment", "commute", "comp", "comparator", "compare", "compare-and-set!", "compile", "complement", "completing", "concat", "cond", "cond->", "cond->>", "condp", "conj", "conj!", "cons", "constantly", "construct-proxy", "contains?", "count", "counted?", "create-ns", "create-struct", "cycle", "dec", "dec'", "decimal?", "declare", "dedupe", "default-data-readers", "definline", "definterface", "defmacro", "defmethod", "defmulti", "defn", "defn-", "defonce", "defprotocol", "defrecord", "defstruct", "deftype", "delay", "delay?", "deliver", "denominator", "deref", "derive", "descendants", "destructure", "disj", "disj!", "dissoc", "dissoc!", "distinct", "distinct?", "doall", "dorun", "doseq", "dosync", "dotimes", "doto", "double", "double-array", "double?", "doubles", "drop", "drop-last", "drop-while", "eduction", "empty", "empty?", "ensure", "ensure-reduced", "enumeration-seq", "error-handler", "error-mode", "eval", "even?", "every-pred", "every?", "ex-data", "ex-info", "extend", "extend-protocol", "extend-type", "extenders", "extends?", "false?", "ffirst", "file-seq", "filter", "filterv", "find", "find-keyword", "find-ns", "find-protocol-impl", "find-protocol-method", "find-var", "first", "flatten", "float", "float-array", "float?", "floats", "flush", "fn", "fn?", "fnext", "fnil", "for", "force", "format", "frequencies", "future", "future-call", "future-cancel", "future-cancelled?", "future-done?", "future?", "gen-class", "gen-interface", "gensym", "get", "get-in", "get-method", "get-proxy-class", "get-thread-bindings", "get-validator", "group-by", "halt-when", "hash", "hash-combine", "hash-map", "hash-ordered-coll", "hash-set", "hash-unordered-coll", "ident?", "identical?", "identity", "if-let", "if-not", "if-some", "ifn?", "import", "in-ns", "inc", "inc'", "indexed?", "init-proxy", "inst-ms", "inst-ms*", "inst?", "instance?", "int", "int-array", "int?", "integer?", "interleave", "intern", "interpose", "into", "into-array", "ints", "io!", "isa?", "iterate", "iterator-seq", "juxt", "keep", "keep-indexed", "key", "keys", "keyword", "keyword?", "last", "lazy-cat", "lazy-seq", "let", "letfn", "line-seq", "list", "list*", "list?", "load", "load-file", "load-reader", "load-string", "loaded-libs", "locking", "long", "long-array", "longs", "loop", "macroexpand", "macroexpand-1", "make-array", "make-hierarchy", "map", "map-entry?", "map-indexed", "map?", "mapcat", "mapv", "max", "max-key", "memfn", "memoize", "merge", "merge-with", "meta", "method-sig", "methods", "min", "min-key", "mix-collection-hash", "mod", "munge", "name", "namespace", "namespace-munge", "nat-int?", "neg-int?", "neg?", "newline", "next", "nfirst", "nil?", "nnext", "not", "not-any?", "not-empty", "not-every?", "not=", "ns", "ns-aliases", "ns-imports", "ns-interns", "ns-map", "ns-name", "ns-publics", "ns-refers", "ns-resolve", "ns-unalias", "ns-unmap", "nth", "nthnext", "nthrest", "num", "number?", "numerator", "object-array", "odd?", "or", "parents", "partial", "partition", "partition-all", "partition-by", "pcalls", "peek", "persistent!", "pmap", "pop", "pop!", "pop-thread-bindings", "pos-int?", "pos?", "pr", "pr-str", "prefer-method", "prefers", "primitives-classnames", "print", "print-ctor", "print-dup", "print-method", "print-simple", "print-str", "printf", "println", "println-str", "prn", "prn-str", "promise", "proxy", "proxy-call-with-super", "proxy-mappings", "proxy-name", "proxy-super", "push-thread-bindings", "pvalues", "qualified-ident?", "qualified-keyword?", "qualified-symbol?", "quot", "rand", "rand-int", "rand-nth", "random-sample", "range", "ratio?", "rational?", "rationalize", "re-find", "re-groups", "re-matcher", "re-matches", "re-pattern", "re-seq", "read", "read-line", "read-string", "reader-conditional", "reader-conditional?", "realized?", "record?", "reduce", "reduce-kv", "reduced", "reduced?", "reductions", "ref", "ref-history-count", "ref-max-history", "ref-min-history", "ref-set", "refer", "refer-clojure", "reify", "release-pending-sends", "rem", "remove", "remove-all-methods", "remove-method", "remove-ns", "remove-watch", "repeat", "repeatedly", "replace", "replicate", "require", "reset!", "reset-meta!", "reset-vals!", "resolve", "rest", "restart-agent", "resultset-seq", "reverse", "reversible?", "rseq", "rsubseq", "run!", "satisfies?", "second", "select-keys", "send", "send-off", "send-via", "seq", "seq?", "seqable?", "seque", "sequence", "sequential?", "set", "set-agent-send-executor!", "set-agent-send-off-executor!", "set-error-handler!", "set-error-mode!", "set-validator!", "set?", "short", "short-array", "shorts", "shuffle", "shutdown-agents", "simple-ident?", "simple-keyword?", "simple-symbol?", "slurp", "some", "some->", "some->>", "some-fn", "some?", "sort", "sort-by", "sorted-map", "sorted-map-by", "sorted-set", "sorted-set-by", "sorted?", "special-symbol?", "spit", "split-at", "split-with", "str", "string?", "struct", "struct-map", "subs", "subseq", "subvec", "supers", "swap!", "swap-vals!", "symbol", "symbol?", "sync", "tagged-literal", "tagged-literal?", "take", "take-last", "take-nth", "take-while", "test", "the-ns", "thread-bound?", "time", "to-array", "to-array-2d", "trampoline", "transduce", "transient", "tree-seq", "true?", "type", "unchecked-add", "unchecked-add-int", "unchecked-byte", "unchecked-char", "unchecked-dec", "unchecked-dec-int", "unchecked-divide-int", "unchecked-double", "unchecked-float", "unchecked-inc", "unchecked-inc-int", "unchecked-int", "unchecked-long", "unchecked-multiply", "unchecked-multiply-int", "unchecked-negate", "unchecked-negate-int", "unchecked-remainder-int", "unchecked-short", "unchecked-subtract", "unchecked-subtract-int", "underive", "unquote", "unquote-splicing", "unreduced", "unsigned-bit-shift-right", "update", "update-in", "update-proxy", "uri?", "use", "uuid?", "val", "vals", "var-get", "var-set", "var?", "vary-meta", "vec", "vector", "vector-of", "vector?", "volatile!", "volatile?", "vreset!", "vswap!", "when", "when-first", "when-let", "when-not", "when-some", "while", "with-bindings", "with-bindings*", "with-in-str", "with-loading-context", "with-local-vars", "with-meta", "with-open", "with-out-str", "with-precision", "with-redefs", "with-redefs-fn", "xml-seq", "zero?", "zipmap"]
          , a = Q(n)
          , o = Q(r)
          , s = Q(i)
          , l = Q(["->", "->>", "as->", "binding", "bound-fn", "case", "catch", "comment", "cond", "cond->", "cond->>", "condp", "def", "definterface", "defmethod", "defn", "defmacro", "defprotocol", "defrecord", "defstruct", "deftype", "do", "doseq", "dotimes", "doto", "extend", "extend-protocol", "extend-type", "fn", "for", "future", "if", "if-let", "if-not", "if-some", "let", "letfn", "locking", "loop", "ns", "proxy", "reify", "struct-map", "some->", "some->>", "try", "when", "when-first", "when-let", "when-not", "when-some", "while", "with-bindings", "with-bindings*", "with-in-str", "with-loading-context", "with-local-vars", "with-meta", "with-open", "with-out-str", "with-precision", "with-redefs", "with-redefs-fn"])
          , c = /^(?:[\\\[\]\s"(),;@^`{}~]|$)/
          , u = /^(?:[+\-]?\d+(?:(?:N|(?:[eE][+\-]?\d+))|(?:\.?\d*(?:M|(?:[eE][+\-]?\d+))?)|\/\d+|[xX][0-9a-fA-F]+|r[0-9a-zA-Z]+)?(?=[\\\[\]\s"#'(),;@^`{}~]|$))/
          , p = /^(?:\\(?:backspace|formfeed|newline|return|space|tab|o[0-7]{3}|u[0-9A-Fa-f]{4}|x[0-9A-Fa-f]{4}|.)?(?=[\\\[\]\s"(),;@^`{}~]|$))/
          , d = /^(?:(?:[^\\\/\[\]\d\s"#'(),;@^`{}~.][^\\\[\]\s"(),;@^`{}~.\/]*(?:\.[^\\\/\[\]\d\s"#'(),;@^`{}~.][^\\\[\]\s"(),;@^`{}~.\/]*)*\/)?(?:\/|[^\\\/\[\]\d\s"#'(),;@^`{}~][^\\\[\]\s"(),;@^`{}~]*)*(?=[\\\[\]\s"(),;@^`{}~]|$))/;
        function f(e, t) {
            if (e.eatSpace() || e.eat(","))
                return ["space", null];
            if (e.match(u))
                return [null, "number"];
            if (e.match(p))
                return [null, "string.special"];
            if (e.eat(/^"/))
                return (t.tokenize = h)(e, t);
            if (e.eat(/^[(\[{]/))
                return ["open", "bracket"];
            if (e.eat(/^[)\]}]/))
                return ["close", "bracket"];
            if (e.eat(/^;/))
                return e.skipToEnd(),
                ["space", "comment"];
            if (e.eat(/^[#'@^`~]/))
                return [null, "meta"];
            var O = e.match(d)
              , n = O && O[0];
            return n ? "comment" === n && "(" === t.lastToken ? (t.tokenize = m)(e, t) : $(n, a) || ":" === n.charAt(0) ? ["symbol", "atom"] : $(n, o) || $(n, s) ? ["symbol", "keyword"] : "(" === t.lastToken ? ["symbol", "builtin"] : ["symbol", "variable"] : (e.next(),
            e.eatWhile(function(e) {
                return !$(e, c)
            }),
            [null, "error"])
        }
        function h(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ('"' === O && !n) {
                    t.tokenize = f;
                    break
                }
                n = !n && "\\" === O
            }
            return [null, "string"]
        }
        function m(e, t) {
            for (var O, n = 1; O = e.next(); )
                if (")" === O && n--,
                "(" === O && n++,
                0 === n) {
                    e.backUp(1),
                    t.tokenize = f;
                    break
                }
            return ["space", "comment"]
        }
        function Q(e) {
            for (var t = {}, O = 0; O < e.length; ++O)
                t[e[O]] = !0;
            return t
        }
        function $(e, t) {
            return t instanceof RegExp ? t.test(e) : t instanceof Object ? t.propertyIsEnumerable(e) : void 0
        }
        let g = {
            name: "clojure",
            startState: function() {
                return {
                    ctx: {
                        prev: null,
                        start: 0,
                        indentTo: 0
                    },
                    lastToken: null,
                    tokenize: f
                }
            },
            token: function(e, t) {
                e.sol() && "number" != typeof t.ctx.indentTo && (t.ctx.indentTo = t.ctx.start + 1);
                var O = t.tokenize(e, t)
                  , n = O[0]
                  , r = O[1]
                  , i = e.current();
                return "space" !== n && ("(" === t.lastToken && null === t.ctx.indentTo ? "symbol" === n && $(i, l) ? t.ctx.indentTo = t.ctx.start + e.indentUnit : t.ctx.indentTo = "next" : "next" === t.ctx.indentTo && (t.ctx.indentTo = e.column()),
                t.lastToken = i),
                "open" === n ? t.ctx = {
                    prev: t.ctx,
                    start: e.column(),
                    indentTo: null
                } : "close" === n && (t.ctx = t.ctx.prev || t.ctx),
                r
            },
            indent: function(e) {
                var t = e.ctx.indentTo;
                return "number" == typeof t ? t : e.ctx.start + 1
            },
            languageData: {
                closeBrackets: {
                    brackets: ["(", "[", "{", '"']
                },
                commentTokens: {
                    line: ";;"
                },
                autocomplete: [].concat(n, r, i)
            }
        }
    },
    7422: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            cmake: function() {
                return i
            }
        });
        var n = /({)?[a-zA-Z0-9_]+(})?/;
        function r(e, t) {
            for (var O, n, r = !1; !e.eol() && (O = e.next()) != t.pending; ) {
                if ("$" === O && "\\" != n && '"' == t.pending) {
                    r = !0;
                    break
                }
                n = O
            }
            return r && e.backUp(1),
            O == t.pending ? t.continueString = !1 : t.continueString = !0,
            "string"
        }
        let i = {
            name: "cmake",
            startState: function() {
                var e = {};
                return e.inDefinition = !1,
                e.inInclude = !1,
                e.continueString = !1,
                e.pending = !1,
                e
            },
            token: function(e, t) {
                var O, i;
                return e.eatSpace() ? null : (O = t,
                "$" === (i = e.next()) ? e.match(n) ? "variableName.special" : "variable" : O.continueString ? (e.backUp(1),
                r(e, O)) : e.match(/(\s+)?\w+\(/) || e.match(/(\s+)?\w+\ \(/) ? (e.backUp(1),
                "def") : "#" == i ? (e.skipToEnd(),
                "comment") : "'" == i || '"' == i ? (O.pending = i,
                r(e, O)) : "(" == i || ")" == i ? "bracket" : i.match(/[0-9]/) ? "number" : (e.eatWhile(/[\w-]/),
                null))
            }
        }
    },
    3702: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            cobol: function() {
                return c
            }
        });
        var n = "string"
          , r = "atom";
        function i(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        var a = i("TRUE FALSE ZEROES ZEROS ZERO SPACES SPACE LOW-VALUE LOW-VALUES ")
          , o = i("ACCEPT ACCESS ACQUIRE ADD ADDRESS ADVANCING AFTER ALIAS ALL ALPHABET ALPHABETIC ALPHABETIC-LOWER ALPHABETIC-UPPER ALPHANUMERIC ALPHANUMERIC-EDITED ALSO ALTER ALTERNATE AND ANY ARE AREA AREAS ARITHMETIC ASCENDING ASSIGN AT ATTRIBUTE AUTHOR AUTO AUTO-SKIP AUTOMATIC B-AND B-EXOR B-LESS B-NOT B-OR BACKGROUND-COLOR BACKGROUND-COLOUR BEEP BEFORE BELL BINARY BIT BITS BLANK BLINK BLOCK BOOLEAN BOTTOM BY CALL CANCEL CD CF CH CHARACTER CHARACTERS CLASS CLOCK-UNITS CLOSE COBOL CODE CODE-SET COL COLLATING COLUMN COMMA COMMIT COMMITMENT COMMON COMMUNICATION COMP COMP-0 COMP-1 COMP-2 COMP-3 COMP-4 COMP-5 COMP-6 COMP-7 COMP-8 COMP-9 COMPUTATIONAL COMPUTATIONAL-0 COMPUTATIONAL-1 COMPUTATIONAL-2 COMPUTATIONAL-3 COMPUTATIONAL-4 COMPUTATIONAL-5 COMPUTATIONAL-6 COMPUTATIONAL-7 COMPUTATIONAL-8 COMPUTATIONAL-9 COMPUTE CONFIGURATION CONNECT CONSOLE CONTAINED CONTAINS CONTENT CONTINUE CONTROL CONTROL-AREA CONTROLS CONVERTING COPY CORR CORRESPONDING COUNT CRT CRT-UNDER CURRENCY CURRENT CURSOR DATA DATE DATE-COMPILED DATE-WRITTEN DAY DAY-OF-WEEK DB DB-ACCESS-CONTROL-KEY DB-DATA-NAME DB-EXCEPTION DB-FORMAT-NAME DB-RECORD-NAME DB-SET-NAME DB-STATUS DBCS DBCS-EDITED DE DEBUG-CONTENTS DEBUG-ITEM DEBUG-LINE DEBUG-NAME DEBUG-SUB-1 DEBUG-SUB-2 DEBUG-SUB-3 DEBUGGING DECIMAL-POINT DECLARATIVES DEFAULT DELETE DELIMITED DELIMITER DEPENDING DESCENDING DESCRIBED DESTINATION DETAIL DISABLE DISCONNECT DISPLAY DISPLAY-1 DISPLAY-2 DISPLAY-3 DISPLAY-4 DISPLAY-5 DISPLAY-6 DISPLAY-7 DISPLAY-8 DISPLAY-9 DIVIDE DIVISION DOWN DROP DUPLICATE DUPLICATES DYNAMIC EBCDIC EGI EJECT ELSE EMI EMPTY EMPTY-CHECK ENABLE END END. END-ACCEPT END-ACCEPT. END-ADD END-CALL END-COMPUTE END-DELETE END-DISPLAY END-DIVIDE END-EVALUATE END-IF END-INVOKE END-MULTIPLY END-OF-PAGE END-PERFORM END-READ END-RECEIVE END-RETURN END-REWRITE END-SEARCH END-START END-STRING END-SUBTRACT END-UNSTRING END-WRITE END-XML ENTER ENTRY ENVIRONMENT EOP EQUAL EQUALS ERASE ERROR ESI EVALUATE EVERY EXCEEDS EXCEPTION EXCLUSIVE EXIT EXTEND EXTERNAL EXTERNALLY-DESCRIBED-KEY FD FETCH FILE FILE-CONTROL FILE-STREAM FILES FILLER FINAL FIND FINISH FIRST FOOTING FOR FOREGROUND-COLOR FOREGROUND-COLOUR FORMAT FREE FROM FULL FUNCTION GENERATE GET GIVING GLOBAL GO GOBACK GREATER GROUP HEADING HIGH-VALUE HIGH-VALUES HIGHLIGHT I-O I-O-CONTROL ID IDENTIFICATION IF IN INDEX INDEX-1 INDEX-2 INDEX-3 INDEX-4 INDEX-5 INDEX-6 INDEX-7 INDEX-8 INDEX-9 INDEXED INDIC INDICATE INDICATOR INDICATORS INITIAL INITIALIZE INITIATE INPUT INPUT-OUTPUT INSPECT INSTALLATION INTO INVALID INVOKE IS JUST JUSTIFIED KANJI KEEP KEY LABEL LAST LD LEADING LEFT LEFT-JUSTIFY LENGTH LENGTH-CHECK LESS LIBRARY LIKE LIMIT LIMITS LINAGE LINAGE-COUNTER LINE LINE-COUNTER LINES LINKAGE LOCAL-STORAGE LOCALE LOCALLY LOCK MEMBER MEMORY MERGE MESSAGE METACLASS MODE MODIFIED MODIFY MODULES MOVE MULTIPLE MULTIPLY NATIONAL NATIVE NEGATIVE NEXT NO NO-ECHO NONE NOT NULL NULL-KEY-MAP NULL-MAP NULLS NUMBER NUMERIC NUMERIC-EDITED OBJECT OBJECT-COMPUTER OCCURS OF OFF OMITTED ON ONLY OPEN OPTIONAL OR ORDER ORGANIZATION OTHER OUTPUT OVERFLOW OWNER PACKED-DECIMAL PADDING PAGE PAGE-COUNTER PARSE PERFORM PF PH PIC PICTURE PLUS POINTER POSITION POSITIVE PREFIX PRESENT PRINTING PRIOR PROCEDURE PROCEDURE-POINTER PROCEDURES PROCEED PROCESS PROCESSING PROGRAM PROGRAM-ID PROMPT PROTECTED PURGE QUEUE QUOTE QUOTES RANDOM RD READ READY REALM RECEIVE RECONNECT RECORD RECORD-NAME RECORDS RECURSIVE REDEFINES REEL REFERENCE REFERENCE-MONITOR REFERENCES RELATION RELATIVE RELEASE REMAINDER REMOVAL RENAMES REPEATED REPLACE REPLACING REPORT REPORTING REPORTS REPOSITORY REQUIRED RERUN RESERVE RESET RETAINING RETRIEVAL RETURN RETURN-CODE RETURNING REVERSE-VIDEO REVERSED REWIND REWRITE RF RH RIGHT RIGHT-JUSTIFY ROLLBACK ROLLING ROUNDED RUN SAME SCREEN SD SEARCH SECTION SECURE SECURITY SEGMENT SEGMENT-LIMIT SELECT SEND SENTENCE SEPARATE SEQUENCE SEQUENTIAL SET SHARED SIGN SIZE SKIP1 SKIP2 SKIP3 SORT SORT-MERGE SORT-RETURN SOURCE SOURCE-COMPUTER SPACE-FILL SPECIAL-NAMES STANDARD STANDARD-1 STANDARD-2 START STARTING STATUS STOP STORE STRING SUB-QUEUE-1 SUB-QUEUE-2 SUB-QUEUE-3 SUB-SCHEMA SUBFILE SUBSTITUTE SUBTRACT SUM SUPPRESS SYMBOLIC SYNC SYNCHRONIZED SYSIN SYSOUT TABLE TALLYING TAPE TENANT TERMINAL TERMINATE TEST TEXT THAN THEN THROUGH THRU TIME TIMES TITLE TO TOP TRAILING TRAILING-SIGN TRANSACTION TYPE TYPEDEF UNDERLINE UNEQUAL UNIT UNSTRING UNTIL UP UPDATE UPON USAGE USAGE-MODE USE USING VALID VALIDATE VALUE VALUES VARYING VLR WAIT WHEN WHEN-COMPILED WITH WITHIN WORDS WORKING-STORAGE WRITE XML XML-CODE XML-EVENT XML-NTEXT XML-TEXT ZERO ZERO-FILL ")
          , s = i("- * ** / + < <= = > >= ")
          , l = {
            digit: /\d/,
            digit_or_colon: /[\d:]/,
            hex: /[0-9a-f]/i,
            sign: /[+-]/,
            exponent: /e/i,
            keyword_char: /[^\s\(\[\;\)\]]/,
            symbol: /[\w*+\-]/
        };
        let c = {
            name: "cobol",
            startState: function() {
                return {
                    indentStack: null,
                    indentation: 0,
                    mode: !1
                }
            },
            token: function(e, t) {
                if (null == t.indentStack && e.sol() && (t.indentation = 6),
                e.eatSpace())
                    return null;
                var O = null;
                if ("string" === t.mode) {
                    for (var i = !1; null != (i = e.next()); )
                        if (('"' == i || "'" == i) && !e.match(/['"]/, !1)) {
                            t.mode = !1;
                            break
                        }
                    O = n
                } else {
                    var c, u = e.next(), p = e.column();
                    if (p >= 0 && p <= 5)
                        O = "def";
                    else if (p >= 72 && p <= 79)
                        e.skipToEnd(),
                        O = "header";
                    else if ("*" == u && 6 == p)
                        e.skipToEnd(),
                        O = "comment";
                    else if ('"' == u || "'" == u)
                        t.mode = "string",
                        O = n;
                    else if ("'" != u || l.digit_or_colon.test(e.peek())) {
                        if ("." == u)
                            O = "link";
                        else if ("0" === (c = u) && e.eat(/x/i) ? (e.eatWhile(l.hex),
                        0) : (("+" == c || "-" == c) && l.digit.test(e.peek()) && (e.eat(l.sign),
                        c = e.next()),
                        l.digit.test(c)) ? (e.eat(c),
                        e.eatWhile(l.digit),
                        "." == e.peek() && (e.eat("."),
                        e.eatWhile(l.digit)),
                        e.eat(l.exponent) && (e.eat(l.sign),
                        e.eatWhile(l.digit)),
                        0) : 1) {
                            if (e.current().match(l.symbol))
                                for (; p < 71 && void 0 !== e.eat(l.symbol); )
                                    p++;
                            O = o && o.propertyIsEnumerable(e.current().toUpperCase()) ? "keyword" : s && s.propertyIsEnumerable(e.current().toUpperCase()) ? "builtin" : a && a.propertyIsEnumerable(e.current().toUpperCase()) ? r : null
                        } else
                            O = "number"
                    } else
                        O = r
                }
                return O
            },
            indent: function(e) {
                return null == e.indentStack ? e.indentation : e.indentStack.indent
            }
        }
    },
    3196: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            coffeeScript: function() {
                return P
            }
        });
        var n = "error";
        function r(e) {
            return RegExp("^((" + e.join(")|(") + "))\\b")
        }
        var i = /^(?:->|=>|\+[+=]?|-[\-=]?|\*[\*=]?|\/[\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\|=?|\^=?|\~|!|\?|(or|and|\|\||&&|\?)=)/
          , a = /^(?:[()\[\]{},:`=;]|\.\.?\.?)/
          , o = /^[_A-Za-z$][_A-Za-z$0-9]*/
          , s = /^@[_A-Za-z$][_A-Za-z$0-9]*/
          , l = r(["and", "or", "not", "is", "isnt", "in", "instanceof", "typeof"])
          , c = ["for", "while", "loop", "if", "unless", "else", "switch", "try", "catch", "finally", "class"]
          , u = r(c.concat(["break", "by", "continue", "debugger", "delete", "do", "in", "of", "new", "return", "then", "this", "@", "throw", "when", "until", "extends"]));
        c = r(c);
        var p = /^('{3}|\"{3}|['\"])/
          , d = /^(\/{3}|\/)/
          , f = r(["Infinity", "NaN", "undefined", "null", "true", "false", "on", "off", "yes", "no"]);
        function h(e, t) {
            if (e.sol()) {
                null === t.scope.align && (t.scope.align = !1);
                var O = t.scope.offset;
                if (e.eatSpace()) {
                    var r = e.indentation();
                    return r > O && "coffee" == t.scope.type ? "indent" : r < O ? "dedent" : null
                }
                O > 0 && g(e, t)
            }
            if (e.eatSpace())
                return null;
            var c = e.peek();
            if (e.match("####"))
                return e.skipToEnd(),
                "comment";
            if (e.match("###"))
                return t.tokenize = Q,
                t.tokenize(e, t);
            if ("#" === c)
                return e.skipToEnd(),
                "comment";
            if (e.match(/^-?[0-9\.]/, !1)) {
                var h = !1;
                if (e.match(/^-?\d*\.\d+(e[\+\-]?\d+)?/i) && (h = !0),
                e.match(/^-?\d+\.\d*/) && (h = !0),
                e.match(/^-?\.\d+/) && (h = !0),
                h)
                    return "." == e.peek() && e.backUp(1),
                    "number";
                var $ = !1;
                if (e.match(/^-?0x[0-9a-f]+/i) && ($ = !0),
                e.match(/^-?[1-9]\d*(e[\+\-]?\d+)?/) && ($ = !0),
                e.match(/^-?0(?![\dx])/i) && ($ = !0),
                $)
                    return "number"
            }
            if (e.match(p))
                return t.tokenize = m(e.current(), !1, "string"),
                t.tokenize(e, t);
            if (e.match(d)) {
                if ("/" != e.current() || e.match(/^.*\//, !1))
                    return t.tokenize = m(e.current(), !0, "string.special"),
                    t.tokenize(e, t);
                e.backUp(1)
            }
            return e.match(i) || e.match(l) ? "operator" : e.match(a) ? "punctuation" : e.match(f) ? "atom" : e.match(s) || t.prop && e.match(o) ? "property" : e.match(u) ? "keyword" : e.match(o) ? "variable" : (e.next(),
            n)
        }
        function m(e, t, O) {
            return function(n, r) {
                for (; !n.eol(); )
                    if (n.eatWhile(/[^'"\/\\]/),
                    n.eat("\\")) {
                        if (n.next(),
                        t && n.eol())
                            return O
                    } else {
                        if (n.match(e))
                            return r.tokenize = h,
                            O;
                        n.eat(/['"\/]/)
                    }
                return t && (r.tokenize = h),
                O
            }
        }
        function Q(e, t) {
            for (; !e.eol(); ) {
                if (e.eatWhile(/[^#]/),
                e.match("###")) {
                    t.tokenize = h;
                    break
                }
                e.eatWhile("#")
            }
            return "comment"
        }
        function $(e, t, O="coffee") {
            for (var n = 0, r = !1, i = null, a = t.scope; a; a = a.prev)
                if ("coffee" === a.type || "}" == a.type) {
                    n = a.offset + e.indentUnit;
                    break
                }
            "coffee" !== O ? (r = null,
            i = e.column() + e.current().length) : t.scope.align && (t.scope.align = !1),
            t.scope = {
                offset: n,
                type: O,
                prev: t.scope,
                align: r,
                alignOffset: i
            }
        }
        function g(e, t) {
            if (t.scope.prev) {
                if ("coffee" !== t.scope.type)
                    return t.scope = t.scope.prev,
                    !1;
                for (var O = e.indentation(), n = !1, r = t.scope; r; r = r.prev)
                    if (O === r.offset) {
                        n = !0;
                        break
                    }
                if (!n)
                    return !0;
                for (; t.scope.prev && t.scope.offset !== O; )
                    t.scope = t.scope.prev;
                return !1
            }
        }
        let P = {
            name: "coffeescript",
            startState: function() {
                return {
                    tokenize: h,
                    scope: {
                        offset: 0,
                        type: "coffee",
                        prev: null,
                        align: !1
                    },
                    prop: !1,
                    dedent: 0
                }
            },
            token: function(e, t) {
                var O = null === t.scope.align && t.scope;
                O && e.sol() && (O.align = !1);
                var r = function(e, t) {
                    var O = t.tokenize(e, t)
                      , r = e.current();
                    "return" === r && (t.dedent = !0),
                    (("->" === r || "=>" === r) && e.eol() || "indent" === O) && $(e, t);
                    var i = "[({".indexOf(r);
                    if (-1 !== i && $(e, t, "])}".slice(i, i + 1)),
                    c.exec(r) && $(e, t),
                    "then" == r && g(e, t),
                    "dedent" === O && g(e, t))
                        return n;
                    if (-1 !== (i = "])}".indexOf(r))) {
                        for (; "coffee" == t.scope.type && t.scope.prev; )
                            t.scope = t.scope.prev;
                        t.scope.type == r && (t.scope = t.scope.prev)
                    }
                    return t.dedent && e.eol() && ("coffee" == t.scope.type && t.scope.prev && (t.scope = t.scope.prev),
                    t.dedent = !1),
                    "indent" == O || "dedent" == O ? null : O
                }(e, t);
                return r && "comment" != r && (O && (O.align = !0),
                t.prop = "punctuation" == r && "." == e.current()),
                r
            },
            indent: function(e, t) {
                if (e.tokenize != h)
                    return 0;
                var O = e.scope
                  , n = t && "])}".indexOf(t.charAt(0)) > -1;
                if (n)
                    for (; "coffee" == O.type && O.prev; )
                        O = O.prev;
                var r = n && O.type === t.charAt(0);
                return O.align ? O.alignOffset - (r ? 1 : 0) : (r ? O.prev : O).offset
            },
            languageData: {
                commentTokens: {
                    line: "#"
                }
            }
        }
    },
    3478: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            commonLisp: function() {
                return p
            }
        });
        var n, r = /^(block|let*|return-from|catch|load-time-value|setq|eval-when|locally|symbol-macrolet|flet|macrolet|tagbody|function|multiple-value-call|the|go|multiple-value-prog1|throw|if|progn|unwind-protect|labels|progv|let|quote)$/, i = /^with|^def|^do|^prog|case$|^cond$|bind$|when$|unless$/, a = /^(?:[+\-]?(?:\d+|\d*\.\d+)(?:[efd][+\-]?\d+)?|[+\-]?\d+(?:\/[+\-]?\d+)?|#b[+\-]?[01]+|#o[+\-]?[0-7]+|#x[+\-]?[\da-f]+)/, o = /[^\s'`,@()\[\]";]/;
        function s(e) {
            for (var t; t = e.next(); )
                if ("\\" == t)
                    e.next();
                else if (!o.test(t)) {
                    e.backUp(1);
                    break
                }
            return e.current()
        }
        function l(e, t) {
            if (e.eatSpace())
                return n = "ws",
                null;
            if (e.match(a))
                return "number";
            var O = e.next();
            if ("\\" == O && (O = e.next()),
            '"' == O)
                return (t.tokenize = c)(e, t);
            if ("(" == O)
                return n = "open",
                "bracket";
            if (")" == O || "]" == O)
                return n = "close",
                "bracket";
            if (";" == O)
                return e.skipToEnd(),
                n = "ws",
                "comment";
            if (/['`,@]/.test(O))
                return null;
            if ("|" == O)
                return e.skipTo("|") ? (e.next(),
                "variableName") : (e.skipToEnd(),
                "error");
            if ("#" == O) {
                var O = e.next();
                if ("(" == O)
                    return n = "open",
                    "bracket";
                if (/[+\-=\.']/.test(O))
                    return null;
                if (/\d/.test(O) && e.match(/^\d*#/))
                    return null;
                if ("|" == O)
                    return (t.tokenize = u)(e, t);
                else if (":" == O)
                    return s(e),
                    "meta";
                else if ("\\" == O)
                    return e.next(),
                    s(e),
                    "string.special";
                else
                    return "error"
            } else {
                var o = s(e);
                return "." == o ? null : (n = "symbol",
                "nil" == o || "t" == o || ":" == o.charAt(0)) ? "atom" : "open" == t.lastType && (r.test(o) || i.test(o)) ? "keyword" : "&" == o.charAt(0) ? "variableName.special" : "variableName"
            }
        }
        function c(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ('"' == O && !n) {
                    t.tokenize = l;
                    break
                }
                n = !n && "\\" == O
            }
            return "string"
        }
        function u(e, t) {
            for (var O, r; O = e.next(); ) {
                if ("#" == O && "|" == r) {
                    t.tokenize = l;
                    break
                }
                r = O
            }
            return n = "ws",
            "comment"
        }
        let p = {
            name: "commonlisp",
            startState: function() {
                return {
                    ctx: {
                        prev: null,
                        start: 0,
                        indentTo: 0
                    },
                    lastType: null,
                    tokenize: l
                }
            },
            token: function(e, t) {
                e.sol() && "number" != typeof t.ctx.indentTo && (t.ctx.indentTo = t.ctx.start + 1),
                n = null;
                var O = t.tokenize(e, t);
                return "ws" != n && (null == t.ctx.indentTo ? "symbol" == n && i.test(e.current()) ? t.ctx.indentTo = t.ctx.start + e.indentUnit : t.ctx.indentTo = "next" : "next" == t.ctx.indentTo && (t.ctx.indentTo = e.column()),
                t.lastType = n),
                "open" == n ? t.ctx = {
                    prev: t.ctx,
                    start: e.column(),
                    indentTo: null
                } : "close" == n && (t.ctx = t.ctx.prev || t.ctx),
                O
            },
            indent: function(e) {
                var t = e.ctx.indentTo;
                return "number" == typeof t ? t : e.ctx.start + 1
            },
            languageData: {
                commentTokens: {
                    line: ";;",
                    block: {
                        open: "#|",
                        close: "|#"
                    }
                },
                closeBrackets: {
                    brackets: ["(", "[", "{", '"']
                }
            }
        }
    },
    2059: function(e, t, O) {
        "use strict";
        function n(e, t) {
            return RegExp((t ? "" : "^") + "(?:" + e.join("|") + ")" + (t ? "$" : "\\b"))
        }
        function r(e, t, O) {
            return O.tokenize.push(e),
            e(t, O)
        }
        O.r(t),
        O.d(t, {
            crystal: function() {
                return k
            }
        });
        var i = /^(?:[-+/%|&^]|\*\*?|[<>]{2})/
          , a = /^(?:[=!]~|===|<=>|[<>=!]=?|[|&]{2}|~)/
          , o = /^(?:\[\][?=]?)/
          , s = /^(?:\.(?:\.{2})?|->|[?:])/
          , l = /^[a-z_\u009F-\uFFFF][a-zA-Z0-9_\u009F-\uFFFF]*/
          , c = /^[A-Z_\u009F-\uFFFF][a-zA-Z0-9_\u009F-\uFFFF]*/
          , u = n(["abstract", "alias", "as", "asm", "begin", "break", "case", "class", "def", "do", "else", "elsif", "end", "ensure", "enum", "extend", "for", "fun", "if", "include", "instance_sizeof", "lib", "macro", "module", "next", "of", "out", "pointerof", "private", "protected", "rescue", "return", "require", "select", "sizeof", "struct", "super", "then", "type", "typeof", "uninitialized", "union", "unless", "until", "when", "while", "with", "yield", "__DIR__", "__END_LINE__", "__FILE__", "__LINE__"])
          , p = n(["true", "false", "nil", "self"])
          , d = n(["def", "fun", "macro", "class", "module", "struct", "lib", "enum", "union", "do", "for"])
          , f = n(["if", "unless", "case", "while", "until", "begin", "then"])
          , h = ["end", "else", "elsif", "rescue", "ensure"]
          , m = n(h)
          , Q = ["\\)", "\\}", "\\]"]
          , $ = RegExp("^(?:" + Q.join("|") + ")$")
          , g = {
            def: x,
            fun: x,
            macro: function(e, t) {
                var O;
                if (e.eatSpace())
                    return null;
                if (O = e.match(l)) {
                    if ("def" == O)
                        return "keyword";
                    e.eat(/[?!]/)
                }
                return t.tokenize.pop(),
                "def"
            },
            class: X,
            module: X,
            struct: X,
            lib: X,
            enum: X,
            union: X
        }
          , P = {
            "[": "]",
            "{": "}",
            "(": ")",
            "<": ">"
        };
        function S(e, t) {
            if (e.eatSpace())
                return null;
            if ("\\" != t.lastToken && e.match("{%", !1))
                return r(y("%", "%"), e, t);
            if ("\\" != t.lastToken && e.match("{{", !1))
                return r(y("{", "}"), e, t);
            if ("#" == e.peek())
                return e.skipToEnd(),
                "comment";
            if (e.match(l))
                return (e.eat(/[?!]/),
                h = e.current(),
                e.eat(":")) ? "atom" : "." == t.lastToken ? "property" : u.test(h) ? (d.test(h) ? "fun" == h && t.blocks.indexOf("lib") >= 0 || "def" == h && "abstract" == t.lastToken || (t.blocks.push(h),
                t.currentIndent += 1) : ("operator" == t.lastStyle || !t.lastStyle) && f.test(h) ? (t.blocks.push(h),
                t.currentIndent += 1) : "end" == h && (t.blocks.pop(),
                t.currentIndent -= 1),
                g.hasOwnProperty(h) && t.tokenize.push(g[h]),
                "keyword") : p.test(h) ? "atom" : "variable";
            if (e.eat("@"))
                return "[" == e.peek() ? r(b("[", "]", "meta"), e, t) : (e.eat("@"),
                e.match(l) || e.match(c),
                "propertyName");
            if (e.match(c))
                return "tag";
            if (e.eat(":"))
                return e.eat('"') ? r(v('"', "atom", !1), e, t) : e.match(l) || e.match(c) || e.match(i) || e.match(a) || e.match(o) ? "atom" : (e.eat(":"),
                "operator");
            if (e.eat('"'))
                return r(v('"', "string", !0), e, t);
            if ("%" == e.peek()) {
                var O, n, h, m, Q = "string", $ = !0;
                if (e.match("%r"))
                    Q = "string.special",
                    m = e.next();
                else if (e.match("%w"))
                    $ = !1,
                    m = e.next();
                else if (e.match("%q"))
                    $ = !1,
                    m = e.next();
                else if (m = e.match(/^%([^\w\s=])/))
                    m = m[1];
                else if (e.match(/^%[a-zA-Z_\u009F-\uFFFF][\w\u009F-\uFFFF]*/))
                    return "meta";
                else if (e.eat("%"))
                    return "operator";
                return P.hasOwnProperty(m) && (m = P[m]),
                r(v(m, Q, $), e, t)
            }
            return (h = e.match(/^<<-('?)([A-Z]\w*)\1/)) ? r((O = h[2],
            n = !h[1],
            function(e, t) {
                if (e.sol() && (e.eatSpace(),
                e.match(O)))
                    return t.tokenize.pop(),
                    "string";
                for (var r = !1; e.peek(); )
                    if (r)
                        e.next(),
                        r = !1;
                    else {
                        if (e.match("{%", !1))
                            return t.tokenize.push(y("%", "%")),
                            "string";
                        if (e.match("{{", !1))
                            return t.tokenize.push(y("{", "}")),
                            "string";
                        if (n && e.match("#{", !1))
                            return t.tokenize.push(b("#{", "}", "meta")),
                            "string";
                        r = n && "\\" == e.next()
                    }
                return "string"
            }
            ), e, t) : e.eat("'") ? (e.match(/^(?:[^']|\\(?:[befnrtv0'"]|[0-7]{3}|u(?:[0-9a-fA-F]{4}|\{[0-9a-fA-F]{1,6}\})))/),
            e.eat("'"),
            "atom") : e.eat("0") ? (e.eat("x") ? e.match(/^[0-9a-fA-F_]+/) : e.eat("o") ? e.match(/^[0-7_]+/) : e.eat("b") && e.match(/^[01_]+/),
            "number") : e.eat(/^\d/) ? (e.match(/^[\d_]*(?:\.[\d_]+)?(?:[eE][+-]?\d+)?/),
            "number") : e.match(i) ? (e.eat("="),
            "operator") : e.match(a) || e.match(s) ? "operator" : (h = e.match(/[({[]/, !1)) ? r(b(h = h[0], P[h], null), e, t) : e.eat("\\") ? (e.next(),
            "meta") : (e.next(),
            null)
        }
        function b(e, t, O, n) {
            return function(r, i) {
                if (!n && r.match(e))
                    return i.tokenize[i.tokenize.length - 1] = b(e, t, O, !0),
                    i.currentIndent += 1,
                    O;
                var a = S(r, i);
                return r.current() === t && (i.tokenize.pop(),
                i.currentIndent -= 1,
                a = O),
                a
            }
        }
        function y(e, t, O) {
            return function(n, r) {
                return !O && n.match("{" + e) ? (r.currentIndent += 1,
                r.tokenize[r.tokenize.length - 1] = y(e, t, !0),
                "meta") : n.match(t + "}") ? (r.currentIndent -= 1,
                r.tokenize.pop(),
                "meta") : S(n, r)
            }
        }
        function x(e, t) {
            return e.eatSpace() ? null : (e.match(l) ? e.eat(/[!?]/) : e.match(i) || e.match(a) || e.match(o),
            t.tokenize.pop(),
            "def")
        }
        function X(e, t) {
            return e.eatSpace() ? null : (e.match(c),
            t.tokenize.pop(),
            "def")
        }
        function v(e, t, O) {
            return function(n, r) {
                for (var i = !1; n.peek(); )
                    if (i)
                        n.next(),
                        i = !1;
                    else {
                        if (n.match("{%", !1))
                            return r.tokenize.push(y("%", "%")),
                            t;
                        if (n.match("{{", !1))
                            return r.tokenize.push(y("{", "}")),
                            t;
                        if (O && n.match("#{", !1))
                            return r.tokenize.push(b("#{", "}", "meta")),
                            t;
                        var a = n.next();
                        if (a == e)
                            return r.tokenize.pop(),
                            t;
                        i = O && "\\" == a
                    }
                return t
            }
        }
        let k = {
            name: "crystal",
            startState: function() {
                return {
                    tokenize: [S],
                    currentIndent: 0,
                    lastToken: null,
                    lastStyle: null,
                    blocks: []
                }
            },
            token: function(e, t) {
                var O = t.tokenize[t.tokenize.length - 1](e, t)
                  , n = e.current();
                return O && "comment" != O && (t.lastToken = n,
                t.lastStyle = O),
                O
            },
            indent: function(e, t, O) {
                return (t = t.replace(/^\s*(?:\{%)?\s*|\s*(?:%\})?\s*$/g, ""),
                m.test(t) || $.test(t)) ? O.unit * (e.currentIndent - 1) : O.unit * e.currentIndent
            },
            languageData: {
                indentOnInput: n(Q.concat(h), !0),
                commentTokens: {
                    line: "#"
                }
            }
        }
    },
    6581: function(e, t, O) {
        "use strict";
        function n(e) {
            var t, O, n = (e = {
                ...v,
                ...e
            }).inline, r = e.tokenHooks, i = e.documentTypes || {}, a = e.mediaTypes || {}, o = e.mediaFeatures || {}, s = e.mediaValueKeywords || {}, l = e.propertyKeywords || {}, c = e.nonStandardPropertyKeywords || {}, u = e.fontProperties || {}, p = e.counterDescriptors || {}, d = e.colorKeywords || {}, f = e.valueKeywords || {}, h = e.allowNested, m = e.lineComment, Q = !0 === e.supportsAtComponent, $ = !1 !== e.highlightNonStandardPropertyKeywords;
            function g(e, O) {
                var n = e.next();
                if (r[n]) {
                    var i = r[n](e, O);
                    if (!1 !== i)
                        return i
                }
                if ("@" == n)
                    return e.eatWhile(/[\w\\\-]/),
                    t = e.current(),
                    "def";
                if ("=" == n || ("~" == n || "|" == n) && e.eat("="))
                    return t = "compare",
                    null;
                if ('"' == n || "'" == n)
                    return O.tokenize = P(n),
                    O.tokenize(e, O);
                if ("#" == n)
                    return e.eatWhile(/[\w\\\-]/),
                    t = "hash",
                    "atom";
                if ("!" == n)
                    return e.match(/^\s*\w*/),
                    t = "important",
                    "keyword";
                if (/\d/.test(n) || "." == n && e.eat(/\d/))
                    return e.eatWhile(/[\w.%]/),
                    t = "unit",
                    "number";
                if ("-" === n) {
                    if (/[\d.]/.test(e.peek()))
                        return e.eatWhile(/[\w.%]/),
                        t = "unit",
                        "number";
                    if (e.match(/^-[\w\\\-]*/))
                        return (e.eatWhile(/[\w\\\-]/),
                        e.match(/^\s*:/, !1)) ? (t = "variable-definition",
                        "def") : (t = "variable",
                        "variableName");
                    if (e.match(/^\w+-/))
                        return t = "meta",
                        "meta"
                } else if (/[,+>*\/]/.test(n))
                    return t = "select-op",
                    null;
                else if ("." == n && e.match(/^-?[_a-z][_a-z0-9-]*/i))
                    return t = "qualifier",
                    "qualifier";
                else if (/[:;{}\[\]\(\)]/.test(n))
                    return t = n,
                    null;
                else
                    return e.match(/^[\w-.]+(?=\()/) ? (/^(url(-prefix)?|domain|regexp)$/i.test(e.current()) && (O.tokenize = S),
                    t = "variable",
                    "variableName.function") : /[\w\\\-]/.test(n) ? (e.eatWhile(/[\w\\\-]/),
                    t = "word",
                    "property") : (t = null,
                    null)
            }
            function P(e) {
                return function(O, n) {
                    for (var r, i = !1; null != (r = O.next()); ) {
                        if (r == e && !i) {
                            ")" == e && O.backUp(1);
                            break
                        }
                        i = !i && "\\" == r
                    }
                    return r != e && (i || ")" == e) || (n.tokenize = null),
                    t = "string",
                    "string"
                }
            }
            function S(e, O) {
                return e.next(),
                e.match(/^\s*[\"\')]/, !1) ? O.tokenize = null : O.tokenize = P(")"),
                t = "(",
                null
            }
            function b(e, t, O) {
                this.type = e,
                this.indent = t,
                this.prev = O
            }
            function y(e, t, O, n) {
                return e.context = new b(O,t.indentation() + (!1 === n ? 0 : t.indentUnit),e.context),
                O
            }
            function X(e) {
                return e.context.prev && (e.context = e.context.prev),
                e.context.type
            }
            function k(e, t, O) {
                return _[O.context.type](e, t, O)
            }
            function w(e, t, O, n) {
                for (var r = n || 1; r > 0; r--)
                    O.context = O.context.prev;
                return k(e, t, O)
            }
            function T(e) {
                var t = e.current().toLowerCase();
                O = f.hasOwnProperty(t) ? "atom" : d.hasOwnProperty(t) ? "keyword" : "variable"
            }
            var _ = {};
            return _.top = function(e, t, n) {
                if ("{" == e)
                    return y(n, t, "block");
                if ("}" == e && n.context.prev)
                    return X(n);
                if (Q && /@component/i.test(e))
                    return y(n, t, "atComponentBlock");
                if (/^@(-moz-)?document$/i.test(e))
                    return y(n, t, "documentTypes");
                if (/^@(media|supports|(-moz-)?document|import)$/i.test(e))
                    return y(n, t, "atBlock");
                if (/^@(font-face|counter-style)/i.test(e))
                    return n.stateArg = e,
                    "restricted_atBlock_before";
                if (/^@(-(moz|ms|o|webkit)-)?keyframes$/i.test(e))
                    return "keyframes";
                else if (e && "@" == e.charAt(0))
                    return y(n, t, "at");
                else if ("hash" == e)
                    O = "builtin";
                else if ("word" == e)
                    O = "tag";
                else if ("variable-definition" == e)
                    return "maybeprop";
                else if ("interpolation" == e)
                    return y(n, t, "interpolation");
                else if (":" == e)
                    return "pseudo";
                else if (h && "(" == e)
                    return y(n, t, "parens");
                return n.context.type
            }
            ,
            _.block = function(e, t, n) {
                if ("word" == e) {
                    var r = t.current().toLowerCase();
                    return l.hasOwnProperty(r) ? (O = "property",
                    "maybeprop") : c.hasOwnProperty(r) ? (O = $ ? "string.special" : "property",
                    "maybeprop") : h ? (O = t.match(/^\s*:(?:\s|$)/, !1) ? "property" : "tag",
                    "block") : (O = "error",
                    "maybeprop")
                }
                return "meta" == e ? "block" : h || "hash" != e && "qualifier" != e ? _.top(e, t, n) : (O = "error",
                "block")
            }
            ,
            _.maybeprop = function(e, t, O) {
                return ":" == e ? y(O, t, "prop") : k(e, t, O)
            }
            ,
            _.prop = function(e, t, n) {
                if (";" == e)
                    return X(n);
                if ("{" == e && h)
                    return y(n, t, "propBlock");
                if ("}" == e || "{" == e)
                    return w(e, t, n);
                if ("(" == e)
                    return y(n, t, "parens");
                if ("hash" != e || /^#([0-9a-fA-F]{3,4}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})$/.test(t.current())) {
                    if ("word" == e)
                        T(t);
                    else if ("interpolation" == e)
                        return y(n, t, "interpolation")
                } else
                    O = "error";
                return "prop"
            }
            ,
            _.propBlock = function(e, t, n) {
                return "}" == e ? X(n) : "word" == e ? (O = "property",
                "maybeprop") : n.context.type
            }
            ,
            _.parens = function(e, t, O) {
                return "{" == e || "}" == e ? w(e, t, O) : ")" == e ? X(O) : "(" == e ? y(O, t, "parens") : "interpolation" == e ? y(O, t, "interpolation") : ("word" == e && T(t),
                "parens")
            }
            ,
            _.pseudo = function(e, t, n) {
                return "meta" == e ? "pseudo" : "word" == e ? (O = "variableName.constant",
                n.context.type) : k(e, t, n)
            }
            ,
            _.documentTypes = function(e, t, n) {
                return "word" == e && i.hasOwnProperty(t.current()) ? (O = "tag",
                n.context.type) : _.atBlock(e, t, n)
            }
            ,
            _.atBlock = function(e, t, n) {
                if ("(" == e)
                    return y(n, t, "atBlock_parens");
                if ("}" == e || ";" == e)
                    return w(e, t, n);
                if ("{" == e)
                    return X(n) && y(n, t, h ? "block" : "top");
                if ("interpolation" == e)
                    return y(n, t, "interpolation");
                if ("word" == e) {
                    var r = t.current().toLowerCase();
                    O = "only" == r || "not" == r || "and" == r || "or" == r ? "keyword" : a.hasOwnProperty(r) ? "attribute" : o.hasOwnProperty(r) ? "property" : s.hasOwnProperty(r) ? "keyword" : l.hasOwnProperty(r) ? "property" : c.hasOwnProperty(r) ? $ ? "string.special" : "property" : f.hasOwnProperty(r) ? "atom" : d.hasOwnProperty(r) ? "keyword" : "error"
                }
                return n.context.type
            }
            ,
            _.atComponentBlock = function(e, t, n) {
                return "}" == e ? w(e, t, n) : "{" == e ? X(n) && y(n, t, h ? "block" : "top", !1) : ("word" == e && (O = "error"),
                n.context.type)
            }
            ,
            _.atBlock_parens = function(e, t, O) {
                return ")" == e ? X(O) : "{" == e || "}" == e ? w(e, t, O, 2) : _.atBlock(e, t, O)
            }
            ,
            _.restricted_atBlock_before = function(e, t, n) {
                return "{" == e ? y(n, t, "restricted_atBlock") : "word" == e && "@counter-style" == n.stateArg ? (O = "variable",
                "restricted_atBlock_before") : k(e, t, n)
            }
            ,
            _.restricted_atBlock = function(e, t, n) {
                return "}" == e ? (n.stateArg = null,
                X(n)) : "word" == e ? (O = ("@font-face" != n.stateArg || u.hasOwnProperty(t.current().toLowerCase())) && ("@counter-style" != n.stateArg || p.hasOwnProperty(t.current().toLowerCase())) ? "property" : "error",
                "maybeprop") : "restricted_atBlock"
            }
            ,
            _.keyframes = function(e, t, n) {
                return "word" == e ? (O = "variable",
                "keyframes") : "{" == e ? y(n, t, "top") : k(e, t, n)
            }
            ,
            _.at = function(e, t, n) {
                return ";" == e ? X(n) : "{" == e || "}" == e ? w(e, t, n) : ("word" == e ? O = "tag" : "hash" == e && (O = "builtin"),
                "at")
            }
            ,
            _.interpolation = function(e, t, n) {
                return "}" == e ? X(n) : "{" == e || ";" == e ? w(e, t, n) : ("word" == e ? O = "variable" : "variable" != e && "(" != e && ")" != e && (O = "error"),
                "interpolation")
            }
            ,
            {
                name: e.name,
                startState: function() {
                    return {
                        tokenize: null,
                        state: n ? "block" : "top",
                        stateArg: null,
                        context: new b(n ? "block" : "top",0,null)
                    }
                },
                token: function(e, n) {
                    if (!n.tokenize && e.eatSpace())
                        return null;
                    var r = (n.tokenize || g)(e, n);
                    return r && "object" == typeof r && (t = r[1],
                    r = r[0]),
                    O = r,
                    "comment" != t && (n.state = _[n.state](t, e, n)),
                    O
                },
                indent: function(e, t, O) {
                    var n = e.context
                      , r = t && t.charAt(0)
                      , i = n.indent;
                    return "prop" == n.type && ("}" == r || ")" == r) && (n = n.prev),
                    n.prev && ("}" == r && ("block" == n.type || "top" == n.type || "interpolation" == n.type || "restricted_atBlock" == n.type) ? i = (n = n.prev).indent : (")" == r && ("parens" == n.type || "atBlock_parens" == n.type) || "{" == r && ("at" == n.type || "atBlock" == n.type)) && (i = Math.max(0, n.indent - O.unit))),
                    i
                },
                languageData: {
                    indentOnInput: /^\s*\}$/,
                    commentTokens: {
                        line: m,
                        block: {
                            open: "/*",
                            close: "*/"
                        }
                    },
                    autocomplete: x
                }
            }
        }
        function r(e) {
            for (var t = {}, O = 0; O < e.length; ++O)
                t[e[O].toLowerCase()] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            css: function() {
                return k
            },
            gss: function() {
                return W
            },
            keywords: function() {
                return X
            },
            less: function() {
                return _
            },
            mkCSS: function() {
                return n
            },
            sCSS: function() {
                return T
            }
        });
        var i = ["domain", "regexp", "url", "url-prefix"]
          , a = r(i)
          , o = ["all", "aural", "braille", "handheld", "print", "projection", "screen", "tty", "tv", "embossed"]
          , s = r(o)
          , l = ["width", "min-width", "max-width", "height", "min-height", "max-height", "device-width", "min-device-width", "max-device-width", "device-height", "min-device-height", "max-device-height", "aspect-ratio", "min-aspect-ratio", "max-aspect-ratio", "device-aspect-ratio", "min-device-aspect-ratio", "max-device-aspect-ratio", "color", "min-color", "max-color", "color-index", "min-color-index", "max-color-index", "monochrome", "min-monochrome", "max-monochrome", "resolution", "min-resolution", "max-resolution", "scan", "grid", "orientation", "device-pixel-ratio", "min-device-pixel-ratio", "max-device-pixel-ratio", "pointer", "any-pointer", "hover", "any-hover", "prefers-color-scheme", "dynamic-range", "video-dynamic-range"]
          , c = r(l)
          , u = ["landscape", "portrait", "none", "coarse", "fine", "on-demand", "hover", "interlace", "progressive", "dark", "light", "standard", "high"]
          , p = r(u)
          , d = ["align-content", "align-items", "align-self", "alignment-adjust", "alignment-baseline", "all", "anchor-point", "animation", "animation-delay", "animation-direction", "animation-duration", "animation-fill-mode", "animation-iteration-count", "animation-name", "animation-play-state", "animation-timing-function", "appearance", "azimuth", "backdrop-filter", "backface-visibility", "background", "background-attachment", "background-blend-mode", "background-clip", "background-color", "background-image", "background-origin", "background-position", "background-position-x", "background-position-y", "background-repeat", "background-size", "baseline-shift", "binding", "bleed", "block-size", "bookmark-label", "bookmark-level", "bookmark-state", "bookmark-target", "border", "border-bottom", "border-bottom-color", "border-bottom-left-radius", "border-bottom-right-radius", "border-bottom-style", "border-bottom-width", "border-collapse", "border-color", "border-image", "border-image-outset", "border-image-repeat", "border-image-slice", "border-image-source", "border-image-width", "border-left", "border-left-color", "border-left-style", "border-left-width", "border-radius", "border-right", "border-right-color", "border-right-style", "border-right-width", "border-spacing", "border-style", "border-top", "border-top-color", "border-top-left-radius", "border-top-right-radius", "border-top-style", "border-top-width", "border-width", "bottom", "box-decoration-break", "box-shadow", "box-sizing", "break-after", "break-before", "break-inside", "caption-side", "caret-color", "clear", "clip", "color", "color-profile", "column-count", "column-fill", "column-gap", "column-rule", "column-rule-color", "column-rule-style", "column-rule-width", "column-span", "column-width", "columns", "contain", "content", "counter-increment", "counter-reset", "crop", "cue", "cue-after", "cue-before", "cursor", "direction", "display", "dominant-baseline", "drop-initial-after-adjust", "drop-initial-after-align", "drop-initial-before-adjust", "drop-initial-before-align", "drop-initial-size", "drop-initial-value", "elevation", "empty-cells", "fit", "fit-content", "fit-position", "flex", "flex-basis", "flex-direction", "flex-flow", "flex-grow", "flex-shrink", "flex-wrap", "float", "float-offset", "flow-from", "flow-into", "font", "font-family", "font-feature-settings", "font-kerning", "font-language-override", "font-optical-sizing", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-synthesis", "font-variant", "font-variant-alternates", "font-variant-caps", "font-variant-east-asian", "font-variant-ligatures", "font-variant-numeric", "font-variant-position", "font-variation-settings", "font-weight", "gap", "grid", "grid-area", "grid-auto-columns", "grid-auto-flow", "grid-auto-rows", "grid-column", "grid-column-end", "grid-column-gap", "grid-column-start", "grid-gap", "grid-row", "grid-row-end", "grid-row-gap", "grid-row-start", "grid-template", "grid-template-areas", "grid-template-columns", "grid-template-rows", "hanging-punctuation", "height", "hyphens", "icon", "image-orientation", "image-rendering", "image-resolution", "inline-box-align", "inset", "inset-block", "inset-block-end", "inset-block-start", "inset-inline", "inset-inline-end", "inset-inline-start", "isolation", "justify-content", "justify-items", "justify-self", "left", "letter-spacing", "line-break", "line-height", "line-height-step", "line-stacking", "line-stacking-ruby", "line-stacking-shift", "line-stacking-strategy", "list-style", "list-style-image", "list-style-position", "list-style-type", "margin", "margin-bottom", "margin-left", "margin-right", "margin-top", "marks", "marquee-direction", "marquee-loop", "marquee-play-count", "marquee-speed", "marquee-style", "mask-clip", "mask-composite", "mask-image", "mask-mode", "mask-origin", "mask-position", "mask-repeat", "mask-size", "mask-type", "max-block-size", "max-height", "max-inline-size", "max-width", "min-block-size", "min-height", "min-inline-size", "min-width", "mix-blend-mode", "move-to", "nav-down", "nav-index", "nav-left", "nav-right", "nav-up", "object-fit", "object-position", "offset", "offset-anchor", "offset-distance", "offset-path", "offset-position", "offset-rotate", "opacity", "order", "orphans", "outline", "outline-color", "outline-offset", "outline-style", "outline-width", "overflow", "overflow-style", "overflow-wrap", "overflow-x", "overflow-y", "padding", "padding-bottom", "padding-left", "padding-right", "padding-top", "page", "page-break-after", "page-break-before", "page-break-inside", "page-policy", "pause", "pause-after", "pause-before", "perspective", "perspective-origin", "pitch", "pitch-range", "place-content", "place-items", "place-self", "play-during", "position", "presentation-level", "punctuation-trim", "quotes", "region-break-after", "region-break-before", "region-break-inside", "region-fragment", "rendering-intent", "resize", "rest", "rest-after", "rest-before", "richness", "right", "rotate", "rotation", "rotation-point", "row-gap", "ruby-align", "ruby-overhang", "ruby-position", "ruby-span", "scale", "scroll-behavior", "scroll-margin", "scroll-margin-block", "scroll-margin-block-end", "scroll-margin-block-start", "scroll-margin-bottom", "scroll-margin-inline", "scroll-margin-inline-end", "scroll-margin-inline-start", "scroll-margin-left", "scroll-margin-right", "scroll-margin-top", "scroll-padding", "scroll-padding-block", "scroll-padding-block-end", "scroll-padding-block-start", "scroll-padding-bottom", "scroll-padding-inline", "scroll-padding-inline-end", "scroll-padding-inline-start", "scroll-padding-left", "scroll-padding-right", "scroll-padding-top", "scroll-snap-align", "scroll-snap-type", "shape-image-threshold", "shape-inside", "shape-margin", "shape-outside", "size", "speak", "speak-as", "speak-header", "speak-numeral", "speak-punctuation", "speech-rate", "stress", "string-set", "tab-size", "table-layout", "target", "target-name", "target-new", "target-position", "text-align", "text-align-last", "text-combine-upright", "text-decoration", "text-decoration-color", "text-decoration-line", "text-decoration-skip", "text-decoration-skip-ink", "text-decoration-style", "text-emphasis", "text-emphasis-color", "text-emphasis-position", "text-emphasis-style", "text-height", "text-indent", "text-justify", "text-orientation", "text-outline", "text-overflow", "text-rendering", "text-shadow", "text-size-adjust", "text-space-collapse", "text-transform", "text-underline-position", "text-wrap", "top", "touch-action", "transform", "transform-origin", "transform-style", "transition", "transition-delay", "transition-duration", "transition-property", "transition-timing-function", "translate", "unicode-bidi", "user-select", "vertical-align", "visibility", "voice-balance", "voice-duration", "voice-family", "voice-pitch", "voice-range", "voice-rate", "voice-stress", "voice-volume", "volume", "white-space", "widows", "width", "will-change", "word-break", "word-spacing", "word-wrap", "writing-mode", "z-index", "clip-path", "clip-rule", "mask", "enable-background", "filter", "flood-color", "flood-opacity", "lighting-color", "stop-color", "stop-opacity", "pointer-events", "color-interpolation", "color-interpolation-filters", "color-rendering", "fill", "fill-opacity", "fill-rule", "image-rendering", "marker", "marker-end", "marker-mid", "marker-start", "paint-order", "shape-rendering", "stroke", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke-width", "text-rendering", "baseline-shift", "dominant-baseline", "glyph-orientation-horizontal", "glyph-orientation-vertical", "text-anchor", "writing-mode"]
          , f = r(d)
          , h = ["accent-color", "aspect-ratio", "border-block", "border-block-color", "border-block-end", "border-block-end-color", "border-block-end-style", "border-block-end-width", "border-block-start", "border-block-start-color", "border-block-start-style", "border-block-start-width", "border-block-style", "border-block-width", "border-inline", "border-inline-color", "border-inline-end", "border-inline-end-color", "border-inline-end-style", "border-inline-end-width", "border-inline-start", "border-inline-start-color", "border-inline-start-style", "border-inline-start-width", "border-inline-style", "border-inline-width", "content-visibility", "margin-block", "margin-block-end", "margin-block-start", "margin-inline", "margin-inline-end", "margin-inline-start", "overflow-anchor", "overscroll-behavior", "padding-block", "padding-block-end", "padding-block-start", "padding-inline", "padding-inline-end", "padding-inline-start", "scroll-snap-stop", "scrollbar-3d-light-color", "scrollbar-arrow-color", "scrollbar-base-color", "scrollbar-dark-shadow-color", "scrollbar-face-color", "scrollbar-highlight-color", "scrollbar-shadow-color", "scrollbar-track-color", "searchfield-cancel-button", "searchfield-decoration", "searchfield-results-button", "searchfield-results-decoration", "shape-inside", "zoom"]
          , m = r(h)
          , Q = ["font-display", "font-family", "src", "unicode-range", "font-variant", "font-feature-settings", "font-stretch", "font-weight", "font-style"]
          , $ = r(Q)
          , g = r(["additive-symbols", "fallback", "negative", "pad", "prefix", "range", "speak-as", "suffix", "symbols", "system"])
          , P = ["aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkgrey", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkslategrey", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dimgrey", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "grey", "green", "greenyellow", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightgrey", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightslategrey", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "rebeccapurple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "slategrey", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen"]
          , S = r(P)
          , b = ["above", "absolute", "activeborder", "additive", "activecaption", "afar", "after-white-space", "ahead", "alias", "all", "all-scroll", "alphabetic", "alternate", "always", "amharic", "amharic-abegede", "antialiased", "appworkspace", "arabic-indic", "armenian", "asterisks", "attr", "auto", "auto-flow", "avoid", "avoid-column", "avoid-page", "avoid-region", "axis-pan", "background", "backwards", "baseline", "below", "bidi-override", "binary", "bengali", "blink", "block", "block-axis", "blur", "bold", "bolder", "border", "border-box", "both", "bottom", "break", "break-all", "break-word", "brightness", "bullets", "button", "buttonface", "buttonhighlight", "buttonshadow", "buttontext", "calc", "cambodian", "capitalize", "caps-lock-indicator", "caption", "captiontext", "caret", "cell", "center", "checkbox", "circle", "cjk-decimal", "cjk-earthly-branch", "cjk-heavenly-stem", "cjk-ideographic", "clear", "clip", "close-quote", "col-resize", "collapse", "color", "color-burn", "color-dodge", "column", "column-reverse", "compact", "condensed", "conic-gradient", "contain", "content", "contents", "content-box", "context-menu", "continuous", "contrast", "copy", "counter", "counters", "cover", "crop", "cross", "crosshair", "cubic-bezier", "currentcolor", "cursive", "cyclic", "darken", "dashed", "decimal", "decimal-leading-zero", "default", "default-button", "dense", "destination-atop", "destination-in", "destination-out", "destination-over", "devanagari", "difference", "disc", "discard", "disclosure-closed", "disclosure-open", "document", "dot-dash", "dot-dot-dash", "dotted", "double", "down", "drop-shadow", "e-resize", "ease", "ease-in", "ease-in-out", "ease-out", "element", "ellipse", "ellipsis", "embed", "end", "ethiopic", "ethiopic-abegede", "ethiopic-abegede-am-et", "ethiopic-abegede-gez", "ethiopic-abegede-ti-er", "ethiopic-abegede-ti-et", "ethiopic-halehame-aa-er", "ethiopic-halehame-aa-et", "ethiopic-halehame-am-et", "ethiopic-halehame-gez", "ethiopic-halehame-om-et", "ethiopic-halehame-sid-et", "ethiopic-halehame-so-et", "ethiopic-halehame-ti-er", "ethiopic-halehame-ti-et", "ethiopic-halehame-tig", "ethiopic-numeric", "ew-resize", "exclusion", "expanded", "extends", "extra-condensed", "extra-expanded", "fantasy", "fast", "fill", "fill-box", "fixed", "flat", "flex", "flex-end", "flex-start", "footnotes", "forwards", "from", "geometricPrecision", "georgian", "grayscale", "graytext", "grid", "groove", "gujarati", "gurmukhi", "hand", "hangul", "hangul-consonant", "hard-light", "hebrew", "help", "hidden", "hide", "higher", "highlight", "highlighttext", "hiragana", "hiragana-iroha", "horizontal", "hsl", "hsla", "hue", "hue-rotate", "icon", "ignore", "inactiveborder", "inactivecaption", "inactivecaptiontext", "infinite", "infobackground", "infotext", "inherit", "initial", "inline", "inline-axis", "inline-block", "inline-flex", "inline-grid", "inline-table", "inset", "inside", "intrinsic", "invert", "italic", "japanese-formal", "japanese-informal", "justify", "kannada", "katakana", "katakana-iroha", "keep-all", "khmer", "korean-hangul-formal", "korean-hanja-formal", "korean-hanja-informal", "landscape", "lao", "large", "larger", "left", "level", "lighter", "lighten", "line-through", "linear", "linear-gradient", "lines", "list-item", "listbox", "listitem", "local", "logical", "loud", "lower", "lower-alpha", "lower-armenian", "lower-greek", "lower-hexadecimal", "lower-latin", "lower-norwegian", "lower-roman", "lowercase", "ltr", "luminosity", "malayalam", "manipulation", "match", "matrix", "matrix3d", "media-play-button", "media-slider", "media-sliderthumb", "media-volume-slider", "media-volume-sliderthumb", "medium", "menu", "menulist", "menulist-button", "menutext", "message-box", "middle", "min-intrinsic", "mix", "mongolian", "monospace", "move", "multiple", "multiple_mask_images", "multiply", "myanmar", "n-resize", "narrower", "ne-resize", "nesw-resize", "no-close-quote", "no-drop", "no-open-quote", "no-repeat", "none", "normal", "not-allowed", "nowrap", "ns-resize", "numbers", "numeric", "nw-resize", "nwse-resize", "oblique", "octal", "opacity", "open-quote", "optimizeLegibility", "optimizeSpeed", "oriya", "oromo", "outset", "outside", "outside-shape", "overlay", "overline", "padding", "padding-box", "painted", "page", "paused", "persian", "perspective", "pinch-zoom", "plus-darker", "plus-lighter", "pointer", "polygon", "portrait", "pre", "pre-line", "pre-wrap", "preserve-3d", "progress", "push-button", "radial-gradient", "radio", "read-only", "read-write", "read-write-plaintext-only", "rectangle", "region", "relative", "repeat", "repeating-linear-gradient", "repeating-radial-gradient", "repeating-conic-gradient", "repeat-x", "repeat-y", "reset", "reverse", "rgb", "rgba", "ridge", "right", "rotate", "rotate3d", "rotateX", "rotateY", "rotateZ", "round", "row", "row-resize", "row-reverse", "rtl", "run-in", "running", "s-resize", "sans-serif", "saturate", "saturation", "scale", "scale3d", "scaleX", "scaleY", "scaleZ", "screen", "scroll", "scrollbar", "scroll-position", "se-resize", "searchfield", "searchfield-cancel-button", "searchfield-decoration", "searchfield-results-button", "searchfield-results-decoration", "self-start", "self-end", "semi-condensed", "semi-expanded", "separate", "sepia", "serif", "show", "sidama", "simp-chinese-formal", "simp-chinese-informal", "single", "skew", "skewX", "skewY", "skip-white-space", "slide", "slider-horizontal", "slider-vertical", "sliderthumb-horizontal", "sliderthumb-vertical", "slow", "small", "small-caps", "small-caption", "smaller", "soft-light", "solid", "somali", "source-atop", "source-in", "source-out", "source-over", "space", "space-around", "space-between", "space-evenly", "spell-out", "square", "square-button", "start", "static", "status-bar", "stretch", "stroke", "stroke-box", "sub", "subpixel-antialiased", "svg_masks", "super", "sw-resize", "symbolic", "symbols", "system-ui", "table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row", "table-row-group", "tamil", "telugu", "text", "text-bottom", "text-top", "textarea", "textfield", "thai", "thick", "thin", "threeddarkshadow", "threedface", "threedhighlight", "threedlightshadow", "threedshadow", "tibetan", "tigre", "tigrinya-er", "tigrinya-er-abegede", "tigrinya-et", "tigrinya-et-abegede", "to", "top", "trad-chinese-formal", "trad-chinese-informal", "transform", "translate", "translate3d", "translateX", "translateY", "translateZ", "transparent", "ultra-condensed", "ultra-expanded", "underline", "unidirectional-pan", "unset", "up", "upper-alpha", "upper-armenian", "upper-greek", "upper-hexadecimal", "upper-latin", "upper-norwegian", "upper-roman", "uppercase", "urdu", "url", "var", "vertical", "vertical-text", "view-box", "visible", "visibleFill", "visiblePainted", "visibleStroke", "visual", "w-resize", "wait", "wave", "wider", "window", "windowframe", "windowtext", "words", "wrap", "wrap-reverse", "x-large", "x-small", "xor", "xx-large", "xx-small"]
          , y = r(b)
          , x = i.concat(o).concat(l).concat(u).concat(d).concat(h).concat(P).concat(b);
        let X = {
            properties: d,
            colors: P,
            fonts: Q,
            values: b,
            all: x
        }
          , v = {
            documentTypes: a,
            mediaTypes: s,
            mediaFeatures: c,
            mediaValueKeywords: p,
            propertyKeywords: f,
            nonStandardPropertyKeywords: m,
            fontProperties: $,
            counterDescriptors: g,
            colorKeywords: S,
            valueKeywords: y,
            tokenHooks: {
                "/": function(e, t) {
                    return !!e.eat("*") && (t.tokenize = w,
                    w(e, t))
                }
            }
        }
          , k = n({
            name: "css"
        });
        function w(e, t) {
            for (var O, n = !1; null != (O = e.next()); ) {
                if (n && "/" == O) {
                    t.tokenize = null;
                    break
                }
                n = "*" == O
            }
            return ["comment", "comment"]
        }
        let T = n({
            name: "scss",
            mediaTypes: s,
            mediaFeatures: c,
            mediaValueKeywords: p,
            propertyKeywords: f,
            nonStandardPropertyKeywords: m,
            colorKeywords: S,
            valueKeywords: y,
            fontProperties: $,
            allowNested: !0,
            lineComment: "//",
            tokenHooks: {
                "/": function(e, t) {
                    return e.eat("/") ? (e.skipToEnd(),
                    ["comment", "comment"]) : e.eat("*") ? (t.tokenize = w,
                    w(e, t)) : ["operator", "operator"]
                },
                ":": function(e) {
                    return !!e.match(/^\s*\{/, !1) && [null, null]
                },
                $: function(e) {
                    return (e.match(/^[\w-]+/),
                    e.match(/^\s*:/, !1)) ? ["def", "variable-definition"] : ["variableName.special", "variable"]
                },
                "#": function(e) {
                    return !!e.eat("{") && [null, "interpolation"]
                }
            }
        })
          , _ = n({
            name: "less",
            mediaTypes: s,
            mediaFeatures: c,
            mediaValueKeywords: p,
            propertyKeywords: f,
            nonStandardPropertyKeywords: m,
            colorKeywords: S,
            valueKeywords: y,
            fontProperties: $,
            allowNested: !0,
            lineComment: "//",
            tokenHooks: {
                "/": function(e, t) {
                    return e.eat("/") ? (e.skipToEnd(),
                    ["comment", "comment"]) : e.eat("*") ? (t.tokenize = w,
                    w(e, t)) : ["operator", "operator"]
                },
                "@": function(e) {
                    return e.eat("{") ? [null, "interpolation"] : !e.match(/^(charset|document|font-face|import|(-(moz|ms|o|webkit)-)?keyframes|media|namespace|page|supports)\b/i, !1) && ((e.eatWhile(/[\w\\\-]/),
                    e.match(/^\s*:/, !1)) ? ["def", "variable-definition"] : ["variableName", "variable"])
                },
                "&": function() {
                    return ["atom", "atom"]
                }
            }
        })
          , W = n({
            name: "gss",
            documentTypes: a,
            mediaTypes: s,
            mediaFeatures: c,
            propertyKeywords: f,
            nonStandardPropertyKeywords: m,
            fontProperties: $,
            counterDescriptors: g,
            colorKeywords: S,
            valueKeywords: y,
            supportsAtComponent: !0,
            tokenHooks: {
                "/": function(e, t) {
                    return !!e.eat("*") && (t.tokenize = w,
                    w(e, t))
                }
            }
        })
    },
    3225: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            cypher: function() {
                return d
            }
        });
        var n, r = function(e) {
            return RegExp("^(?:" + e.join("|") + ")$", "i")
        }, i = function(e) {
            n = null;
            var t = e.next();
            if ('"' === t)
                return e.match(/^.*?"/),
                "string";
            if ("'" === t)
                return e.match(/^.*?'/),
                "string";
            if (/[{}\(\),\.;\[\]]/.test(t))
                return n = t,
                "punctuation";
            if ("/" === t && e.eat("/"))
                return e.skipToEnd(),
                "comment";
            if (p.test(t))
                return e.eatWhile(p),
                null;
            if (e.eatWhile(/[_\w\d]/),
            e.eat(":"))
                return e.eatWhile(/[\w\d_\-]/),
                "atom";
            var O = e.current();
            return s.test(O) ? "builtin" : l.test(O) ? "def" : c.test(O) || u.test(O) ? "keyword" : "variable"
        }, a = function(e, t, O) {
            return e.context = {
                prev: e.context,
                indent: e.indent,
                col: O,
                type: t
            }
        }, o = function(e) {
            return e.indent = e.context.indent,
            e.context = e.context.prev
        }, s = r(["abs", "acos", "allShortestPaths", "asin", "atan", "atan2", "avg", "ceil", "coalesce", "collect", "cos", "cot", "count", "degrees", "e", "endnode", "exp", "extract", "filter", "floor", "haversin", "head", "id", "keys", "labels", "last", "left", "length", "log", "log10", "lower", "ltrim", "max", "min", "node", "nodes", "percentileCont", "percentileDisc", "pi", "radians", "rand", "range", "reduce", "rel", "relationship", "relationships", "replace", "reverse", "right", "round", "rtrim", "shortestPath", "sign", "sin", "size", "split", "sqrt", "startnode", "stdev", "stdevp", "str", "substring", "sum", "tail", "tan", "timestamp", "toFloat", "toInt", "toString", "trim", "type", "upper"]), l = r(["all", "and", "any", "contains", "exists", "has", "in", "none", "not", "or", "single", "xor"]), c = r(["as", "asc", "ascending", "assert", "by", "case", "commit", "constraint", "create", "csv", "cypher", "delete", "desc", "descending", "detach", "distinct", "drop", "else", "end", "ends", "explain", "false", "fieldterminator", "foreach", "from", "headers", "in", "index", "is", "join", "limit", "load", "match", "merge", "null", "on", "optional", "order", "periodic", "profile", "remove", "return", "scan", "set", "skip", "start", "starts", "then", "true", "union", "unique", "unwind", "using", "when", "where", "with", "call", "yield"]), u = r(["access", "active", "assign", "all", "alter", "as", "catalog", "change", "copy", "create", "constraint", "constraints", "current", "database", "databases", "dbms", "default", "deny", "drop", "element", "elements", "exists", "from", "grant", "graph", "graphs", "if", "index", "indexes", "label", "labels", "management", "match", "name", "names", "new", "node", "nodes", "not", "of", "on", "or", "password", "populated", "privileges", "property", "read", "relationship", "relationships", "remove", "replace", "required", "revoke", "role", "roles", "set", "show", "start", "status", "stop", "suspended", "to", "traverse", "type", "types", "user", "users", "with", "write"]), p = /[*+\-<>=&|~%^]/;
        let d = {
            name: "cypher",
            startState: function() {
                return {
                    tokenize: i,
                    context: null,
                    indent: 0,
                    col: 0
                }
            },
            token: function(e, t) {
                if (e.sol() && (t.context && null == t.context.align && (t.context.align = !1),
                t.indent = e.indentation()),
                e.eatSpace())
                    return null;
                var O = t.tokenize(e, t);
                if ("comment" !== O && t.context && null == t.context.align && "pattern" !== t.context.type && (t.context.align = !0),
                "(" === n)
                    a(t, ")", e.column());
                else if ("[" === n)
                    a(t, "]", e.column());
                else if ("{" === n)
                    a(t, "}", e.column());
                else if (/[\]\}\)]/.test(n)) {
                    for (; t.context && "pattern" === t.context.type; )
                        o(t);
                    t.context && n === t.context.type && o(t)
                } else
                    "." === n && t.context && "pattern" === t.context.type ? o(t) : /atom|string|variable/.test(O) && t.context && (/[\}\]]/.test(t.context.type) ? a(t, "pattern", e.column()) : "pattern" !== t.context.type || t.context.align || (t.context.align = !0,
                    t.context.col = e.column()));
                return O
            },
            indent: function(e, t, O) {
                var n = t && t.charAt(0)
                  , r = e.context;
                if (/[\]\}]/.test(n))
                    for (; r && "pattern" === r.type; )
                        r = r.prev;
                var i = r && n === r.type;
                return r ? "keywords" === r.type ? null : r.align ? r.col + (i ? 0 : 1) : r.indent + (i ? 0 : O.unit) : 0
            }
        }
    },
    8161: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            d: function() {
                return S
            }
        });
        var r, i = "body catch class do else enum for foreach foreach_reverse if in interface mixin out scope struct switch try union unittest version while with";
        let a = {
            keywords: n("abstract alias align asm assert auto break case cast cdouble cent cfloat const continue debug default delegate delete deprecated export extern final finally function goto immutable import inout invariant is lazy macro module new nothrow override package pragma private protected public pure ref return shared short static super synchronized template this throw typedef typeid typeof volatile __FILE__ __LINE__ __gshared __traits __vector __parameters " + i),
            blockKeywords: n(i),
            builtin: n("bool byte char creal dchar double float idouble ifloat int ireal long real short ubyte ucent uint ulong ushort wchar wstring void size_t sizediff_t"),
            atoms: n("exit failure success true false null"),
            hooks: {
                "@": function(e, t) {
                    return e.eatWhile(/[\w\$_]/),
                    "meta"
                }
            }
        };
        var o = a.statementIndentUnit
          , s = a.keywords
          , l = a.builtin
          , c = a.blockKeywords
          , u = a.atoms
          , p = a.hooks
          , d = a.multiLineStrings
          , f = /[+\-*&%=<>!?|\/]/;
        function h(e, t) {
            var O = e.next();
            if (p[O]) {
                var n = p[O](e, t);
                if (!1 !== n)
                    return n
            }
            if ('"' == O || "'" == O || "`" == O)
                return t.tokenize = function(e, t) {
                    for (var n, r = !1, i = !1; null != (n = e.next()); ) {
                        if (n == O && !r) {
                            i = !0;
                            break
                        }
                        r = !r && "\\" == n
                    }
                    return (i || !(r || d)) && (t.tokenize = null),
                    "string"
                }
                ,
                t.tokenize(e, t);
            if (/[\[\]{}\(\),;\:\.]/.test(O))
                return r = O,
                null;
            if (/\d/.test(O))
                return e.eatWhile(/[\w\.]/),
                "number";
            if ("/" == O) {
                if (e.eat("+"))
                    return t.tokenize = Q,
                    Q(e, t);
                if (e.eat("*"))
                    return t.tokenize = m,
                    m(e, t);
                if (e.eat("/"))
                    return e.skipToEnd(),
                    "comment"
            }
            if (f.test(O))
                return e.eatWhile(f),
                "operator";
            e.eatWhile(/[\w\$_\xa1-\uffff]/);
            var i = e.current();
            return s.propertyIsEnumerable(i) ? (c.propertyIsEnumerable(i) && (r = "newstatement"),
            "keyword") : l.propertyIsEnumerable(i) ? (c.propertyIsEnumerable(i) && (r = "newstatement"),
            "builtin") : u.propertyIsEnumerable(i) ? "atom" : "variable"
        }
        function m(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("/" == O && n) {
                    t.tokenize = null;
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        function Q(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("/" == O && n) {
                    t.tokenize = null;
                    break
                }
                n = "+" == O
            }
            return "comment"
        }
        function $(e, t, O, n, r) {
            this.indented = e,
            this.column = t,
            this.type = O,
            this.align = n,
            this.prev = r
        }
        function g(e, t, O) {
            var n = e.indented;
            return e.context && "statement" == e.context.type && (n = e.context.indented),
            e.context = new $(n,t,O,null,e.context)
        }
        function P(e) {
            var t = e.context.type;
            return (")" == t || "]" == t || "}" == t) && (e.indented = e.context.indented),
            e.context = e.context.prev
        }
        let S = {
            name: "d",
            startState: function(e) {
                return {
                    tokenize: null,
                    context: new $(-e,0,"top",!1),
                    indented: 0,
                    startOfLine: !0
                }
            },
            token: function(e, t) {
                var O = t.context;
                if (e.sol() && (null == O.align && (O.align = !1),
                t.indented = e.indentation(),
                t.startOfLine = !0),
                e.eatSpace())
                    return null;
                r = null;
                var n = (t.tokenize || h)(e, t);
                if ("comment" == n || "meta" == n)
                    return n;
                if (null == O.align && (O.align = !0),
                (";" == r || ":" == r || "," == r) && "statement" == O.type)
                    P(t);
                else if ("{" == r)
                    g(t, e.column(), "}");
                else if ("[" == r)
                    g(t, e.column(), "]");
                else if ("(" == r)
                    g(t, e.column(), ")");
                else if ("}" == r) {
                    for (; "statement" == O.type; )
                        O = P(t);
                    for ("}" == O.type && (O = P(t)); "statement" == O.type; )
                        O = P(t)
                } else
                    r == O.type ? P(t) : (("}" == O.type || "top" == O.type) && ";" != r || "statement" == O.type && "newstatement" == r) && g(t, e.column(), "statement");
                return t.startOfLine = !1,
                n
            },
            indent: function(e, t, O) {
                if (e.tokenize != h && null != e.tokenize)
                    return null;
                var n = e.context
                  , r = t && t.charAt(0);
                "statement" == n.type && "}" == r && (n = n.prev);
                var i = r == n.type;
                return "statement" == n.type ? n.indented + ("{" == r ? 0 : o || O.unit) : n.align ? n.column + (i ? 0 : 1) : n.indented + (i ? 0 : O.unit)
            },
            languageData: {
                indentOnInput: /^\s*[{}]$/,
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                }
            }
        }
    },
    5430: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            diff: function() {
                return r
            }
        });
        var n = {
            "+": "inserted",
            "-": "deleted",
            "@": "meta"
        };
        let r = {
            name: "diff",
            token: function(e) {
                var t = e.string.search(/[\t ]+?$/);
                if (!e.sol() || 0 === t)
                    return e.skipToEnd(),
                    ("error " + (n[e.string.charAt(0)] || "")).replace(/ $/, "");
                var O = n[e.peek()] || e.skipToEnd();
                return -1 === t ? e.skipToEnd() : e.pos = t,
                O
            }
        }
    },
    3185: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            dockerFile: function() {
                return d
            }
        });
        var n = O(4564)
          , r = "from"
          , i = RegExp("^(\\s*)\\b(" + r + ")\\b", "i")
          , a = ["run", "cmd", "entrypoint", "shell"]
          , o = RegExp("^(\\s*)(" + a.join("|") + ")(\\s+\\[)", "i")
          , s = "expose"
          , l = RegExp("^(\\s*)(" + s + ")(\\s+)", "i")
          , c = "(" + [r, s].concat(a).concat(["arg", "from", "maintainer", "label", "env", "add", "copy", "volume", "user", "workdir", "onbuild", "stopsignal", "healthcheck", "shell"]).join("|") + ")"
          , u = RegExp("^(\\s*)" + c + "(\\s*)(#.*)?$", "i")
          , p = RegExp("^(\\s*)" + c + "(\\s+)", "i");
        let d = (0,
        n.Q)({
            start: [{
                regex: /^\s*#.*$/,
                sol: !0,
                token: "comment"
            }, {
                regex: i,
                token: [null, "keyword"],
                sol: !0,
                next: "from"
            }, {
                regex: u,
                token: [null, "keyword", null, "error"],
                sol: !0
            }, {
                regex: o,
                token: [null, "keyword", null],
                sol: !0,
                next: "array"
            }, {
                regex: l,
                token: [null, "keyword", null],
                sol: !0,
                next: "expose"
            }, {
                regex: p,
                token: [null, "keyword", null],
                sol: !0,
                next: "arguments"
            }, {
                regex: /./,
                token: null
            }],
            from: [{
                regex: /\s*$/,
                token: null,
                next: "start"
            }, {
                regex: /(\s*)(#.*)$/,
                token: [null, "error"],
                next: "start"
            }, {
                regex: /(\s*\S+\s+)(as)/i,
                token: [null, "keyword"],
                next: "start"
            }, {
                token: null,
                next: "start"
            }],
            single: [{
                regex: /(?:[^\\']|\\.)/,
                token: "string"
            }, {
                regex: /'/,
                token: "string",
                pop: !0
            }],
            double: [{
                regex: /(?:[^\\"]|\\.)/,
                token: "string"
            }, {
                regex: /"/,
                token: "string",
                pop: !0
            }],
            array: [{
                regex: /\]/,
                token: null,
                next: "start"
            }, {
                regex: /"(?:[^\\"]|\\.)*"?/,
                token: "string"
            }],
            expose: [{
                regex: /\d+$/,
                token: "number",
                next: "start"
            }, {
                regex: /[^\d]+$/,
                token: null,
                next: "start"
            }, {
                regex: /\d+/,
                token: "number"
            }, {
                regex: /[^\d]+/,
                token: null
            }, {
                token: null,
                next: "start"
            }],
            arguments: [{
                regex: /^\s*#.*$/,
                sol: !0,
                token: "comment"
            }, {
                regex: /"(?:[^\\"]|\\.)*"?$/,
                token: "string",
                next: "start"
            }, {
                regex: /"/,
                token: "string",
                push: "double"
            }, {
                regex: /'(?:[^\\']|\\.)*'?$/,
                token: "string",
                next: "start"
            }, {
                regex: /'/,
                token: "string",
                push: "single"
            }, {
                regex: /[^#"']+[\\`]$/,
                token: null
            }, {
                regex: /[^#"']+$/,
                token: null,
                next: "start"
            }, {
                regex: /[^#"']+/,
                token: null
            }, {
                token: null,
                next: "start"
            }],
            languageData: {
                commentTokens: {
                    line: "#"
                }
            }
        })
    },
    8998: function(e, t, O) {
        "use strict";
        var n;
        function r(e, t) {
            var O = e.next();
            if ("<" == O && e.eat("!")) {
                if (e.eatWhile(/[\-]/))
                    return t.tokenize = i,
                    i(e, t);
                if (e.eatWhile(/[\w]/))
                    return n = "doindent",
                    "keyword"
            } else {
                if ("<" == O && e.eat("?"))
                    return t.tokenize = function(e, t) {
                        for (; !e.eol(); ) {
                            if (e.match("?>")) {
                                t.tokenize = r;
                                break
                            }
                            e.next()
                        }
                        return "meta"
                    }
                    ,
                    n = O,
                    "meta";
                if ("#" == O && e.eatWhile(/[\w]/))
                    return n = "tag",
                    "atom";
                if ("|" == O)
                    return n = "separator",
                    "keyword";
                if (O.match(/[\(\)\[\]\-\.,\+\?>]/))
                    return n = O,
                    null;
                if (O.match(/[\[\]]/))
                    return n = O,
                    "rule";
                if ('"' == O || "'" == O)
                    return t.tokenize = function(e, t) {
                        for (var i, a = !1; null != (i = e.next()); ) {
                            if (i == O && !a) {
                                t.tokenize = r;
                                break
                            }
                            a = !a && "\\" == i
                        }
                        return n = "tag",
                        "string"
                    }
                    ,
                    t.tokenize(e, t);
                if (!e.eatWhile(/[a-zA-Z\?\+\d]/))
                    return "%" == O || "*" == O ? (n = "number",
                    "number") : (e.eatWhile(/[\w\\\-_%.{,]/),
                    n = null,
                    null);
                var a = e.current();
                return null !== a.substr(a.length - 1, a.length).match(/\?|\+/) && e.backUp(1),
                n = "tag",
                "tag"
            }
        }
        function i(e, t) {
            for (var O, i = 0; null != (O = e.next()); ) {
                if (i >= 2 && ">" == O) {
                    t.tokenize = r;
                    break
                }
                i = "-" == O ? i + 1 : 0
            }
            return n = "comment",
            "comment"
        }
        O.r(t),
        O.d(t, {
            dtd: function() {
                return a
            }
        });
        let a = {
            name: "dtd",
            startState: function() {
                return {
                    tokenize: r,
                    baseIndent: 0,
                    stack: []
                }
            },
            token: function(e, t) {
                if (e.eatSpace())
                    return null;
                var O = t.tokenize(e, t)
                  , r = t.stack[t.stack.length - 1];
                return "[" == e.current() || "doindent" === n || "[" == n ? t.stack.push("rule") : "endtag" === n ? t.stack[t.stack.length - 1] = "endtag" : "]" == e.current() || "]" == n || ">" == n && "rule" == r ? t.stack.pop() : "[" == n && t.stack.push("["),
                O
            },
            indent: function(e, t, O) {
                var r = e.stack.length;
                return "]" === t.charAt(0) ? r-- : ">" === t.substr(t.length - 1, t.length) && ("<" === t.substr(0, 1) || "doindent" == n && t.length > 1 || ("doindent" == n ? r-- : ">" == n && t.length > 1 || "tag" == n && ">" !== t || ("tag" == n && "rule" == e.stack[e.stack.length - 1] ? r-- : "tag" == n ? r++ : ">" === t && "rule" == e.stack[e.stack.length - 1] && ">" === n ? r-- : ">" === t && "rule" == e.stack[e.stack.length - 1] || ("<" !== t.substr(0, 1) && ">" === t.substr(0, 1) ? r -= 1 : ">" === t || (r -= 1)))),
                (null == n || "]" == n) && r--),
                e.baseIndent + r * O.unit
            },
            languageData: {
                indentOnInput: /^\s*[\]>]$/
            }
        }
    },
    7573: function(e, t, O) {
        "use strict";
        function n(e, t) {
            for (var O = 0; O < e.length; O++)
                t(e[O], O)
        }
        O.r(t),
        O.d(t, {
            dylan: function() {
                return Q
            }
        });
        var r = {
            unnamedDefinition: ["interface"],
            namedDefinition: ["module", "library", "macro", "C-struct", "C-union", "C-function", "C-callable-wrapper"],
            typeParameterizedDefinition: ["class", "C-subtype", "C-mapped-subtype"],
            otherParameterizedDefinition: ["method", "function", "C-variable", "C-address"],
            constantSimpleDefinition: ["constant"],
            variableSimpleDefinition: ["variable"],
            otherSimpleDefinition: ["generic", "domain", "C-pointer-type", "table"],
            statement: ["if", "block", "begin", "method", "case", "for", "select", "when", "unless", "until", "while", "iterate", "profiling", "dynamic-bind"],
            separator: ["finally", "exception", "cleanup", "else", "elseif", "afterwards"],
            other: ["above", "below", "by", "from", "handler", "in", "instance", "let", "local", "otherwise", "slot", "subclass", "then", "to", "keyed-by", "virtual"],
            signalingCalls: ["signal", "error", "cerror", "break", "check-type", "abort"]
        };
        r.otherDefinition = r.unnamedDefinition.concat(r.namedDefinition).concat(r.otherParameterizedDefinition),
        r.definition = r.typeParameterizedDefinition.concat(r.otherDefinition),
        r.parameterizedDefinition = r.typeParameterizedDefinition.concat(r.otherParameterizedDefinition),
        r.simpleDefinition = r.constantSimpleDefinition.concat(r.variableSimpleDefinition).concat(r.otherSimpleDefinition),
        r.keyword = r.statement.concat(r.separator).concat(r.other);
        var i = "[-_a-zA-Z?!*@<>$%]+"
          , a = RegExp("^" + i)
          , o = {
            symbolKeyword: i + ":",
            symbolClass: "<" + i + ">",
            symbolGlobal: "\\*" + i + "\\*",
            symbolConstant: "\\$" + i
        }
          , s = {
            symbolKeyword: "atom",
            symbolClass: "tag",
            symbolGlobal: "variableName.standard",
            symbolConstant: "variableName.constant"
        };
        for (var l in o)
            o.hasOwnProperty(l) && (o[l] = RegExp("^" + o[l]));
        o.keyword = [/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];
        var c = {};
        c.keyword = "keyword",
        c.definition = "def",
        c.simpleDefinition = "def",
        c.signalingCalls = "builtin";
        var u = {}
          , p = {};
        function d(e, t, O) {
            return t.tokenize = O,
            O(e, t)
        }
        function f(e, t) {
            var O = e.peek();
            if ("'" == O || '"' == O)
                return e.next(),
                d(e, t, m(O, "string"));
            if ("/" == O) {
                if (e.next(),
                e.eat("*"))
                    return d(e, t, h);
                if (e.eat("/"))
                    return e.skipToEnd(),
                    "comment";
                e.backUp(1)
            } else if (/[+\-\d\.]/.test(O)) {
                if (e.match(/^[+-]?[0-9]*\.[0-9]*([esdx][+-]?[0-9]+)?/i) || e.match(/^[+-]?[0-9]+([esdx][+-]?[0-9]+)/i) || e.match(/^[+-]?\d+/))
                    return "number"
            } else if ("#" == O) {
                if (e.next(),
                '"' == (O = e.peek()))
                    return e.next(),
                    d(e, t, m('"', "string"));
                if ("b" == O)
                    return e.next(),
                    e.eatWhile(/[01]/),
                    "number";
                if ("x" == O)
                    return e.next(),
                    e.eatWhile(/[\da-f]/i),
                    "number";
                if ("o" == O)
                    return e.next(),
                    e.eatWhile(/[0-7]/),
                    "number";
                else if ("#" == O)
                    return e.next(),
                    "punctuation";
                else if ("[" == O || "(" == O)
                    return e.next(),
                    "bracket";
                else if (e.match(/f|t|all-keys|include|key|next|rest/i))
                    return "atom";
                else
                    return e.eatWhile(/[-a-zA-Z]/),
                    "error"
            } else if ("~" == O)
                return e.next(),
                "=" == (O = e.peek()) && (e.next(),
                "=" == (O = e.peek()) && e.next()),
                "operator";
            else if (":" == O) {
                if (e.next(),
                "=" == (O = e.peek()))
                    return e.next(),
                    "operator";
                if (":" == O)
                    return e.next(),
                    "punctuation"
            } else if (-1 != "[](){}".indexOf(O))
                return e.next(),
                "bracket";
            else if (-1 != ".,".indexOf(O))
                return e.next(),
                "punctuation";
            else if (e.match("end"))
                return "keyword";
            for (var n in o)
                if (o.hasOwnProperty(n)) {
                    var r = o[n];
                    if (r instanceof Array && function(e, t) {
                        for (var O = 0; O < e.length; O++)
                            if (t(e[O], O))
                                return !0;
                        return !1
                    }(r, function(t) {
                        return e.match(t)
                    }) || e.match(r))
                        return s[n]
                }
            return /[+\-*\/^=<>&|]/.test(O) ? (e.next(),
            "operator") : e.match("define") ? "def" : (e.eatWhile(/[\w\-]/),
            u.hasOwnProperty(e.current())) ? p[e.current()] : e.current().match(a) ? "variable" : (e.next(),
            "variableName.standard")
        }
        function h(e, t) {
            for (var O, n = !1, r = !1, i = 0; O = e.next(); ) {
                if ("/" == O && n) {
                    if (i > 0)
                        i--;
                    else {
                        t.tokenize = f;
                        break
                    }
                } else
                    "*" == O && r && i++;
                n = "*" == O,
                r = "/" == O
            }
            return "comment"
        }
        function m(e, t) {
            return function(O, n) {
                for (var r, i = !1, a = !1; null != (r = O.next()); ) {
                    if (r == e && !i) {
                        a = !0;
                        break
                    }
                    i = !i && "\\" == r
                }
                return (a || !i) && (n.tokenize = f),
                t
            }
        }
        n(["keyword", "definition", "simpleDefinition", "signalingCalls"], function(e) {
            n(r[e], function(t) {
                u[t] = e,
                p[t] = c[e]
            })
        });
        let Q = {
            name: "dylan",
            startState: function() {
                return {
                    tokenize: f,
                    currentIndent: 0
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : t.tokenize(e, t)
            },
            languageData: {
                commentTokens: {
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                }
            }
        }
    },
    9565: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            ebnf: function() {
                return i
            }
        });
        var n = {
            slash: 0,
            parenthesis: 1
        }
          , r = {
            comment: 0,
            _string: 1,
            characterClass: 2
        };
        let i = {
            name: "ebnf",
            startState: function() {
                return {
                    stringType: null,
                    commentType: null,
                    braced: 0,
                    lhs: !0,
                    localState: null,
                    stack: [],
                    inDefinition: !1
                }
            },
            token: function(e, t) {
                if (e) {
                    switch (0 === t.stack.length && ('"' == e.peek() || "'" == e.peek() ? (t.stringType = e.peek(),
                    e.next(),
                    t.stack.unshift(r._string)) : e.match("/*") ? (t.stack.unshift(r.comment),
                    t.commentType = n.slash) : e.match("(*") && (t.stack.unshift(r.comment),
                    t.commentType = n.parenthesis)),
                    t.stack[0]) {
                    case r._string:
                        for (; t.stack[0] === r._string && !e.eol(); )
                            e.peek() === t.stringType ? (e.next(),
                            t.stack.shift()) : "\\" === e.peek() ? (e.next(),
                            e.next()) : e.match(/^.[^\\\"\']*/);
                        return t.lhs ? "property" : "string";
                    case r.comment:
                        for (; t.stack[0] === r.comment && !e.eol(); )
                            t.commentType === n.slash && e.match("*/") ? (t.stack.shift(),
                            t.commentType = null) : t.commentType === n.parenthesis && e.match("*)") ? (t.stack.shift(),
                            t.commentType = null) : e.match(/^.[^\*]*/);
                        return "comment";
                    case r.characterClass:
                        for (; t.stack[0] === r.characterClass && !e.eol(); )
                            e.match(/^[^\]\\]+/) || e.match(".") || t.stack.shift();
                        return "operator"
                    }
                    var O = e.peek();
                    switch (O) {
                    case "[":
                        return e.next(),
                        t.stack.unshift(r.characterClass),
                        "bracket";
                    case ":":
                    case "|":
                    case ";":
                        return e.next(),
                        "operator";
                    case "%":
                        if (e.match("%%"))
                            return "header";
                        if (e.match(/[%][A-Za-z]+/))
                            return "keyword";
                        if (e.match(/[%][}]/))
                            return "bracket";
                        break;
                    case "/":
                        if (e.match(/[\/][A-Za-z]+/))
                            return "keyword";
                    case "\\":
                        if (e.match(/[\][a-z]+/))
                            return "string.special";
                    case ".":
                        if (e.match("."))
                            return "atom";
                    case "*":
                    case "-":
                    case "+":
                    case "^":
                        if (e.match(O))
                            return "atom";
                    case "$":
                        if (e.match("$$"))
                            return "builtin";
                        if (e.match(/[$][0-9]+/))
                            return "variableName.special";
                    case "<":
                        if (e.match(/<<[a-zA-Z_]+>>/))
                            return "builtin"
                    }
                    return e.match("//") ? (e.skipToEnd(),
                    "comment") : e.match("return") ? "operator" : e.match(/^[a-zA-Z_][a-zA-Z0-9_]*/) ? e.match(/(?=[\(.])/) ? "variable" : e.match(/(?=[\s\n]*[:=])/) ? "def" : "variableName.special" : -1 != ["[", "]", "(", ")"].indexOf(e.peek()) ? (e.next(),
                    "bracket") : (e.eatSpace() || e.next(),
                    null)
                }
            }
        }
    },
    130: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            ecl: function() {
                return g
            }
        });
        var r, i = n("abs acos allnodes ascii asin asstring atan atan2 ave case choose choosen choosesets clustersize combine correlation cos cosh count covariance cron dataset dedup define denormalize distribute distributed distribution ebcdic enth error evaluate event eventextra eventname exists exp failcode failmessage fetch fromunicode getisvalid global graph group hash hash32 hash64 hashcrc hashmd5 having if index intformat isvalid iterate join keyunicode length library limit ln local log loop map matched matchlength matchposition matchtext matchunicode max merge mergejoin min nolocal nonempty normalize parse pipe power preload process project pull random range rank ranked realformat recordof regexfind regexreplace regroup rejected rollup round roundup row rowdiff sample set sin sinh sizeof soapcall sort sorted sqrt stepped stored sum table tan tanh thisnode topn tounicode transfer trim truncate typeof ungroup unicodeorder variance which workunit xmldecode xmlencode xmltext xmlunicode"), a = n("apply assert build buildindex evaluate fail keydiff keypatch loadxml nothor notify output parallel sequential soapcall wait"), o = n("__compressed__ all and any as atmost before beginc++ best between case const counter csv descend encrypt end endc++ endmacro except exclusive expire export extend false few first flat from full function group header heading hole ifblock import in interface joined keep keyed last left limit load local locale lookup macro many maxcount maxlength min skew module named nocase noroot noscan nosort not of only opt or outer overwrite packed partition penalty physicallength pipe quote record relationship repeat return right scan self separator service shared skew skip sql store terminator thor threshold token transform trim true type unicodeorder unsorted validate virtual whole wild within xml xpath"), s = n("ascii big_endian boolean data decimal ebcdic integer pattern qstring real record rule set of string token udecimal unicode unsigned varstring varunicode"), l = n("checkpoint deprecated failcode failmessage failure global independent onwarning persist priority recovery stored success wait when"), c = n("catch class do else finally for if switch try while"), u = n("true false null"), p = {
            "#": function(e, t) {
                return !!t.startOfLine && (e.skipToEnd(),
                "meta")
            }
        }, d = /[+\-*&%=<>!?|\/]/;
        function f(e, t) {
            var O = e.next();
            if (p[O]) {
                var n = p[O](e, t);
                if (!1 !== n)
                    return n
            }
            if ('"' == O || "'" == O)
                return t.tokenize = function(e, t) {
                    for (var n, r = !1, i = !1; null != (n = e.next()); ) {
                        if (n == O && !r) {
                            i = !0;
                            break
                        }
                        r = !r && "\\" == n
                    }
                    return (i || !r) && (t.tokenize = f),
                    "string"
                }
                ,
                t.tokenize(e, t);
            if (/[\[\]{}\(\),;\:\.]/.test(O))
                return r = O,
                null;
            if (/\d/.test(O))
                return e.eatWhile(/[\w\.]/),
                "number";
            if ("/" == O) {
                if (e.eat("*"))
                    return t.tokenize = h,
                    h(e, t);
                if (e.eat("/"))
                    return e.skipToEnd(),
                    "comment"
            }
            if (d.test(O))
                return e.eatWhile(d),
                "operator";
            e.eatWhile(/[\w\$_]/);
            var m = e.current().toLowerCase();
            if (i.propertyIsEnumerable(m))
                return c.propertyIsEnumerable(m) && (r = "newstatement"),
                "keyword";
            if (a.propertyIsEnumerable(m))
                return c.propertyIsEnumerable(m) && (r = "newstatement"),
                "variable";
            if (o.propertyIsEnumerable(m))
                return c.propertyIsEnumerable(m) && (r = "newstatement"),
                "modifier";
            if (s.propertyIsEnumerable(m))
                return c.propertyIsEnumerable(m) && (r = "newstatement"),
                "type";
            if (l.propertyIsEnumerable(m))
                return c.propertyIsEnumerable(m) && (r = "newstatement"),
                "builtin";
            for (var Q = m.length - 1; Q >= 0 && (!isNaN(m[Q]) || "_" == m[Q]); )
                --Q;
            if (Q > 0) {
                var $ = m.substr(0, Q + 1);
                if (s.propertyIsEnumerable($))
                    return c.propertyIsEnumerable($) && (r = "newstatement"),
                    "type"
            }
            return u.propertyIsEnumerable(m) ? "atom" : null
        }
        function h(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("/" == O && n) {
                    t.tokenize = f;
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        function m(e, t, O, n, r) {
            this.indented = e,
            this.column = t,
            this.type = O,
            this.align = n,
            this.prev = r
        }
        function Q(e, t, O) {
            return e.context = new m(e.indented,t,O,null,e.context)
        }
        function $(e) {
            var t = e.context.type;
            return (")" == t || "]" == t || "}" == t) && (e.indented = e.context.indented),
            e.context = e.context.prev
        }
        let g = {
            name: "ecl",
            startState: function(e) {
                return {
                    tokenize: null,
                    context: new m(-e,0,"top",!1),
                    indented: 0,
                    startOfLine: !0
                }
            },
            token: function(e, t) {
                var O = t.context;
                if (e.sol() && (null == O.align && (O.align = !1),
                t.indented = e.indentation(),
                t.startOfLine = !0),
                e.eatSpace())
                    return null;
                r = null;
                var n = (t.tokenize || f)(e, t);
                if ("comment" == n || "meta" == n)
                    return n;
                if (null == O.align && (O.align = !0),
                (";" == r || ":" == r) && "statement" == O.type)
                    $(t);
                else if ("{" == r)
                    Q(t, e.column(), "}");
                else if ("[" == r)
                    Q(t, e.column(), "]");
                else if ("(" == r)
                    Q(t, e.column(), ")");
                else if ("}" == r) {
                    for (; "statement" == O.type; )
                        O = $(t);
                    for ("}" == O.type && (O = $(t)); "statement" == O.type; )
                        O = $(t)
                } else
                    r == O.type ? $(t) : ("}" == O.type || "top" == O.type || "statement" == O.type && "newstatement" == r) && Q(t, e.column(), "statement");
                return t.startOfLine = !1,
                n
            },
            indent: function(e, t, O) {
                if (e.tokenize != f && null != e.tokenize)
                    return 0;
                var n = e.context
                  , r = t && t.charAt(0);
                "statement" == n.type && "}" == r && (n = n.prev);
                var i = r == n.type;
                return "statement" == n.type ? n.indented + ("{" == r ? 0 : O.unit) : n.align ? n.column + (i ? 0 : 1) : n.indented + (i ? 0 : O.unit)
            },
            languageData: {
                indentOnInput: /^\s*[{}]$/
            }
        }
    },
    9318: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = 0, n = e.length; O < n; ++O)
                t[e[O]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            eiffel: function() {
                return o
            }
        });
        var r = n(["note", "across", "when", "variant", "until", "unique", "undefine", "then", "strip", "select", "retry", "rescue", "require", "rename", "reference", "redefine", "prefix", "once", "old", "obsolete", "loop", "local", "like", "is", "inspect", "infix", "include", "if", "frozen", "from", "external", "export", "ensure", "end", "elseif", "else", "do", "creation", "create", "check", "alias", "agent", "separate", "invariant", "inherit", "indexing", "feature", "expanded", "deferred", "class", "Void", "True", "Result", "Precursor", "False", "Current", "create", "attached", "detachable", "as", "and", "implies", "not", "or"])
          , i = n([":=", "and then", "and", "or", "<<", ">>"]);
        function a(e, t) {
            if (e.eatSpace())
                return null;
            var O, n = e.next();
            return '"' == n || "'" == n ? (O = function(e, t) {
                for (var O, r = !1; null != (O = e.next()); ) {
                    if (O == n && !r) {
                        t.tokenize.pop();
                        break
                    }
                    r = !r && "%" == O
                }
                return "string"
            }
            ,
            t.tokenize.push(O),
            O(e, t)) : "-" == n && e.eat("-") ? (e.skipToEnd(),
            "comment") : ":" == n && e.eat("=") ? "operator" : /[0-9]/.test(n) ? (e.eatWhile(/[xXbBCc0-9\.]/),
            e.eat(/[\?\!]/),
            "variable") : /[a-zA-Z_0-9]/.test(n) ? (e.eatWhile(/[a-zA-Z_0-9]/),
            e.eat(/[\?\!]/),
            "variable") : /[=+\-\/*^%<>~]/.test(n) ? (e.eatWhile(/[=+\-\/*^%<>~]/),
            "operator") : null
        }
        let o = {
            name: "eiffel",
            startState: function() {
                return {
                    tokenize: [a]
                }
            },
            token: function(e, t) {
                var O = t.tokenize[t.tokenize.length - 1](e, t);
                if ("variable" == O) {
                    var n = e.current();
                    O = r.propertyIsEnumerable(e.current()) ? "keyword" : i.propertyIsEnumerable(e.current()) ? "operator" : /^[A-Z][A-Z_0-9]*$/g.test(n) ? "tag" : /^0[bB][0-1]+$/g.test(n) ? "number" : /^0[cC][0-7]+$/g.test(n) ? "number" : /^0[xX][a-fA-F0-9]+$/g.test(n) ? "number" : /^([0-9]+\.[0-9]*)|([0-9]*\.[0-9]+)$/g.test(n) ? "number" : /^[0-9]+$/g.test(n) ? "number" : "variable"
                }
                return O
            },
            languageData: {
                commentTokens: {
                    line: "--"
                }
            }
        }
    },
    6373: function(e, t, O) {
        "use strict";
        function n(e, t, O) {
            return t(O),
            O(e, t)
        }
        O.r(t),
        O.d(t, {
            elm: function() {
                return $
            }
        });
        var r = /[a-z]/
          , i = /[A-Z]/
          , a = /[a-zA-Z0-9_]/
          , o = /[0-9]/
          , s = /[0-9A-Fa-f]/
          , l = /[-&*+.\\/<>=?^|:]/
          , c = /[(),[\]{}]/
          , u = /[ \v\f]/;
        function p() {
            return function(e, t) {
                if (e.eatWhile(u))
                    return null;
                var O = e.next();
                if (c.test(O))
                    return "{" === O && e.eat("-") ? n(e, t, function e(t) {
                        return 0 == t ? p() : function(O, n) {
                            for (; !O.eol(); ) {
                                var r = O.next();
                                if ("{" == r && O.eat("-"))
                                    ++t;
                                else if ("-" == r && O.eat("}") && 0 == --t)
                                    return n(p()),
                                    "comment"
                            }
                            return n(e(t)),
                            "comment"
                        }
                    }(1)) : "[" === O && e.match("glsl|") ? n(e, t, m) : "builtin";
                if ("'" === O)
                    return n(e, t, h);
                if ('"' === O)
                    return e.eat('"') ? e.eat('"') ? n(e, t, d) : "string" : n(e, t, f);
                if (i.test(O))
                    return e.eatWhile(a),
                    "type";
                if (r.test(O)) {
                    var Q = 1 === e.pos;
                    return e.eatWhile(a),
                    Q ? "def" : "variable"
                }
                if (o.test(O)) {
                    if ("0" === O) {
                        if (e.eat(/[xX]/))
                            return e.eatWhile(s),
                            "number"
                    } else
                        e.eatWhile(o);
                    return e.eat(".") && e.eatWhile(o),
                    e.eat(/[eE]/) && (e.eat(/[-+]/),
                    e.eatWhile(o)),
                    "number"
                }
                return l.test(O) ? "-" === O && e.eat("-") ? (e.skipToEnd(),
                "comment") : (e.eatWhile(l),
                "keyword") : "_" === O ? "keyword" : "error"
            }
        }
        function d(e, t) {
            for (; !e.eol(); )
                if ('"' === e.next() && e.eat('"') && e.eat('"')) {
                    t(p());
                    break
                }
            return "string"
        }
        function f(e, t) {
            for (; e.skipTo('\\"'); )
                e.next(),
                e.next();
            return e.skipTo('"') ? (e.next(),
            t(p()),
            "string") : (e.skipToEnd(),
            t(p()),
            "error")
        }
        function h(e, t) {
            for (; e.skipTo("\\'"); )
                e.next(),
                e.next();
            return e.skipTo("'") ? (e.next(),
            t(p()),
            "string") : (e.skipToEnd(),
            t(p()),
            "error")
        }
        function m(e, t) {
            for (; !e.eol(); )
                if ("|" === e.next() && e.eat("]")) {
                    t(p());
                    break
                }
            return "string"
        }
        var Q = {
            case: 1,
            of: 1,
            as: 1,
            if: 1,
            then: 1,
            else: 1,
            let: 1,
            in: 1,
            type: 1,
            alias: 1,
            module: 1,
            where: 1,
            import: 1,
            exposing: 1,
            port: 1
        };
        let $ = {
            name: "elm",
            startState: function() {
                return {
                    f: p()
                }
            },
            copyState: function(e) {
                return {
                    f: e.f
                }
            },
            token: function(e, t) {
                var O = t.f(e, function(e) {
                    t.f = e
                })
                  , n = e.current();
                return Q.hasOwnProperty(n) ? "keyword" : O
            },
            languageData: {
                commentTokens: {
                    line: "--"
                }
            }
        }
    },
    4756: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            erlang: function() {
                return W
            }
        });
        var n = ["-type", "-spec", "-export_type", "-opaque"]
          , r = ["after", "begin", "catch", "case", "cond", "end", "fun", "if", "let", "of", "query", "receive", "try", "when"]
          , i = /[\->,;]/
          , a = ["->", ";", ","]
          , o = ["and", "andalso", "band", "bnot", "bor", "bsl", "bsr", "bxor", "div", "not", "or", "orelse", "rem", "xor"]
          , s = /[\+\-\*\/<>=\|:!]/
          , l = ["=", "+", "-", "*", "/", ">", ">=", "<", "=<", "=:=", "==", "=/=", "/=", "||", "<-", "!"]
          , c = /[<\(\[\{]/
          , u = ["<<", "(", "[", "{"]
          , p = /[>\)\]\}]/
          , d = ["}", "]", ")", ">>"]
          , f = ["is_atom", "is_binary", "is_bitstring", "is_boolean", "is_float", "is_function", "is_integer", "is_list", "is_number", "is_pid", "is_port", "is_record", "is_reference", "is_tuple", "atom", "binary", "bitstring", "boolean", "function", "integer", "list", "number", "pid", "port", "record", "reference", "tuple"]
          , h = ["abs", "adler32", "adler32_combine", "alive", "apply", "atom_to_binary", "atom_to_list", "binary_to_atom", "binary_to_existing_atom", "binary_to_list", "binary_to_term", "bit_size", "bitstring_to_list", "byte_size", "check_process_code", "contact_binary", "crc32", "crc32_combine", "date", "decode_packet", "delete_module", "disconnect_node", "element", "erase", "exit", "float", "float_to_list", "garbage_collect", "get", "get_keys", "group_leader", "halt", "hd", "integer_to_list", "internal_bif", "iolist_size", "iolist_to_binary", "is_alive", "is_atom", "is_binary", "is_bitstring", "is_boolean", "is_float", "is_function", "is_integer", "is_list", "is_number", "is_pid", "is_port", "is_process_alive", "is_record", "is_reference", "is_tuple", "length", "link", "list_to_atom", "list_to_binary", "list_to_bitstring", "list_to_existing_atom", "list_to_float", "list_to_integer", "list_to_pid", "list_to_tuple", "load_module", "make_ref", "module_loaded", "monitor_node", "node", "node_link", "node_unlink", "nodes", "notalive", "now", "open_port", "pid_to_list", "port_close", "port_command", "port_connect", "port_control", "pre_loaded", "process_flag", "process_info", "processes", "purge_module", "put", "register", "registered", "round", "self", "setelement", "size", "spawn", "spawn_link", "spawn_monitor", "spawn_opt", "split_binary", "statistics", "term_to_binary", "time", "throw", "tl", "trunc", "tuple_size", "tuple_to_list", "unlink", "unregister", "whereis"]
          , m = /[\w@Ø-ÞÀ-Öß-öø-ÿ]/
          , Q = /[0-7]{1,3}|[bdefnrstv\\"']|\^[a-zA-Z]|x[0-9a-zA-Z]{2}|x{[0-9a-zA-Z]+}/;
        function $(e, t, O) {
            if (1 == e.current().length && t.test(e.current())) {
                for (e.backUp(1); t.test(e.peek()); )
                    if (e.next(),
                    y(e.current(), O))
                        return !0;
                e.backUp(e.current().length - 1)
            }
            return !1
        }
        function g(e, t, O) {
            if (1 == e.current().length && t.test(e.current())) {
                for (; t.test(e.peek()); )
                    e.next();
                for (; 0 < e.current().length; ) {
                    if (y(e.current(), O))
                        return !0;
                    e.backUp(1)
                }
                e.next()
            }
            return !1
        }
        function P(e) {
            return b(e, '"', "\\")
        }
        function S(e) {
            return b(e, "'", "\\")
        }
        function b(e, t, O) {
            for (; !e.eol(); ) {
                var n = e.next();
                if (n == t)
                    return !0;
                n == O && e.next()
            }
            return !1
        }
        function y(e, t) {
            return -1 < t.indexOf(e)
        }
        function x(e, t, O) {
            var n, r, i, a;
            switch (n = e,
            "comment" == (r = X(t.current(), t.column(), t.indentation(), O)).type || "whitespace" == r.type || (n.tokenStack = (0 < (a = (i = n.tokenStack).length - 1) && "record" === i[a].type && "dot" === r.type ? i.pop() : (0 < a && "group" === i[a].type && i.pop(),
            i.push(r)),
            i),
            n.tokenStack = function(e) {
                if (!e.length)
                    return e;
                var t = e.length - 1;
                if ("dot" === e[t].type)
                    return [];
                if (t > 1 && "fun" === e[t].type && "fun" === e[t - 1].token)
                    return e.slice(0, t - 1);
                switch (e[t].token) {
                case "}":
                    return k(e, {
                        g: ["{"]
                    });
                case "]":
                    return k(e, {
                        i: ["["]
                    });
                case ")":
                    return k(e, {
                        i: ["("]
                    });
                case ">>":
                    return k(e, {
                        i: ["<<"]
                    });
                case "end":
                    return k(e, {
                        i: ["begin", "case", "fun", "if", "receive", "try"]
                    });
                case ",":
                    return k(e, {
                        e: ["begin", "try", "when", "->", ",", "(", "[", "{", "<<"]
                    });
                case "->":
                    return k(e, {
                        r: ["when"],
                        m: ["try", "if", "case", "receive"]
                    });
                case ";":
                    return k(e, {
                        E: ["case", "fun", "if", "receive", "try", "when"]
                    });
                case "catch":
                    return k(e, {
                        e: ["try"]
                    });
                case "of":
                    return k(e, {
                        e: ["case"]
                    });
                case "after":
                    return k(e, {
                        e: ["receive", "try"]
                    });
                default:
                    return e
                }
            }(n.tokenStack)),
            O) {
            case "atom":
            case "boolean":
                return "atom";
            case "attribute":
                return "attribute";
            case "builtin":
                return "builtin";
            case "close_paren":
            case "colon":
            case "dot":
            case "open_paren":
            case "separator":
            default:
                return null;
            case "comment":
                return "comment";
            case "error":
                return "error";
            case "fun":
                return "meta";
            case "function":
                return "tag";
            case "guard":
                return "property";
            case "keyword":
                return "keyword";
            case "macro":
                return "macroName";
            case "number":
                return "number";
            case "operator":
                return "operator";
            case "record":
                return "bracket";
            case "string":
                return "string";
            case "type":
                return "def";
            case "variable":
                return "variable"
            }
        }
        function X(e, t, O, n) {
            return {
                token: e,
                column: t,
                indent: O,
                type: n
            }
        }
        function v(e, t) {
            var O = e.tokenStack.length
              , n = t || 1;
            return !(O < n) && e.tokenStack[O - n]
        }
        function k(e, t) {
            for (var O in t)
                for (var n = e.length - 1, r = t[O], i = n - 1; -1 < i; i--)
                    if (y(e[i].token, r)) {
                        var a, o = e.slice(0, i);
                        switch (O) {
                        case "m":
                            return o.concat(e[i]).concat(e[n]);
                        case "r":
                            return o.concat(e[n]);
                        case "i":
                            return o;
                        case "g":
                            return o.concat(X(a = "group", 0, 0, a));
                        case "E":
                        case "e":
                            return o.concat(e[i])
                        }
                    }
            return "E" == O ? [] : e
        }
        function w(e, t) {
            var O = e.tokenStack
              , n = T(O, "token", t);
            return !!_(O[n]) && O[n]
        }
        function T(e, t, O) {
            for (var n = e.length - 1; -1 < n; n--)
                if (y(e[n][t], O))
                    return n;
            return !1
        }
        function _(e) {
            return !1 !== e && null != e
        }
        let W = {
            name: "erlang",
            startState: ()=>({
                tokenStack: [],
                in_string: !1,
                in_atom: !1
            }),
            token: function(e, t) {
                if (t.in_string)
                    return t.in_string = !P(e),
                    x(t, e, "string");
                if (t.in_atom)
                    return t.in_atom = !S(e),
                    x(t, e, "atom");
                if (e.eatSpace())
                    return x(t, e, "whitespace");
                if (!v(t) && e.match(/-\s*[a-zß-öø-ÿ][\wØ-ÞÀ-Öß-öø-ÿ]*/))
                    return y(e.current(), n) ? x(t, e, "type") : x(t, e, "attribute");
                var O = e.next();
                if ("%" == O)
                    return e.skipToEnd(),
                    x(t, e, "comment");
                if (":" == O)
                    return x(t, e, "colon");
                if ("?" == O)
                    return e.eatSpace(),
                    e.eatWhile(m),
                    x(t, e, "macro");
                if ("#" == O)
                    return e.eatSpace(),
                    e.eatWhile(m),
                    x(t, e, "record");
                if ("$" == O)
                    return "\\" != e.next() || e.match(Q) ? x(t, e, "number") : x(t, e, "error");
                if ("." == O)
                    return x(t, e, "dot");
                if ("'" == O) {
                    if (!(t.in_atom = !S(e))) {
                        if (e.match(/\s*\/\s*[0-9]/, !1))
                            return e.match(/\s*\/\s*[0-9]/, !0),
                            x(t, e, "fun");
                        if (e.match(/\s*\(/, !1) || e.match(/\s*:/, !1))
                            return x(t, e, "function")
                    }
                    return x(t, e, "atom")
                }
                if ('"' == O)
                    return t.in_string = !P(e),
                    x(t, e, "string");
                if (/[A-Z_Ø-ÞÀ-Ö]/.test(O))
                    return e.eatWhile(m),
                    x(t, e, "variable");
                if (/[a-z_ß-öø-ÿ]/.test(O)) {
                    if (e.eatWhile(m),
                    e.match(/\s*\/\s*[0-9]/, !1))
                        return e.match(/\s*\/\s*[0-9]/, !0),
                        x(t, e, "fun");
                    var b, X = e.current();
                    return y(X, r) ? x(t, e, "keyword") : y(X, o) ? x(t, e, "operator") : e.match(/\s*\(/, !1) ? y(X, h) && (":" != v(t).token || "erlang" == v(t, 2).token) ? x(t, e, "builtin") : y(X, f) ? x(t, e, "guard") : x(t, e, "function") : ":" == ((b = e.match(/^\s*([^\s%])/, !1)) ? b[1] : "") ? "erlang" == X ? x(t, e, "builtin") : x(t, e, "function") : y(X, ["true", "false"]) ? x(t, e, "boolean") : x(t, e, "atom")
                }
                var k = /[0-9]/;
                return k.test(O) ? (e.eatWhile(k),
                e.eat("#") ? e.eatWhile(/[0-9a-zA-Z]/) || e.backUp(1) : e.eat(".") && (e.eatWhile(k) ? !e.eat(/[eE]/) || (e.eat(/[-+]/) ? e.eatWhile(k) || e.backUp(2) : e.eatWhile(k) || e.backUp(1)) : e.backUp(1)),
                x(t, e, "number")) : $(e, c, u) ? x(t, e, "open_paren") : $(e, p, d) ? x(t, e, "close_paren") : g(e, i, a) ? x(t, e, "separator") : g(e, s, l) ? x(t, e, "operator") : x(t, e, null)
            },
            indent: function(e, t, O) {
                var n, r, i, a, o, s, l, c = _(s = t.match(/,|[a-z]+|\}|\]|\)|>>|\|+|\(/)) && 0 === s.index ? s[0] : "", p = v(e, 1), f = v(e, 2);
                if (e.in_string || e.in_atom)
                    return null;
                if (!f)
                    return 0;
                if ("when" == p.token)
                    return p.column + O.unit;
                if ("when" === c && "function" === f.type)
                    return f.indent + O.unit;
                if ("(" === c && "fun" === p.token)
                    return p.column + 3;
                if ("catch" === c && (l = w(e, ["try"])))
                    return l.column;
                if (y(c, ["end", "after", "of"]))
                    return (l = w(e, ["begin", "case", "fun", "if", "receive", "try"])) ? l.column : null;
                else if (y(c, d))
                    return (l = w(e, u)) ? l.column : null;
                else if (y(p.token, [",", "|", "||"]) || y(c, [",", "|", "||"]))
                    return (r = T(n = e.tokenStack.slice(0, -1), "type", ["open_paren"]),
                    l = !!_(n[r]) && n[r]) ? l.column + l.token.length : O.unit;
                else
                    return "->" == p.token ? y(f.token, ["receive", "case", "if", "try"]) ? f.column + O.unit + O.unit : f.column + O.unit : y(p.token, u) ? p.column + p.token.length : _((a = T(i = e.tokenStack, "type", ["open_paren", "separator", "keyword"]),
                    o = T(i, "type", ["operator"]),
                    l = _(a) && _(o) && a < o ? i[a + 1] : !!_(a) && i[a])) ? l.column + O.unit : 0
            },
            languageData: {
                commentTokens: {
                    line: "%"
                }
            }
        }
    },
    3985: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            factor: function() {
                return r
            }
        });
        var n = O(4564);
        let r = (0,
        n.Q)({
            start: [{
                regex: /#?!.*/,
                token: "comment"
            }, {
                regex: /"""/,
                token: "string",
                next: "string3"
            }, {
                regex: /(STRING:)(\s)/,
                token: ["keyword", null],
                next: "string2"
            }, {
                regex: /\S*?"/,
                token: "string",
                next: "string"
            }, {
                regex: /(?:0x[\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\-?\d+.?\d*)(?=\s)/,
                token: "number"
            }, {
                regex: /((?:GENERIC)|\:?\:)(\s+)(\S+)(\s+)(\()/,
                token: ["keyword", null, "def", null, "bracket"],
                next: "stack"
            }, {
                regex: /(M\:)(\s+)(\S+)(\s+)(\S+)/,
                token: ["keyword", null, "def", null, "tag"]
            }, {
                regex: /USING\:/,
                token: "keyword",
                next: "vocabulary"
            }, {
                regex: /(USE\:|IN\:)(\s+)(\S+)(?=\s|$)/,
                token: ["keyword", null, "tag"]
            }, {
                regex: /(\S+\:)(\s+)(\S+)(?=\s|$)/,
                token: ["keyword", null, "def"]
            }, {
                regex: /(?:;|\\|t|f|if|loop|while|until|do|PRIVATE>|<PRIVATE|\.|\S*\[|\]|\S*\{|\})(?=\s|$)/,
                token: "keyword"
            }, {
                regex: /\S+[\)>\.\*\?]+(?=\s|$)/,
                token: "builtin"
            }, {
                regex: /[\)><]+\S+(?=\s|$)/,
                token: "builtin"
            }, {
                regex: /(?:[\+\-\=\/\*<>])(?=\s|$)/,
                token: "keyword"
            }, {
                regex: /\S+/,
                token: "variable"
            }, {
                regex: /\s+|./,
                token: null
            }],
            vocabulary: [{
                regex: /;/,
                token: "keyword",
                next: "start"
            }, {
                regex: /\S+/,
                token: "tag"
            }, {
                regex: /\s+|./,
                token: null
            }],
            string: [{
                regex: /(?:[^\\]|\\.)*?"/,
                token: "string",
                next: "start"
            }, {
                regex: /.*/,
                token: "string"
            }],
            string2: [{
                regex: /^;/,
                token: "keyword",
                next: "start"
            }, {
                regex: /.*/,
                token: "string"
            }],
            string3: [{
                regex: /(?:[^\\]|\\.)*?"""/,
                token: "string",
                next: "start"
            }, {
                regex: /.*/,
                token: "string"
            }],
            stack: [{
                regex: /\)/,
                token: "bracket",
                next: "start"
            }, {
                regex: /--/,
                token: "bracket"
            }, {
                regex: /\S+/,
                token: "meta"
            }, {
                regex: /\s+|./,
                token: null
            }],
            languageData: {
                name: "factor",
                dontIndentStates: ["start", "vocabulary", "string", "string3", "stack"],
                commentTokens: {
                    line: "!"
                }
            }
        })
    },
    9862: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            fcl: function() {
                return u
            }
        });
        var n = {
            term: !0,
            method: !0,
            accu: !0,
            rule: !0,
            then: !0,
            is: !0,
            and: !0,
            or: !0,
            if: !0,
            default: !0
        }
          , r = {
            var_input: !0,
            var_output: !0,
            fuzzify: !0,
            defuzzify: !0,
            function_block: !0,
            ruleblock: !0
        }
          , i = {
            end_ruleblock: !0,
            end_defuzzify: !0,
            end_function_block: !0,
            end_fuzzify: !0,
            end_var: !0
        }
          , a = {
            true: !0,
            false: !0,
            nan: !0,
            real: !0,
            min: !0,
            max: !0,
            cog: !0,
            cogs: !0
        }
          , o = /[+\-*&^%:=<>!|\/]/;
        function s(e, t) {
            var O = e.next();
            if (/[\d\.]/.test(O))
                return "." == O ? e.match(/^[0-9]+([eE][\-+]?[0-9]+)?/) : "0" == O ? e.match(/^[xX][0-9a-fA-F]+/) || e.match(/^0[0-7]+/) : e.match(/^[0-9]*\.?[0-9]*([eE][\-+]?[0-9]+)?/),
                "number";
            if ("/" == O || "(" == O) {
                if (e.eat("*"))
                    return t.tokenize = l,
                    l(e, t);
                if (e.eat("/"))
                    return e.skipToEnd(),
                    "comment"
            }
            if (o.test(O))
                return e.eatWhile(o),
                "operator";
            e.eatWhile(/[\w\$_\xa1-\uffff]/);
            var s = e.current().toLowerCase();
            return n.propertyIsEnumerable(s) || r.propertyIsEnumerable(s) || i.propertyIsEnumerable(s) ? "keyword" : a.propertyIsEnumerable(s) ? "atom" : "variable"
        }
        function l(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if (("/" == O || ")" == O) && n) {
                    t.tokenize = s;
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        function c(e, t, O, n, r) {
            this.indented = e,
            this.column = t,
            this.type = O,
            this.align = n,
            this.prev = r
        }
        let u = {
            name: "fcl",
            startState: function(e) {
                return {
                    tokenize: null,
                    context: new c(-e,0,"top",!1),
                    indented: 0,
                    startOfLine: !0
                }
            },
            token: function(e, t) {
                var O, n, a, o = t.context;
                if (e.sol() && (null == o.align && (o.align = !1),
                t.indented = e.indentation(),
                t.startOfLine = !0),
                e.eatSpace())
                    return null;
                var l = (t.tokenize || s)(e, t);
                if ("comment" == l)
                    return l;
                null == o.align && (o.align = !0);
                var u = e.current().toLowerCase();
                return r.propertyIsEnumerable(u) ? (n = t,
                a = e.column(),
                n.context = new c(n.indented,a,"end_block",null,n.context)) : i.propertyIsEnumerable(u) && (O = t).context.prev && ("end_block" == O.context.type && (O.indented = O.context.indented),
                O.context = O.context.prev),
                t.startOfLine = !1,
                l
            },
            indent: function(e, t, O) {
                if (e.tokenize != s && null != e.tokenize)
                    return 0;
                var n = e.context
                  , r = i.propertyIsEnumerable(t);
                return n.align ? n.column + (r ? 0 : 1) : n.indented + (r ? 0 : O.unit)
            },
            languageData: {
                commentTokens: {
                    line: "//",
                    block: {
                        open: "(*",
                        close: "*)"
                    }
                }
            }
        }
    },
    7420: function(e, t, O) {
        "use strict";
        function n(e) {
            var t = [];
            return e.split(" ").forEach(function(e) {
                t.push({
                    name: e
                })
            }),
            t
        }
        O.r(t),
        O.d(t, {
            forth: function() {
                return o
            }
        });
        var r = n("INVERT AND OR XOR 2* 2/ LSHIFT RSHIFT 0= = 0< < > U< MIN MAX 2DROP 2DUP 2OVER 2SWAP ?DUP DEPTH DROP DUP OVER ROT SWAP >R R> R@ + - 1+ 1- ABS NEGATE S>D * M* UM* FM/MOD SM/REM UM/MOD */ */MOD / /MOD MOD HERE , @ ! CELL+ CELLS C, C@ C! CHARS 2@ 2! ALIGN ALIGNED +! ALLOT CHAR [CHAR] [ ] BL FIND EXECUTE IMMEDIATE COUNT LITERAL STATE ; DOES> >BODY EVALUATE SOURCE >IN <# # #S #> HOLD SIGN BASE >NUMBER HEX DECIMAL FILL MOVE . CR EMIT SPACE SPACES TYPE U. .R U.R ACCEPT TRUE FALSE <> U> 0<> 0> NIP TUCK ROLL PICK 2>R 2R@ 2R> WITHIN UNUSED MARKER I J TO COMPILE, [COMPILE] SAVE-INPUT RESTORE-INPUT PAD ERASE 2LITERAL DNEGATE D- D+ D0< D0= D2* D2/ D< D= DMAX DMIN D>S DABS M+ M*/ D. D.R 2ROT DU< CATCH THROW FREE RESIZE ALLOCATE CS-PICK CS-ROLL GET-CURRENT SET-CURRENT FORTH-WORDLIST GET-ORDER SET-ORDER PREVIOUS SEARCH-WORDLIST WORDLIST FIND ALSO ONLY FORTH DEFINITIONS ORDER -TRAILING /STRING SEARCH COMPARE CMOVE CMOVE> BLANK SLITERAL")
          , i = n("IF ELSE THEN BEGIN WHILE REPEAT UNTIL RECURSE [IF] [ELSE] [THEN] ?DO DO LOOP +LOOP UNLOOP LEAVE EXIT AGAIN CASE OF ENDOF ENDCASE");
        function a(e, t) {
            var O;
            for (O = e.length - 1; O >= 0; O--)
                if (e[O].name === t.toUpperCase())
                    return e[O]
        }
        let o = {
            name: "forth",
            startState: function() {
                return {
                    state: "",
                    base: 10,
                    coreWordList: r,
                    immediateWordList: i,
                    wordList: []
                }
            },
            token: function(e, t) {
                var O;
                if (e.eatSpace())
                    return null;
                if ("" === t.state) {
                    if (e.match(/^(\]|:NONAME)(\s|$)/i))
                        return t.state = " compilation",
                        "builtin";
                    if (O = e.match(/^(\:)\s+(\S+)(\s|$)+/))
                        return t.wordList.push({
                            name: O[2].toUpperCase()
                        }),
                        t.state = " compilation",
                        "def";
                    if (O = e.match(/^(VARIABLE|2VARIABLE|CONSTANT|2CONSTANT|CREATE|POSTPONE|VALUE|WORD)\s+(\S+)(\s|$)+/i))
                        return t.wordList.push({
                            name: O[2].toUpperCase()
                        }),
                        "def";
                    if (O = e.match(/^(\'|\[\'\])\s+(\S+)(\s|$)+/))
                        return "builtin"
                } else {
                    if (e.match(/^(\;|\[)(\s)/))
                        return t.state = "",
                        e.backUp(1),
                        "builtin";
                    if (e.match(/^(\;|\[)($)/))
                        return t.state = "",
                        "builtin";
                    if (e.match(/^(POSTPONE)\s+\S+(\s|$)+/))
                        return "builtin"
                }
                if (O = e.match(/^(\S+)(\s+|$)/))
                    return void 0 !== a(t.wordList, O[1]) ? "variable" : "\\" === O[1] ? (e.skipToEnd(),
                    "comment") : void 0 !== a(t.coreWordList, O[1]) ? "builtin" : void 0 !== a(t.immediateWordList, O[1]) ? "keyword" : "(" === O[1] ? (e.eatWhile(function(e) {
                        return ")" !== e
                    }),
                    e.eat(")"),
                    "comment") : ".(" === O[1] ? (e.eatWhile(function(e) {
                        return ")" !== e
                    }),
                    e.eat(")"),
                    "string") : 'S"' === O[1] || '."' === O[1] || 'C"' === O[1] ? (e.eatWhile(function(e) {
                        return '"' !== e
                    }),
                    e.eat('"'),
                    "string") : O[1] - 68719476735 ? "number" : "atom"
            }
        }
    },
    5344: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = 0; O < e.length; ++O)
                t[e[O]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            fortran: function() {
                return c
            }
        });
        var r = n(["abstract", "accept", "allocatable", "allocate", "array", "assign", "asynchronous", "backspace", "bind", "block", "byte", "call", "case", "class", "close", "common", "contains", "continue", "cycle", "data", "deallocate", "decode", "deferred", "dimension", "do", "elemental", "else", "encode", "end", "endif", "entry", "enumerator", "equivalence", "exit", "external", "extrinsic", "final", "forall", "format", "function", "generic", "go", "goto", "if", "implicit", "import", "include", "inquire", "intent", "interface", "intrinsic", "module", "namelist", "non_intrinsic", "non_overridable", "none", "nopass", "nullify", "open", "optional", "options", "parameter", "pass", "pause", "pointer", "print", "private", "program", "protected", "public", "pure", "read", "recursive", "result", "return", "rewind", "save", "select", "sequence", "stop", "subroutine", "target", "then", "to", "type", "use", "value", "volatile", "where", "while", "write"])
          , i = n(["abort", "abs", "access", "achar", "acos", "adjustl", "adjustr", "aimag", "aint", "alarm", "all", "allocated", "alog", "amax", "amin", "amod", "and", "anint", "any", "asin", "associated", "atan", "besj", "besjn", "besy", "besyn", "bit_size", "btest", "cabs", "ccos", "ceiling", "cexp", "char", "chdir", "chmod", "clog", "cmplx", "command_argument_count", "complex", "conjg", "cos", "cosh", "count", "cpu_time", "cshift", "csin", "csqrt", "ctime", "c_funloc", "c_loc", "c_associated", "c_null_ptr", "c_null_funptr", "c_f_pointer", "c_null_char", "c_alert", "c_backspace", "c_form_feed", "c_new_line", "c_carriage_return", "c_horizontal_tab", "c_vertical_tab", "dabs", "dacos", "dasin", "datan", "date_and_time", "dbesj", "dbesj", "dbesjn", "dbesy", "dbesy", "dbesyn", "dble", "dcos", "dcosh", "ddim", "derf", "derfc", "dexp", "digits", "dim", "dint", "dlog", "dlog", "dmax", "dmin", "dmod", "dnint", "dot_product", "dprod", "dsign", "dsinh", "dsin", "dsqrt", "dtanh", "dtan", "dtime", "eoshift", "epsilon", "erf", "erfc", "etime", "exit", "exp", "exponent", "extends_type_of", "fdate", "fget", "fgetc", "float", "floor", "flush", "fnum", "fputc", "fput", "fraction", "fseek", "fstat", "ftell", "gerror", "getarg", "get_command", "get_command_argument", "get_environment_variable", "getcwd", "getenv", "getgid", "getlog", "getpid", "getuid", "gmtime", "hostnm", "huge", "iabs", "iachar", "iand", "iargc", "ibclr", "ibits", "ibset", "ichar", "idate", "idim", "idint", "idnint", "ieor", "ierrno", "ifix", "imag", "imagpart", "index", "int", "ior", "irand", "isatty", "ishft", "ishftc", "isign", "iso_c_binding", "is_iostat_end", "is_iostat_eor", "itime", "kill", "kind", "lbound", "len", "len_trim", "lge", "lgt", "link", "lle", "llt", "lnblnk", "loc", "log", "logical", "long", "lshift", "lstat", "ltime", "matmul", "max", "maxexponent", "maxloc", "maxval", "mclock", "merge", "move_alloc", "min", "minexponent", "minloc", "minval", "mod", "modulo", "mvbits", "nearest", "new_line", "nint", "not", "or", "pack", "perror", "precision", "present", "product", "radix", "rand", "random_number", "random_seed", "range", "real", "realpart", "rename", "repeat", "reshape", "rrspacing", "rshift", "same_type_as", "scale", "scan", "second", "selected_int_kind", "selected_real_kind", "set_exponent", "shape", "short", "sign", "signal", "sinh", "sin", "sleep", "sngl", "spacing", "spread", "sqrt", "srand", "stat", "sum", "symlnk", "system", "system_clock", "tan", "tanh", "time", "tiny", "transfer", "transpose", "trim", "ttynam", "ubound", "umask", "unlink", "unpack", "verify", "xor", "zabs", "zcos", "zexp", "zlog", "zsin", "zsqrt"])
          , a = n(["c_bool", "c_char", "c_double", "c_double_complex", "c_float", "c_float_complex", "c_funptr", "c_int", "c_int16_t", "c_int32_t", "c_int64_t", "c_int8_t", "c_int_fast16_t", "c_int_fast32_t", "c_int_fast64_t", "c_int_fast8_t", "c_int_least16_t", "c_int_least32_t", "c_int_least64_t", "c_int_least8_t", "c_intmax_t", "c_intptr_t", "c_long", "c_long_double", "c_long_double_complex", "c_long_long", "c_ptr", "c_short", "c_signed_char", "c_size_t", "character", "complex", "double", "integer", "logical", "real"])
          , o = /[+\-*&=<>\/\:]/
          , s = /^\.(and|or|eq|lt|le|gt|ge|ne|not|eqv|neqv)\./i;
        function l(e, t) {
            if (e.match(s))
                return "operator";
            var O = e.next();
            if ("!" == O)
                return e.skipToEnd(),
                "comment";
            if ('"' == O || "'" == O)
                return t.tokenize = function(e, t) {
                    for (var n, r = !1, i = !1; null != (n = e.next()); ) {
                        if (n == O && !r) {
                            i = !0;
                            break
                        }
                        r = !r && "\\" == n
                    }
                    return (i || !r) && (t.tokenize = null),
                    "string"
                }
                ,
                t.tokenize(e, t);
            if (/[\[\]\(\),]/.test(O))
                return null;
            if (/\d/.test(O))
                return e.eatWhile(/[\w\.]/),
                "number";
            if (o.test(O))
                return e.eatWhile(o),
                "operator";
            e.eatWhile(/[\w\$_]/);
            var n = e.current().toLowerCase();
            return r.hasOwnProperty(n) ? "keyword" : i.hasOwnProperty(n) || a.hasOwnProperty(n) ? "builtin" : "variable"
        }
        let c = {
            name: "fortran",
            startState: function() {
                return {
                    tokenize: null
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : (t.tokenize || l)(e, t)
            }
        }
    },
    5455: function(e, t, O) {
        "use strict";
        function n(e) {
            var t = []
              , O = ""
              , n = {
                ".abort": "builtin",
                ".align": "builtin",
                ".altmacro": "builtin",
                ".ascii": "builtin",
                ".asciz": "builtin",
                ".balign": "builtin",
                ".balignw": "builtin",
                ".balignl": "builtin",
                ".bundle_align_mode": "builtin",
                ".bundle_lock": "builtin",
                ".bundle_unlock": "builtin",
                ".byte": "builtin",
                ".cfi_startproc": "builtin",
                ".comm": "builtin",
                ".data": "builtin",
                ".def": "builtin",
                ".desc": "builtin",
                ".dim": "builtin",
                ".double": "builtin",
                ".eject": "builtin",
                ".else": "builtin",
                ".elseif": "builtin",
                ".end": "builtin",
                ".endef": "builtin",
                ".endfunc": "builtin",
                ".endif": "builtin",
                ".equ": "builtin",
                ".equiv": "builtin",
                ".eqv": "builtin",
                ".err": "builtin",
                ".error": "builtin",
                ".exitm": "builtin",
                ".extern": "builtin",
                ".fail": "builtin",
                ".file": "builtin",
                ".fill": "builtin",
                ".float": "builtin",
                ".func": "builtin",
                ".global": "builtin",
                ".gnu_attribute": "builtin",
                ".hidden": "builtin",
                ".hword": "builtin",
                ".ident": "builtin",
                ".if": "builtin",
                ".incbin": "builtin",
                ".include": "builtin",
                ".int": "builtin",
                ".internal": "builtin",
                ".irp": "builtin",
                ".irpc": "builtin",
                ".lcomm": "builtin",
                ".lflags": "builtin",
                ".line": "builtin",
                ".linkonce": "builtin",
                ".list": "builtin",
                ".ln": "builtin",
                ".loc": "builtin",
                ".loc_mark_labels": "builtin",
                ".local": "builtin",
                ".long": "builtin",
                ".macro": "builtin",
                ".mri": "builtin",
                ".noaltmacro": "builtin",
                ".nolist": "builtin",
                ".octa": "builtin",
                ".offset": "builtin",
                ".org": "builtin",
                ".p2align": "builtin",
                ".popsection": "builtin",
                ".previous": "builtin",
                ".print": "builtin",
                ".protected": "builtin",
                ".psize": "builtin",
                ".purgem": "builtin",
                ".pushsection": "builtin",
                ".quad": "builtin",
                ".reloc": "builtin",
                ".rept": "builtin",
                ".sbttl": "builtin",
                ".scl": "builtin",
                ".section": "builtin",
                ".set": "builtin",
                ".short": "builtin",
                ".single": "builtin",
                ".size": "builtin",
                ".skip": "builtin",
                ".sleb128": "builtin",
                ".space": "builtin",
                ".stab": "builtin",
                ".string": "builtin",
                ".struct": "builtin",
                ".subsection": "builtin",
                ".symver": "builtin",
                ".tag": "builtin",
                ".text": "builtin",
                ".title": "builtin",
                ".type": "builtin",
                ".uleb128": "builtin",
                ".val": "builtin",
                ".version": "builtin",
                ".vtable_entry": "builtin",
                ".vtable_inherit": "builtin",
                ".warning": "builtin",
                ".weak": "builtin",
                ".weakref": "builtin",
                ".word": "builtin"
            }
              , r = {};
            function i(e, t) {
                for (var O, n = !1; null != (O = e.next()); ) {
                    if ("/" === O && n) {
                        t.tokenize = null;
                        break
                    }
                    n = "*" === O
                }
                return "comment"
            }
            return "x86" === e ? (O = "#",
            r.al = "variable",
            r.ah = "variable",
            r.ax = "variable",
            r.eax = "variableName.special",
            r.rax = "variableName.special",
            r.bl = "variable",
            r.bh = "variable",
            r.bx = "variable",
            r.ebx = "variableName.special",
            r.rbx = "variableName.special",
            r.cl = "variable",
            r.ch = "variable",
            r.cx = "variable",
            r.ecx = "variableName.special",
            r.rcx = "variableName.special",
            r.dl = "variable",
            r.dh = "variable",
            r.dx = "variable",
            r.edx = "variableName.special",
            r.rdx = "variableName.special",
            r.si = "variable",
            r.esi = "variableName.special",
            r.rsi = "variableName.special",
            r.di = "variable",
            r.edi = "variableName.special",
            r.rdi = "variableName.special",
            r.sp = "variable",
            r.esp = "variableName.special",
            r.rsp = "variableName.special",
            r.bp = "variable",
            r.ebp = "variableName.special",
            r.rbp = "variableName.special",
            r.ip = "variable",
            r.eip = "variableName.special",
            r.rip = "variableName.special",
            r.cs = "keyword",
            r.ds = "keyword",
            r.ss = "keyword",
            r.es = "keyword",
            r.fs = "keyword",
            r.gs = "keyword") : ("arm" === e || "armv6" === e) && (O = "@",
            n.syntax = "builtin",
            r.r0 = "variable",
            r.r1 = "variable",
            r.r2 = "variable",
            r.r3 = "variable",
            r.r4 = "variable",
            r.r5 = "variable",
            r.r6 = "variable",
            r.r7 = "variable",
            r.r8 = "variable",
            r.r9 = "variable",
            r.r10 = "variable",
            r.r11 = "variable",
            r.r12 = "variable",
            r.sp = "variableName.special",
            r.lr = "variableName.special",
            r.pc = "variableName.special",
            r.r13 = r.sp,
            r.r14 = r.lr,
            r.r15 = r.pc,
            t.push(function(e, t) {
                if ("#" === e)
                    return t.eatWhile(/\w/),
                    "number"
            })),
            {
                name: "gas",
                startState: function() {
                    return {
                        tokenize: null
                    }
                },
                token: function(e, a) {
                    if (a.tokenize)
                        return a.tokenize(e, a);
                    if (e.eatSpace())
                        return null;
                    var o, s = e.next();
                    if ("/" === s && e.eat("*"))
                        return a.tokenize = i,
                        i(e, a);
                    if (s === O)
                        return e.skipToEnd(),
                        "comment";
                    if ('"' === s)
                        return function(e, t) {
                            for (var O, n = !1; null != (O = e.next()); ) {
                                if ('"' === O && !n)
                                    return !1;
                                n = !n && "\\" === O
                            }
                        }(e, 0),
                        "string";
                    if ("." === s)
                        return e.eatWhile(/\w/),
                        (o = n[e.current().toLowerCase()]) || null;
                    if ("=" === s)
                        return e.eatWhile(/\w/),
                        "tag";
                    if ("{" === s || "}" === s)
                        return "bracket";
                    if (/\d/.test(s))
                        return "0" === s && e.eat("x") ? (e.eatWhile(/[0-9a-fA-F]/),
                        "number") : (e.eatWhile(/\d/),
                        "number");
                    if (/\w/.test(s))
                        return (e.eatWhile(/\w/),
                        e.eat(":")) ? "tag" : (o = r[e.current().toLowerCase()]) || null;
                    for (var l = 0; l < t.length; l++)
                        if (o = t[l](s, e, a))
                            return o
                },
                languageData: {
                    commentTokens: {
                        line: O,
                        block: {
                            open: "/*",
                            close: "*/"
                        }
                    }
                }
            }
        }
        O.r(t),
        O.d(t, {
            gas: function() {
                return r
            },
            gasArm: function() {
                return i
            }
        });
        let r = n("x86")
          , i = n("arm")
    },
    2569: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            gherkin: function() {
                return n
            }
        });
        let n = {
            name: "gherkin",
            startState: function() {
                return {
                    lineNumber: 0,
                    tableHeaderLine: !1,
                    allowFeature: !0,
                    allowBackground: !1,
                    allowScenario: !1,
                    allowSteps: !1,
                    allowPlaceholders: !1,
                    allowMultilineArgument: !1,
                    inMultilineString: !1,
                    inMultilineTable: !1,
                    inKeywordLine: !1
                }
            },
            token: function(e, t) {
                if (e.sol() && (t.lineNumber++,
                t.inKeywordLine = !1,
                t.inMultilineTable && (t.tableHeaderLine = !1,
                e.match(/\s*\|/, !1) || (t.allowMultilineArgument = !1,
                t.inMultilineTable = !1))),
                e.eatSpace(),
                t.allowMultilineArgument) {
                    if (t.inMultilineString)
                        return e.match('"""') ? (t.inMultilineString = !1,
                        t.allowMultilineArgument = !1) : e.match(/.*/),
                        "string";
                    if (t.inMultilineTable)
                        return e.match(/\|\s*/) ? "bracket" : (e.match(/[^\|]*/),
                        t.tableHeaderLine ? "header" : "string");
                    if (e.match('"""'))
                        return t.inMultilineString = !0,
                        "string";
                    if (e.match("|"))
                        return t.inMultilineTable = !0,
                        t.tableHeaderLine = !0,
                        "bracket"
                }
                if (e.match(/#.*/))
                    return "comment";
                if (!t.inKeywordLine && e.match(/@\S+/))
                    return "tag";
                if (!t.inKeywordLine && t.allowFeature && e.match(/(機能|功能|フィーチャ|기능|โครงหลัก|ความสามารถ|ความต้องการทางธุรกิจ|ಹೆಚ್ಚಳ|గుణము|ਮੁਹਾਂਦਰਾ|ਨਕਸ਼ ਨੁਹਾਰ|ਖਾਸੀਅਤ|रूप लेख|وِیژگی|خاصية|תכונה|Функціонал|Функция|Функционалност|Функционал|Үзенчәлеклелек|Свойство|Особина|Мөмкинлек|Могућност|Λειτουργία|Δυνατότητα|Właściwość|Vlastnosť|Trajto|Tính năng|Savybė|Pretty much|Požiadavka|Požadavek|Potrzeba biznesowa|Özellik|Osobina|Ominaisuus|Omadus|OH HAI|Mogućnost|Mogucnost|Jellemző|Hwæt|Hwaet|Funzionalità|Funktionalitéit|Funktionalität|Funkcja|Funkcionalnost|Funkcionalitāte|Funkcia|Fungsi|Functionaliteit|Funcționalitate|Funcţionalitate|Functionalitate|Funcionalitat|Funcionalidade|Fonctionnalité|Fitur|Fīča|Feature|Eiginleiki|Egenskap|Egenskab|Característica|Caracteristica|Business Need|Aspekt|Arwedd|Ahoy matey!|Ability):/))
                    return t.allowScenario = !0,
                    t.allowBackground = !0,
                    t.allowPlaceholders = !1,
                    t.allowSteps = !1,
                    t.allowMultilineArgument = !1,
                    t.inKeywordLine = !0,
                    "keyword";
                if (!t.inKeywordLine && t.allowBackground && e.match(/(背景|배경|แนวคิด|ಹಿನ್ನೆಲೆ|నేపథ్యం|ਪਿਛੋਕੜ|पृष्ठभूमि|زمینه|الخلفية|רקע|Тарих|Предыстория|Предистория|Позадина|Передумова|Основа|Контекст|Кереш|Υπόβαθρο|Założenia|Yo\-ho\-ho|Tausta|Taust|Situācija|Rerefons|Pozadina|Pozadie|Pozadí|Osnova|Latar Belakang|Kontext|Konteksts|Kontekstas|Kontekst|Háttér|Hannergrond|Grundlage|Geçmiş|Fundo|Fono|First off|Dis is what went down|Dasar|Contexto|Contexte|Context|Contesto|Cenário de Fundo|Cenario de Fundo|Cefndir|Bối cảnh|Bakgrunnur|Bakgrunn|Bakgrund|Baggrund|Background|B4|Antecedents|Antecedentes|Ær|Aer|Achtergrond):/))
                    return t.allowPlaceholders = !1,
                    t.allowSteps = !0,
                    t.allowBackground = !1,
                    t.allowMultilineArgument = !1,
                    t.inKeywordLine = !0,
                    "keyword";
                if (!t.inKeywordLine && t.allowScenario && e.match(/(場景大綱|场景大纲|劇本大綱|剧本大纲|テンプレ|シナリオテンプレート|シナリオテンプレ|シナリオアウトライン|시나리오 개요|สรุปเหตุการณ์|โครงสร้างของเหตุการณ์|ವಿವರಣೆ|కథనం|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਟਕਥਾ ਢਾਂਚਾ|परिदृश्य रूपरेखा|سيناريو مخطط|الگوی سناریو|תבנית תרחיש|Сценарийның төзелеше|Сценарий структураси|Структура сценарію|Структура сценария|Структура сценарија|Скица|Рамка на сценарий|Концепт|Περιγραφή Σεναρίου|Wharrimean is|Template Situai|Template Senario|Template Keadaan|Tapausaihio|Szenariogrundriss|Szablon scenariusza|Swa hwær swa|Swa hwaer swa|Struktura scenarija|Structură scenariu|Structura scenariu|Skica|Skenario konsep|Shiver me timbers|Senaryo taslağı|Schema dello scenario|Scenariomall|Scenariomal|Scenario Template|Scenario Outline|Scenario Amlinellol|Scenārijs pēc parauga|Scenarijaus šablonas|Reckon it's like|Raamstsenaarium|Plang vum Szenario|Plan du Scénario|Plan du scénario|Osnova scénáře|Osnova Scenára|Náčrt Scenáru|Náčrt Scénáře|Náčrt Scenára|MISHUN SRSLY|Menggariskan Senario|Lýsing Dæma|Lýsing Atburðarásar|Konturo de la scenaro|Koncept|Khung tình huống|Khung kịch bản|Forgatókönyv vázlat|Esquema do Cenário|Esquema do Cenario|Esquema del escenario|Esquema de l'escenari|Esbozo do escenario|Delineação do Cenário|Delineacao do Cenario|All y'all|Abstrakt Scenario|Abstract Scenario):/))
                    return t.allowPlaceholders = !0,
                    t.allowSteps = !0,
                    t.allowMultilineArgument = !1,
                    t.inKeywordLine = !0,
                    "keyword";
                if (t.allowScenario && e.match(/(例子|例|サンプル|예|ชุดของเหตุการณ์|ชุดของตัวอย่าง|ಉದಾಹರಣೆಗಳು|ఉదాహరణలు|ਉਦਾਹਰਨਾਂ|उदाहरण|نمونه ها|امثلة|דוגמאות|Үрнәкләр|Сценарији|Примеры|Примери|Приклади|Мисоллар|Мисаллар|Σενάρια|Παραδείγματα|You'll wanna|Voorbeelden|Variantai|Tapaukset|Se þe|Se the|Se ðe|Scenarios|Scenariji|Scenarijai|Przykłady|Primjeri|Primeri|Příklady|Príklady|Piemēri|Példák|Pavyzdžiai|Paraugs|Örnekler|Juhtumid|Exemplos|Exemples|Exemple|Exempel|EXAMPLZ|Examples|Esempi|Enghreifftiau|Ekzemploj|Eksempler|Ejemplos|Dữ liệu|Dead men tell no tales|Dæmi|Contoh|Cenários|Cenarios|Beispiller|Beispiele|Atburðarásir):/))
                    return t.allowPlaceholders = !1,
                    t.allowSteps = !0,
                    t.allowBackground = !1,
                    t.allowMultilineArgument = !0,
                    "keyword";
                if (!t.inKeywordLine && t.allowScenario && e.match(/(場景|场景|劇本|剧本|シナリオ|시나리오|เหตุการณ์|ಕಥಾಸಾರಾಂಶ|సన్నివేశం|ਪਟਕਥਾ|परिदृश्य|سيناريو|سناریو|תרחיש|Сценарій|Сценарио|Сценарий|Пример|Σενάριο|Tình huống|The thing of it is|Tapaus|Szenario|Swa|Stsenaarium|Skenario|Situai|Senaryo|Senario|Scenaro|Scenariusz|Scenariu|Scénario|Scenario|Scenarijus|Scenārijs|Scenarij|Scenarie|Scénář|Scenár|Primer|MISHUN|Kịch bản|Keadaan|Heave to|Forgatókönyv|Escenario|Escenari|Cenário|Cenario|Awww, look mate|Atburðarás):/))
                    return t.allowPlaceholders = !1,
                    t.allowSteps = !0,
                    t.allowBackground = !1,
                    t.allowMultilineArgument = !1,
                    t.inKeywordLine = !0,
                    "keyword";
                else if (!t.inKeywordLine && t.allowSteps && e.match(/(那麼|那么|而且|當|当|并且|同時|同时|前提|假设|假設|假定|假如|但是|但し|並且|もし|ならば|ただし|しかし|かつ|하지만|조건|먼저|만일|만약|단|그리고|그러면|และ |เมื่อ |แต่ |ดังนั้น |กำหนดให้ |ಸ್ಥಿತಿಯನ್ನು |ಮತ್ತು |ನೀಡಿದ |ನಂತರ |ಆದರೆ |మరియు |చెప్పబడినది |కాని |ఈ పరిస్థితిలో |అప్పుడు |ਪਰ |ਤਦ |ਜੇਕਰ |ਜਿਵੇਂ ਕਿ |ਜਦੋਂ |ਅਤੇ |यदि |परन्तु |पर |तब |तदा |तथा |जब |चूंकि |किन्तु |कदा |और |अगर |و |هنگامی |متى |لكن |عندما |ثم |بفرض |با فرض |اما |اذاً |آنگاه |כאשר |וגם |בהינתן |אזי |אז |אבל |Якщо |Һәм |Унда |Тоді |Тогда |То |Также |Та |Пусть |Припустимо, що |Припустимо |Онда |Но |Нехай |Нәтиҗәдә |Лекин |Ләкин |Коли |Когда |Когато |Када |Кад |К тому же |І |И |Задато |Задати |Задате |Если |Допустим |Дано |Дадено |Вә |Ва |Бирок |Әмма |Әйтик |Әгәр |Аммо |Али |Але |Агар |А також |А |Τότε |Όταν |Και |Δεδομένου |Αλλά |Þurh |Þegar |Þa þe |Þá |Þa |Zatati |Zakładając |Zadato |Zadate |Zadano |Zadani |Zadan |Za předpokladu |Za predpokladu |Youse know when youse got |Youse know like when |Yna |Yeah nah |Y'know |Y |Wun |Wtedy |When y'all |When |Wenn |WEN |wann |Ve |Và |Und |Un |ugeholl |Too right |Thurh |Thì |Then y'all |Then |Tha the |Tha |Tetapi |Tapi |Tak |Tada |Tad |Stel |Soit |Siis |Și |Şi |Si |Sed |Se |Så |Quando |Quand |Quan |Pryd |Potom |Pokud |Pokiaľ |Però |Pero |Pak |Oraz |Onda |Ond |Oletetaan |Og |Och |O zaman |Niin |Nhưng |När |Når |Mutta |Men |Mas |Maka |Majd |Mając |Mais |Maar |mä |Ma |Lorsque |Lorsqu'|Logo |Let go and haul |Kun |Kuid |Kui |Kiedy |Khi |Ketika |Kemudian |Keď |Když |Kaj |Kai |Kada |Kad |Jeżeli |Jeśli |Ja |It's just unbelievable |Ir |I CAN HAZ |I |Ha |Givun |Givet |Given y'all |Given |Gitt |Gegeven |Gegeben seien |Gegeben sei |Gdy |Gangway! |Fakat |Étant donnés |Etant donnés |Étant données |Etant données |Étant donnée |Etant donnée |Étant donné |Etant donné |Et |És |Entonces |Entón |Então |Entao |En |Eğer ki |Ef |Eeldades |E |Ðurh |Duota |Dun |Donitaĵo |Donat |Donada |Do |Diyelim ki |Diberi |Dengan |Den youse gotta |DEN |De |Dato |Dați fiind |Daţi fiind |Dati fiind |Dati |Date fiind |Date |Data |Dat fiind |Dar |Dann |dann |Dan |Dados |Dado |Dadas |Dada |Ða ðe |Ða |Cuando |Cho |Cando |Când |Cand |Cal |But y'all |But at the end of the day I reckon |BUT |But |Buh |Blimey! |Biết |Bet |Bagi |Aye |awer |Avast! |Atunci |Atesa |Atès |Apabila |Anrhegedig a |Angenommen |And y'all |And |AN |An |an |Amikor |Amennyiben |Ama |Als |Alors |Allora |Ali |Aleshores |Ale |Akkor |Ak |Adott |Ac |Aber |A zároveň |A tiež |A taktiež |A také |A |a |7 |\* )/))
                    return t.inStep = !0,
                    t.allowPlaceholders = !0,
                    t.allowMultilineArgument = !0,
                    t.inKeywordLine = !0,
                    "keyword";
                else if (e.match(/"[^"]*"?/))
                    return "string";
                else if (t.allowPlaceholders && e.match(/<[^>]*>?/))
                    return "variable";
                else
                    return e.next(),
                    e.eatWhile(/[^@"<#]/),
                    null
            }
        }
    },
    8174: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            go: function() {
                return p
            }
        });
        var n, r = {
            break: !0,
            case: !0,
            chan: !0,
            const: !0,
            continue: !0,
            default: !0,
            defer: !0,
            else: !0,
            fallthrough: !0,
            for: !0,
            func: !0,
            go: !0,
            goto: !0,
            if: !0,
            import: !0,
            interface: !0,
            map: !0,
            package: !0,
            range: !0,
            return: !0,
            select: !0,
            struct: !0,
            switch: !0,
            type: !0,
            var: !0,
            bool: !0,
            byte: !0,
            complex64: !0,
            complex128: !0,
            float32: !0,
            float64: !0,
            int8: !0,
            int16: !0,
            int32: !0,
            int64: !0,
            string: !0,
            uint8: !0,
            uint16: !0,
            uint32: !0,
            uint64: !0,
            int: !0,
            uint: !0,
            uintptr: !0,
            error: !0,
            rune: !0,
            any: !0,
            comparable: !0
        }, i = {
            true: !0,
            false: !0,
            iota: !0,
            nil: !0,
            append: !0,
            cap: !0,
            close: !0,
            complex: !0,
            copy: !0,
            delete: !0,
            imag: !0,
            len: !0,
            make: !0,
            new: !0,
            panic: !0,
            print: !0,
            println: !0,
            real: !0,
            recover: !0
        }, a = /[+\-*&^%:=<>!|\/]/;
        function o(e, t) {
            var O = e.next();
            if ('"' == O || "'" == O || "`" == O)
                return t.tokenize = function(e, t) {
                    for (var n, r = !1, i = !1; null != (n = e.next()); ) {
                        if (n == O && !r) {
                            i = !0;
                            break
                        }
                        r = !r && "`" != O && "\\" == n
                    }
                    return (i || !(r || "`" == O)) && (t.tokenize = o),
                    "string"
                }
                ,
                t.tokenize(e, t);
            if (/[\d\.]/.test(O))
                return "." == O ? e.match(/^[0-9]+([eE][\-+]?[0-9]+)?/) : "0" == O ? e.match(/^[xX][0-9a-fA-F]+/) || e.match(/^0[0-7]+/) : e.match(/^[0-9]*\.?[0-9]*([eE][\-+]?[0-9]+)?/),
                "number";
            if (/[\[\]{}\(\),;\:\.]/.test(O))
                return n = O,
                null;
            if ("/" == O) {
                if (e.eat("*"))
                    return t.tokenize = s,
                    s(e, t);
                if (e.eat("/"))
                    return e.skipToEnd(),
                    "comment"
            }
            if (a.test(O))
                return e.eatWhile(a),
                "operator";
            e.eatWhile(/[\w\$_\xa1-\uffff]/);
            var l = e.current();
            return r.propertyIsEnumerable(l) ? (("case" == l || "default" == l) && (n = "case"),
            "keyword") : i.propertyIsEnumerable(l) ? "atom" : "variable"
        }
        function s(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("/" == O && n) {
                    t.tokenize = o;
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        function l(e, t, O, n, r) {
            this.indented = e,
            this.column = t,
            this.type = O,
            this.align = n,
            this.prev = r
        }
        function c(e, t, O) {
            return e.context = new l(e.indented,t,O,null,e.context)
        }
        function u(e) {
            if (e.context.prev) {
                var t = e.context.type;
                return (")" == t || "]" == t || "}" == t) && (e.indented = e.context.indented),
                e.context = e.context.prev
            }
        }
        let p = {
            name: "go",
            startState: function(e) {
                return {
                    tokenize: null,
                    context: new l(-e,0,"top",!1),
                    indented: 0,
                    startOfLine: !0
                }
            },
            token: function(e, t) {
                var O = t.context;
                if (e.sol() && (null == O.align && (O.align = !1),
                t.indented = e.indentation(),
                t.startOfLine = !0,
                "case" == O.type && (O.type = "}")),
                e.eatSpace())
                    return null;
                n = null;
                var r = (t.tokenize || o)(e, t);
                return "comment" == r || (null == O.align && (O.align = !0),
                "{" == n ? c(t, e.column(), "}") : "[" == n ? c(t, e.column(), "]") : "(" == n ? c(t, e.column(), ")") : "case" == n ? O.type = "case" : "}" == n && "}" == O.type ? u(t) : n == O.type && u(t),
                t.startOfLine = !1),
                r
            },
            indent: function(e, t, O) {
                if (e.tokenize != o && null != e.tokenize)
                    return null;
                var n = e.context
                  , r = t && t.charAt(0);
                if ("case" == n.type && /^(?:case|default)\b/.test(t))
                    return n.indented;
                var i = r == n.type;
                return n.align ? n.column + (i ? 0 : 1) : n.indented + (i ? 0 : O.unit)
            },
            languageData: {
                indentOnInput: /^\s([{}]|case |default\s*:)$/,
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                }
            }
        }
    },
    4737: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            groovy: function() {
                return Q
            }
        });
        var r, i = n("abstract as assert boolean break byte case catch char class const continue def default do double else enum extends final finally float for goto if implements import in instanceof int interface long native new package private protected public return short static strictfp super switch synchronized threadsafe throw throws trait transient try void volatile while"), a = n("catch class def do else enum finally for if interface switch trait try while"), o = n("return break continue"), s = n("null true false this");
        function l(e, t) {
            var O = e.next();
            if ('"' == O || "'" == O)
                return c(O, e, t);
            if (/[\[\]{}\(\),;\:\.]/.test(O))
                return r = O,
                null;
            if (/\d/.test(O))
                return e.eatWhile(/[\w\.]/),
                e.eat(/eE/) && (e.eat(/\+\-/),
                e.eatWhile(/\d/)),
                "number";
            if ("/" == O) {
                if (e.eat("*"))
                    return t.tokenize.push(p),
                    p(e, t);
                if (e.eat("/"))
                    return e.skipToEnd(),
                    "comment";
                if (d(t.lastToken, !1))
                    return c(O, e, t)
            }
            if ("-" == O && e.eat(">"))
                return r = "->",
                null;
            if (/[+\-*&%=<>!?|\/~]/.test(O))
                return e.eatWhile(/[+\-*&%=<>|~]/),
                "operator";
            if (e.eatWhile(/[\w\$_]/),
            "@" == O)
                return e.eatWhile(/[\w\$_\.]/),
                "meta";
            if ("." == t.lastToken)
                return "property";
            if (e.eat(":"))
                return r = "proplabel",
                "property";
            var n = e.current();
            return s.propertyIsEnumerable(n) ? "atom" : i.propertyIsEnumerable(n) ? (a.propertyIsEnumerable(n) ? r = "newstatement" : o.propertyIsEnumerable(n) && (r = "standalone"),
            "keyword") : "variable"
        }
        function c(e, t, O) {
            var n = !1;
            if ("/" != e && t.eat(e)) {
                if (!t.eat(e))
                    return "string";
                n = !0
            }
            function r(t, O) {
                for (var r, i = !1, a = !n; null != (r = t.next()); ) {
                    if (r == e && !i) {
                        if (!n)
                            break;
                        if (t.match(e + e)) {
                            a = !0;
                            break
                        }
                    }
                    if ('"' == e && "$" == r && !i) {
                        if (t.eat("{"))
                            return O.tokenize.push(function() {
                                var e = 1;
                                function t(t, O) {
                                    if ("}" == t.peek()) {
                                        if (0 == --e)
                                            return O.tokenize.pop(),
                                            O.tokenize[O.tokenize.length - 1](t, O)
                                    } else
                                        "{" == t.peek() && e++;
                                    return l(t, O)
                                }
                                return t.isBase = !0,
                                t
                            }()),
                            "string";
                        if (t.match(/^\w/, !1))
                            return O.tokenize.push(u),
                            "string"
                    }
                    i = !i && "\\" == r
                }
                return a && O.tokenize.pop(),
                "string"
            }
            return O.tokenize.push(r),
            r(t, O)
        }
        function u(e, t) {
            var O = e.match(/^(\.|[\w\$_]+)/);
            return O ? "." == O[0] ? null : "variable" : (t.tokenize.pop(),
            t.tokenize[t.tokenize.length - 1](e, t))
        }
        function p(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("/" == O && n) {
                    t.tokenize.pop();
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        function d(e, t) {
            return !e || "operator" == e || "->" == e || /[\.\[\{\(,;:]/.test(e) || "newstatement" == e || "keyword" == e || "proplabel" == e || "standalone" == e && !t
        }
        function f(e, t, O, n, r) {
            this.indented = e,
            this.column = t,
            this.type = O,
            this.align = n,
            this.prev = r
        }
        function h(e, t, O) {
            return e.context = new f(e.indented,t,O,null,e.context)
        }
        function m(e) {
            var t = e.context.type;
            return (")" == t || "]" == t || "}" == t) && (e.indented = e.context.indented),
            e.context = e.context.prev
        }
        l.isBase = !0;
        let Q = {
            name: "groovy",
            startState: function(e) {
                return {
                    tokenize: [l],
                    context: new f(-e,0,"top",!1),
                    indented: 0,
                    startOfLine: !0,
                    lastToken: null
                }
            },
            token: function(e, t) {
                var O = t.context;
                if (e.sol() && (null == O.align && (O.align = !1),
                t.indented = e.indentation(),
                t.startOfLine = !0,
                "statement" != O.type || d(t.lastToken, !0) || (m(t),
                O = t.context)),
                e.eatSpace())
                    return null;
                r = null;
                var n = t.tokenize[t.tokenize.length - 1](e, t);
                if ("comment" == n)
                    return n;
                if (null == O.align && (O.align = !0),
                (";" == r || ":" == r) && "statement" == O.type)
                    m(t);
                else if ("->" == r && "statement" == O.type && "}" == O.prev.type)
                    m(t),
                    t.context.align = !1;
                else if ("{" == r)
                    h(t, e.column(), "}");
                else if ("[" == r)
                    h(t, e.column(), "]");
                else if ("(" == r)
                    h(t, e.column(), ")");
                else if ("}" == r) {
                    for (; "statement" == O.type; )
                        O = m(t);
                    for ("}" == O.type && (O = m(t)); "statement" == O.type; )
                        O = m(t)
                } else
                    r == O.type ? m(t) : ("}" == O.type || "top" == O.type || "statement" == O.type && "newstatement" == r) && h(t, e.column(), "statement");
                return t.startOfLine = !1,
                t.lastToken = r || n,
                n
            },
            indent: function(e, t, O) {
                if (!e.tokenize[e.tokenize.length - 1].isBase)
                    return null;
                var n = t && t.charAt(0)
                  , r = e.context;
                "statement" != r.type || d(e.lastToken, !0) || (r = r.prev);
                var i = n == r.type;
                return "statement" == r.type ? r.indented + ("{" == n ? 0 : O.unit) : r.align ? r.column + (i ? 0 : 1) : r.indented + (i ? 0 : O.unit)
            },
            languageData: {
                indentOnInput: /^\s*[{}]$/,
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                },
                closeBrackets: {
                    brackets: ["(", "[", "{", "'", '"', "'''", '"""']
                }
            }
        }
    },
    3580: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            haskell: function() {
                return m
            }
        });
        var n = /[a-z_]/
          , r = /[A-Z]/
          , i = /\d/
          , a = /[0-9A-Fa-f]/
          , o = /[0-7]/
          , s = /[a-z_A-Z0-9'\xa1-\uffff]/
          , l = /[-!#$%&*+.\/<=>?@\\^|~:]/
          , c = /[(),;[\]`{}]/
          , u = /[ \t\v\f]/;
        function p(e, t) {
            if (e.eatWhile(u))
                return null;
            var O, f = e.next();
            if (c.test(f)) {
                if ("{" == f && e.eat("-")) {
                    var h, m = "comment";
                    return e.eat("#") && (m = "meta"),
                    t(h = function e(t, O) {
                        return 0 == O ? p : function(n, r) {
                            for (var i = O; !n.eol(); ) {
                                var a = n.next();
                                if ("{" == a && n.eat("-"))
                                    ++i;
                                else if ("-" == a && n.eat("}") && 0 == --i)
                                    return r(p),
                                    t
                            }
                            return r(e(t, i)),
                            t
                        }
                    }(m, 1)),
                    h(e, t)
                }
                return null
            }
            if ("'" == f)
                return (e.eat("\\"),
                e.next(),
                e.eat("'")) ? "string" : "error";
            if ('"' == f)
                return t(O = d),
                O(e, t);
            if (r.test(f))
                return (e.eatWhile(s),
                e.eat(".")) ? "qualifier" : "type";
            if (n.test(f))
                return e.eatWhile(s),
                "variable";
            if (i.test(f)) {
                if ("0" == f) {
                    if (e.eat(/[xX]/))
                        return e.eatWhile(a),
                        "integer";
                    if (e.eat(/[oO]/))
                        return e.eatWhile(o),
                        "number"
                }
                e.eatWhile(i);
                var m = "number";
                return e.match(/^\.\d+/) && (m = "number"),
                e.eat(/[eE]/) && (m = "number",
                e.eat(/[-+]/),
                e.eatWhile(i)),
                m
            }
            return "." == f && e.eat(".") ? "keyword" : l.test(f) ? "-" == f && e.eat(/-/) && (e.eatWhile(/-/),
            !e.eat(l)) ? (e.skipToEnd(),
            "comment") : (e.eatWhile(l),
            "variable") : "error"
        }
        function d(e, t) {
            for (; !e.eol(); ) {
                var O = e.next();
                if ('"' == O)
                    return t(p),
                    "string";
                if ("\\" == O) {
                    if (e.eol() || e.eat(u))
                        return t(f),
                        "string";
                    e.eat("&") || e.next()
                }
            }
            return t(p),
            "error"
        }
        function f(e, t) {
            if (e.eat("\\")) {
                var O;
                return t(O = d),
                O(e, t)
            }
            return e.next(),
            t(p),
            "error"
        }
        var h = function() {
            var e = {};
            function t(t) {
                return function() {
                    for (var O = 0; O < arguments.length; O++)
                        e[arguments[O]] = t
                }
            }
            return t("keyword")("case", "class", "data", "default", "deriving", "do", "else", "foreign", "if", "import", "in", "infix", "infixl", "infixr", "instance", "let", "module", "newtype", "of", "then", "type", "where", "_"),
            t("keyword")("..", ":", "::", "=", "\\", "<-", "->", "@", "~", "=>"),
            t("builtin")("!!", "$!", "$", "&&", "+", "++", "-", ".", "/", "/=", "<", "<*", "<=", "<$>", "<*>", "=<<", "==", ">", ">=", ">>", ">>=", "^", "^^", "||", "*", "*>", "**"),
            t("builtin")("Applicative", "Bool", "Bounded", "Char", "Double", "EQ", "Either", "Enum", "Eq", "False", "FilePath", "Float", "Floating", "Fractional", "Functor", "GT", "IO", "IOError", "Int", "Integer", "Integral", "Just", "LT", "Left", "Maybe", "Monad", "Nothing", "Num", "Ord", "Ordering", "Rational", "Read", "ReadS", "Real", "RealFloat", "RealFrac", "Right", "Show", "ShowS", "String", "True"),
            t("builtin")("abs", "acos", "acosh", "all", "and", "any", "appendFile", "asTypeOf", "asin", "asinh", "atan", "atan2", "atanh", "break", "catch", "ceiling", "compare", "concat", "concatMap", "const", "cos", "cosh", "curry", "cycle", "decodeFloat", "div", "divMod", "drop", "dropWhile", "either", "elem", "encodeFloat", "enumFrom", "enumFromThen", "enumFromThenTo", "enumFromTo", "error", "even", "exp", "exponent", "fail", "filter", "flip", "floatDigits", "floatRadix", "floatRange", "floor", "fmap", "foldl", "foldl1", "foldr", "foldr1", "fromEnum", "fromInteger", "fromIntegral", "fromRational", "fst", "gcd", "getChar", "getContents", "getLine", "head", "id", "init", "interact", "ioError", "isDenormalized", "isIEEE", "isInfinite", "isNaN", "isNegativeZero", "iterate", "last", "lcm", "length", "lex", "lines", "log", "logBase", "lookup", "map", "mapM", "mapM_", "max", "maxBound", "maximum", "maybe", "min", "minBound", "minimum", "mod", "negate", "not", "notElem", "null", "odd", "or", "otherwise", "pi", "pred", "print", "product", "properFraction", "pure", "putChar", "putStr", "putStrLn", "quot", "quotRem", "read", "readFile", "readIO", "readList", "readLn", "readParen", "reads", "readsPrec", "realToFrac", "recip", "rem", "repeat", "replicate", "return", "reverse", "round", "scaleFloat", "scanl", "scanl1", "scanr", "scanr1", "seq", "sequence", "sequence_", "show", "showChar", "showList", "showParen", "showString", "shows", "showsPrec", "significand", "signum", "sin", "sinh", "snd", "span", "splitAt", "sqrt", "subtract", "succ", "sum", "tail", "take", "takeWhile", "tan", "tanh", "toEnum", "toInteger", "toRational", "truncate", "uncurry", "undefined", "unlines", "until", "unwords", "unzip", "unzip3", "userError", "words", "writeFile", "zip", "zip3", "zipWith", "zipWith3"),
            e
        }();
        let m = {
            name: "haskell",
            startState: function() {
                return {
                    f: p
                }
            },
            copyState: function(e) {
                return {
                    f: e.f
                }
            },
            token: function(e, t) {
                var O = t.f(e, function(e) {
                    t.f = e
                })
                  , n = e.current();
                return h.hasOwnProperty(n) ? h[n] : O
            },
            languageData: {
                commentTokens: {
                    line: "--",
                    block: {
                        open: "{-",
                        close: "-}"
                    }
                }
            }
        }
    },
    1067: function(e, t, O) {
        "use strict";
        function n(e) {
            return {
                type: e,
                style: "keyword"
            }
        }
        O.r(t),
        O.d(t, {
            haxe: function() {
                return et
            },
            hxml: function() {
                return eO
            }
        });
        var r, i, a = n("keyword a"), o = n("keyword b"), s = n("keyword c"), l = n("operator"), c = {
            type: "atom",
            style: "atom"
        }, u = {
            type: "attribute",
            style: "attribute"
        }, r = n("typedef"), p = {
            if: a,
            while: a,
            else: o,
            do: o,
            try: o,
            return: s,
            break: s,
            continue: s,
            new: s,
            throw: s,
            var: n("var"),
            inline: u,
            static: u,
            using: n("import"),
            public: u,
            private: u,
            cast: n("cast"),
            import: n("import"),
            macro: n("macro"),
            function: n("function"),
            catch: n("catch"),
            untyped: n("untyped"),
            callback: n("cb"),
            for: n("for"),
            switch: n("switch"),
            case: n("case"),
            default: n("default"),
            in: l,
            never: n("property_access"),
            trace: n("trace"),
            class: r,
            abstract: r,
            enum: r,
            interface: r,
            typedef: r,
            extends: r,
            implements: r,
            dynamic: r,
            true: c,
            false: c,
            null: c
        }, d = /[+\-*&%=<>!?|]/;
        function f(e, t, O) {
            return t.tokenize = O,
            O(e, t)
        }
        function h(e, t) {
            for (var O, n = !1; null != (O = e.next()); ) {
                if (O == t && !n)
                    return !0;
                n = !n && "\\" == O
            }
        }
        function m(e, t) {
            var O, n = e.next();
            if ('"' == n || "'" == n)
                return f(e, t, function(e, t) {
                    return h(e, n) && (t.tokenize = m),
                    r = "string",
                    i = void 0,
                    "string"
                });
            if (/[\[\]{}\(\),;\:\.]/.test(n))
                return r = n,
                void (i = void 0);
            if ("0" == n && e.eat(/x/i))
                return e.eatWhile(/[\da-f]/i),
                r = "number",
                i = void 0,
                "number";
            if (/\d/.test(n) || "-" == n && e.eat(/\d/))
                return e.match(/^\d*(?:\.\d*(?!\.))?(?:[eE][+\-]?\d+)?/),
                r = "number",
                i = void 0,
                "number";
            if (t.reAllowed && "~" == n && e.eat(/\//))
                return h(e, "/"),
                e.eatWhile(/[gimsu]/),
                r = "regexp",
                i = void 0,
                "string.special";
            if ("/" == n)
                return e.eat("*") ? f(e, t, Q) : e.eat("/") ? (e.skipToEnd(),
                r = "comment",
                i = void 0,
                "comment") : (e.eatWhile(d),
                a = e.current(),
                r = "operator",
                i = a,
                null);
            if ("#" == n)
                return e.skipToEnd(),
                r = "conditional",
                i = void 0,
                "meta";
            if ("@" == n)
                return e.eat(/:/),
                e.eatWhile(/[\w_]/),
                r = "metadata",
                i = void 0,
                "meta";
            if (d.test(n))
                return e.eatWhile(d),
                o = e.current(),
                r = "operator",
                i = o,
                null;
            if (/[A-Z]/.test(n))
                return e.eatWhile(/[\w_<>]/),
                s = O = e.current(),
                r = "type",
                i = s,
                "type";
            e.eatWhile(/[\w_]/);
            var a, o, s, l, c, u, O = e.current(), $ = p.propertyIsEnumerable(O) && p[O];
            return $ && t.kwAllowed ? (l = $.type,
            c = $.style,
            u = O,
            r = l,
            i = u,
            c) : (r = "variable",
            i = O,
            "variable")
        }
        function Q(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("/" == O && n) {
                    t.tokenize = m;
                    break
                }
                n = "*" == O
            }
            return r = "comment",
            i = void 0,
            "comment"
        }
        var $ = {
            atom: !0,
            number: !0,
            variable: !0,
            string: !0,
            regexp: !0
        };
        function g(e, t, O, n, r, i) {
            this.indented = e,
            this.column = t,
            this.type = O,
            this.prev = r,
            this.info = i,
            null != n && (this.align = n)
        }
        function P(e) {
            for (var t = S.state, O = t.importedtypes; O; O = O.next)
                if (O.name == e)
                    return;
            t.importedtypes = {
                name: e,
                next: t.importedtypes
            }
        }
        var S = {
            state: null,
            column: null,
            marked: null,
            cc: null
        };
        function b() {
            for (var e = arguments.length - 1; e >= 0; e--)
                S.cc.push(arguments[e])
        }
        function y() {
            return b.apply(null, arguments),
            !0
        }
        function x(e, t) {
            for (var O = t; O; O = O.next)
                if (O.name == e)
                    return !0;
            return !1
        }
        function X(e) {
            var t = S.state;
            if (t.context) {
                if (S.marked = "def",
                x(e, t.localVars))
                    return;
                t.localVars = {
                    name: e,
                    next: t.localVars
                }
            } else if (t.globalVars) {
                if (x(e, t.globalVars))
                    return;
                t.globalVars = {
                    name: e,
                    next: t.globalVars
                }
            }
        }
        var v = {
            name: "this",
            next: null
        };
        function k() {
            S.state.context || (S.state.localVars = v),
            S.state.context = {
                prev: S.state.context,
                vars: S.state.localVars
            }
        }
        function w() {
            S.state.localVars = S.state.context.vars,
            S.state.context = S.state.context.prev
        }
        function T(e, t) {
            var O = function() {
                var O = S.state;
                O.lexical = new g(O.indented,S.stream.column(),e,null,O.lexical,t)
            };
            return O.lex = !0,
            O
        }
        function _() {
            var e = S.state;
            e.lexical.prev && (")" == e.lexical.type && (e.indented = e.lexical.indented),
            e.lexical = e.lexical.prev)
        }
        function W(e) {
            return function t(O) {
                return O == e ? y() : ";" == e ? b() : y(t)
            }
        }
        function Z(e) {
            return "@" == e ? y(U) : "var" == e ? y(T("vardef"), N, W(";"), _) : "keyword a" == e ? y(T("form"), z, Z, _) : "keyword b" == e ? y(T("form"), Z, _) : "{" == e ? y(T("}"), k, J, _, w) : ";" == e ? y() : "attribute" == e ? y(R) : "function" == e ? y(M) : "for" == e ? y(T("form"), W("("), T(")"), L, W(")"), _, Z, _) : "variable" == e ? y(T("stat"), G) : "switch" == e ? y(T("form"), z, T("}", "switch"), W("{"), J, _, _) : "case" == e ? y(z, W(":")) : "default" == e ? y(W(":")) : "catch" == e ? y(T("form"), k, W("("), ee, W(")"), Z, _, w) : "import" == e ? y(E, W(";")) : "typedef" == e ? y(j) : b(T("stat"), z, W(";"), _)
        }
        function z(e) {
            return $.hasOwnProperty(e) || "type" == e ? y(Y) : "function" == e ? y(M) : "keyword c" == e ? y(q) : "(" == e ? y(T(")"), q, W(")"), _, Y) : "operator" == e ? y(z) : "[" == e ? y(T("]"), I(q, "]"), _, Y) : "{" == e ? y(T("}"), I(A, "}"), _, Y) : y()
        }
        function q(e) {
            return e.match(/[;\}\)\],]/) ? b() : b(z)
        }
        function Y(e, t) {
            if ("operator" == e && /\+\+|--/.test(t))
                return y(Y);
            if ("operator" == e || ":" == e)
                return y(z);
            if (";" != e) {
                if ("(" == e)
                    return y(T(")"), I(z, ")"), _, Y);
                if ("." == e)
                    return y(C, Y);
                if ("[" == e)
                    return y(T("]"), z, W("]"), _, Y)
            }
        }
        function R(e) {
            return "attribute" == e ? y(R) : "function" == e ? y(M) : "var" == e ? y(N) : void 0
        }
        function U(e) {
            return ":" == e || "variable" == e ? y(U) : "(" == e ? y(T(")"), I(V, ")"), _, Z) : void 0
        }
        function V(e) {
            if ("variable" == e)
                return y()
        }
        function E(e, t) {
            return "variable" == e && /[A-Z]/.test(t.charAt(0)) ? (P(t),
            y()) : "variable" == e || "property" == e || "." == e || "*" == t ? y(E) : void 0
        }
        function j(e, t) {
            return "variable" == e && /[A-Z]/.test(t.charAt(0)) ? (P(t),
            y()) : "type" == e && /[A-Z]/.test(t.charAt(0)) ? y() : void 0
        }
        function G(e) {
            return ":" == e ? y(_, Z) : b(Y, W(";"), _)
        }
        function C(e) {
            if ("variable" == e)
                return S.marked = "property",
                y()
        }
        function A(e) {
            if ("variable" == e && (S.marked = "property"),
            $.hasOwnProperty(e))
                return y(W(":"), z)
        }
        function I(e, t) {
            function O(n) {
                return "," == n ? y(e, O) : n == t ? y() : y(W(t))
            }
            return function(n) {
                return n == t ? y() : b(e, O)
            }
        }
        function J(e) {
            return "}" == e ? y() : b(Z, J)
        }
        function N(e, t) {
            return "variable" == e ? (X(t),
            y(B, D)) : y()
        }
        function D(e, t) {
            return "=" == t ? y(z, D) : "," == e ? y(N) : void 0
        }
        function L(e, t) {
            return "variable" == e ? (X(t),
            y(F, z)) : b()
        }
        function F(e, t) {
            if ("in" == t)
                return y()
        }
        function M(e, t) {
            return "variable" == e || "type" == e ? (X(t),
            y(M)) : "new" == t ? y(M) : "(" == e ? y(T(")"), k, I(ee, ")"), _, B, Z, w) : void 0
        }
        function B(e) {
            if (":" == e)
                return y(H)
        }
        function H(e) {
            return "type" == e || "variable" == e ? y() : "{" == e ? y(T("}"), I(K, "}"), _) : void 0
        }
        function K(e) {
            if ("variable" == e)
                return y(B)
        }
        function ee(e, t) {
            if ("variable" == e)
                return X(t),
                y(B)
        }
        w.lex = !0,
        _.lex = !0;
        let et = {
            name: "haxe",
            startState: function(e) {
                return {
                    tokenize: m,
                    reAllowed: !0,
                    kwAllowed: !0,
                    cc: [],
                    lexical: new g(-e,0,"block",!1),
                    importedtypes: ["Int", "Float", "String", "Void", "Std", "Bool", "Dynamic", "Array"],
                    context: null,
                    indented: 0
                }
            },
            token: function(e, t) {
                if (e.sol() && (t.lexical.hasOwnProperty("align") || (t.lexical.align = !1),
                t.indented = e.indentation()),
                e.eatSpace())
                    return null;
                var O = t.tokenize(e, t);
                return "comment" == r ? O : (t.reAllowed = !!("operator" == r || "keyword c" == r || r.match(/^[\[{}\(,;:]$/)),
                t.kwAllowed = "." != r,
                function(e, t, O, n, r) {
                    var i = e.cc;
                    for (S.state = e,
                    S.stream = r,
                    S.marked = null,
                    S.cc = i,
                    e.lexical.hasOwnProperty("align") || (e.lexical.align = !0); ; )
                        if ((i.length ? i.pop() : Z)(O, n)) {
                            for (; i.length && i[i.length - 1].lex; )
                                i.pop()();
                            if (S.marked)
                                return S.marked;
                            if ("variable" == O && function(e, t) {
                                for (var O = e.localVars; O; O = O.next)
                                    if (O.name == t)
                                        return !0
                            }(e, n))
                                return "variableName.local";
                            if ("variable" == O && function(e, t) {
                                if (/[a-z]/.test(t.charAt(0)))
                                    return !1;
                                for (var O = e.importedtypes.length, n = 0; n < O; n++)
                                    if (e.importedtypes[n] == t)
                                        return !0
                            }(e, n))
                                return "variableName.special";
                            return t
                        }
                }(t, O, r, i, e))
            },
            indent: function(e, t, O) {
                if (e.tokenize != m)
                    return 0;
                var n = t && t.charAt(0)
                  , r = e.lexical;
                "stat" == r.type && "}" == n && (r = r.prev);
                var i = r.type
                  , a = n == i;
                return "vardef" == i ? r.indented + 4 : "form" == i && "{" == n ? r.indented : "stat" == i || "form" == i ? r.indented + O.unit : "switch" != r.info || a ? r.align ? r.column + (a ? 0 : 1) : r.indented + (a ? 0 : O.unit) : r.indented + (/^(?:case|default)\b/.test(t) ? O.unit : 2 * O.unit)
            },
            languageData: {
                indentOnInput: /^\s*[{}]$/,
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                }
            }
        }
          , eO = {
            name: "hxml",
            startState: function() {
                return {
                    define: !1,
                    inString: !1
                }
            },
            token: function(e, t) {
                var O = e.peek()
                  , n = e.sol();
                if ("#" == O)
                    return e.skipToEnd(),
                    "comment";
                if (n && "-" == O) {
                    var r = "variable-2";
                    return e.eat(/-/),
                    "-" == e.peek() && (e.eat(/-/),
                    r = "keyword a"),
                    "D" == e.peek() && (e.eat(/[D]/),
                    r = "keyword c",
                    t.define = !0),
                    e.eatWhile(/[A-Z]/i),
                    r
                }
                var O = e.peek();
                return (!1 == t.inString && "'" == O && (t.inString = !0,
                e.next()),
                !0 == t.inString) ? (e.skipTo("'") || e.skipToEnd(),
                "'" == e.peek() && (e.next(),
                t.inString = !1),
                "string") : (e.next(),
                null)
            },
            languageData: {
                commentTokens: {
                    line: "#"
                }
            }
        }
    },
    6746: function(e, t, O) {
        "use strict";
        function n(e, t) {
            return e.skipToEnd(),
            t.cur = l,
            "error"
        }
        function r(e, t) {
            return e.match(/^HTTP\/\d\.\d/) ? (t.cur = i,
            "keyword") : e.match(/^[A-Z]+/) && /[ \t]/.test(e.peek()) ? (t.cur = o,
            "keyword") : n(e, t)
        }
        function i(e, t) {
            var O = e.match(/^\d+/);
            if (!O)
                return n(e, t);
            t.cur = a;
            var r = Number(O[0]);
            return r >= 100 && r < 400 ? "atom" : "error"
        }
        function a(e, t) {
            return e.skipToEnd(),
            t.cur = l,
            null
        }
        function o(e, t) {
            return e.eatWhile(/\S/),
            t.cur = s,
            "string.special"
        }
        function s(e, t) {
            return e.match(/^HTTP\/\d\.\d$/) ? (t.cur = l,
            "keyword") : n(e, t)
        }
        function l(e) {
            return !e.sol() || e.eat(/[ \t]/) ? (e.skipToEnd(),
            "string") : e.match(/^.*?:/) ? "atom" : (e.skipToEnd(),
            "error")
        }
        function c(e) {
            return e.skipToEnd(),
            null
        }
        O.r(t),
        O.d(t, {
            http: function() {
                return u
            }
        });
        let u = {
            name: "http",
            token: function(e, t) {
                var O = t.cur;
                return O != l && O != c && e.eatSpace() ? null : O(e, t)
            },
            blankLine: function(e) {
                e.cur = c
            },
            startState: function() {
                return {
                    cur: r
                }
            }
        }
    },
    4085: function(e, t, O) {
        "use strict";
        function n(e) {
            return RegExp("^((" + e.join(")|(") + "))\\b", "i")
        }
        O.r(t),
        O.d(t, {
            idl: function() {
                return u
            }
        });
        var r = ["a_correlate", "abs", "acos", "adapt_hist_equal", "alog", "alog2", "alog10", "amoeba", "annotate", "app_user_dir", "app_user_dir_query", "arg_present", "array_equal", "array_indices", "arrow", "ascii_template", "asin", "assoc", "atan", "axis", "axis", "bandpass_filter", "bandreject_filter", "barplot", "bar_plot", "beseli", "beselj", "beselk", "besely", "beta", "biginteger", "bilinear", "bin_date", "binary_template", "bindgen", "binomial", "bit_ffs", "bit_population", "blas_axpy", "blk_con", "boolarr", "boolean", "boxplot", "box_cursor", "breakpoint", "broyden", "bubbleplot", "butterworth", "bytarr", "byte", "byteorder", "bytscl", "c_correlate", "calendar", "caldat", "call_external", "call_function", "call_method", "call_procedure", "canny", "catch", "cd", "cdf", "ceil", "chebyshev", "check_math", "chisqr_cvf", "chisqr_pdf", "choldc", "cholsol", "cindgen", "cir_3pnt", "clipboard", "close", "clust_wts", "cluster", "cluster_tree", "cmyk_convert", "code_coverage", "color_convert", "color_exchange", "color_quan", "color_range_map", "colorbar", "colorize_sample", "colormap_applicable", "colormap_gradient", "colormap_rotation", "colortable", "comfit", "command_line_args", "common", "compile_opt", "complex", "complexarr", "complexround", "compute_mesh_normals", "cond", "congrid", "conj", "constrained_min", "contour", "contour", "convert_coord", "convol", "convol_fft", "coord2to3", "copy_lun", "correlate", "cos", "cosh", "cpu", "cramer", "createboxplotdata", "create_cursor", "create_struct", "create_view", "crossp", "crvlength", "ct_luminance", "cti_test", "cursor", "curvefit", "cv_coord", "cvttobm", "cw_animate", "cw_animate_getp", "cw_animate_load", "cw_animate_run", "cw_arcball", "cw_bgroup", "cw_clr_index", "cw_colorsel", "cw_defroi", "cw_field", "cw_filesel", "cw_form", "cw_fslider", "cw_light_editor", "cw_light_editor_get", "cw_light_editor_set", "cw_orient", "cw_palette_editor", "cw_palette_editor_get", "cw_palette_editor_set", "cw_pdmenu", "cw_rgbslider", "cw_tmpl", "cw_zoom", "db_exists", "dblarr", "dcindgen", "dcomplex", "dcomplexarr", "define_key", "define_msgblk", "define_msgblk_from_file", "defroi", "defsysv", "delvar", "dendro_plot", "dendrogram", "deriv", "derivsig", "determ", "device", "dfpmin", "diag_matrix", "dialog_dbconnect", "dialog_message", "dialog_pickfile", "dialog_printersetup", "dialog_printjob", "dialog_read_image", "dialog_write_image", "dictionary", "digital_filter", "dilate", "dindgen", "dissolve", "dist", "distance_measure", "dlm_load", "dlm_register", "doc_library", "double", "draw_roi", "edge_dog", "efont", "eigenql", "eigenvec", "ellipse", "elmhes", "emboss", "empty", "enable_sysrtn", "eof", "eos", "erase", "erf", "erfc", "erfcx", "erode", "errorplot", "errplot", "estimator_filter", "execute", "exit", "exp", "expand", "expand_path", "expint", "extract", "extract_slice", "f_cvf", "f_pdf", "factorial", "fft", "file_basename", "file_chmod", "file_copy", "file_delete", "file_dirname", "file_expand_path", "file_gunzip", "file_gzip", "file_info", "file_lines", "file_link", "file_mkdir", "file_move", "file_poll_input", "file_readlink", "file_same", "file_search", "file_tar", "file_test", "file_untar", "file_unzip", "file_which", "file_zip", "filepath", "findgen", "finite", "fix", "flick", "float", "floor", "flow3", "fltarr", "flush", "format_axis_values", "forward_function", "free_lun", "fstat", "fulstr", "funct", "function", "fv_test", "fx_root", "fz_roots", "gamma", "gamma_ct", "gauss_cvf", "gauss_pdf", "gauss_smooth", "gauss2dfit", "gaussfit", "gaussian_function", "gaussint", "get_drive_list", "get_dxf_objects", "get_kbrd", "get_login_info", "get_lun", "get_screen_size", "getenv", "getwindows", "greg2jul", "grib", "grid_input", "grid_tps", "grid3", "griddata", "gs_iter", "h_eq_ct", "h_eq_int", "hanning", "hash", "hdf", "hdf5", "heap_free", "heap_gc", "heap_nosave", "heap_refcount", "heap_save", "help", "hilbert", "hist_2d", "hist_equal", "histogram", "hls", "hough", "hqr", "hsv", "i18n_multibytetoutf8", "i18n_multibytetowidechar", "i18n_utf8tomultibyte", "i18n_widechartomultibyte", "ibeta", "icontour", "iconvertcoord", "idelete", "identity", "idl_base64", "idl_container", "idl_validname", "idlexbr_assistant", "idlitsys_createtool", "idlunit", "iellipse", "igamma", "igetcurrent", "igetdata", "igetid", "igetproperty", "iimage", "image", "image_cont", "image_statistics", "image_threshold", "imaginary", "imap", "indgen", "int_2d", "int_3d", "int_tabulated", "intarr", "interpol", "interpolate", "interval_volume", "invert", "ioctl", "iopen", "ir_filter", "iplot", "ipolygon", "ipolyline", "iputdata", "iregister", "ireset", "iresolve", "irotate", "isa", "isave", "iscale", "isetcurrent", "isetproperty", "ishft", "isocontour", "isosurface", "isurface", "itext", "itranslate", "ivector", "ivolume", "izoom", "journal", "json_parse", "json_serialize", "jul2greg", "julday", "keyword_set", "krig2d", "kurtosis", "kw_test", "l64indgen", "la_choldc", "la_cholmprove", "la_cholsol", "la_determ", "la_eigenproblem", "la_eigenql", "la_eigenvec", "la_elmhes", "la_gm_linear_model", "la_hqr", "la_invert", "la_least_square_equality", "la_least_squares", "la_linear_equation", "la_ludc", "la_lumprove", "la_lusol", "la_svd", "la_tridc", "la_trimprove", "la_triql", "la_trired", "la_trisol", "label_date", "label_region", "ladfit", "laguerre", "lambda", "lambdap", "lambertw", "laplacian", "least_squares_filter", "leefilt", "legend", "legendre", "linbcg", "lindgen", "linfit", "linkimage", "list", "ll_arc_distance", "lmfit", "lmgr", "lngamma", "lnp_test", "loadct", "locale_get", "logical_and", "logical_or", "logical_true", "lon64arr", "lonarr", "long", "long64", "lsode", "lu_complex", "ludc", "lumprove", "lusol", "m_correlate", "machar", "make_array", "make_dll", "make_rt", "map", "mapcontinents", "mapgrid", "map_2points", "map_continents", "map_grid", "map_image", "map_patch", "map_proj_forward", "map_proj_image", "map_proj_info", "map_proj_init", "map_proj_inverse", "map_set", "matrix_multiply", "matrix_power", "max", "md_test", "mean", "meanabsdev", "mean_filter", "median", "memory", "mesh_clip", "mesh_decimate", "mesh_issolid", "mesh_merge", "mesh_numtriangles", "mesh_obj", "mesh_smooth", "mesh_surfacearea", "mesh_validate", "mesh_volume", "message", "min", "min_curve_surf", "mk_html_help", "modifyct", "moment", "morph_close", "morph_distance", "morph_gradient", "morph_hitormiss", "morph_open", "morph_thin", "morph_tophat", "multi", "n_elements", "n_params", "n_tags", "ncdf", "newton", "noise_hurl", "noise_pick", "noise_scatter", "noise_slur", "norm", "obj_class", "obj_destroy", "obj_hasmethod", "obj_isa", "obj_new", "obj_valid", "objarr", "on_error", "on_ioerror", "online_help", "openr", "openu", "openw", "oplot", "oploterr", "orderedhash", "p_correlate", "parse_url", "particle_trace", "path_cache", "path_sep", "pcomp", "plot", "plot3d", "plot", "plot_3dbox", "plot_field", "ploterr", "plots", "polar_contour", "polar_surface", "polyfill", "polyshade", "pnt_line", "point_lun", "polarplot", "poly", "poly_2d", "poly_area", "poly_fit", "polyfillv", "polygon", "polyline", "polywarp", "popd", "powell", "pref_commit", "pref_get", "pref_set", "prewitt", "primes", "print", "printf", "printd", "pro", "product", "profile", "profiler", "profiles", "project_vol", "ps_show_fonts", "psafm", "pseudo", "ptr_free", "ptr_new", "ptr_valid", "ptrarr", "pushd", "qgrid3", "qhull", "qromb", "qromo", "qsimp", "query_*", "query_ascii", "query_bmp", "query_csv", "query_dicom", "query_gif", "query_image", "query_jpeg", "query_jpeg2000", "query_mrsid", "query_pict", "query_png", "query_ppm", "query_srf", "query_tiff", "query_video", "query_wav", "r_correlate", "r_test", "radon", "randomn", "randomu", "ranks", "rdpix", "read", "readf", "read_ascii", "read_binary", "read_bmp", "read_csv", "read_dicom", "read_gif", "read_image", "read_interfile", "read_jpeg", "read_jpeg2000", "read_mrsid", "read_pict", "read_png", "read_ppm", "read_spr", "read_srf", "read_sylk", "read_tiff", "read_video", "read_wav", "read_wave", "read_x11_bitmap", "read_xwd", "reads", "readu", "real_part", "rebin", "recall_commands", "recon3", "reduce_colors", "reform", "region_grow", "register_cursor", "regress", "replicate", "replicate_inplace", "resolve_all", "resolve_routine", "restore", "retall", "return", "reverse", "rk4", "roberts", "rot", "rotate", "round", "routine_filepath", "routine_info", "rs_test", "s_test", "save", "savgol", "scale3", "scale3d", "scatterplot", "scatterplot3d", "scope_level", "scope_traceback", "scope_varfetch", "scope_varname", "search2d", "search3d", "sem_create", "sem_delete", "sem_lock", "sem_release", "set_plot", "set_shading", "setenv", "sfit", "shade_surf", "shade_surf_irr", "shade_volume", "shift", "shift_diff", "shmdebug", "shmmap", "shmunmap", "shmvar", "show3", "showfont", "signum", "simplex", "sin", "sindgen", "sinh", "size", "skewness", "skip_lun", "slicer3", "slide_image", "smooth", "sobel", "socket", "sort", "spawn", "sph_4pnt", "sph_scat", "spher_harm", "spl_init", "spl_interp", "spline", "spline_p", "sprsab", "sprsax", "sprsin", "sprstp", "sqrt", "standardize", "stddev", "stop", "strarr", "strcmp", "strcompress", "streamline", "streamline", "stregex", "stretch", "string", "strjoin", "strlen", "strlowcase", "strmatch", "strmessage", "strmid", "strpos", "strput", "strsplit", "strtrim", "struct_assign", "struct_hide", "strupcase", "surface", "surface", "surfr", "svdc", "svdfit", "svsol", "swap_endian", "swap_endian_inplace", "symbol", "systime", "t_cvf", "t_pdf", "t3d", "tag_names", "tan", "tanh", "tek_color", "temporary", "terminal_size", "tetra_clip", "tetra_surface", "tetra_volume", "text", "thin", "thread", "threed", "tic", "time_test2", "timegen", "timer", "timestamp", "timestamptovalues", "tm_test", "toc", "total", "trace", "transpose", "tri_surf", "triangulate", "trigrid", "triql", "trired", "trisol", "truncate_lun", "ts_coef", "ts_diff", "ts_fcast", "ts_smooth", "tv", "tvcrs", "tvlct", "tvrd", "tvscl", "typename", "uindgen", "uint", "uintarr", "ul64indgen", "ulindgen", "ulon64arr", "ulonarr", "ulong", "ulong64", "uniq", "unsharp_mask", "usersym", "value_locate", "variance", "vector", "vector_field", "vel", "velovect", "vert_t3d", "voigt", "volume", "voronoi", "voxel_proj", "wait", "warp_tri", "watershed", "wdelete", "wf_draw", "where", "widget_base", "widget_button", "widget_combobox", "widget_control", "widget_displaycontextmenu", "widget_draw", "widget_droplist", "widget_event", "widget_info", "widget_label", "widget_list", "widget_propertysheet", "widget_slider", "widget_tab", "widget_table", "widget_text", "widget_tree", "widget_tree_move", "widget_window", "wiener_filter", "window", "window", "write_bmp", "write_csv", "write_gif", "write_image", "write_jpeg", "write_jpeg2000", "write_nrif", "write_pict", "write_png", "write_ppm", "write_spr", "write_srf", "write_sylk", "write_tiff", "write_video", "write_wav", "write_wave", "writeu", "wset", "wshow", "wtn", "wv_applet", "wv_cwt", "wv_cw_wavelet", "wv_denoise", "wv_dwt", "wv_fn_coiflet", "wv_fn_daubechies", "wv_fn_gaussian", "wv_fn_haar", "wv_fn_morlet", "wv_fn_paul", "wv_fn_symlet", "wv_import_data", "wv_import_wavelet", "wv_plot3d_wps", "wv_plot_multires", "wv_pwt", "wv_tool_denoise", "xbm_edit", "xdisplayfile", "xdxf", "xfont", "xinteranimate", "xloadct", "xmanager", "xmng_tmpl", "xmtool", "xobjview", "xobjview_rotate", "xobjview_write_image", "xpalette", "xpcolor", "xplot3d", "xregistered", "xroi", "xsq_test", "xsurface", "xvaredit", "xvolume", "xvolume_rotate", "xvolume_write_image", "xyouts", "zlib_compress", "zlib_uncompress", "zoom", "zoom_24"]
          , i = n(r)
          , a = ["begin", "end", "endcase", "endfor", "endwhile", "endif", "endrep", "endforeach", "break", "case", "continue", "for", "foreach", "goto", "if", "then", "else", "repeat", "until", "switch", "while", "do", "pro", "function"]
          , o = n(a)
          , s = RegExp("^[_a-z\xa1-￿][_a-z0-9\xa1-￿]*", "i")
          , l = /[+\-*&=<>\/@#~$]/
          , c = RegExp("(and|or|eq|lt|le|gt|ge|ne|not)", "i");
        let u = {
            name: "idl",
            token: function(e) {
                return e.eatSpace() ? null : e.match(";") ? (e.skipToEnd(),
                "comment") : e.match(/^[0-9\.+-]/, !1) && (e.match(/^[+-]?0x[0-9a-fA-F]+/) || e.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/) || e.match(/^[+-]?\d+([EeDd][+-]?\d+)?/)) ? "number" : e.match(/^"([^"]|(""))*"/) || e.match(/^'([^']|(''))*'/) ? "string" : e.match(o) ? "keyword" : e.match(i) ? "builtin" : e.match(s) ? "variable" : e.match(l) || e.match(c) ? "operator" : (e.next(),
                null)
            },
            languageData: {
                autocomplete: r.concat(a)
            }
        }
    },
    2197: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            jinja2: function() {
                return l
            }
        });
        var n = ["and", "as", "block", "endblock", "by", "cycle", "debug", "else", "elif", "extends", "filter", "endfilter", "firstof", "do", "for", "endfor", "if", "endif", "ifchanged", "endifchanged", "ifequal", "endifequal", "ifnotequal", "set", "raw", "endraw", "endifnotequal", "in", "include", "load", "not", "now", "or", "parsed", "regroup", "reversed", "spaceless", "call", "endcall", "macro", "endmacro", "endspaceless", "ssi", "templatetag", "openblock", "closeblock", "openvariable", "closevariable", "without", "context", "openbrace", "closebrace", "opencomment", "closecomment", "widthratio", "url", "with", "endwith", "get_current_language", "trans", "endtrans", "noop", "blocktrans", "endblocktrans", "get_available_languages", "get_current_language_bidi", "pluralize", "autoescape", "endautoescape"]
          , r = /^[+\-*&%=<>!?|~^]/
          , i = /^[:\[\(\{]/
          , a = ["true", "false"]
          , o = /^(\d[+\-\*\/])?\d+(\.\d+)?/;
        function s(e, t) {
            var O = e.peek();
            if (t.incomment)
                return e.skipTo("#}") ? (e.eatWhile(/\#|}/),
                t.incomment = !1) : e.skipToEnd(),
                "comment";
            if (t.intag) {
                if (t.operator) {
                    if (t.operator = !1,
                    e.match(a))
                        return "atom";
                    if (e.match(o))
                        return "number"
                }
                if (t.sign) {
                    if (t.sign = !1,
                    e.match(a))
                        return "atom";
                    if (e.match(o))
                        return "number"
                }
                if (t.instring)
                    return O == t.instring && (t.instring = !1),
                    e.next(),
                    "string";
                if ("'" == O || '"' == O)
                    return t.instring = O,
                    e.next(),
                    "string";
                if (t.inbraces > 0 && ")" == O)
                    e.next(),
                    t.inbraces--;
                else if ("(" == O)
                    e.next(),
                    t.inbraces++;
                else if (t.inbrackets > 0 && "]" == O)
                    e.next(),
                    t.inbrackets--;
                else if ("[" == O)
                    e.next(),
                    t.inbrackets++;
                else if (!t.lineTag && (e.match(t.intag + "}") || e.eat("-") && e.match(t.intag + "}")))
                    return t.intag = !1,
                    "tag";
                else if (e.match(r))
                    return t.operator = !0,
                    "operator";
                else if (e.match(i))
                    t.sign = !0;
                else {
                    if (1 == e.column() && t.lineTag && e.match(n))
                        return "keyword";
                    if (e.eat(" ") || e.sol()) {
                        if (e.match(n))
                            return "keyword";
                        if (e.match(a))
                            return "atom";
                        if (e.match(o))
                            return "number";
                        e.sol() && e.next()
                    } else
                        e.next()
                }
                return "variable"
            }
            if (e.eat("{")) {
                if (e.eat("#"))
                    return t.incomment = !0,
                    e.skipTo("#}") ? (e.eatWhile(/\#|}/),
                    t.incomment = !1) : e.skipToEnd(),
                    "comment";
                if (O = e.eat(/\{|%/))
                    return t.intag = O,
                    t.inbraces = 0,
                    t.inbrackets = 0,
                    "{" == O && (t.intag = "}"),
                    e.eat("-"),
                    "tag"
            } else if (e.eat("#")) {
                if ("#" == e.peek())
                    return e.skipToEnd(),
                    "comment";
                if (!e.eol())
                    return t.intag = !0,
                    t.lineTag = !0,
                    t.inbraces = 0,
                    t.inbrackets = 0,
                    "tag"
            }
            e.next()
        }
        n = RegExp("((" + n.join(")|(") + "))\\b"),
        a = RegExp("((" + a.join(")|(") + "))\\b");
        let l = {
            name: "jinja2",
            startState: function() {
                return {
                    tokenize: s,
                    inbrackets: 0,
                    inbraces: 0
                }
            },
            token: function(e, t) {
                var O = t.tokenize(e, t);
                return e.eol() && t.lineTag && !t.instring && 0 == t.inbraces && 0 == t.inbrackets && (t.intag = !1,
                t.lineTag = !1),
                O
            },
            languageData: {
                commentTokens: {
                    block: {
                        open: "{#",
                        close: "#}",
                        line: "##"
                    }
                }
            }
        }
    },
    8590: function(e, t, O) {
        "use strict";
        function n(e, t, O) {
            return void 0 === O && (O = ""),
            void 0 === t && (t = "\\b"),
            RegExp("^" + O + "((" + e.join(")|(") + "))" + t)
        }
        O.r(t),
        O.d(t, {
            julia: function() {
                return v
            }
        });
        var r = ["[<>]:", "[<>=]=", "<<=?", ">>>?=?", "=>", "--?>", "<--[->]?", "\\/\\/", "\\.{2,3}", "[\\.\\\\%*+\\-<>!\\/^|&]=?", "\\?", "\\$", "~", ":"]
          , i = n(["[<>]:", "[<>=]=", "[!=]==", "<<=?", ">>>?=?", "=>?", "--?>", "<--[->]?", "\\/\\/", "[\\\\%*+\\-<>!\\/^|&\\u00F7\\u22BB]=?", "\\?", "\\$", "~", ":", "\\u00D7", "\\u2208", "\\u2209", "\\u220B", "\\u220C", "\\u2218", "\\u221A", "\\u221B", "\\u2229", "\\u222A", "\\u2260", "\\u2264", "\\u2265", "\\u2286", "\\u2288", "\\u228A", "\\u22C5", "\\b(in|isa)\\b(?!.?\\()"], "")
          , a = /^[;,()[\]{}]/
          , o = /^[_A-Za-z\u00A1-\u2217\u2219-\uFFFF][\w\u00A1-\u2217\u2219-\uFFFF]*!*/
          , s = n(["\\\\[0-7]{1,3}", "\\\\x[A-Fa-f0-9]{1,2}", "\\\\[abefnrtv0%?'\"\\\\]", "([^\\u0027\\u005C\uD800-\uDFFF]|[\uD800-\uDFFF][\uDC00-\uDFFF])"], "'")
          , l = ["if", "else", "elseif", "while", "for", "begin", "let", "end", "do", "try", "catch", "finally", "return", "break", "continue", "global", "local", "const", "export", "import", "importall", "using", "function", "where", "macro", "module", "baremodule", "struct", "type", "mutable", "immutable", "quote", "typealias", "abstract", "primitive", "bitstype"]
          , c = ["true", "false", "nothing", "NaN", "Inf"]
          , u = n(["begin", "function", "type", "struct", "immutable", "let", "macro", "for", "while", "quote", "if", "else", "elseif", "try", "finally", "catch", "do"])
          , p = n(["end", "else", "elseif", "catch", "finally"])
          , d = n(l)
          , f = n(c)
          , h = /^@[_A-Za-z\u00A1-\uFFFF][\w\u00A1-\uFFFF]*!*/
          , m = /^:[_A-Za-z\u00A1-\uFFFF][\w\u00A1-\uFFFF]*!*/
          , Q = /^(`|([_A-Za-z\u00A1-\uFFFF]*"("")?))/
          , $ = n(r, "", "@")
          , g = n(r, "", ":");
        function P(e) {
            return e.nestedArrays > 0
        }
        function S(e, t) {
            return (void 0 === t && (t = 0),
            e.scopes.length <= t) ? null : e.scopes[e.scopes.length - (t + 1)]
        }
        function b(e, t) {
            if (e.match("#=", !1))
                return t.tokenize = x,
                t.tokenize(e, t);
            var O, n, r = t.leavingExpr;
            if (e.sol() && (r = !1),
            t.leavingExpr = !1,
            r && e.match(/^'+/))
                return "operator";
            if (e.match(/\.{4,}/))
                return "error";
            if (e.match(/\.{1,3}/))
                return "operator";
            if (e.eatSpace())
                return null;
            var s = e.peek();
            if ("#" === s)
                return e.skipToEnd(),
                "comment";
            if ("[" === s && (t.scopes.push("["),
            t.nestedArrays++),
            "(" === s && (t.scopes.push("("),
            t.nestedGenerators++),
            P(t) && "]" === s) {
                for (; t.scopes.length && "[" !== S(t); )
                    t.scopes.pop();
                t.scopes.pop(),
                t.nestedArrays--,
                t.leavingExpr = !0
            }
            if (t.nestedGenerators > 0 && ")" === s) {
                for (; t.scopes.length && "(" !== S(t); )
                    t.scopes.pop();
                t.scopes.pop(),
                t.nestedGenerators--,
                t.leavingExpr = !0
            }
            if (P(t)) {
                if ("end" == t.lastToken && e.match(":"))
                    return "operator";
                if (e.match("end"))
                    return "number"
            }
            if ((n = e.match(u, !1)) && t.scopes.push(n[0]),
            e.match(p, !1) && t.scopes.pop(),
            e.match(/^::(?![:\$])/))
                return t.tokenize = y,
                t.tokenize(e, t);
            if (!r && (e.match(m) || e.match(g)))
                return "builtin";
            if (e.match(i))
                return "operator";
            if (e.match(/^\.?\d/, !1)) {
                var l = RegExp(/^im\b/)
                  , c = !1;
                if (e.match(/^0x\.[0-9a-f_]+p[\+\-]?[_\d]+/i) && (c = !0),
                e.match(/^0x[0-9a-f_]+/i) && (c = !0),
                e.match(/^0b[01_]+/i) && (c = !0),
                e.match(/^0o[0-7_]+/i) && (c = !0),
                e.match(/^(?:(?:\d[_\d]*)?\.(?!\.)(?:\d[_\d]*)?|\d[_\d]*\.(?!\.)(?:\d[_\d]*))?([Eef][\+\-]?[_\d]+)?/i) && (c = !0),
                e.match(/^\d[_\d]*(e[\+\-]?\d+)?/i) && (c = !0),
                c)
                    return e.match(l),
                    t.leavingExpr = !0,
                    "number"
            }
            if (e.match("'"))
                return t.tokenize = X,
                t.tokenize(e, t);
            if (e.match(Q))
                return t.tokenize = ('"""' === (O = e.current()).substr(-3) ? O = '"""' : '"' === O.substr(-1) && (O = '"'),
                function(e, t) {
                    if (e.eat("\\"))
                        e.next();
                    else {
                        if (e.match(O))
                            return t.tokenize = b,
                            t.leavingExpr = !0,
                            "string";
                        e.eat(/[`"]/)
                    }
                    return e.eatWhile(/[^\\`"]/),
                    "string"
                }
                ),
                t.tokenize(e, t);
            if (e.match(h) || e.match($))
                return "meta";
            if (e.match(a))
                return null;
            if (e.match(d))
                return "keyword";
            if (e.match(f))
                return "builtin";
            var v = t.isDefinition || "function" == t.lastToken || "macro" == t.lastToken || "type" == t.lastToken || "struct" == t.lastToken || "immutable" == t.lastToken;
            return e.match(o) ? v ? "." === e.peek() ? (t.isDefinition = !0,
            "variable") : (t.isDefinition = !1,
            "def") : (t.leavingExpr = !0,
            "variable") : (e.next(),
            "error")
        }
        function y(e, t) {
            return e.match(/.*?(?=[,;{}()=\s]|$)/),
            e.match("{") ? t.nestedParameters++ : e.match("}") && t.nestedParameters > 0 && t.nestedParameters--,
            t.nestedParameters > 0 ? e.match(/.*?(?={|})/) || e.next() : 0 == t.nestedParameters && (t.tokenize = b),
            "builtin"
        }
        function x(e, t) {
            return e.match("#=") && t.nestedComments++,
            e.match(/.*?(?=(#=|=#))/) || e.skipToEnd(),
            e.match("=#") && (t.nestedComments--,
            0 == t.nestedComments && (t.tokenize = b)),
            "comment"
        }
        function X(e, t) {
            var O, n = !1;
            if (e.match(s))
                n = !0;
            else if (O = e.match(/\\u([a-f0-9]{1,4})(?=')/i)) {
                var r = parseInt(O[1], 16);
                (r <= 55295 || r >= 57344) && (n = !0,
                e.next())
            } else if (O = e.match(/\\U([A-Fa-f0-9]{5,8})(?=')/)) {
                var r = parseInt(O[1], 16);
                r <= 1114111 && (n = !0,
                e.next())
            }
            return n ? (t.leavingExpr = !0,
            t.tokenize = b,
            "string") : (e.match(/^[^']+(?=')/) || e.skipToEnd(),
            e.match("'") && (t.tokenize = b),
            "error")
        }
        let v = {
            name: "julia",
            startState: function() {
                return {
                    tokenize: b,
                    scopes: [],
                    lastToken: null,
                    leavingExpr: !1,
                    isDefinition: !1,
                    nestedArrays: 0,
                    nestedComments: 0,
                    nestedGenerators: 0,
                    nestedParameters: 0,
                    firstParenPos: -1
                }
            },
            token: function(e, t) {
                var O = t.tokenize(e, t)
                  , n = e.current();
                return n && O && (t.lastToken = n),
                O
            },
            indent: function(e, t, O) {
                var n = 0;
                return ("]" === t || ")" === t || /^end\b/.test(t) || /^else/.test(t) || /^catch\b/.test(t) || /^elseif\b/.test(t) || /^finally/.test(t)) && (n = -1),
                (e.scopes.length + n) * O.unit
            },
            languageData: {
                indentOnInput: /^\s*(end|else|catch|finally)\b$/,
                commentTokens: {
                    line: "#",
                    block: {
                        open: "#=",
                        close: "=#"
                    }
                },
                closeBrackets: {
                    brackets: ["(", "[", "{", '"']
                },
                autocomplete: l.concat(c)
            }
        }
    },
    9140: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            liveScript: function() {
                return f
            }
        });
        var n = function(e, t) {
            var O = t.next || "start";
            if (O) {
                t.next = t.next;
                var n = s[O];
                if (n.splice) {
                    for (var r = 0; r < n.length; ++r) {
                        var i = n[r];
                        if (i.regex && e.match(i.regex))
                            return t.next = i.next || t.next,
                            i.token
                    }
                    return e.next(),
                    "error"
                }
                if (e.match(i = s[O]))
                    return i.regex && e.match(i.regex) ? (t.next = i.next,
                    i.token) : (e.next(),
                    "error")
            }
            return e.next(),
            "error"
        }
          , r = "(?![\\d\\s])[$\\w\\xAA-\\uFFDC](?:(?!\\s)[$\\w\\xAA-\\uFFDC]|-[A-Za-z])*"
          , i = RegExp("(?:[({[=:]|[-~]>|\\b(?:e(?:lse|xport)|d(?:o|efault)|t(?:ry|hen)|finally|import(?:\\s*all)?|const|var|let|new|catch(?:\\s*" + r + ")?))\\s*$")
          , a = "(?![$\\w]|-[A-Za-z]|\\s*:(?![:=]))"
          , o = {
            token: "string",
            regex: ".+"
        }
          , s = {
            start: [{
                token: "docComment",
                regex: "/\\*",
                next: "comment"
            }, {
                token: "comment",
                regex: "#.*"
            }, {
                token: "keyword",
                regex: "(?:t(?:h(?:is|row|en)|ry|ypeof!?)|c(?:on(?:tinue|st)|a(?:se|tch)|lass)|i(?:n(?:stanceof)?|mp(?:ort(?:\\s+all)?|lements)|[fs])|d(?:e(?:fault|lete|bugger)|o)|f(?:or(?:\\s+own)?|inally|unction)|s(?:uper|witch)|e(?:lse|x(?:tends|port)|val)|a(?:nd|rguments)|n(?:ew|ot)|un(?:less|til)|w(?:hile|ith)|o[fr]|return|break|let|var|loop)" + a
            }, {
                token: "atom",
                regex: "(?:true|false|yes|no|on|off|null|void|undefined)" + a
            }, {
                token: "invalid",
                regex: "(?:p(?:ackage|r(?:ivate|otected)|ublic)|i(?:mplements|nterface)|enum|static|yield)" + a
            }, {
                token: "className.standard",
                regex: "(?:R(?:e(?:gExp|ferenceError)|angeError)|S(?:tring|yntaxError)|E(?:rror|valError)|Array|Boolean|Date|Function|Number|Object|TypeError|URIError)" + a
            }, {
                token: "variableName.function.standard",
                regex: "(?:is(?:NaN|Finite)|parse(?:Int|Float)|Math|JSON|(?:en|de)codeURI(?:Component)?)" + a
            }, {
                token: "variableName.standard",
                regex: "(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)" + a
            }, {
                token: "variableName",
                regex: r + "\\s*:(?![:=])"
            }, {
                token: "variableName",
                regex: r
            }, {
                token: "operatorKeyword",
                regex: "(?:\\.{3}|\\s+\\?)"
            }, {
                token: "keyword",
                regex: "(?:@+|::|\\.\\.)",
                next: "key"
            }, {
                token: "operatorKeyword",
                regex: "\\.\\s*",
                next: "key"
            }, {
                token: "string",
                regex: "\\\\\\S[^\\s,;)}\\]]*"
            }, {
                token: "docString",
                regex: "'''",
                next: "qdoc"
            }, {
                token: "docString",
                regex: '"""',
                next: "qqdoc"
            }, {
                token: "string",
                regex: "'",
                next: "qstring"
            }, {
                token: "string",
                regex: '"',
                next: "qqstring"
            }, {
                token: "string",
                regex: "`",
                next: "js"
            }, {
                token: "string",
                regex: "<\\[",
                next: "words"
            }, {
                token: "regexp",
                regex: "//",
                next: "heregex"
            }, {
                token: "regexp",
                regex: "\\/(?:[^[\\/\\n\\\\]*(?:(?:\\\\.|\\[[^\\]\\n\\\\]*(?:\\\\.[^\\]\\n\\\\]*)*\\])[^[\\/\\n\\\\]*)*)\\/[gimy$]{0,4}",
                next: "key"
            }, {
                token: "number",
                regex: "(?:0x[\\da-fA-F][\\da-fA-F_]*|(?:[2-9]|[12]\\d|3[0-6])r[\\da-zA-Z][\\da-zA-Z_]*|(?:\\d[\\d_]*(?:\\.\\d[\\d_]*)?|\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[\\w$]*)"
            }, {
                token: "paren",
                regex: "[({[]"
            }, {
                token: "paren",
                regex: "[)}\\]]",
                next: "key"
            }, {
                token: "operatorKeyword",
                regex: "\\S+"
            }, {
                token: "content",
                regex: "\\s+"
            }],
            heregex: [{
                token: "regexp",
                regex: ".*?//[gimy$?]{0,4}",
                next: "start"
            }, {
                token: "regexp",
                regex: "\\s*#{"
            }, {
                token: "comment",
                regex: "\\s+(?:#.*)?"
            }, {
                token: "regexp",
                regex: "\\S+"
            }],
            key: [{
                token: "operatorKeyword",
                regex: "[.?@!]+"
            }, {
                token: "variableName",
                regex: r,
                next: "start"
            }, {
                token: "content",
                regex: "",
                next: "start"
            }],
            comment: [{
                token: "docComment",
                regex: ".*?\\*/",
                next: "start"
            }, {
                token: "docComment",
                regex: ".+"
            }],
            qdoc: [{
                token: "string",
                regex: ".*?'''",
                next: "key"
            }, o],
            qqdoc: [{
                token: "string",
                regex: '.*?"""',
                next: "key"
            }, o],
            qstring: [{
                token: "string",
                regex: "[^\\\\']*(?:\\\\.[^\\\\']*)*'",
                next: "key"
            }, o],
            qqstring: [{
                token: "string",
                regex: '[^\\\\"]*(?:\\\\.[^\\\\"]*)*"',
                next: "key"
            }, o],
            js: [{
                token: "string",
                regex: "[^\\\\`]*(?:\\\\.[^\\\\`]*)*`",
                next: "key"
            }, o],
            words: [{
                token: "string",
                regex: ".*?\\]>",
                next: "key"
            }, o]
        };
        for (var l in s) {
            var c = s[l];
            if (c.splice)
                for (var u = 0, p = c.length; u < p; ++u) {
                    var d = c[u];
                    "string" == typeof d.regex && (s[l][u].regex = RegExp("^" + d.regex))
                }
            else
                "string" == typeof d.regex && (s[l].regex = RegExp("^" + c.regex))
        }
        let f = {
            name: "livescript",
            startState: function() {
                return {
                    next: "start",
                    lastToken: {
                        style: null,
                        indent: 0,
                        content: ""
                    }
                }
            },
            token: function(e, t) {
                for (; e.pos == e.start; )
                    var O = n(e, t);
                return t.lastToken = {
                    style: O,
                    indent: e.indentation(),
                    content: e.current()
                },
                O.replace(/\./g, " ")
            },
            indent: function(e) {
                var t = e.lastToken.indent;
                return e.lastToken.content.match(i) && (t += 2),
                t
            }
        }
    },
    4520: function(e, t, O) {
        "use strict";
        function n(e) {
            return RegExp("^(?:" + e.join("|") + ")$", "i")
        }
        O.r(t),
        O.d(t, {
            lua: function() {
                return p
            }
        });
        var r = n(["_G", "_VERSION", "assert", "collectgarbage", "dofile", "error", "getfenv", "getmetatable", "ipairs", "load", "loadfile", "loadstring", "module", "next", "pairs", "pcall", "print", "rawequal", "rawget", "rawset", "require", "select", "setfenv", "setmetatable", "tonumber", "tostring", "type", "unpack", "xpcall", "coroutine.create", "coroutine.resume", "coroutine.running", "coroutine.status", "coroutine.wrap", "coroutine.yield", "debug.debug", "debug.getfenv", "debug.gethook", "debug.getinfo", "debug.getlocal", "debug.getmetatable", "debug.getregistry", "debug.getupvalue", "debug.setfenv", "debug.sethook", "debug.setlocal", "debug.setmetatable", "debug.setupvalue", "debug.traceback", "close", "flush", "lines", "read", "seek", "setvbuf", "write", "io.close", "io.flush", "io.input", "io.lines", "io.open", "io.output", "io.popen", "io.read", "io.stderr", "io.stdin", "io.stdout", "io.tmpfile", "io.type", "io.write", "math.abs", "math.acos", "math.asin", "math.atan", "math.atan2", "math.ceil", "math.cos", "math.cosh", "math.deg", "math.exp", "math.floor", "math.fmod", "math.frexp", "math.huge", "math.ldexp", "math.log", "math.log10", "math.max", "math.min", "math.modf", "math.pi", "math.pow", "math.rad", "math.random", "math.randomseed", "math.sin", "math.sinh", "math.sqrt", "math.tan", "math.tanh", "os.clock", "os.date", "os.difftime", "os.execute", "os.exit", "os.getenv", "os.remove", "os.rename", "os.setlocale", "os.time", "os.tmpname", "package.cpath", "package.loaded", "package.loaders", "package.loadlib", "package.path", "package.preload", "package.seeall", "string.byte", "string.char", "string.dump", "string.find", "string.format", "string.gmatch", "string.gsub", "string.len", "string.lower", "string.match", "string.rep", "string.reverse", "string.sub", "string.upper", "table.concat", "table.insert", "table.maxn", "table.remove", "table.sort"])
          , i = n(["and", "break", "elseif", "false", "nil", "not", "or", "return", "true", "function", "end", "if", "then", "else", "do", "while", "repeat", "until", "for", "in", "local"])
          , a = n(["function", "if", "repeat", "do", "\\(", "{"])
          , o = n(["end", "until", "\\)", "}"])
          , s = RegExp("^(?:end|until|\\)|}|else|elseif)", "i");
        function l(e) {
            for (var t = 0; e.eat("="); )
                ++t;
            return e.eat("["),
            t
        }
        function c(e, t) {
            var O = e.next();
            return "-" == O && e.eat("-") ? e.eat("[") && e.eat("[") ? (t.cur = u(l(e), "comment"))(e, t) : (e.skipToEnd(),
            "comment") : '"' == O || "'" == O ? (t.cur = function(e, t) {
                for (var n, r = !1; null != (n = e.next()) && (n != O || r); )
                    r = !r && "\\" == n;
                return r || (t.cur = c),
                "string"
            }
            )(e, t) : "[" == O && /[\[=]/.test(e.peek()) ? (t.cur = u(l(e), "string"))(e, t) : /\d/.test(O) ? (e.eatWhile(/[\w.%]/),
            "number") : /[\w_]/.test(O) ? (e.eatWhile(/[\w\\\-_.]/),
            "variable") : null
        }
        function u(e, t) {
            return function(O, n) {
                for (var r, i = null; null != (r = O.next()); )
                    if (null == i)
                        "]" == r && (i = 0);
                    else if ("=" == r)
                        ++i;
                    else if ("]" == r && i == e) {
                        n.cur = c;
                        break
                    } else
                        i = null;
                return t
            }
        }
        let p = {
            name: "lua",
            startState: function() {
                return {
                    basecol: 0,
                    indentDepth: 0,
                    cur: c
                }
            },
            token: function(e, t) {
                if (e.eatSpace())
                    return null;
                var O = t.cur(e, t)
                  , n = e.current();
                return "variable" == O && (i.test(n) ? O = "keyword" : r.test(n) && (O = "builtin")),
                "comment" != O && "string" != O && (a.test(n) ? ++t.indentDepth : o.test(n) && --t.indentDepth),
                O
            },
            indent: function(e, t, O) {
                var n = s.test(t);
                return e.basecol + O.unit * (e.indentDepth - (n ? 1 : 0))
            },
            languageData: {
                indentOnInput: /^\s*(?:end|until|else|\)|\})$/,
                commentTokens: {
                    line: "--",
                    block: {
                        open: "--[[",
                        close: "]]--"
                    }
                }
            }
        }
    },
    7539: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            mathematica: function() {
                return p
            }
        });
        var n = "[a-zA-Z\\$][a-zA-Z0-9\\$]*"
          , r = "(?:\\.\\d+|\\d+\\.\\d*|\\d+)"
          , i = "(?:`(?:`?" + r + ")?)"
          , a = RegExp("(?:(?:\\d+)(?:\\^\\^(?:\\.\\w+|\\w+\\.\\w*|\\w+)" + i + "?(?:\\*\\^[+-]?\\d+)?))")
          , o = RegExp("(?:" + r + i + "?(?:\\*\\^[+-]?\\d+)?)")
          , s = RegExp("(?:`?)(?:" + n + ")(?:`(?:" + n + "))*(?:`?)");
        function l(e, t) {
            var O;
            return '"' === (O = e.next()) ? (t.tokenize = c,
            t.tokenize(e, t)) : "(" === O && e.eat("*") ? (t.commentLevel++,
            t.tokenize = u,
            t.tokenize(e, t)) : (e.backUp(1),
            e.match(a, !0, !1) || e.match(o, !0, !1)) ? "number" : e.match(/(?:In|Out)\[[0-9]*\]/, !0, !1) ? "atom" : e.match(/([a-zA-Z\$][a-zA-Z0-9\$]*(?:`[a-zA-Z0-9\$]+)*::usage)/, !0, !1) ? "meta" : e.match(/([a-zA-Z\$][a-zA-Z0-9\$]*(?:`[a-zA-Z0-9\$]+)*::[a-zA-Z\$][a-zA-Z0-9\$]*):?/, !0, !1) ? "string.special" : e.match(/([a-zA-Z\$][a-zA-Z0-9\$]*\s*:)(?:(?:[a-zA-Z\$][a-zA-Z0-9\$]*)|(?:[^:=>~@\^\&\*\)\[\]'\?,\|])).*/, !0, !1) || e.match(/[a-zA-Z\$][a-zA-Z0-9\$]*_+[a-zA-Z\$][a-zA-Z0-9\$]*/, !0, !1) || e.match(/[a-zA-Z\$][a-zA-Z0-9\$]*_+/, !0, !1) || e.match(/_+[a-zA-Z\$][a-zA-Z0-9\$]*/, !0, !1) ? "variableName.special" : e.match(/\\\[[a-zA-Z\$][a-zA-Z0-9\$]*\]/, !0, !1) ? "character" : e.match(/(?:\[|\]|{|}|\(|\))/, !0, !1) ? "bracket" : e.match(/(?:#[a-zA-Z\$][a-zA-Z0-9\$]*|#+[0-9]?)/, !0, !1) ? "variableName.constant" : e.match(s, !0, !1) ? "keyword" : e.match(/(?:\\|\+|\-|\*|\/|,|;|\.|:|@|~|=|>|<|&|\||_|`|'|\^|\?|!|%)/, !0, !1) ? "operator" : (e.next(),
            "error")
        }
        function c(e, t) {
            for (var O, n = !1, r = !1; null != (O = e.next()); ) {
                if ('"' === O && !r) {
                    n = !0;
                    break
                }
                r = !r && "\\" === O
            }
            return n && !r && (t.tokenize = l),
            "string"
        }
        function u(e, t) {
            for (var O, n; t.commentLevel > 0 && null != (n = e.next()); )
                "(" === O && "*" === n && t.commentLevel++,
                "*" === O && ")" === n && t.commentLevel--,
                O = n;
            return t.commentLevel <= 0 && (t.tokenize = l),
            "comment"
        }
        let p = {
            name: "mathematica",
            startState: function() {
                return {
                    tokenize: l,
                    commentLevel: 0
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : t.tokenize(e, t)
            },
            languageData: {
                commentTokens: {
                    block: {
                        open: "(*",
                        close: "*)"
                    }
                }
            }
        }
    },
    2232: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            mbox: function() {
                return f
            }
        });
        var n = ["From", "Sender", "Reply-To", "To", "Cc", "Bcc", "Message-ID", "In-Reply-To", "References", "Resent-From", "Resent-Sender", "Resent-To", "Resent-Cc", "Resent-Bcc", "Resent-Message-ID", "Return-Path", "Received"]
          , r = ["Date", "Subject", "Comments", "Keywords", "Resent-Date"]
          , i = /^[ \t]/
          , a = /^From /
          , o = RegExp("^(" + n.join("|") + "): ")
          , s = RegExp("^(" + r.join("|") + "): ")
          , l = /^[^:]+:/
          , c = /^[^ ]+@[^ ]+/
          , u = /^.*?(?=[^ ]+?@[^ ]+)/
          , p = /^<.*?>/
          , d = /^.*?(?=<.*>)/;
        let f = {
            name: "mbox",
            startState: function() {
                return {
                    inSeparator: !1,
                    inHeader: !1,
                    emailPermitted: !1,
                    header: null,
                    inHeaders: !1
                }
            },
            token: function(e, t) {
                if (e.sol()) {
                    if (t.inSeparator = !1,
                    t.inHeader && e.match(i))
                        return null;
                    if (t.inHeader = !1,
                    t.header = null,
                    e.match(a))
                        return t.inHeaders = !0,
                        t.inSeparator = !0,
                        "atom";
                    var O, n = !1;
                    return (O = e.match(s)) || (n = !0,
                    O = e.match(o)) ? (t.inHeaders = !0,
                    t.inHeader = !0,
                    t.emailPermitted = n,
                    t.header = O[1],
                    "atom") : t.inHeaders && (O = e.match(l)) ? (t.inHeader = !0,
                    t.emailPermitted = !0,
                    t.header = O[1],
                    "atom") : (t.inHeaders = !1,
                    e.skipToEnd(),
                    null)
                }
                if (t.inSeparator)
                    return e.match(c) ? "link" : (e.match(u) || e.skipToEnd(),
                    "atom");
                if (t.inHeader) {
                    var r = "Subject" === t.header ? "header" : "string";
                    if (t.emailPermitted) {
                        if (e.match(p))
                            return r + " link";
                        if (e.match(d))
                            return r
                    }
                    return e.skipToEnd(),
                    r
                }
                return e.skipToEnd(),
                null
            },
            blankLine: function(e) {
                e.inHeaders = e.inSeparator = e.inHeader = !1
            },
            languageData: {
                autocomplete: n.concat(r)
            }
        }
    },
    6277: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            mirc: function() {
                return p
            }
        });
        var r = n("$! $$ $& $? $+ $abook $abs $active $activecid $activewid $address $addtok $agent $agentname $agentstat $agentver $alias $and $anick $ansi2mirc $aop $appactive $appstate $asc $asctime $asin $atan $avoice $away $awaymsg $awaytime $banmask $base $bfind $binoff $biton $bnick $bvar $bytes $calc $cb $cd $ceil $chan $chanmodes $chantypes $chat $chr $cid $clevel $click $cmdbox $cmdline $cnick $color $com $comcall $comchan $comerr $compact $compress $comval $cos $count $cr $crc $creq $crlf $ctime $ctimer $ctrlenter $date $day $daylight $dbuh $dbuw $dccignore $dccport $dde $ddename $debug $decode $decompress $deltok $devent $dialog $did $didreg $didtok $didwm $disk $dlevel $dll $dllcall $dname $dns $duration $ebeeps $editbox $emailaddr $encode $error $eval $event $exist $feof $ferr $fgetc $file $filename $filtered $finddir $finddirn $findfile $findfilen $findtok $fline $floor $fopen $fread $fserve $fulladdress $fulldate $fullname $fullscreen $get $getdir $getdot $gettok $gmt $group $halted $hash $height $hfind $hget $highlight $hnick $hotline $hotlinepos $ial $ialchan $ibl $idle $iel $ifmatch $ignore $iif $iil $inelipse $ini $inmidi $inpaste $inpoly $input $inrect $inroundrect $insong $instok $int $inwave $ip $isalias $isbit $isdde $isdir $isfile $isid $islower $istok $isupper $keychar $keyrpt $keyval $knick $lactive $lactivecid $lactivewid $left $len $level $lf $line $lines $link $lock $lock $locked $log $logstamp $logstampfmt $longfn $longip $lower $ltimer $maddress $mask $matchkey $matchtok $md5 $me $menu $menubar $menucontext $menutype $mid $middir $mircdir $mircexe $mircini $mklogfn $mnick $mode $modefirst $modelast $modespl $mouse $msfile $network $newnick $nick $nofile $nopath $noqt $not $notags $notify $null $numeric $numok $oline $onpoly $opnick $or $ord $os $passivedcc $pic $play $pnick $port $portable $portfree $pos $prefix $prop $protect $puttok $qt $query $rand $r $rawmsg $read $readomo $readn $regex $regml $regsub $regsubex $remove $remtok $replace $replacex $reptok $result $rgb $right $round $scid $scon $script $scriptdir $scriptline $sdir $send $server $serverip $sfile $sha1 $shortfn $show $signal $sin $site $sline $snick $snicks $snotify $sock $sockbr $sockerr $sockname $sorttok $sound $sqrt $ssl $sreq $sslready $status $strip $str $stripped $syle $submenu $switchbar $tan $target $ticks $time $timer $timestamp $timestampfmt $timezone $tip $titlebar $toolbar $treebar $trust $ulevel $ulist $upper $uptime $url $usermode $v1 $v2 $var $vcmd $vcmdstat $vcmdver $version $vnick $vol $wid $width $wildsite $wildtok $window $wrap $xor")
          , i = n("abook ajinvite alias aline ame amsg anick aop auser autojoin avoice away background ban bcopy beep bread break breplace bset btrunc bunset bwrite channel clear clearall cline clipboard close cnick color comclose comopen comreg continue copy creq ctcpreply ctcps dcc dccserver dde ddeserver debug dec describe dialog did didtok disable disconnect dlevel dline dll dns dqwindow drawcopy drawdot drawfill drawline drawpic drawrect drawreplace drawrot drawsave drawscroll drawtext ebeeps echo editbox emailaddr enable events exit fclose filter findtext finger firewall flash flist flood flush flushini font fopen fseek fsend fserve fullname fwrite ghide gload gmove gopts goto gplay gpoint gqreq groups gshow gsize gstop gtalk gunload hadd halt haltdef hdec hdel help hfree hinc hload hmake hop hsave ial ialclear ialmark identd if ignore iline inc invite iuser join kick linesep links list load loadbuf localinfo log mdi me menubar mkdir mnick mode msg nick noop notice notify omsg onotice part partall pdcc perform play playctrl pop protect pvoice qme qmsg query queryn quit raw reload remini remote remove rename renwin reseterror resetidle return rlevel rline rmdir run ruser save savebuf saveini say scid scon server set showmirc signam sline sockaccept sockclose socklist socklisten sockmark sockopen sockpause sockread sockrename sockudp sockwrite sound speak splay sreq strip switchbar timer timestamp titlebar tnick tokenize toolbar topic tray treebar ulist unload unset unsetall updatenl url uwho var vcadd vcmd vcrem vol while whois window winhelp write writeint if isalnum isalpha isaop isavoice isban ischan ishop isignore isin isincs isletter islower isnotify isnum ison isop isprotect isreg isupper isvoice iswm iswmcs elseif else goto menu nicklist status title icon size option text edit button check radio box scroll list combo link tab item")
          , a = n("if elseif else and not or eq ne in ni for foreach while switch")
          , o = /[+\-*&%=<>!?^\/\|]/;
        function s(e, t, O) {
            return t.tokenize = O,
            O(e, t)
        }
        function l(e, t) {
            var O = t.beforeParams;
            t.beforeParams = !1;
            var n = e.next();
            if (/[\[\]{}\(\),\.]/.test(n))
                return "(" == n && O ? t.inParams = !0 : ")" == n && (t.inParams = !1),
                null;
            if (/\d/.test(n))
                return e.eatWhile(/[\w\.]/),
                "number";
            if ("\\" == n)
                return e.eat("\\"),
                e.eat(/./),
                "number";
            if ("/" == n && e.eat("*"))
                return s(e, t, c);
            if (";" == n && e.match(/ *\( *\(/))
                return s(e, t, u);
            if (";" == n && !t.inParams)
                return e.skipToEnd(),
                "comment";
            if ('"' == n)
                return e.eat(/"/),
                "keyword";
            if ("$" == n)
                return (e.eatWhile(/[$_a-z0-9A-Z\.:]/),
                r && r.propertyIsEnumerable(e.current().toLowerCase())) ? "keyword" : (t.beforeParams = !0,
                "builtin");
            if ("%" == n)
                return e.eatWhile(/[^,\s()]/),
                t.beforeParams = !0,
                "string";
            if (o.test(n))
                return e.eatWhile(o),
                "operator";
            e.eatWhile(/[\w\$_{}]/);
            var l = e.current().toLowerCase();
            return i && i.propertyIsEnumerable(l) ? "keyword" : a && a.propertyIsEnumerable(l) ? (t.beforeParams = !0,
            "keyword") : null
        }
        function c(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("/" == O && n) {
                    t.tokenize = l;
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        function u(e, t) {
            for (var O, n = 0; O = e.next(); ) {
                if (";" == O && 2 == n) {
                    t.tokenize = l;
                    break
                }
                ")" == O ? n++ : " " != O && (n = 0)
            }
            return "meta"
        }
        let p = {
            name: "mirc",
            startState: function() {
                return {
                    tokenize: l,
                    beforeParams: !1,
                    inParams: !1
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : t.tokenize(e, t)
            }
        }
    },
    3113: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            modelica: function() {
                return $
            }
        });
        var r = n("algorithm and annotation assert block break class connect connector constant constrainedby der discrete each else elseif elsewhen encapsulated end enumeration equation expandable extends external false final flow for function if import impure in initial inner input loop model not operator or outer output package parameter partial protected public pure record redeclare replaceable return stream then true type when while within")
          , i = n("abs acos actualStream asin atan atan2 cardinality ceil cos cosh delay div edge exp floor getInstanceName homotopy inStream integer log log10 mod pre reinit rem semiLinear sign sin sinh spatialDistribution sqrt tan tanh")
          , a = n("Real Boolean Integer String")
          , o = [].concat(Object.keys(r), Object.keys(i), Object.keys(a))
          , s = /[;=\(:\),{}.*<>+\-\/^\[\]]/
          , l = /(:=|<=|>=|==|<>|\.\+|\.\-|\.\*|\.\/|\.\^)/
          , c = /[0-9]/
          , u = /[_a-zA-Z]/;
        function p(e, t) {
            return e.skipToEnd(),
            t.tokenize = null,
            "comment"
        }
        function d(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if (n && "/" == O) {
                    t.tokenize = null;
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        function f(e, t) {
            for (var O, n = !1; null != (O = e.next()); ) {
                if ('"' == O && !n) {
                    t.tokenize = null,
                    t.sol = !1;
                    break
                }
                n = !n && "\\" == O
            }
            return "string"
        }
        function h(e, t) {
            for (e.eatWhile(c); e.eat(c) || e.eat(u); )
                ;
            var O = e.current();
            return (t.sol && ("package" == O || "model" == O || "when" == O || "connector" == O) ? t.level++ : t.sol && "end" == O && t.level > 0 && t.level--,
            t.tokenize = null,
            t.sol = !1,
            r.propertyIsEnumerable(O)) ? "keyword" : i.propertyIsEnumerable(O) ? "builtin" : a.propertyIsEnumerable(O) ? "atom" : "variable"
        }
        function m(e, t) {
            for (; e.eat(/[^']/); )
                ;
            return (t.tokenize = null,
            t.sol = !1,
            e.eat("'")) ? "variable" : "error"
        }
        function Q(e, t) {
            return e.eatWhile(c),
            e.eat(".") && e.eatWhile(c),
            (e.eat("e") || e.eat("E")) && (e.eat("-") || e.eat("+"),
            e.eatWhile(c)),
            t.tokenize = null,
            t.sol = !1,
            "number"
        }
        let $ = {
            name: "modelica",
            startState: function() {
                return {
                    tokenize: null,
                    level: 0,
                    sol: !0
                }
            },
            token: function(e, t) {
                if (null != t.tokenize)
                    return t.tokenize(e, t);
                if (e.sol() && (t.sol = !0),
                e.eatSpace())
                    return t.tokenize = null,
                    null;
                var O = e.next();
                if ("/" == O && e.eat("/"))
                    t.tokenize = p;
                else if ("/" == O && e.eat("*"))
                    t.tokenize = d;
                else if (l.test(O + e.peek()))
                    return e.next(),
                    t.tokenize = null,
                    "operator";
                else if (s.test(O))
                    return t.tokenize = null,
                    "operator";
                else if (u.test(O))
                    t.tokenize = h;
                else if ("'" == O && e.peek() && "'" != e.peek())
                    t.tokenize = m;
                else if ('"' == O)
                    t.tokenize = f;
                else {
                    if (!c.test(O))
                        return t.tokenize = null,
                        "error";
                    t.tokenize = Q
                }
                return t.tokenize(e, t)
            },
            indent: function(e, t, O) {
                if (null != e.tokenize)
                    return null;
                var n = e.level;
                return (/(algorithm)/.test(t) && n--,
                /(equation)/.test(t) && n--,
                /(initial algorithm)/.test(t) && n--,
                /(initial equation)/.test(t) && n--,
                /(end)/.test(t) && n--,
                n > 0) ? O.unit * n : 0
            },
            languageData: {
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                },
                autocomplete: o
            }
        }
    },
    1291: function(e, t, O) {
        "use strict";
        function n(e) {
            var t;
            return {
                name: "mscgen",
                startState: l,
                copyState: c,
                token: (t = e,
                function(e, O) {
                    if (e.match(s(t.brackets), !0, !0))
                        return "bracket";
                    if (!O.inComment) {
                        if (e.match(/\/\*[^\*\/]*/, !0, !0))
                            return O.inComment = !0,
                            "comment";
                        if (e.match(s(t.singlecomment), !0, !0))
                            return e.skipToEnd(),
                            "comment"
                    }
                    if (O.inComment)
                        return e.match(/[^\*\/]*\*\//, !0, !0) ? O.inComment = !1 : e.skipToEnd(),
                        "comment";
                    if (!O.inString && e.match(/\"(\\\"|[^\"])*/, !0, !0))
                        return O.inString = !0,
                        "string";
                    if (O.inString)
                        return e.match(/[^\"]*\"/, !0, !0) ? O.inString = !1 : e.skipToEnd(),
                        "string";
                    if (t.keywords && e.match(o(t.keywords), !0, !0) || e.match(o(t.options), !0, !0) || e.match(o(t.arcsWords), !0, !0) || e.match(s(t.arcsOthers), !0, !0))
                        return "keyword";
                    if (t.operators && e.match(s(t.operators), !0, !0))
                        return "operator";
                    if (t.constants && e.match(s(t.constants), !0, !0))
                        return "variable";
                    if (!t.inAttributeList && t.attributes && e.match("[", !0, !0))
                        return t.inAttributeList = !0,
                        "bracket";
                    if (t.inAttributeList) {
                        if (null !== t.attributes && e.match(o(t.attributes), !0, !0))
                            return "attribute";
                        if (e.match("]", !0, !0))
                            return t.inAttributeList = !1,
                            "bracket"
                    }
                    return e.next(),
                    null
                }
                ),
                languageData: {
                    commentTokens: {
                        line: "#",
                        block: {
                            open: "/*",
                            close: "*/"
                        }
                    }
                }
            }
        }
        O.r(t),
        O.d(t, {
            mscgen: function() {
                return r
            },
            msgenny: function() {
                return i
            },
            xu: function() {
                return a
            }
        });
        let r = n({
            keywords: ["msc"],
            options: ["hscale", "width", "arcgradient", "wordwraparcs"],
            constants: ["true", "false", "on", "off"],
            attributes: ["label", "idurl", "id", "url", "linecolor", "linecolour", "textcolor", "textcolour", "textbgcolor", "textbgcolour", "arclinecolor", "arclinecolour", "arctextcolor", "arctextcolour", "arctextbgcolor", "arctextbgcolour", "arcskip"],
            brackets: ["\\{", "\\}"],
            arcsWords: ["note", "abox", "rbox", "box"],
            arcsOthers: ["\\|\\|\\|", "\\.\\.\\.", "---", "--", "<->", "==", "<<=>>", "<=>", "\\.\\.", "<<>>", "::", "<:>", "->", "=>>", "=>", ">>", ":>", "<-", "<<=", "<=", "<<", "<:", "x-", "-x"],
            singlecomment: ["//", "#"],
            operators: ["="]
        })
          , i = n({
            keywords: null,
            options: ["hscale", "width", "arcgradient", "wordwraparcs", "wordwrapentities", "watermark"],
            constants: ["true", "false", "on", "off", "auto"],
            attributes: null,
            brackets: ["\\{", "\\}"],
            arcsWords: ["note", "abox", "rbox", "box", "alt", "else", "opt", "break", "par", "seq", "strict", "neg", "critical", "ignore", "consider", "assert", "loop", "ref", "exc"],
            arcsOthers: ["\\|\\|\\|", "\\.\\.\\.", "---", "--", "<->", "==", "<<=>>", "<=>", "\\.\\.", "<<>>", "::", "<:>", "->", "=>>", "=>", ">>", ":>", "<-", "<<=", "<=", "<<", "<:", "x-", "-x"],
            singlecomment: ["//", "#"],
            operators: ["="]
        })
          , a = n({
            keywords: ["msc", "xu"],
            options: ["hscale", "width", "arcgradient", "wordwraparcs", "wordwrapentities", "watermark"],
            constants: ["true", "false", "on", "off", "auto"],
            attributes: ["label", "idurl", "id", "url", "linecolor", "linecolour", "textcolor", "textcolour", "textbgcolor", "textbgcolour", "arclinecolor", "arclinecolour", "arctextcolor", "arctextcolour", "arctextbgcolor", "arctextbgcolour", "arcskip", "title", "deactivate", "activate", "activation"],
            brackets: ["\\{", "\\}"],
            arcsWords: ["note", "abox", "rbox", "box", "alt", "else", "opt", "break", "par", "seq", "strict", "neg", "critical", "ignore", "consider", "assert", "loop", "ref", "exc"],
            arcsOthers: ["\\|\\|\\|", "\\.\\.\\.", "---", "--", "<->", "==", "<<=>>", "<=>", "\\.\\.", "<<>>", "::", "<:>", "->", "=>>", "=>", ">>", ":>", "<-", "<<=", "<=", "<<", "<:", "x-", "-x"],
            singlecomment: ["//", "#"],
            operators: ["="]
        });
        function o(e) {
            return RegExp("^\\b(" + e.join("|") + ")\\b", "i")
        }
        function s(e) {
            return RegExp("^(?:" + e.join("|") + ")", "i")
        }
        function l() {
            return {
                inComment: !1,
                inString: !1,
                inAttributeList: !1,
                inScript: !1
            }
        }
        function c(e) {
            return {
                inComment: e.inComment,
                inString: e.inString,
                inAttributeList: e.inAttributeList,
                inScript: e.inScript
            }
        }
    },
    8937: function(e, t, O) {
        "use strict";
        function n(e) {
            return RegExp("^((" + e.join(")|(") + "))\\b", "i")
        }
        O.r(t),
        O.d(t, {
            mumps: function() {
                return u
            }
        });
        var r = RegExp("^[\\+\\-\\*/&#!_?\\\\<>=\\'\\[\\]]")
          , i = RegExp("^(('=)|(<=)|(>=)|('>)|('<)|([[)|(]])|(^$))")
          , a = RegExp("^[\\.,:]")
          , o = /[()]/
          , s = RegExp("^[%A-Za-z][A-Za-z0-9]*")
          , l = n(["\\$ascii", "\\$char", "\\$data", "\\$ecode", "\\$estack", "\\$etrap", "\\$extract", "\\$find", "\\$fnumber", "\\$get", "\\$horolog", "\\$io", "\\$increment", "\\$job", "\\$justify", "\\$length", "\\$name", "\\$next", "\\$order", "\\$piece", "\\$qlength", "\\$qsubscript", "\\$query", "\\$quit", "\\$random", "\\$reverse", "\\$select", "\\$stack", "\\$test", "\\$text", "\\$translate", "\\$view", "\\$x", "\\$y", "\\$a", "\\$c", "\\$d", "\\$e", "\\$ec", "\\$es", "\\$et", "\\$f", "\\$fn", "\\$g", "\\$h", "\\$i", "\\$j", "\\$l", "\\$n", "\\$na", "\\$o", "\\$p", "\\$q", "\\$ql", "\\$qs", "\\$r", "\\$re", "\\$s", "\\$st", "\\$t", "\\$tr", "\\$v", "\\$z"])
          , c = n(["break", "close", "do", "else", "for", "goto", "halt", "hang", "if", "job", "kill", "lock", "merge", "new", "open", "quit", "read", "set", "tcommit", "trollback", "tstart", "use", "view", "write", "xecute", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "q", "r", "s", "tc", "tro", "ts", "u", "v", "w", "x"]);
        let u = {
            name: "mumps",
            startState: function() {
                return {
                    label: !1,
                    commandMode: 0
                }
            },
            token: function(e, t) {
                var O, n, u = (O = t,
                e.sol() && (O.label = !0,
                O.commandMode = 0),
                (" " == (n = e.peek()) || "	" == n ? (O.label = !1,
                0 == O.commandMode ? O.commandMode = 1 : (O.commandMode < 0 || 2 == O.commandMode) && (O.commandMode = 0)) : "." != n && O.commandMode > 0 && (":" == n ? O.commandMode = -1 : O.commandMode = 2),
                ("(" === n || "	" === n) && (O.label = !1),
                ";" === n) ? (e.skipToEnd(),
                "comment") : e.match(/^[-+]?\d+(\.\d+)?([eE][-+]?\d+)?/) ? "number" : '"' == n ? e.skipTo('"') ? (e.next(),
                "string") : (e.skipToEnd(),
                "error") : e.match(i) || e.match(r) ? "operator" : e.match(a) ? null : o.test(n) ? (e.next(),
                "bracket") : O.commandMode > 0 && e.match(c) ? "controlKeyword" : e.match(l) ? "builtin" : e.match(s) ? "variable" : "$" === n || "^" === n ? (e.next(),
                "builtin") : "@" === n ? (e.next(),
                "string.special") : /[\w%]/.test(n) ? (e.eatWhile(/[\w%]/),
                "variable") : (e.next(),
                "error"));
                return t.label ? "tag" : u
            }
        }
    },
    874: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            nginx: function() {
                return u
            }
        });
        var r, i = n("break return rewrite set accept_mutex accept_mutex_delay access_log add_after_body add_before_body add_header addition_types aio alias allow ancient_browser ancient_browser_value auth_basic auth_basic_user_file auth_http auth_http_header auth_http_timeout autoindex autoindex_exact_size autoindex_localtime charset charset_types client_body_buffer_size client_body_in_file_only client_body_in_single_buffer client_body_temp_path client_body_timeout client_header_buffer_size client_header_timeout client_max_body_size connection_pool_size create_full_put_path daemon dav_access dav_methods debug_connection debug_points default_type degradation degrade deny devpoll_changes devpoll_events directio directio_alignment empty_gif env epoll_events error_log eventport_events expires fastcgi_bind fastcgi_buffer_size fastcgi_buffers fastcgi_busy_buffers_size fastcgi_cache fastcgi_cache_key fastcgi_cache_methods fastcgi_cache_min_uses fastcgi_cache_path fastcgi_cache_use_stale fastcgi_cache_valid fastcgi_catch_stderr fastcgi_connect_timeout fastcgi_hide_header fastcgi_ignore_client_abort fastcgi_ignore_headers fastcgi_index fastcgi_intercept_errors fastcgi_max_temp_file_size fastcgi_next_upstream fastcgi_param fastcgi_pass_header fastcgi_pass_request_body fastcgi_pass_request_headers fastcgi_read_timeout fastcgi_send_lowat fastcgi_send_timeout fastcgi_split_path_info fastcgi_store fastcgi_store_access fastcgi_temp_file_write_size fastcgi_temp_path fastcgi_upstream_fail_timeout fastcgi_upstream_max_fails flv geoip_city geoip_country google_perftools_profiles gzip gzip_buffers gzip_comp_level gzip_disable gzip_hash gzip_http_version gzip_min_length gzip_no_buffer gzip_proxied gzip_static gzip_types gzip_vary gzip_window if_modified_since ignore_invalid_headers image_filter image_filter_buffer image_filter_jpeg_quality image_filter_transparency imap_auth imap_capabilities imap_client_buffer index ip_hash keepalive_requests keepalive_timeout kqueue_changes kqueue_events large_client_header_buffers limit_conn limit_conn_log_level limit_rate limit_rate_after limit_req limit_req_log_level limit_req_zone limit_zone lingering_time lingering_timeout lock_file log_format log_not_found log_subrequest map_hash_bucket_size map_hash_max_size master_process memcached_bind memcached_buffer_size memcached_connect_timeout memcached_next_upstream memcached_read_timeout memcached_send_timeout memcached_upstream_fail_timeout memcached_upstream_max_fails merge_slashes min_delete_depth modern_browser modern_browser_value msie_padding msie_refresh multi_accept open_file_cache open_file_cache_errors open_file_cache_events open_file_cache_min_uses open_file_cache_valid open_log_file_cache output_buffers override_charset perl perl_modules perl_require perl_set pid pop3_auth pop3_capabilities port_in_redirect postpone_gzipping postpone_output protocol proxy proxy_bind proxy_buffer proxy_buffer_size proxy_buffering proxy_buffers proxy_busy_buffers_size proxy_cache proxy_cache_key proxy_cache_methods proxy_cache_min_uses proxy_cache_path proxy_cache_use_stale proxy_cache_valid proxy_connect_timeout proxy_headers_hash_bucket_size proxy_headers_hash_max_size proxy_hide_header proxy_ignore_client_abort proxy_ignore_headers proxy_intercept_errors proxy_max_temp_file_size proxy_method proxy_next_upstream proxy_pass_error_message proxy_pass_header proxy_pass_request_body proxy_pass_request_headers proxy_read_timeout proxy_redirect proxy_send_lowat proxy_send_timeout proxy_set_body proxy_set_header proxy_ssl_session_reuse proxy_store proxy_store_access proxy_temp_file_write_size proxy_temp_path proxy_timeout proxy_upstream_fail_timeout proxy_upstream_max_fails random_index read_ahead real_ip_header recursive_error_pages request_pool_size reset_timedout_connection resolver resolver_timeout rewrite_log rtsig_overflow_events rtsig_overflow_test rtsig_overflow_threshold rtsig_signo satisfy secure_link_secret send_lowat send_timeout sendfile sendfile_max_chunk server_name_in_redirect server_names_hash_bucket_size server_names_hash_max_size server_tokens set_real_ip_from smtp_auth smtp_capabilities smtp_client_buffer smtp_greeting_delay so_keepalive source_charset ssi ssi_ignore_recycled_buffers ssi_min_file_chunk ssi_silent_errors ssi_types ssi_value_length ssl ssl_certificate ssl_certificate_key ssl_ciphers ssl_client_certificate ssl_crl ssl_dhparam ssl_engine ssl_prefer_server_ciphers ssl_protocols ssl_session_cache ssl_session_timeout ssl_verify_client ssl_verify_depth starttls stub_status sub_filter sub_filter_once sub_filter_types tcp_nodelay tcp_nopush thread_stack_size timeout timer_resolution types_hash_bucket_size types_hash_max_size underscores_in_headers uninitialized_variable_warn use user userid userid_domain userid_expires userid_mark userid_name userid_p3p userid_path userid_service valid_referers variables_hash_bucket_size variables_hash_max_size worker_connections worker_cpu_affinity worker_priority worker_processes worker_rlimit_core worker_rlimit_nofile worker_rlimit_sigpending worker_threads working_directory xclient xml_entities xslt_stylesheet xslt_typesdrew@li229-23"), a = n("http mail events server types location upstream charset_map limit_except if geo map"), o = n("include root server server_name listen internal proxy_pass memcached_pass fastcgi_pass try_files");
        function s(e, t) {
            e.eatWhile(/[\w\$_]/);
            var O = e.current();
            if (i.propertyIsEnumerable(O))
                return "keyword";
            if (a.propertyIsEnumerable(O) || o.propertyIsEnumerable(O))
                return "controlKeyword";
            var n = e.next();
            if ("@" == n)
                return e.eatWhile(/[\w\\\-]/),
                r = e.current(),
                "meta";
            if ("/" == n && e.eat("*"))
                return t.tokenize = l,
                l(e, t);
            if ("<" == n && e.eat("!"))
                return t.tokenize = c,
                c(e, t);
            if ("=" == n)
                r = "compare";
            else if (("~" == n || "|" == n) && e.eat("="))
                return r = "compare",
                null;
            else if ('"' == n || "'" == n)
                return t.tokenize = function(e, t) {
                    for (var O, i = !1; null != (O = e.next()) && (O != n || i); )
                        i = !i && "\\" == O;
                    return i || (t.tokenize = s),
                    r = "string",
                    "string"
                }
                ,
                t.tokenize(e, t);
            else if ("#" == n)
                return e.skipToEnd(),
                r = "comment",
                "comment";
            else if ("!" == n)
                return e.match(/^\s*\w*/),
                r = "important",
                "keyword";
            else if (/\d/.test(n))
                return e.eatWhile(/[\w.%]/),
                r = "unit",
                "number";
            else if (/[,.+>*\/]/.test(n))
                return r = "select-op",
                null;
            else
                return /[;{}:\[\]]/.test(n) ? (r = n,
                null) : (e.eatWhile(/[\w\\\-]/),
                r = "variable",
                "variable")
        }
        function l(e, t) {
            for (var O, n = !1; null != (O = e.next()); ) {
                if (n && "/" == O) {
                    t.tokenize = s;
                    break
                }
                n = "*" == O
            }
            return r = "comment",
            "comment"
        }
        function c(e, t) {
            for (var O, n = 0; null != (O = e.next()); ) {
                if (n >= 2 && ">" == O) {
                    t.tokenize = s;
                    break
                }
                n = "-" == O ? n + 1 : 0
            }
            return r = "comment",
            "comment"
        }
        let u = {
            name: "nginx",
            startState: function() {
                return {
                    tokenize: s,
                    baseIndent: 0,
                    stack: []
                }
            },
            token: function(e, t) {
                if (e.eatSpace())
                    return null;
                r = null;
                var O = t.tokenize(e, t)
                  , n = t.stack[t.stack.length - 1];
                return "hash" == r && "rule" == n ? O = "atom" : "variable" != O || ("rule" == n ? O = "number" : n && "@media{" != n || (O = "tag")),
                "rule" == n && /^[\{\};]$/.test(r) && t.stack.pop(),
                "{" == r ? "@media" == n ? t.stack[t.stack.length - 1] = "@media{" : t.stack.push("{") : "}" == r ? t.stack.pop() : "@media" == r ? t.stack.push("@media") : "{" == n && "comment" != r && t.stack.push("rule"),
                O
            },
            indent: function(e, t, O) {
                var n = e.stack.length;
                return /^\}/.test(t) && (n -= "rule" == e.stack[e.stack.length - 1] ? 2 : 1),
                e.baseIndent + n * O.unit
            },
            languageData: {
                indentOnInput: /^\s*\}$/
            }
        }
    },
    1988: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            nsis: function() {
                return r
            }
        });
        var n = O(4564);
        let r = (0,
        n.Q)({
            start: [{
                regex: /(?:[+-]?)(?:0x[\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\d+.?\d*)/,
                token: "number"
            }, {
                regex: /"(?:[^\\"]|\\.)*"?/,
                token: "string"
            }, {
                regex: /'(?:[^\\']|\\.)*'?/,
                token: "string"
            }, {
                regex: /`(?:[^\\`]|\\.)*`?/,
                token: "string"
            }, {
                regex: /^\s*(?:\!(addincludedir|addplugindir|appendfile|cd|define|delfile|echo|error|execute|finalize|getdllversion|gettlbversion|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|uninstfinalize|verbose|warning))\b/i,
                token: "keyword"
            }, {
                regex: /^\s*(?:\!(if(?:n?def)?|ifmacron?def|macro))\b/i,
                token: "keyword",
                indent: !0
            }, {
                regex: /^\s*(?:\!(else|endif|macroend))\b/i,
                token: "keyword",
                dedent: !0
            }, {
                regex: /^\s*(?:Abort|AddBrandingImage|AddSize|AllowRootDirInstall|AllowSkipFiles|AutoCloseWindow|BGFont|BGGradient|BrandingText|BringToFront|Call|CallInstDLL|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|CreateDirectory|CreateFont|CreateShortCut|Delete|DeleteINISec|DeleteINIStr|DeleteRegKey|DeleteRegValue|DetailPrint|DetailsButtonText|DirText|DirVar|DirVerify|EnableWindow|EnumRegKey|EnumRegValue|Exch|Exec|ExecShell|ExecShellWait|ExecWait|ExpandEnvStrings|File|FileBufSize|FileClose|FileErrorText|FileOpen|FileRead|FileReadByte|FileReadUTF16LE|FileReadWord|FileWriteUTF16LE|FileSeek|FileWrite|FileWriteByte|FileWriteWord|FindClose|FindFirst|FindNext|FindWindow|FlushINI|GetCurInstType|GetCurrentAddress|GetDlgItem|GetDLLVersion|GetDLLVersionLocal|GetErrorLevel|GetFileTime|GetFileTimeLocal|GetFullPathName|GetFunctionAddress|GetInstDirError|GetKnownFolderPath|GetLabelAddress|GetTempFileName|GetWinVer|Goto|HideWindow|Icon|IfAbort|IfErrors|IfFileExists|IfRebootFlag|IfRtlLanguage|IfShellVarContextAll|IfSilent|InitPluginsDir|InstallButtonText|InstallColors|InstallDir|InstallDirRegKey|InstProgressFlags|InstType|InstTypeGetText|InstTypeSetText|Int64Cmp|Int64CmpU|Int64Fmt|IntCmp|IntCmpU|IntFmt|IntOp|IntPtrCmp|IntPtrCmpU|IntPtrOp|IsWindow|LangString|LicenseBkColor|LicenseData|LicenseForceSelection|LicenseLangString|LicenseText|LoadAndSetImage|LoadLanguageFile|LockWindow|LogSet|LogText|ManifestDPIAware|ManifestLongPathAware|ManifestMaxVersionTested|ManifestSupportedOS|MessageBox|MiscButtonText|Name|Nop|OutFile|Page|PageCallbacks|PEAddResource|PEDllCharacteristics|PERemoveResource|PESubsysVer|Pop|Push|Quit|ReadEnvStr|ReadINIStr|ReadRegDWORD|ReadRegStr|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|SectionGetFlags|SectionGetInstTypes|SectionGetSize|SectionGetText|SectionIn|SectionSetFlags|SectionSetInstTypes|SectionSetSize|SectionSetText|SendMessage|SetAutoClose|SetBrandingImage|SetCompress|SetCompressor|SetCompressorDictSize|SetCtlColors|SetCurInstType|SetDatablockOptimize|SetDateSave|SetDetailsPrint|SetDetailsView|SetErrorLevel|SetErrors|SetFileAttributes|SetFont|SetOutPath|SetOverwrite|SetRebootFlag|SetRegView|SetShellVarContext|SetSilent|ShowInstDetails|ShowUninstDetails|ShowWindow|SilentInstall|SilentUnInstall|Sleep|SpaceTexts|StrCmp|StrCmpS|StrCpy|StrLen|SubCaption|Target|Unicode|UninstallButtonText|UninstallCaption|UninstallIcon|UninstallSubCaption|UninstallText|UninstPage|UnRegDLL|Var|VIAddVersionKey|VIFileVersion|VIProductVersion|WindowIcon|WriteINIStr|WriteRegBin|WriteRegDWORD|WriteRegExpandStr|WriteRegMultiStr|WriteRegNone|WriteRegStr|WriteUninstaller|XPStyle)\b/i,
                token: "keyword"
            }, {
                regex: /^\s*(?:Function|PageEx|Section(?:Group)?)\b/i,
                token: "keyword",
                indent: !0
            }, {
                regex: /^\s*(?:(Function|PageEx|Section(?:Group)?)End)\b/i,
                token: "keyword",
                dedent: !0
            }, {
                regex: /\b(?:ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_HIDDEN|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HIDDEN|HKCC|HKCR(32|64)?|HKCU(32|64)?|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM(32|64)?|HKPD|HKU|IDABORT|IDCANCEL|IDD_DIR|IDD_INST|IDD_INSTFILES|IDD_LICENSE|IDD_SELCOM|IDD_UNINST|IDD_VERIFY|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|MB_YESNOCANCEL|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SW_HIDE|SW_SHOWDEFAULT|SW_SHOWMAXIMIZED|SW_SHOWMINIMIZED|SW_SHOWNORMAL|SYSTEM|TEMPORARY)\b/i,
                token: "atom"
            }, {
                regex: /\b(?:admin|all|amd64-unicode|auto|both|bottom|bzip2|components|current|custom|directory|false|force|hide|highest|ifdiff|ifnewer|instfiles|lastused|leave|left|license|listonly|lzma|nevershow|none|normal|notset|off|on|right|show|silent|silentlog|textonly|top|true|try|un\.components|un\.custom|un\.directory|un\.instfiles|un\.license|uninstConfirm|user|Win10|Win7|Win8|WinVista|x-86-(ansi|unicode)|zlib)\b/i,
                token: "builtin"
            }, {
                regex: /\$\{(?:And(?:If(?:Not)?|Unless)|Break|Case(?:2|3|4|5|Else)?|Continue|Default|Do(?:Until|While)?|Else(?:If(?:Not)?|Unless)?|End(?:If|Select|Switch)|Exit(?:Do|For|While)|For(?:Each)?|If(?:Cmd|Not(?:Then)?|Then)?|Loop(?:Until|While)?|Or(?:If(?:Not)?|Unless)|Select|Switch|Unless|While)\}/i,
                token: "variable-2",
                indent: !0
            }, {
                regex: /\$\{(?:BannerTrimPath|DirState|DriveSpace|Get(BaseName|Drives|ExeName|ExePath|FileAttributes|FileExt|FileName|FileVersion|Options|OptionsS|Parameters|Parent|Root|Size|Time)|Locate|RefreshShellIcons)\}/i,
                token: "variable-2",
                dedent: !0
            }, {
                regex: /\$\{(?:Memento(?:Section(?:Done|End|Restore|Save)?|UnselectedSection))\}/i,
                token: "variable-2",
                dedent: !0
            }, {
                regex: /\$\{(?:Config(?:Read|ReadS|Write|WriteS)|File(?:Join|ReadFromEnd|Recode)|Line(?:Find|Read|Sum)|Text(?:Compare|CompareS)|TrimNewLines)\}/i,
                token: "variable-2",
                dedent: !0
            }, {
                regex: /\$\{(?:(?:At(?:Least|Most)|Is)(?:ServicePack|Win(?:7|8|10|95|98|200(?:0|3|8(?:R2)?)|ME|NT4|Vista|XP))|Is(?:NT|Server))\}/i,
                token: "variable",
                dedent: !0
            }, {
                regex: /\$\{(?:StrFilterS?|Version(?:Compare|Convert)|Word(?:AddS?|Find(?:(?:2|3)X)?S?|InsertS?|ReplaceS?))\}/i,
                token: "keyword",
                dedent: !0
            }, {
                regex: /\$\{(?:RunningX64)\}/i,
                token: "variable",
                dedent: !0
            }, {
                regex: /\$\{(?:Disable|Enable)X64FSRedirection\}/i,
                token: "keyword",
                dedent: !0
            }, {
                regex: /(#|;).*/,
                token: "comment"
            }, {
                regex: /\/\*/,
                token: "comment",
                next: "comment"
            }, {
                regex: /[-+\/*=<>!]+/,
                token: "operator"
            }, {
                regex: /\$\w[\w\.]*/,
                token: "variable"
            }, {
                regex: /\${[\!\w\.:-]+}/,
                token: "variableName.constant"
            }, {
                regex: /\$\([\!\w\.:-]+\)/,
                token: "atom"
            }],
            comment: [{
                regex: /.*?\*\//,
                token: "comment",
                next: "start"
            }, {
                regex: /.*/,
                token: "comment"
            }],
            languageData: {
                name: "nsis",
                indentOnInput: /^\s*((Function|PageEx|Section|Section(Group)?)End|(\!(endif|macroend))|\$\{(End(If|Unless|While)|Loop(Until)|Next)\})$/i,
                commentTokens: {
                    line: "#",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                }
            }
        })
    },
    6342: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            ntriples: function() {
                return i
            }
        });
        var n = {
            PRE_SUBJECT: 0,
            WRITING_SUB_URI: 1,
            WRITING_BNODE_URI: 2,
            PRE_PRED: 3,
            WRITING_PRED_URI: 4,
            PRE_OBJ: 5,
            WRITING_OBJ_URI: 6,
            WRITING_OBJ_BNODE: 7,
            WRITING_OBJ_LITERAL: 8,
            WRITING_LIT_LANG: 9,
            WRITING_LIT_TYPE: 10,
            POST_OBJ: 11,
            ERROR: 12
        };
        function r(e, t) {
            var O, r = e.location;
            O = r == n.PRE_SUBJECT && "<" == t ? n.WRITING_SUB_URI : r == n.PRE_SUBJECT && "_" == t ? n.WRITING_BNODE_URI : r == n.PRE_PRED && "<" == t ? n.WRITING_PRED_URI : r == n.PRE_OBJ && "<" == t ? n.WRITING_OBJ_URI : r == n.PRE_OBJ && "_" == t ? n.WRITING_OBJ_BNODE : r == n.PRE_OBJ && '"' == t ? n.WRITING_OBJ_LITERAL : r == n.WRITING_SUB_URI && ">" == t ? n.PRE_PRED : r == n.WRITING_BNODE_URI && " " == t ? n.PRE_PRED : r == n.WRITING_PRED_URI && ">" == t ? n.PRE_OBJ : r == n.WRITING_OBJ_URI && ">" == t ? n.POST_OBJ : r == n.WRITING_OBJ_BNODE && " " == t ? n.POST_OBJ : r == n.WRITING_OBJ_LITERAL && '"' == t ? n.POST_OBJ : r == n.WRITING_LIT_LANG && " " == t ? n.POST_OBJ : r == n.WRITING_LIT_TYPE && ">" == t ? n.POST_OBJ : r == n.WRITING_OBJ_LITERAL && "@" == t ? n.WRITING_LIT_LANG : r == n.WRITING_OBJ_LITERAL && "^" == t ? n.WRITING_LIT_TYPE : " " == t && (r == n.PRE_SUBJECT || r == n.PRE_PRED || r == n.PRE_OBJ || r == n.POST_OBJ) ? r : r == n.POST_OBJ && "." == t ? n.PRE_SUBJECT : n.ERROR,
            e.location = O
        }
        let i = {
            name: "ntriples",
            startState: function() {
                return {
                    location: n.PRE_SUBJECT,
                    uris: [],
                    anchors: [],
                    bnodes: [],
                    langs: [],
                    types: []
                }
            },
            token: function(e, t) {
                var O = e.next();
                if ("<" == O) {
                    r(t, O);
                    var n = "";
                    return e.eatWhile(function(e) {
                        return "#" != e && ">" != e && (n += e,
                        !0)
                    }),
                    t.uris.push(n),
                    e.match("#", !1) || (e.next(),
                    r(t, ">")),
                    "variable"
                }
                if ("#" == O) {
                    var i = "";
                    return e.eatWhile(function(e) {
                        return ">" != e && " " != e && (i += e,
                        !0)
                    }),
                    t.anchors.push(i),
                    "url"
                }
                if (">" == O)
                    return r(t, ">"),
                    "variable";
                if ("_" == O) {
                    r(t, O);
                    var a = "";
                    return e.eatWhile(function(e) {
                        return " " != e && (a += e,
                        !0)
                    }),
                    t.bnodes.push(a),
                    e.next(),
                    r(t, " "),
                    "builtin"
                }
                if ('"' == O)
                    return r(t, O),
                    e.eatWhile(function(e) {
                        return '"' != e
                    }),
                    e.next(),
                    "@" != e.peek() && "^" != e.peek() && r(t, '"'),
                    "string";
                if ("@" == O) {
                    r(t, "@");
                    var o = "";
                    return e.eatWhile(function(e) {
                        return " " != e && (o += e,
                        !0)
                    }),
                    t.langs.push(o),
                    e.next(),
                    r(t, " "),
                    "string.special"
                }
                if ("^" == O) {
                    e.next(),
                    r(t, "^");
                    var s = "";
                    return e.eatWhile(function(e) {
                        return ">" != e && (s += e,
                        !0)
                    }),
                    t.types.push(s),
                    e.next(),
                    r(t, ">"),
                    "variable"
                }
                " " == O && r(t, O),
                "." == O && r(t, O)
            }
        }
    },
    681: function(e, t, O) {
        "use strict";
        function n(e) {
            return RegExp("^((" + e.join(")|(") + "))\\b")
        }
        O.r(t),
        O.d(t, {
            octave: function() {
                return m
            }
        });
        var r = RegExp("^[\\+\\-\\*/&|\\^~<>!@'\\\\]")
          , i = RegExp("^[\\(\\[\\{\\},:=;\\.]")
          , a = RegExp("^((==)|(~=)|(<=)|(>=)|(<<)|(>>)|(\\.[\\+\\-\\*/\\^\\\\]))")
          , o = RegExp("^((!=)|(\\+=)|(\\-=)|(\\*=)|(/=)|(&=)|(\\|=)|(\\^=))")
          , s = RegExp("^((>>=)|(<<=))")
          , l = RegExp("^[\\]\\)]")
          , c = RegExp("^[_A-Za-z\xa1-￿][_A-Za-z0-9\xa1-￿]*")
          , u = n(["error", "eval", "function", "abs", "acos", "atan", "asin", "cos", "cosh", "exp", "log", "prod", "sum", "log10", "max", "min", "sign", "sin", "sinh", "sqrt", "tan", "reshape", "break", "zeros", "default", "margin", "round", "ones", "rand", "syn", "ceil", "floor", "size", "clear", "zeros", "eye", "mean", "std", "cov", "det", "eig", "inv", "norm", "rank", "trace", "expm", "logm", "sqrtm", "linspace", "plot", "title", "xlabel", "ylabel", "legend", "text", "grid", "meshgrid", "mesh", "num2str", "fft", "ifft", "arrayfun", "cellfun", "input", "fliplr", "flipud", "ismember"])
          , p = n(["return", "case", "switch", "else", "elseif", "end", "endif", "endfunction", "if", "otherwise", "do", "for", "while", "try", "catch", "classdef", "properties", "events", "methods", "global", "persistent", "endfor", "endwhile", "printf", "sprintf", "disp", "until", "continue", "pkg"]);
        function d(e, t) {
            return e.sol() || "'" !== e.peek() ? (t.tokenize = h,
            h(e, t)) : (e.next(),
            t.tokenize = h,
            "operator")
        }
        function f(e, t) {
            return e.match(/^.*%}/) ? (t.tokenize = h,
            "comment") : (e.skipToEnd(),
            "comment")
        }
        function h(e, t) {
            if (e.eatSpace())
                return null;
            if (e.match("%{"))
                return t.tokenize = f,
                e.skipToEnd(),
                "comment";
            if (e.match(/^[%#]/))
                return e.skipToEnd(),
                "comment";
            if (e.match(/^[0-9\.+-]/, !1)) {
                if (e.match(/^[+-]?0x[0-9a-fA-F]+[ij]?/))
                    return e.tokenize = h,
                    "number";
                if (e.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?[ij]?/) || e.match(/^[+-]?\d+([EeDd][+-]?\d+)?[ij]?/))
                    return "number"
            }
            if (e.match(n(["nan", "NaN", "inf", "Inf"])))
                return "number";
            var O = e.match(/^"(?:[^"]|"")*("|$)/) || e.match(/^'(?:[^']|'')*('|$)/);
            return O ? O[1] ? "string" : "error" : e.match(p) ? "keyword" : e.match(u) ? "builtin" : e.match(c) ? "variable" : e.match(r) || e.match(a) ? "operator" : e.match(i) || e.match(o) || e.match(s) ? null : e.match(l) ? (t.tokenize = d,
            null) : (e.next(),
            "error")
        }
        let m = {
            name: "octave",
            startState: function() {
                return {
                    tokenize: h
                }
            },
            token: function(e, t) {
                var O = t.tokenize(e, t);
                return ("number" === O || "variable" === O) && (t.tokenize = d),
                O
            },
            languageData: {
                commentTokens: {
                    line: "%"
                }
            }
        }
    },
    7337: function(e, t, O) {
        "use strict";
        function n(e) {
            return RegExp("^((" + e.join(")|(") + "))\\b")
        }
        O.r(t),
        O.d(t, {
            oz: function() {
                return g
            }
        });
        var r = /[\^@!\|<>#~\.\*\-\+\\/,=]/
          , i = /(<-)|(:=)|(=<)|(>=)|(<=)|(<:)|(>:)|(=:)|(\\=)|(\\=:)|(!!)|(==)|(::)/
          , a = /(:::)|(\.\.\.)|(=<:)|(>=:)/
          , o = ["in", "then", "else", "of", "elseof", "elsecase", "elseif", "catch", "finally", "with", "require", "prepare", "import", "export", "define", "do"]
          , s = ["end"]
          , l = n(["true", "false", "nil", "unit"])
          , c = n(["andthen", "at", "attr", "declare", "feat", "from", "lex", "mod", "div", "mode", "orelse", "parser", "prod", "prop", "scanner", "self", "syn", "token"])
          , u = n(["local", "proc", "fun", "case", "class", "if", "cond", "or", "dis", "choice", "not", "thread", "try", "raise", "lock", "for", "suchthat", "meth", "functor"])
          , p = n(o)
          , d = n(s);
        function f(e, t) {
            if (e.eatSpace())
                return null;
            if (e.match(/[{}]/))
                return "bracket";
            if (e.match("[]"))
                return "keyword";
            if (e.match(a) || e.match(i))
                return "operator";
            if (e.match(l))
                return "atom";
            var O = e.match(u);
            if (O)
                return t.doInCurrentLine ? t.doInCurrentLine = !1 : t.currentIndent++,
                "proc" == O[0] || "fun" == O[0] ? t.tokenize = Q : "class" == O[0] ? t.tokenize = h : "meth" == O[0] && (t.tokenize = m),
                "keyword";
            if (e.match(p) || e.match(c))
                return "keyword";
            if (e.match(d))
                return t.currentIndent--,
                "keyword";
            var n = e.next();
            if ('"' == n || "'" == n)
                return t.tokenize = function(e, t) {
                    for (var O, r = !1, i = !1; null != (O = e.next()); ) {
                        if (O == n && !r) {
                            i = !0;
                            break
                        }
                        r = !r && "\\" == O
                    }
                    return (i || !r) && (t.tokenize = f),
                    "string"
                }
                ,
                t.tokenize(e, t);
            if (/[~\d]/.test(n)) {
                if ("~" == n) {
                    if (!/^[0-9]/.test(e.peek()))
                        return null;
                    if ("0" == e.next() && e.match(/^[xX][0-9a-fA-F]+/) || e.match(/^[0-9]*(\.[0-9]+)?([eE][~+]?[0-9]+)?/))
                        return "number"
                }
                return "0" == n && e.match(/^[xX][0-9a-fA-F]+/) || e.match(/^[0-9]*(\.[0-9]+)?([eE][~+]?[0-9]+)?/) ? "number" : null
            }
            return "%" == n ? (e.skipToEnd(),
            "comment") : "/" == n && e.eat("*") ? (t.tokenize = $,
            $(e, t)) : r.test(n) ? "operator" : (e.eatWhile(/\w/),
            "variable")
        }
        function h(e, t) {
            return e.eatSpace() ? null : (e.match(/([A-Z][A-Za-z0-9_]*)|(`.+`)/),
            t.tokenize = f,
            "type")
        }
        function m(e, t) {
            return e.eatSpace() ? null : (e.match(/([a-zA-Z][A-Za-z0-9_]*)|(`.+`)/),
            t.tokenize = f,
            "def")
        }
        function Q(e, t) {
            return e.eatSpace() ? null : !t.hasPassedFirstStage && e.eat("{") ? (t.hasPassedFirstStage = !0,
            "bracket") : t.hasPassedFirstStage ? (e.match(/([A-Z][A-Za-z0-9_]*)|(`.+`)|\$/),
            t.hasPassedFirstStage = !1,
            t.tokenize = f,
            "def") : (t.tokenize = f,
            null)
        }
        function $(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("/" == O && n) {
                    t.tokenize = f;
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        let g = {
            name: "oz",
            startState: function() {
                return {
                    tokenize: f,
                    currentIndent: 0,
                    doInCurrentLine: !1,
                    hasPassedFirstStage: !1
                }
            },
            token: function(e, t) {
                return e.sol() && (t.doInCurrentLine = 0),
                t.tokenize(e, t)
            },
            indent: function(e, t, O) {
                var n = t.replace(/^\s+|\s+$/g, "");
                return n.match(d) || n.match(p) || n.match(/(\[])/) ? O.unit * (e.currentIndent - 1) : e.currentIndent < 0 ? 0 : e.currentIndent * O.unit
            },
            languageData: {
                indentOnInut: RegExp("[\\[\\]]|(" + o.concat(s).join("|") + ")$"),
                commentTokens: {
                    line: "%",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                }
            }
        }
    },
    1568: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            pascal: function() {
                return l
            }
        });
        var n = function(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }("absolute and array asm begin case const constructor destructor div do downto else end file for function goto if implementation in inherited inline interface label mod nil not object of operator or packed procedure program record reintroduce repeat self set shl shr string then to type unit until uses var while with xor as class dispinterface except exports finalization finally initialization inline is library on out packed property raise resourcestring threadvar try absolute abstract alias assembler bitpacked break cdecl continue cppdecl cvar default deprecated dynamic enumerator experimental export external far far16 forward generic helper implements index interrupt iocheck local message name near nodefault noreturn nostackframe oldfpccall otherwise overload override pascal platform private protected public published read register reintroduce result safecall saveregisters softfloat specialize static stdcall stored strict unaligned unimplemented varargs virtual write")
          , r = {
            null: !0
        }
          , i = /[+\-*&%=<>!?|\/]/;
        function a(e, t) {
            var O = e.next();
            if ("#" == O && t.startOfLine)
                return e.skipToEnd(),
                "meta";
            if ('"' == O || "'" == O)
                return t.tokenize = function(e, t) {
                    for (var n, r = !1, i = !1; null != (n = e.next()); ) {
                        if (n == O && !r) {
                            i = !0;
                            break
                        }
                        r = !r && "\\" == n
                    }
                    return (i || !r) && (t.tokenize = null),
                    "string"
                }
                ,
                t.tokenize(e, t);
            if ("(" == O && e.eat("*"))
                return t.tokenize = o,
                o(e, t);
            if ("{" == O)
                return t.tokenize = s,
                s(e, t);
            if (/[\[\]\(\),;\:\.]/.test(O))
                return null;
            if (/\d/.test(O))
                return e.eatWhile(/[\w\.]/),
                "number";
            if ("/" == O && e.eat("/"))
                return e.skipToEnd(),
                "comment";
            if (i.test(O))
                return e.eatWhile(i),
                "operator";
            e.eatWhile(/[\w\$_]/);
            var a = e.current();
            return n.propertyIsEnumerable(a) ? "keyword" : r.propertyIsEnumerable(a) ? "atom" : "variable"
        }
        function o(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if (")" == O && n) {
                    t.tokenize = null;
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        function s(e, t) {
            for (var O; O = e.next(); )
                if ("}" == O) {
                    t.tokenize = null;
                    break
                }
            return "comment"
        }
        let l = {
            name: "pascal",
            startState: function() {
                return {
                    tokenize: null
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : (t.tokenize || a)(e, t)
            },
            languageData: {
                indentOnInput: /^\s*[{}]$/,
                commentTokens: {
                    block: {
                        open: "(*",
                        close: "*)"
                    }
                }
            }
        }
    },
    5912: function(e, t, O) {
        "use strict";
        function n(e, t) {
            return e.string.charAt(e.pos + (t || 0))
        }
        function r(e, t) {
            if (!t)
                return e.string.substr(0, e.pos - 1);
            var O = e.pos - t;
            return e.string.substr(O >= 0 ? O : 0, t)
        }
        function i(e, t) {
            var O = e.string.length
              , n = O - e.pos + 1;
            return e.string.substr(e.pos, t && t < O ? t : n)
        }
        function a(e, t) {
            var O, n = e.pos + t;
            n <= 0 ? e.pos = 0 : n >= (O = e.string.length - 1) ? e.pos = O : e.pos = n
        }
        O.r(t),
        O.d(t, {
            perl: function() {
                return d
            }
        });
        var o = {
            "->": 4,
            "++": 4,
            "--": 4,
            "**": 4,
            "=~": 4,
            "!~": 4,
            "*": 4,
            "/": 4,
            "%": 4,
            x: 4,
            "+": 4,
            "-": 4,
            ".": 4,
            "<<": 4,
            ">>": 4,
            "<": 4,
            ">": 4,
            "<=": 4,
            ">=": 4,
            lt: 4,
            gt: 4,
            le: 4,
            ge: 4,
            "==": 4,
            "!=": 4,
            "<=>": 4,
            eq: 4,
            ne: 4,
            cmp: 4,
            "~~": 4,
            "&": 4,
            "|": 4,
            "^": 4,
            "&&": 4,
            "||": 4,
            "//": 4,
            "..": 4,
            "...": 4,
            "?": 4,
            ":": 4,
            "=": 4,
            "+=": 4,
            "-=": 4,
            "*=": 4,
            ",": 4,
            "=>": 4,
            "::": 4,
            not: 4,
            and: 4,
            or: 4,
            xor: 4,
            BEGIN: [5, 1],
            END: [5, 1],
            PRINT: [5, 1],
            PRINTF: [5, 1],
            GETC: [5, 1],
            READ: [5, 1],
            READLINE: [5, 1],
            DESTROY: [5, 1],
            TIE: [5, 1],
            TIEHANDLE: [5, 1],
            UNTIE: [5, 1],
            STDIN: 5,
            STDIN_TOP: 5,
            STDOUT: 5,
            STDOUT_TOP: 5,
            STDERR: 5,
            STDERR_TOP: 5,
            $ARG: 5,
            $_: 5,
            "@ARG": 5,
            "@_": 5,
            $LIST_SEPARATOR: 5,
            '$"': 5,
            $PROCESS_ID: 5,
            $PID: 5,
            $$: 5,
            $REAL_GROUP_ID: 5,
            $GID: 5,
            "$(": 5,
            $EFFECTIVE_GROUP_ID: 5,
            $EGID: 5,
            "$)": 5,
            $PROGRAM_NAME: 5,
            $0: 5,
            $SUBSCRIPT_SEPARATOR: 5,
            $SUBSEP: 5,
            "$;": 5,
            $REAL_USER_ID: 5,
            $UID: 5,
            "$<": 5,
            $EFFECTIVE_USER_ID: 5,
            $EUID: 5,
            "$>": 5,
            $a: 5,
            $b: 5,
            $COMPILING: 5,
            "$^C": 5,
            $DEBUGGING: 5,
            "$^D": 5,
            "${^ENCODING}": 5,
            $ENV: 5,
            "%ENV": 5,
            $SYSTEM_FD_MAX: 5,
            "$^F": 5,
            "@F": 5,
            "${^GLOBAL_PHASE}": 5,
            "$^H": 5,
            "%^H": 5,
            "@INC": 5,
            "%INC": 5,
            $INPLACE_EDIT: 5,
            "$^I": 5,
            "$^M": 5,
            $OSNAME: 5,
            "$^O": 5,
            "${^OPEN}": 5,
            $PERLDB: 5,
            "$^P": 5,
            $SIG: 5,
            "%SIG": 5,
            $BASETIME: 5,
            "$^T": 5,
            "${^TAINT}": 5,
            "${^UNICODE}": 5,
            "${^UTF8CACHE}": 5,
            "${^UTF8LOCALE}": 5,
            $PERL_VERSION: 5,
            "$^V": 5,
            "${^WIN32_SLOPPY_STAT}": 5,
            $EXECUTABLE_NAME: 5,
            "$^X": 5,
            $1: 5,
            $MATCH: 5,
            "$&": 5,
            "${^MATCH}": 5,
            $PREMATCH: 5,
            "$`": 5,
            "${^PREMATCH}": 5,
            $POSTMATCH: 5,
            "$'": 5,
            "${^POSTMATCH}": 5,
            $LAST_PAREN_MATCH: 5,
            "$+": 5,
            $LAST_SUBMATCH_RESULT: 5,
            "$^N": 5,
            "@LAST_MATCH_END": 5,
            "@+": 5,
            "%LAST_PAREN_MATCH": 5,
            "%+": 5,
            "@LAST_MATCH_START": 5,
            "@-": 5,
            "%LAST_MATCH_START": 5,
            "%-": 5,
            $LAST_REGEXP_CODE_RESULT: 5,
            "$^R": 5,
            "${^RE_DEBUG_FLAGS}": 5,
            "${^RE_TRIE_MAXBUF}": 5,
            $ARGV: 5,
            "@ARGV": 5,
            ARGV: 5,
            ARGVOUT: 5,
            $OUTPUT_FIELD_SEPARATOR: 5,
            $OFS: 5,
            "$,": 5,
            $INPUT_LINE_NUMBER: 5,
            $NR: 5,
            "$.": 5,
            $INPUT_RECORD_SEPARATOR: 5,
            $RS: 5,
            "$/": 5,
            $OUTPUT_RECORD_SEPARATOR: 5,
            $ORS: 5,
            "$\\": 5,
            $OUTPUT_AUTOFLUSH: 5,
            "$|": 5,
            $ACCUMULATOR: 5,
            "$^A": 5,
            $FORMAT_FORMFEED: 5,
            "$^L": 5,
            $FORMAT_PAGE_NUMBER: 5,
            "$%": 5,
            $FORMAT_LINES_LEFT: 5,
            "$-": 5,
            $FORMAT_LINE_BREAK_CHARACTERS: 5,
            "$:": 5,
            $FORMAT_LINES_PER_PAGE: 5,
            "$=": 5,
            $FORMAT_TOP_NAME: 5,
            "$^": 5,
            $FORMAT_NAME: 5,
            "$~": 5,
            "${^CHILD_ERROR_NATIVE}": 5,
            $EXTENDED_OS_ERROR: 5,
            "$^E": 5,
            $EXCEPTIONS_BEING_CAUGHT: 5,
            "$^S": 5,
            $WARNING: 5,
            "$^W": 5,
            "${^WARNING_BITS}": 5,
            $OS_ERROR: 5,
            $ERRNO: 5,
            "$!": 5,
            "%OS_ERROR": 5,
            "%ERRNO": 5,
            "%!": 5,
            $CHILD_ERROR: 5,
            "$?": 5,
            $EVAL_ERROR: 5,
            "$@": 5,
            $OFMT: 5,
            "$#": 5,
            "$*": 5,
            $ARRAY_BASE: 5,
            "$[": 5,
            $OLD_PERL_VERSION: 5,
            "$]": 5,
            if: [1, 1],
            elsif: [1, 1],
            else: [1, 1],
            while: [1, 1],
            unless: [1, 1],
            for: [1, 1],
            foreach: [1, 1],
            abs: 1,
            accept: 1,
            alarm: 1,
            atan2: 1,
            bind: 1,
            binmode: 1,
            bless: 1,
            bootstrap: 1,
            break: 1,
            caller: 1,
            chdir: 1,
            chmod: 1,
            chomp: 1,
            chop: 1,
            chown: 1,
            chr: 1,
            chroot: 1,
            close: 1,
            closedir: 1,
            connect: 1,
            continue: [1, 1],
            cos: 1,
            crypt: 1,
            dbmclose: 1,
            dbmopen: 1,
            default: 1,
            defined: 1,
            delete: 1,
            die: 1,
            do: 1,
            dump: 1,
            each: 1,
            endgrent: 1,
            endhostent: 1,
            endnetent: 1,
            endprotoent: 1,
            endpwent: 1,
            endservent: 1,
            eof: 1,
            eval: 1,
            exec: 1,
            exists: 1,
            exit: 1,
            exp: 1,
            fcntl: 1,
            fileno: 1,
            flock: 1,
            fork: 1,
            format: 1,
            formline: 1,
            getc: 1,
            getgrent: 1,
            getgrgid: 1,
            getgrnam: 1,
            gethostbyaddr: 1,
            gethostbyname: 1,
            gethostent: 1,
            getlogin: 1,
            getnetbyaddr: 1,
            getnetbyname: 1,
            getnetent: 1,
            getpeername: 1,
            getpgrp: 1,
            getppid: 1,
            getpriority: 1,
            getprotobyname: 1,
            getprotobynumber: 1,
            getprotoent: 1,
            getpwent: 1,
            getpwnam: 1,
            getpwuid: 1,
            getservbyname: 1,
            getservbyport: 1,
            getservent: 1,
            getsockname: 1,
            getsockopt: 1,
            given: 1,
            glob: 1,
            gmtime: 1,
            goto: 1,
            grep: 1,
            hex: 1,
            import: 1,
            index: 1,
            int: 1,
            ioctl: 1,
            join: 1,
            keys: 1,
            kill: 1,
            last: 1,
            lc: 1,
            lcfirst: 1,
            length: 1,
            link: 1,
            listen: 1,
            local: 2,
            localtime: 1,
            lock: 1,
            log: 1,
            lstat: 1,
            m: null,
            map: 1,
            mkdir: 1,
            msgctl: 1,
            msgget: 1,
            msgrcv: 1,
            msgsnd: 1,
            my: 2,
            new: 1,
            next: 1,
            no: 1,
            oct: 1,
            open: 1,
            opendir: 1,
            ord: 1,
            our: 2,
            pack: 1,
            package: 1,
            pipe: 1,
            pop: 1,
            pos: 1,
            print: 1,
            printf: 1,
            prototype: 1,
            push: 1,
            q: null,
            qq: null,
            qr: null,
            quotemeta: null,
            qw: null,
            qx: null,
            rand: 1,
            read: 1,
            readdir: 1,
            readline: 1,
            readlink: 1,
            readpipe: 1,
            recv: 1,
            redo: 1,
            ref: 1,
            rename: 1,
            require: 1,
            reset: 1,
            return: 1,
            reverse: 1,
            rewinddir: 1,
            rindex: 1,
            rmdir: 1,
            s: null,
            say: 1,
            scalar: 1,
            seek: 1,
            seekdir: 1,
            select: 1,
            semctl: 1,
            semget: 1,
            semop: 1,
            send: 1,
            setgrent: 1,
            sethostent: 1,
            setnetent: 1,
            setpgrp: 1,
            setpriority: 1,
            setprotoent: 1,
            setpwent: 1,
            setservent: 1,
            setsockopt: 1,
            shift: 1,
            shmctl: 1,
            shmget: 1,
            shmread: 1,
            shmwrite: 1,
            shutdown: 1,
            sin: 1,
            sleep: 1,
            socket: 1,
            socketpair: 1,
            sort: 1,
            splice: 1,
            split: 1,
            sprintf: 1,
            sqrt: 1,
            srand: 1,
            stat: 1,
            state: 1,
            study: 1,
            sub: 1,
            substr: 1,
            symlink: 1,
            syscall: 1,
            sysopen: 1,
            sysread: 1,
            sysseek: 1,
            system: 1,
            syswrite: 1,
            tell: 1,
            telldir: 1,
            tie: 1,
            tied: 1,
            time: 1,
            times: 1,
            tr: null,
            truncate: 1,
            uc: 1,
            ucfirst: 1,
            umask: 1,
            undef: 1,
            unlink: 1,
            unpack: 1,
            unshift: 1,
            untie: 1,
            use: 1,
            utime: 1,
            values: 1,
            vec: 1,
            wait: 1,
            waitpid: 1,
            wantarray: 1,
            warn: 1,
            when: 1,
            write: 1,
            y: null
        }
          , s = "string.special"
          , l = /[goseximacplud]/;
        function c(e, t, O, n, r) {
            return t.chain = null,
            t.style = null,
            t.tail = null,
            t.tokenize = function(e, t) {
                for (var i, a = !1, o = 0; i = e.next(); ) {
                    if (i === O[o] && !a) {
                        void 0 !== O[++o] ? (t.chain = O[o],
                        t.style = n,
                        t.tail = r) : r && e.eatWhile(r),
                        t.tokenize = p;
                        break
                    }
                    a = !a && "\\" == i
                }
                return n
            }
            ,
            t.tokenize(e, t)
        }
        function u(e, t, O) {
            return t.tokenize = function(e, t) {
                return e.string == O && (t.tokenize = p),
                e.skipToEnd(),
                "string"
            }
            ,
            t.tokenize(e, t)
        }
        function p(e, t) {
            if (e.eatSpace())
                return null;
            if (t.chain)
                return c(e, t, t.chain, t.style, t.tail);
            if (e.match(/^(\-?((\d[\d_]*)?\.\d+(e[+-]?\d+)?|\d+\.\d*)|0x[\da-fA-F_]+|0b[01_]+|\d[\d_]*(e[+-]?\d+)?)/))
                return "number";
            if (e.match(/^<<(?=[_a-zA-Z])/))
                return e.eatWhile(/\w/),
                u(e, t, e.current().substr(2));
            if (e.sol() && e.match(/^\=item(?!\w)/))
                return u(e, t, "=cut");
            var O = e.next();
            if ('"' == O || "'" == O) {
                if (r(e, 3) == "<<" + O) {
                    var p = e.pos;
                    e.eatWhile(/\w/);
                    var d = e.current().substr(1);
                    if (d && e.eat(O))
                        return u(e, t, d);
                    e.pos = p
                }
                return c(e, t, [O], "string")
            }
            if ("q" == O) {
                var f = n(e, -2);
                if (!(f && /\w/.test(f))) {
                    if ("x" == (f = n(e, 0))) {
                        if ("(" == (f = n(e, 1)))
                            return a(e, 2),
                            c(e, t, [")"], s, l);
                        if ("[" == f)
                            return a(e, 2),
                            c(e, t, ["]"], s, l);
                        if ("{" == f)
                            return a(e, 2),
                            c(e, t, ["}"], s, l);
                        if ("<" == f)
                            return a(e, 2),
                            c(e, t, [">"], s, l);
                        if (/[\^'"!~\/]/.test(f))
                            return a(e, 1),
                            c(e, t, [e.eat(f)], s, l)
                    } else if ("q" == f) {
                        if ("(" == (f = n(e, 1)))
                            return a(e, 2),
                            c(e, t, [")"], "string");
                        if ("[" == f)
                            return a(e, 2),
                            c(e, t, ["]"], "string");
                        if ("{" == f)
                            return a(e, 2),
                            c(e, t, ["}"], "string");
                        if ("<" == f)
                            return a(e, 2),
                            c(e, t, [">"], "string");
                        if (/[\^'"!~\/]/.test(f))
                            return a(e, 1),
                            c(e, t, [e.eat(f)], "string")
                    } else if ("w" == f) {
                        if ("(" == (f = n(e, 1)))
                            return a(e, 2),
                            c(e, t, [")"], "bracket");
                        if ("[" == f)
                            return a(e, 2),
                            c(e, t, ["]"], "bracket");
                        if ("{" == f)
                            return a(e, 2),
                            c(e, t, ["}"], "bracket");
                        if ("<" == f)
                            return a(e, 2),
                            c(e, t, [">"], "bracket");
                        if (/[\^'"!~\/]/.test(f))
                            return a(e, 1),
                            c(e, t, [e.eat(f)], "bracket")
                    } else if ("r" == f) {
                        if ("(" == (f = n(e, 1)))
                            return a(e, 2),
                            c(e, t, [")"], s, l);
                        if ("[" == f)
                            return a(e, 2),
                            c(e, t, ["]"], s, l);
                        if ("{" == f)
                            return a(e, 2),
                            c(e, t, ["}"], s, l);
                        if ("<" == f)
                            return a(e, 2),
                            c(e, t, [">"], s, l);
                        if (/[\^'"!~\/]/.test(f))
                            return a(e, 1),
                            c(e, t, [e.eat(f)], s, l)
                    } else if (/[\^'"!~\/(\[{<]/.test(f)) {
                        if ("(" == f)
                            return a(e, 1),
                            c(e, t, [")"], "string");
                        if ("[" == f)
                            return a(e, 1),
                            c(e, t, ["]"], "string");
                        if ("{" == f)
                            return a(e, 1),
                            c(e, t, ["}"], "string");
                        if ("<" == f)
                            return a(e, 1),
                            c(e, t, [">"], "string");
                        if (/[\^'"!~\/]/.test(f))
                            return c(e, t, [e.eat(f)], "string")
                    }
                }
            }
            if ("m" == O) {
                var f = n(e, -2);
                if (!(f && /\w/.test(f)) && (f = e.eat(/[(\[{<\^'"!~\/]/))) {
                    if (/[\^'"!~\/]/.test(f))
                        return c(e, t, [f], s, l);
                    if ("(" == f)
                        return c(e, t, [")"], s, l);
                    if ("[" == f)
                        return c(e, t, ["]"], s, l);
                    if ("{" == f)
                        return c(e, t, ["}"], s, l);
                    if ("<" == f)
                        return c(e, t, [">"], s, l)
                }
            }
            if ("s" == O || "y" == O) {
                var f = /[\/>\]})\w]/.test(n(e, -2));
                if (!f && (f = e.eat(/[(\[{<\^'"!~\/]/)))
                    return "[" == f ? c(e, t, ["]", "]"], s, l) : "{" == f ? c(e, t, ["}", "}"], s, l) : "<" == f ? c(e, t, [">", ">"], s, l) : "(" == f ? c(e, t, [")", ")"], s, l) : c(e, t, [f, f], s, l)
            }
            if ("t" == O) {
                var f = /[\/>\]})\w]/.test(n(e, -2));
                if (!f && (f = e.eat("r")) && (f = e.eat(/[(\[{<\^'"!~\/]/)))
                    return "[" == f ? c(e, t, ["]", "]"], s, l) : "{" == f ? c(e, t, ["}", "}"], s, l) : "<" == f ? c(e, t, [">", ">"], s, l) : "(" == f ? c(e, t, [")", ")"], s, l) : c(e, t, [f, f], s, l)
            }
            if ("`" == O)
                return c(e, t, [O], "builtin");
            if ("/" == O)
                return /~\s*$/.test(r(e)) ? c(e, t, [O], s, l) : "operator";
            if ("$" == O) {
                var p = e.pos;
                if (e.eatWhile(/\d/) || e.eat("{") && e.eatWhile(/\d/) && e.eat("}"))
                    return "builtin";
                e.pos = p
            }
            if (/[$@%]/.test(O)) {
                var p = e.pos;
                if (e.eat("^") && e.eat(/[A-Z]/) || !/[@$%&]/.test(n(e, -2)) && e.eat(/[=|\\\-#?@;:&`~\^!\[\]*'"$+.,\/<>()]/)) {
                    var f = e.current();
                    if (o[f])
                        return "builtin"
                }
                e.pos = p
            }
            if (/[$@%&]/.test(O) && (e.eatWhile(/[\w$]/) || e.eat("{") && e.eatWhile(/[\w$]/) && e.eat("}"))) {
                var f = e.current();
                return o[f] ? "builtin" : "variable"
            }
            if ("#" == O && "$" != n(e, -2))
                return e.skipToEnd(),
                "comment";
            if (/[:+\-\^*$&%@=<>!?|\/~\.]/.test(O)) {
                var p = e.pos;
                if (e.eatWhile(/[:+\-\^*$&%@=<>!?|\/~\.]/),
                o[e.current()])
                    return "operator";
                e.pos = p
            }
            if ("_" == O && 1 == e.pos) {
                if ("_END__" == i(e, 6))
                    return c(e, t, ["\x00"], "comment");
                if ("_DATA__" == i(e, 7))
                    return c(e, t, ["\x00"], "builtin");
                if ("_C__" == i(e, 7))
                    return c(e, t, ["\x00"], "string")
            }
            if (/\w/.test(O)) {
                var p = e.pos;
                if ("{" == n(e, -2) && ("}" == n(e, 0) || e.eatWhile(/\w/) && "}" == n(e, 0)))
                    return "string";
                e.pos = p
            }
            if (/[A-Z]/.test(O)) {
                var h = n(e, -2)
                  , p = e.pos;
                if (e.eatWhile(/[A-Z_]/),
                /[\da-z]/.test(n(e, 0)))
                    e.pos = p;
                else {
                    var f = o[e.current()];
                    if (!f || (f[1] && (f = f[0]),
                    ":" == h))
                        return "meta";
                    if (1 == f)
                        return "keyword";
                    if (2 == f)
                        return "def";
                    if (3 == f)
                        return "atom";
                    if (4 == f)
                        return "operator";
                    else if (5 == f)
                        return "builtin";
                    else
                        return "meta"
                }
            }
            if (/[a-zA-Z_]/.test(O)) {
                var h = n(e, -2);
                e.eatWhile(/\w/);
                var f = o[e.current()];
                if (!f || (f[1] && (f = f[0]),
                ":" == h))
                    return "meta";
                if (1 == f)
                    return "keyword";
                if (2 == f)
                    return "def";
                if (3 == f)
                    return "atom";
                if (4 == f)
                    return "operator";
                else if (5 == f)
                    return "builtin";
                else
                    return "meta"
            }
            return null
        }
        let d = {
            name: "perl",
            startState: function() {
                return {
                    tokenize: p,
                    chain: null,
                    style: null,
                    tail: null
                }
            },
            token: function(e, t) {
                return (t.tokenize || p)(e, t)
            },
            languageData: {
                commentTokens: {
                    line: "#"
                },
                wordChars: "$"
            }
        }
    },
    9494: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            pig: function() {
                return f
            }
        });
        var r = "ABS ACOS ARITY ASIN ATAN AVG BAGSIZE BINSTORAGE BLOOM BUILDBLOOM CBRT CEIL CONCAT COR COS COSH COUNT COUNT_STAR COV CONSTANTSIZE CUBEDIMENSIONS DIFF DISTINCT DOUBLEABS DOUBLEAVG DOUBLEBASE DOUBLEMAX DOUBLEMIN DOUBLEROUND DOUBLESUM EXP FLOOR FLOATABS FLOATAVG FLOATMAX FLOATMIN FLOATROUND FLOATSUM GENERICINVOKER INDEXOF INTABS INTAVG INTMAX INTMIN INTSUM INVOKEFORDOUBLE INVOKEFORFLOAT INVOKEFORINT INVOKEFORLONG INVOKEFORSTRING INVOKER ISEMPTY JSONLOADER JSONMETADATA JSONSTORAGE LAST_INDEX_OF LCFIRST LOG LOG10 LOWER LONGABS LONGAVG LONGMAX LONGMIN LONGSUM MAX MIN MAPSIZE MONITOREDUDF NONDETERMINISTIC OUTPUTSCHEMA  PIGSTORAGE PIGSTREAMING RANDOM REGEX_EXTRACT REGEX_EXTRACT_ALL REPLACE ROUND SIN SINH SIZE SQRT STRSPLIT SUBSTRING SUM STRINGCONCAT STRINGMAX STRINGMIN STRINGSIZE TAN TANH TOBAG TOKENIZE TOMAP TOP TOTUPLE TRIM TEXTLOADER TUPLESIZE UCFIRST UPPER UTF8STORAGECONVERTER "
          , i = "VOID IMPORT RETURNS DEFINE LOAD FILTER FOREACH ORDER CUBE DISTINCT COGROUP JOIN CROSS UNION SPLIT INTO IF OTHERWISE ALL AS BY USING INNER OUTER ONSCHEMA PARALLEL PARTITION GROUP AND OR NOT GENERATE FLATTEN ASC DESC IS STREAM THROUGH STORE MAPREDUCE SHIP CACHE INPUT OUTPUT STDERROR STDIN STDOUT LIMIT SAMPLE LEFT RIGHT FULL EQ GT LT GTE LTE NEQ MATCHES TRUE FALSE DUMP"
          , a = "BOOLEAN INT LONG FLOAT DOUBLE CHARARRAY BYTEARRAY BAG TUPLE MAP "
          , o = n(r)
          , s = n(i)
          , l = n(a)
          , c = /[*+\-%<>=&?:\/!|]/;
        function u(e, t, O) {
            return t.tokenize = O,
            O(e, t)
        }
        function p(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("/" == O && n) {
                    t.tokenize = d;
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        function d(e, t) {
            var O = e.next();
            return '"' == O || "'" == O ? u(e, t, function(e, t) {
                for (var n, r = !1, i = !1; null != (n = e.next()); ) {
                    if (n == O && !r) {
                        i = !0;
                        break
                    }
                    r = !r && "\\" == n
                }
                return (i || !r) && (t.tokenize = d),
                "error"
            }) : /[\[\]{}\(\),;\.]/.test(O) ? null : /\d/.test(O) ? (e.eatWhile(/[\w\.]/),
            "number") : "/" == O ? e.eat("*") ? u(e, t, p) : (e.eatWhile(c),
            "operator") : "-" == O ? e.eat("-") ? (e.skipToEnd(),
            "comment") : (e.eatWhile(c),
            "operator") : c.test(O) ? (e.eatWhile(c),
            "operator") : (e.eatWhile(/[\w\$_]/),
            s && s.propertyIsEnumerable(e.current().toUpperCase()) && !e.eat(")") && !e.eat(".")) ? "keyword" : o && o.propertyIsEnumerable(e.current().toUpperCase()) ? "builtin" : l && l.propertyIsEnumerable(e.current().toUpperCase()) ? "type" : "variable"
        }
        let f = {
            name: "pig",
            startState: function() {
                return {
                    tokenize: d,
                    startOfLine: !0
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : t.tokenize(e, t)
            },
            languageData: {
                autocomplete: (r + a + i).split(" ")
            }
        }
    },
    812: function(e, t, O) {
        "use strict";
        function n(e, t) {
            for (var O = void 0 !== (t = t || {}).prefix ? t.prefix : "^", n = void 0 !== t.suffix ? t.suffix : "\\b", r = 0; r < e.length; r++)
                e[r]instanceof RegExp ? e[r] = e[r].source : e[r] = e[r].replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
            return RegExp(O + "(" + e.join("|") + ")" + n, "i")
        }
        O.r(t),
        O.d(t, {
            powerShell: function() {
                return b
            }
        });
        var r = "(?=[^A-Za-z\\d\\-_]|$)"
          , i = /[\w\-:]/
          , a = n([/begin|break|catch|continue|data|default|do|dynamicparam/, /else|elseif|end|exit|filter|finally|for|foreach|from|function|if|in/, /param|process|return|switch|throw|trap|try|until|where|while/], {
            suffix: r
        })
          , o = n(["f", /b?not/, /[ic]?split/, "join", /is(not)?/, "as", /[ic]?(eq|ne|[gl][te])/, /[ic]?(not)?(like|match|contains)/, /[ic]?replace/, /b?(and|or|xor)/], {
            prefix: "-"
        })
          , s = n([o, /[+\-*\/%]=|\+\+|--|\.\.|[+\-*&^%:=!|\/]|<(?!#)|(?!#)>/], {
            suffix: ""
        })
          , l = n([/Add-(Computer|Content|History|Member|PSSnapin|Type)/, /Checkpoint-Computer/, /Clear-(Content|EventLog|History|Host|Item(Property)?|Variable)/, /Compare-Object/, /Complete-Transaction/, /Connect-PSSession/, /ConvertFrom-(Csv|Json|SecureString|StringData)/, /Convert-Path/, /ConvertTo-(Csv|Html|Json|SecureString|Xml)/, /Copy-Item(Property)?/, /Debug-Process/, /Disable-(ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)/, /Disconnect-PSSession/, /Enable-(ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)/, /(Enter|Exit)-PSSession/, /Export-(Alias|Clixml|Console|Counter|Csv|FormatData|ModuleMember|PSSession)/, /ForEach-Object/, /Format-(Custom|List|Table|Wide)/, RegExp("Get-(Acl|Alias|AuthenticodeSignature|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Counter|Credential|Culture|Date|Event|EventLog|EventSubscriber|ExecutionPolicy|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|PfxCertificate|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|Verb|WinEvent|WmiObject)"), /Group-Object/, /Import-(Alias|Clixml|Counter|Csv|LocalizedData|Module|PSSession)/, /ImportSystemModules/, /Invoke-(Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)/, /Join-Path/, /Limit-EventLog/, /Measure-(Command|Object)/, /Move-Item(Property)?/, RegExp("New-(Alias|Event|EventLog|Item(Property)?|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy|WinEvent)"), /Out-(Default|File|GridView|Host|Null|Printer|String)/, /Pause/, /(Pop|Push)-Location/, /Read-Host/, /Receive-(Job|PSSession)/, /Register-(EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)/, /Remove-(Computer|Event|EventLog|Item(Property)?|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)/, /Rename-(Computer|Item(Property)?)/, /Reset-ComputerMachinePassword/, /Resolve-Path/, /Restart-(Computer|Service)/, /Restore-Computer/, /Resume-(Job|Service)/, /Save-Help/, /Select-(Object|String|Xml)/, /Send-MailMessage/, RegExp("Set-(Acl|Alias|AuthenticodeSignature|Content|Date|ExecutionPolicy|Item(Property)?|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)"), /Show-(Command|ControlPanelItem|EventLog)/, /Sort-Object/, /Split-Path/, /Start-(Job|Process|Service|Sleep|Transaction|Transcript)/, /Stop-(Computer|Job|Process|Service|Transcript)/, /Suspend-(Job|Service)/, /TabExpansion2/, /Tee-Object/, /Test-(ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)/, /Trace-Command/, /Unblock-File/, /Undo-Transaction/, /Unregister-(Event|PSSessionConfiguration)/, /Update-(FormatData|Help|List|TypeData)/, /Use-Transaction/, /Wait-(Event|Job|Process)/, /Where-Object/, /Write-(Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning)/, /cd|help|mkdir|more|oss|prompt/, /ac|asnp|cat|cd|chdir|clc|clear|clhy|cli|clp|cls|clv|cnsn|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|dnsn|ebp/, /echo|epal|epcsv|epsn|erase|etsn|exsn|fc|fl|foreach|ft|fw|gal|gbp|gc|gci|gcm|gcs|gdr|ghy|gi|gjb|gl|gm|gmo|gp|gps/, /group|gsn|gsnp|gsv|gu|gv|gwmi|h|history|icm|iex|ihy|ii|ipal|ipcsv|ipmo|ipsn|irm|ise|iwmi|iwr|kill|lp|ls|man|md/, /measure|mi|mount|move|mp|mv|nal|ndr|ni|nmo|npssc|nsn|nv|ogv|oh|popd|ps|pushd|pwd|r|rbp|rcjb|rcsn|rd|rdr|ren|ri/, /rjb|rm|rmdir|rmo|rni|rnp|rp|rsn|rsnp|rujb|rv|rvpa|rwmi|sajb|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls/, /sort|sp|spjb|spps|spsv|start|sujb|sv|swmi|tee|trcm|type|where|wjb|write/], {
            prefix: "",
            suffix: ""
        })
          , c = n([/[$?^_]|Args|ConfirmPreference|ConsoleFileName|DebugPreference|Error|ErrorActionPreference|ErrorView|ExecutionContext/, /FormatEnumerationLimit|Home|Host|Input|MaximumAliasCount|MaximumDriveCount|MaximumErrorCount|MaximumFunctionCount/, /MaximumHistoryCount|MaximumVariableCount|MyInvocation|NestedPromptLevel|OutputEncoding|Pid|Profile|ProgressPreference/, /PSBoundParameters|PSCommandPath|PSCulture|PSDefaultParameterValues|PSEmailServer|PSHome|PSScriptRoot|PSSessionApplicationName/, /PSSessionConfigurationName|PSSessionOption|PSUICulture|PSVersionTable|Pwd|ShellId|StackTrace|VerbosePreference/, /WarningPreference|WhatIfPreference/, /Event|EventArgs|EventSubscriber|Sender/, /Matches|Ofs|ForEach|LastExitCode|PSCmdlet|PSItem|PSSenderInfo|This/, /true|false|null/], {
            prefix: "\\$",
            suffix: ""
        })
          , u = {
            keyword: a,
            number: /^((0x[\da-f]+)|((\d+\.\d+|\d\.|\.\d+|\d+)(e[\+\-]?\d+)?))[ld]?([kmgtp]b)?/i,
            operator: s,
            builtin: n([/[A-Z]:|%|\?/i, l, c], {
                suffix: r
            }),
            punctuation: /[\[\]{},;`\\\.]|@[({]/,
            variable: /^[A-Za-z\_][A-Za-z\-\_\d]*\b/
        };
        function p(e, t) {
            var O = t.returnStack[t.returnStack.length - 1];
            if (O && O.shouldReturnFrom(t))
                return t.tokenize = O.tokenize,
                t.returnStack.pop(),
                t.tokenize(e, t);
            if (e.eatSpace())
                return null;
            if (e.eat("("))
                return t.bracketNesting += 1,
                "punctuation";
            if (e.eat(")"))
                return t.bracketNesting -= 1,
                "punctuation";
            for (var n in u)
                if (e.match(u[n]))
                    return n;
            var r = e.next();
            if ("'" === r)
                return function(e, t) {
                    for (var O; null != (O = e.peek()); )
                        if (e.next(),
                        "'" === O && !e.eat("'"))
                            return t.tokenize = p,
                            "string";
                    return "error"
                }(e, t);
            if ("$" === r)
                return g(e, t);
            if ('"' === r)
                return d(e, t);
            if ("<" === r && e.eat("#"))
                return t.tokenize = $,
                $(e, t);
            if ("#" === r)
                return e.skipToEnd(),
                "comment";
            if ("@" === r) {
                var a = e.eat(/["']/);
                if (a && e.eol())
                    return t.tokenize = S,
                    t.startQuote = a[0],
                    S(e, t);
                if (e.eol())
                    ;
                else if (e.peek().match(/[({]/))
                    return "punctuation";
                else if (e.peek().match(i))
                    return g(e, t)
            }
            return "error"
        }
        function d(e, t) {
            for (var O; null != (O = e.peek()); ) {
                if ("$" === O)
                    return t.tokenize = f,
                    "string";
                if (e.next(),
                "`" === O) {
                    e.next();
                    continue
                }
                if ('"' === O && !e.eat('"'))
                    return t.tokenize = p,
                    "string"
            }
            return "error"
        }
        function f(e, t) {
            return Q(e, t, d)
        }
        function h(e, t) {
            return t.tokenize = S,
            t.startQuote = '"',
            S(e, t)
        }
        function m(e, t) {
            return Q(e, t, h)
        }
        function Q(e, t, O) {
            if (!e.match("$("))
                return e.next(),
                t.returnStack.push({
                    shouldReturnFrom: function() {
                        return !0
                    },
                    tokenize: O
                }),
                t.tokenize = g,
                t.tokenize(e, t);
            var n = t.bracketNesting;
            return t.returnStack.push({
                shouldReturnFrom: function(e) {
                    return e.bracketNesting === n
                },
                tokenize: O
            }),
            t.tokenize = p,
            t.bracketNesting += 1,
            "punctuation"
        }
        function $(e, t) {
            for (var O, n = !1; null != (O = e.next()); ) {
                if (n && ">" == O) {
                    t.tokenize = p;
                    break
                }
                n = "#" === O
            }
            return "comment"
        }
        function g(e, t) {
            var O = e.peek();
            return e.eat("{") ? (t.tokenize = P,
            P(e, t)) : void 0 != O && O.match(i) ? (e.eatWhile(i),
            t.tokenize = p,
            "variable") : (t.tokenize = p,
            "error")
        }
        function P(e, t) {
            for (var O; null != (O = e.next()); )
                if ("}" === O) {
                    t.tokenize = p;
                    break
                }
            return "variable"
        }
        function S(e, t) {
            var O = t.startQuote;
            if (e.sol() && e.match(RegExp(O + "@")))
                t.tokenize = p;
            else if ('"' === O)
                for (; !e.eol(); ) {
                    var n = e.peek();
                    if ("$" === n) {
                        t.tokenize = m;
                        break
                    }
                    e.next(),
                    "`" === n && e.next()
                }
            else
                e.skipToEnd();
            return "string"
        }
        let b = {
            name: "powershell",
            startState: function() {
                return {
                    returnStack: [],
                    bracketNesting: 0,
                    tokenize: p
                }
            },
            token: function(e, t) {
                return t.tokenize(e, t)
            },
            languageData: {
                commentTokens: {
                    line: "#",
                    block: {
                        open: "<#",
                        close: "#>"
                    }
                }
            }
        }
    },
    889: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            properties: function() {
                return n
            }
        });
        let n = {
            name: "properties",
            token: function(e, t) {
                var O = e.sol() || t.afterSection
                  , n = e.eol();
                if (t.afterSection = !1,
                O && (t.nextMultiline ? (t.inMultiline = !0,
                t.nextMultiline = !1) : t.position = "def"),
                n && !t.nextMultiline && (t.inMultiline = !1,
                t.position = "def"),
                O)
                    for (; e.eatSpace(); )
                        ;
                var r = e.next();
                return O && ("#" === r || "!" === r || ";" === r) ? (t.position = "comment",
                e.skipToEnd(),
                "comment") : O && "[" === r ? (t.afterSection = !0,
                e.skipTo("]"),
                e.eat("]"),
                "header") : "=" === r || ":" === r ? (t.position = "quote",
                null) : ("\\" === r && "quote" === t.position && e.eol() && (t.nextMultiline = !0),
                t.position)
            },
            startState: function() {
                return {
                    position: "def",
                    nextMultiline: !1,
                    inMultiline: !1,
                    afterSection: !1
                }
            }
        }
    },
    84: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            protobuf: function() {
                return a
            }
        });
        var n = ["package", "message", "import", "syntax", "required", "optional", "repeated", "reserved", "default", "extensions", "packed", "bool", "bytes", "double", "enum", "float", "string", "int32", "int64", "uint32", "uint64", "sint32", "sint64", "fixed32", "fixed64", "sfixed32", "sfixed64", "option", "service", "rpc", "returns"]
          , r = RegExp("^((" + n.join(")|(") + "))\\b", "i")
          , i = RegExp("^[_A-Za-z\xa1-￿][_A-Za-z0-9\xa1-￿]*");
        let a = {
            name: "protobuf",
            token: function(e) {
                return e.eatSpace() ? null : e.match("//") ? (e.skipToEnd(),
                "comment") : e.match(/^[0-9\.+-]/, !1) && (e.match(/^[+-]?0x[0-9a-fA-F]+/) || e.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/) || e.match(/^[+-]?\d+([EeDd][+-]?\d+)?/)) ? "number" : e.match(/^"([^"]|(""))*"/) || e.match(/^'([^']|(''))*'/) ? "string" : e.match(r) ? "keyword" : e.match(i) ? "variable" : (e.next(),
                null)
            },
            languageData: {
                autocomplete: n
            }
        }
    },
    8240: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            puppet: function() {
                return o
            }
        });
        var n = {}
          , r = /({)?([a-z][a-z0-9_]*)?((::[a-z][a-z0-9_]*)*::)?[a-zA-Z0-9_]+(})?/;
        function i(e, t) {
            for (var O = t.split(" "), r = 0; r < O.length; r++)
                n[O[r]] = e
        }
        function a(e, t) {
            for (var O, n, r = !1; !e.eol() && (O = e.next()) != t.pending; ) {
                if ("$" === O && "\\" != n && '"' == t.pending) {
                    r = !0;
                    break
                }
                n = O
            }
            return r && e.backUp(1),
            O == t.pending ? t.continueString = !1 : t.continueString = !0,
            "string"
        }
        i("keyword", "class define site node include import inherits"),
        i("keyword", "case if else in and elsif default or"),
        i("atom", "false true running present absent file directory undef"),
        i("builtin", "action augeas burst chain computer cron destination dport exec file filebucket group host icmp iniface interface jump k5login limit log_level log_prefix macauthorization mailalias maillist mcx mount nagios_command nagios_contact nagios_contactgroup nagios_host nagios_hostdependency nagios_hostescalation nagios_hostextinfo nagios_hostgroup nagios_service nagios_servicedependency nagios_serviceescalation nagios_serviceextinfo nagios_servicegroup nagios_timeperiod name notify outiface package proto reject resources router schedule scheduled_task selboolean selmodule service source sport ssh_authorized_key sshkey stage state table tidy todest toports tosource user vlan yumrepo zfs zone zpool");
        let o = {
            name: "puppet",
            startState: function() {
                var e = {};
                return e.inDefinition = !1,
                e.inInclude = !1,
                e.continueString = !1,
                e.pending = !1,
                e
            },
            token: function(e, t) {
                return e.eatSpace() ? null : function(e, t) {
                    var O = e.match(/[\w]+/, !1)
                      , i = e.match(/(\s+)?\w+\s+=>.*/, !1)
                      , o = e.match(/(\s+)?[\w:_]+(\s+)?{/, !1)
                      , s = e.match(/(\s+)?[@]{1,2}[\w:_]+(\s+)?{/, !1)
                      , l = e.next();
                    if ("$" === l)
                        return e.match(r) ? t.continueString ? "variableName.special" : "variable" : "error";
                    if (t.continueString)
                        return e.backUp(1),
                        a(e, t);
                    if (t.inDefinition) {
                        if (e.match(/(\s+)?[\w:_]+(\s+)?/))
                            return "def";
                        e.match(/\s+{/),
                        t.inDefinition = !1
                    }
                    return t.inInclude ? (e.match(/(\s+)?\S+(\s+)?/),
                    t.inInclude = !1,
                    "def") : e.match(/(\s+)?\w+\(/) ? (e.backUp(1),
                    "def") : i ? (e.match(/(\s+)?\w+/),
                    "tag") : O && n.hasOwnProperty(O) ? (e.backUp(1),
                    e.match(/[\w]+/),
                    e.match(/\s+\S+\s+{/, !1) && (t.inDefinition = !0),
                    "include" == O && (t.inInclude = !0),
                    n[O]) : /(^|\s+)[A-Z][\w:_]+/.test(O) ? (e.backUp(1),
                    e.match(/(^|\s+)[A-Z][\w:_]+/),
                    "def") : o ? (e.match(/(\s+)?[\w:_]+/),
                    "def") : s ? (e.match(/(\s+)?[@]{1,2}/),
                    "atom") : "#" == l ? (e.skipToEnd(),
                    "comment") : "'" == l || '"' == l ? (t.pending = l,
                    a(e, t)) : "{" == l || "}" == l ? "bracket" : "/" == l ? (e.match(/^[^\/]*\//),
                    "string.special") : l.match(/[0-9]/) ? (e.eatWhile(/[0-9]+/),
                    "number") : "=" == l ? (">" == e.peek() && e.next(),
                    "operator") : (e.eatWhile(/[\w-]/),
                    null)
                }(e, t)
            }
        }
    },
    2891: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            q: function() {
                return d
            }
        });
        var n, r = RegExp("^(abs|acos|aj|aj0|all|and|any|asc|asin|asof|atan|attr|avg|avgs|bin|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|each|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|idesc|if|ij|in|insert|inter|inv|key|keys|last|like|list|lj|load|log|lower|lsq|ltime|ltrim|mavg|max|maxs|mcount|md5|mdev|med|meta|min|mins|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prd|prds|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reverse|rload|rotate|rsave|rtrim|save|scan|select|set|setenv|show|signum|sin|sqrt|ss|ssr|string|sublist|sum|sums|sv|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|view|views|vs|wavg|where|where|while|within|wj|wj1|wsum|xasc|xbar|xcol|xcols|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)$"), i = /[|/&^!+:\\\-*%$=~#;@><,?_\'\"\[\(\]\)\s{}]/;
        function a(e, t) {
            var O = e.sol()
              , s = e.next();
            if (n = null,
            O) {
                if ("/" == s)
                    return (t.tokenize = o)(e, t);
                if ("\\" == s)
                    return e.eol() || /\s/.test(e.peek()) ? (e.skipToEnd(),
                    /^\\\s*$/.test(e.current()) ? (t.tokenize = l)(e) : t.tokenize = a,
                    "comment") : (t.tokenize = a,
                    "builtin")
            }
            if (/\s/.test(s))
                return "/" == e.peek() ? (e.skipToEnd(),
                "comment") : "null";
            if ('"' == s)
                return (t.tokenize = c)(e, t);
            if ("`" == s)
                return e.eatWhile(/[A-Za-z\d_:\/.]/),
                "macroName";
            if ("." == s && /\d/.test(e.peek()) || /\d/.test(s)) {
                var u = null;
                return e.backUp(1),
                e.match(/^\d{4}\.\d{2}(m|\.\d{2}([DT](\d{2}(:\d{2}(:\d{2}(\.\d{1,9})?)?)?)?)?)/) || e.match(/^\d+D(\d{2}(:\d{2}(:\d{2}(\.\d{1,9})?)?)?)/) || e.match(/^\d{2}:\d{2}(:\d{2}(\.\d{1,9})?)?/) || e.match(/^\d+[ptuv]{1}/) ? u = "temporal" : (e.match(/^0[NwW]{1}/) || e.match(/^0x[\da-fA-F]*/) || e.match(/^[01]+[b]{1}/) || e.match(/^\d+[chijn]{1}/) || e.match(/-?\d*(\.\d*)?(e[+\-]?\d+)?(e|f)?/)) && (u = "number"),
                u && (!(s = e.peek()) || i.test(s)) ? u : (e.next(),
                "error")
            }
            return /[A-Za-z]|\./.test(s) ? (e.eatWhile(/[A-Za-z._\d]/),
            r.test(e.current()) ? "keyword" : "variable") : /[|/&^!+:\\\-*%$=~#;@><\.,?_\']/.test(s) || /[{}\(\[\]\)]/.test(s) ? null : "error"
        }
        function o(e, t) {
            return e.skipToEnd(),
            /\/\s*$/.test(e.current()) ? (t.tokenize = s)(e, t) : t.tokenize = a,
            "comment"
        }
        function s(e, t) {
            var O = e.sol() && "\\" == e.peek();
            return e.skipToEnd(),
            O && /^\\\s*$/.test(e.current()) && (t.tokenize = a),
            "comment"
        }
        function l(e) {
            return e.skipToEnd(),
            "comment"
        }
        function c(e, t) {
            for (var O, n = !1, r = !1; O = e.next(); ) {
                if ('"' == O && !n) {
                    r = !0;
                    break
                }
                n = !n && "\\" == O
            }
            return r && (t.tokenize = a),
            "string"
        }
        function u(e, t, O) {
            e.context = {
                prev: e.context,
                indent: e.indent,
                col: O,
                type: t
            }
        }
        function p(e) {
            e.indent = e.context.indent,
            e.context = e.context.prev
        }
        let d = {
            name: "q",
            startState: function() {
                return {
                    tokenize: a,
                    context: null,
                    indent: 0,
                    col: 0
                }
            },
            token: function(e, t) {
                e.sol() && (t.context && null == t.context.align && (t.context.align = !1),
                t.indent = e.indentation());
                var O = t.tokenize(e, t);
                if ("comment" != O && t.context && null == t.context.align && "pattern" != t.context.type && (t.context.align = !0),
                "(" == n)
                    u(t, ")", e.column());
                else if ("[" == n)
                    u(t, "]", e.column());
                else if ("{" == n)
                    u(t, "}", e.column());
                else if (/[\]\}\)]/.test(n)) {
                    for (; t.context && "pattern" == t.context.type; )
                        p(t);
                    t.context && n == t.context.type && p(t)
                } else
                    "." == n && t.context && "pattern" == t.context.type ? p(t) : /atom|string|variable/.test(O) && t.context && (/[\}\]]/.test(t.context.type) ? u(t, "pattern", e.column()) : "pattern" != t.context.type || t.context.align || (t.context.align = !0,
                    t.context.col = e.column()));
                return O
            },
            indent: function(e, t, O) {
                var n = t && t.charAt(0)
                  , r = e.context;
                if (/[\]\}]/.test(n))
                    for (; r && "pattern" == r.type; )
                        r = r.prev;
                var i = r && n == r.type;
                return r ? "pattern" == r.type ? r.col : r.align ? r.col + (i ? 0 : 1) : r.indent + (i ? 0 : O.unit) : 0
            }
        }
    },
    6778: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = 0; O < e.length; ++O)
                t[e[O]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            r: function() {
                return Q
            }
        });
        var r, i = ["NULL", "NA", "Inf", "NaN", "NA_integer_", "NA_real_", "NA_complex_", "NA_character_", "TRUE", "FALSE"], a = ["list", "quote", "bquote", "eval", "return", "call", "parse", "deparse"], o = ["if", "else", "repeat", "while", "function", "for", "in", "next", "break"], s = n(i), l = n(a), c = n(o), u = n(["if", "else", "repeat", "while", "function", "for"]), p = /[+\-*\/^<>=!&|~$:]/;
        function d(e, t) {
            r = null;
            var O = e.next();
            if ("#" == O)
                return e.skipToEnd(),
                "comment";
            if ("0" == O && e.eat("x"))
                return e.eatWhile(/[\da-f]/i),
                "number";
            if ("." == O && e.eat(/\d/))
                return e.match(/\d*(?:e[+\-]?\d+)?/),
                "number";
            if (/\d/.test(O))
                return e.match(/\d*(?:\.\d+)?(?:e[+\-]\d+)?L?/),
                "number";
            if ("'" == O || '"' == O)
                return t.tokenize = function(e, t) {
                    if (e.eat("\\")) {
                        var n, r = e.next();
                        return "x" == r ? e.match(/^[a-f0-9]{2}/i) : ("u" == r || "U" == r) && e.eat("{") && e.skipTo("}") ? e.next() : "u" == r ? e.match(/^[a-f0-9]{4}/i) : "U" == r ? e.match(/^[a-f0-9]{8}/i) : /[0-7]/.test(r) && e.match(/^[0-7]{1,2}/),
                        "string.special"
                    }
                    for (; null != (n = e.next()); ) {
                        if (n == O) {
                            t.tokenize = d;
                            break
                        }
                        if ("\\" == n) {
                            e.backUp(1);
                            break
                        }
                    }
                    return "string"
                }
                ,
                "string";
            if ("`" == O)
                return e.match(/[^`]+`/),
                "string.special";
            if ("." == O && e.match(/.(?:[.]|\d+)/))
                return "keyword";
            else if (/[a-zA-Z\.]/.test(O)) {
                e.eatWhile(/[\w\.]/);
                var n = e.current();
                return s.propertyIsEnumerable(n) ? "atom" : c.propertyIsEnumerable(n) ? (u.propertyIsEnumerable(n) && !e.match(/\s*if(\s+|$)/, !1) && (r = "block"),
                "keyword") : l.propertyIsEnumerable(n) ? "builtin" : "variable"
            } else if ("%" == O)
                return e.skipTo("%") && e.next(),
                "variableName.special";
            else if ("<" == O && e.eat("-") || "<" == O && e.match("<-") || "-" == O && e.match(/>>?/))
                return "operator";
            else if ("=" == O && t.ctx.argList)
                return "operator";
            else if (p.test(O))
                return "$" == O || e.eatWhile(p),
                "operator";
            else if (!/[\(\){}\[\];]/.test(O))
                return null;
            else
                return (r = O,
                ";" == O) ? "punctuation" : null
        }
        function f(e, t, O) {
            e.ctx = {
                type: t,
                indent: e.indent,
                flags: 0,
                column: O.column(),
                prev: e.ctx
            }
        }
        function h(e, t) {
            var O = e.ctx;
            e.ctx = {
                type: O.type,
                indent: O.indent,
                flags: O.flags | t,
                column: O.column,
                prev: O.prev
            }
        }
        function m(e) {
            e.indent = e.ctx.indent,
            e.ctx = e.ctx.prev
        }
        let Q = {
            name: "r",
            startState: function(e) {
                return {
                    tokenize: d,
                    ctx: {
                        type: "top",
                        indent: -e,
                        flags: 2
                    },
                    indent: 0,
                    afterIdent: !1
                }
            },
            token: function(e, t) {
                if (e.sol() && ((3 & t.ctx.flags) == 0 && (t.ctx.flags |= 2),
                4 & t.ctx.flags && m(t),
                t.indent = e.indentation()),
                e.eatSpace())
                    return null;
                var O = t.tokenize(e, t);
                return "comment" != O && (2 & t.ctx.flags) == 0 && h(t, 1),
                (";" == r || "{" == r || "}" == r) && "block" == t.ctx.type && m(t),
                "{" == r ? f(t, "}", e) : "(" == r ? (f(t, ")", e),
                t.afterIdent && (t.ctx.argList = !0)) : "[" == r ? f(t, "]", e) : "block" == r ? f(t, "block", e) : r == t.ctx.type ? m(t) : "block" == t.ctx.type && "comment" != O && h(t, 4),
                t.afterIdent = "variable" == O || "keyword" == O,
                O
            },
            indent: function(e, t, O) {
                if (e.tokenize != d)
                    return 0;
                var n = t && t.charAt(0)
                  , r = e.ctx
                  , i = n == r.type;
                return (4 & r.flags && (r = r.prev),
                "block" == r.type) ? r.indent + ("{" == n ? 0 : O.unit) : 1 & r.flags ? r.column + (i ? 0 : 1) : r.indent + (i ? 0 : O.unit)
            },
            languageData: {
                wordChars: ".",
                commentTokens: {
                    line: "#"
                },
                autocomplete: i.concat(a, o)
            }
        }
    },
    2685: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = 0, n = e.length; O < n; ++O)
                t[e[O]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            ruby: function() {
                return h
            }
        });
        var r, i = ["alias", "and", "BEGIN", "begin", "break", "case", "class", "def", "defined?", "do", "else", "elsif", "END", "end", "ensure", "false", "for", "if", "in", "module", "next", "not", "or", "redo", "rescue", "retry", "return", "self", "super", "then", "true", "undef", "unless", "until", "when", "while", "yield", "nil", "raise", "throw", "catch", "fail", "loop", "callcc", "caller", "lambda", "proc", "public", "protected", "private", "require", "load", "require_relative", "extend", "autoload", "__END__", "__FILE__", "__LINE__", "__dir__"], a = n(i), o = n(["def", "class", "case", "for", "while", "until", "module", "catch", "loop", "proc", "begin"]), s = n(["end", "until"]), l = {
            "[": "]",
            "{": "}",
            "(": ")"
        }, c = {
            "]": "[",
            "}": "{",
            ")": "("
        };
        function u(e, t, O) {
            return O.tokenize.push(e),
            e(t, O)
        }
        function p(e, t) {
            if (e.sol() && e.match("=begin") && e.eol())
                return t.tokenize.push(f),
                "comment";
            if (e.eatSpace())
                return null;
            var O, n, i, a = e.next();
            if ("`" == a || "'" == a || '"' == a)
                return u(d(a, "string", '"' == a || "`" == a), e, t);
            if ("/" == a)
                return !function(e) {
                    for (var t, O = e.pos, n = 0, r = !1, i = !1; null != (t = e.next()); )
                        if (i)
                            i = !1;
                        else {
                            if ("[{(".indexOf(t) > -1)
                                n++;
                            else if ("]})".indexOf(t) > -1) {
                                if (--n < 0)
                                    break
                            } else if ("/" == t && 0 == n) {
                                r = !0;
                                break
                            }
                            i = "\\" == t
                        }
                    return e.backUp(e.pos - O),
                    r
                }(e) ? "operator" : u(d(a, "string.special", !0), e, t);
            if ("%" == a) {
                var o = "string"
                  , s = !0;
                e.eat("s") ? o = "atom" : e.eat(/[WQ]/) ? o = "string" : e.eat(/[r]/) ? o = "string.special" : e.eat(/[wxq]/) && (o = "string",
                s = !1);
                var c = e.eat(/[^\w\s=]/);
                return c ? (l.propertyIsEnumerable(c) && (c = l[c]),
                u(d(c, o, s, !0), e, t)) : "operator"
            }
            if ("#" == a)
                return e.skipToEnd(),
                "comment";
            if ("<" == a && (i = e.match(/^<([-~])[\`\"\']?([a-zA-Z_?]\w*)[\`\"\']?(?:;|$)/)))
                return u((O = i[2],
                n = i[1],
                function(e, t) {
                    return n && e.eatSpace(),
                    e.match(O) ? t.tokenize.pop() : e.skipToEnd(),
                    "string"
                }
                ), e, t);
            if ("0" == a)
                return e.eat("x") ? e.eatWhile(/[\da-fA-F]/) : e.eat("b") ? e.eatWhile(/[01]/) : e.eatWhile(/[0-7]/),
                "number";
            if (/\d/.test(a))
                return e.match(/^[\d_]*(?:\.[\d_]+)?(?:[eE][+\-]?[\d_]+)?/),
                "number";
            else if ("?" == a) {
                for (; e.match(/^\\[CM]-/); )
                    ;
                return e.eat("\\") ? e.eatWhile(/\w/) : e.next(),
                "string"
            } else {
                if (":" == a)
                    return e.eat("'") ? u(d("'", "atom", !1), e, t) : e.eat('"') ? u(d('"', "atom", !0), e, t) : e.eat(/[\<\>]/) ? (e.eat(/[\<\>]/),
                    "atom") : e.eat(/[\+\-\*\/\&\|\:\!]/) ? "atom" : e.eat(/[a-zA-Z$@_\xa1-\uffff]/) ? (e.eatWhile(/[\w$\xa1-\uffff]/),
                    e.eat(/[\?\!\=]/),
                    "atom") : "operator";
                if ("@" == a && e.match(/^@?[a-zA-Z_\xa1-\uffff]/))
                    return e.eat("@"),
                    e.eatWhile(/[\w\xa1-\uffff]/),
                    "propertyName";
                if ("$" == a)
                    return e.eat(/[a-zA-Z_]/) ? e.eatWhile(/[\w]/) : e.eat(/\d/) ? e.eat(/\d/) : e.next(),
                    "variableName.special";
                if (/[a-zA-Z_\xa1-\uffff]/.test(a))
                    return (e.eatWhile(/[\w\xa1-\uffff]/),
                    e.eat(/[\?\!]/),
                    e.eat(":")) ? "atom" : "variable";
                if ("|" == a && (t.varList || "{" == t.lastTok || "do" == t.lastTok))
                    return r = "|",
                    null;
                if (/[\(\)\[\]{}\\;]/.test(a))
                    return r = a,
                    null;
                if ("-" == a && e.eat(">"))
                    return "operator";
                if (!/[=+\-\/*:\.^%<>~|]/.test(a))
                    return null;
                var p = e.eatWhile(/[=+\-\/*:\.^%<>~|]/);
                return "." != a || p || (r = "."),
                "operator"
            }
        }
        function d(e, t, O, n) {
            return function(r, i) {
                var a, o = !1;
                for ("read-quoted-paused" === i.context.type && (i.context = i.context.prev,
                r.eat("}")); null != (a = r.next()); ) {
                    if (a == e && (n || !o)) {
                        i.tokenize.pop();
                        break
                    }
                    if (O && "#" == a && !o) {
                        if (r.eat("{")) {
                            "}" == e && (i.context = {
                                prev: i.context,
                                type: "read-quoted-paused"
                            }),
                            i.tokenize.push(function e(t) {
                                return t || (t = 1),
                                function(O, n) {
                                    if ("}" == O.peek()) {
                                        if (1 == t)
                                            return n.tokenize.pop(),
                                            n.tokenize[n.tokenize.length - 1](O, n);
                                        n.tokenize[n.tokenize.length - 1] = e(t - 1)
                                    } else
                                        "{" == O.peek() && (n.tokenize[n.tokenize.length - 1] = e(t + 1));
                                    return p(O, n)
                                }
                            }());
                            break
                        }
                        if (/[@\$]/.test(r.peek())) {
                            i.tokenize.push(function() {
                                var e = !1;
                                return function(t, O) {
                                    return e ? (O.tokenize.pop(),
                                    O.tokenize[O.tokenize.length - 1](t, O)) : (e = !0,
                                    p(t, O))
                                }
                            }());
                            break
                        }
                    }
                    o = !o && "\\" == a
                }
                return t
            }
        }
        function f(e, t) {
            return e.sol() && e.match("=end") && e.eol() && t.tokenize.pop(),
            e.skipToEnd(),
            "comment"
        }
        let h = {
            name: "ruby",
            startState: function(e) {
                return {
                    tokenize: [p],
                    indented: 0,
                    context: {
                        type: "top",
                        indented: -e
                    },
                    continuedLine: !1,
                    lastTok: null,
                    varList: !1
                }
            },
            token: function(e, t) {
                r = null,
                e.sol() && (t.indented = e.indentation());
                var O, n = t.tokenize[t.tokenize.length - 1](e, t), i = r;
                if ("variable" == n) {
                    var l = e.current();
                    "keyword" == (n = "." == t.lastTok ? "property" : a.propertyIsEnumerable(e.current()) ? "keyword" : /^[A-Z]/.test(l) ? "tag" : "def" == t.lastTok || "class" == t.lastTok || t.varList ? "def" : "variable") && (i = l,
                    o.propertyIsEnumerable(l) ? O = "indent" : s.propertyIsEnumerable(l) ? O = "dedent" : ("if" == l || "unless" == l) && e.column() == e.indentation() ? O = "indent" : "do" == l && t.context.indented < t.indented && (O = "indent"))
                }
                return (r || n && "comment" != n) && (t.lastTok = i),
                "|" == r && (t.varList = !t.varList),
                "indent" == O || /[\(\[\{]/.test(r) ? t.context = {
                    prev: t.context,
                    type: r || n,
                    indented: t.indented
                } : ("dedent" == O || /[\)\]\}]/.test(r)) && t.context.prev && (t.context = t.context.prev),
                e.eol() && (t.continuedLine = "\\" == r || "operator" == n),
                n
            },
            indent: function(e, t, O) {
                if (e.tokenize[e.tokenize.length - 1] != p)
                    return null;
                var n = t && t.charAt(0)
                  , r = e.context
                  , i = r.type == c[n] || "keyword" == r.type && /^(?:end|until|else|elsif|when|rescue)\b/.test(t);
                return r.indented + (i ? 0 : O.unit) + (e.continuedLine ? O.unit : 0)
            },
            languageData: {
                indentOnInput: /^\s*(?:end|rescue|elsif|else|\})$/,
                commentTokens: {
                    line: "#"
                },
                autocomplete: i
            }
        }
    },
    4595: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            sas: function() {
                return s
            }
        });
        var n = {}
          , r = {
            eq: "operator",
            lt: "operator",
            le: "operator",
            gt: "operator",
            ge: "operator",
            in: "operator",
            ne: "operator",
            or: "operator"
        }
          , i = /(<=|>=|!=|<>)/
          , a = /[=\(:\),{}.*<>+\-\/^\[\]]/;
        function o(e, t, O) {
            if (O)
                for (var r = t.split(" "), i = 0; i < r.length; i++)
                    n[r[i]] = {
                        style: e,
                        state: O
                    }
        }
        o("def", "stack pgm view source debug nesting nolist", ["inDataStep"]),
        o("def", "if while until for do do; end end; then else cancel", ["inDataStep"]),
        o("def", "label format _n_ _error_", ["inDataStep"]),
        o("def", "ALTER BUFNO BUFSIZE CNTLLEV COMPRESS DLDMGACTION ENCRYPT ENCRYPTKEY EXTENDOBSCOUNTER GENMAX GENNUM INDEX LABEL OBSBUF OUTREP PW PWREQ READ REPEMPTY REPLACE REUSE ROLE SORTEDBY SPILL TOBSNO TYPE WRITE FILECLOSE FIRSTOBS IN OBS POINTOBS WHERE WHEREUP IDXNAME IDXWHERE DROP KEEP RENAME", ["inDataStep"]),
        o("def", "filevar finfo finv fipname fipnamel fipstate first firstobs floor", ["inDataStep"]),
        o("def", "varfmt varinfmt varlabel varlen varname varnum varray varrayx vartype verify vformat vformatd vformatdx vformatn vformatnx vformatw vformatwx vformatx vinarray vinarrayx vinformat vinformatd vinformatdx vinformatn vinformatnx vinformatw vinformatwx vinformatx vlabel vlabelx vlength vlengthx vname vnamex vnferr vtype vtypex weekday", ["inDataStep"]),
        o("def", "zipfips zipname zipnamel zipstate", ["inDataStep"]),
        o("def", "put putc putn", ["inDataStep"]),
        o("builtin", "data run", ["inDataStep"]),
        o("def", "data", ["inProc"]),
        o("def", "%if %end %end; %else %else; %do %do; %then", ["inMacro"]),
        o("builtin", "proc run; quit; libname filename %macro %mend option options", ["ALL"]),
        o("def", "footnote title libname ods", ["ALL"]),
        o("def", "%let %put %global %sysfunc %eval ", ["ALL"]),
        o("variable", "&sysbuffr &syscc &syscharwidth &syscmd &sysdate &sysdate9 &sysday &sysdevic &sysdmg &sysdsn &sysencoding &sysenv &syserr &syserrortext &sysfilrc &syshostname &sysindex &sysinfo &sysjobid &syslast &syslckrc &syslibrc &syslogapplname &sysmacroname &sysmenv &sysmsg &sysncpu &sysodspath &sysparm &syspbuff &sysprocessid &sysprocessname &sysprocname &sysrc &sysscp &sysscpl &sysscpl &syssite &sysstartid &sysstartname &systcpiphostname &systime &sysuserid &sysver &sysvlong &sysvlong4 &syswarningtext", ["ALL"]),
        o("def", "source2 nosource2 page pageno pagesize", ["ALL"]),
        o("def", "_all_ _character_ _cmd_ _freq_ _i_ _infile_ _last_ _msg_ _null_ _numeric_ _temporary_ _type_ abort abs addr adjrsq airy alpha alter altlog altprint and arcos array arsin as atan attrc attrib attrn authserver autoexec awscontrol awsdef awsmenu awsmenumerge awstitle backward band base betainv between blocksize blshift bnot bor brshift bufno bufsize bxor by byerr byline byte calculated call cards cards4 catcache cbufno cdf ceil center cexist change chisq cinv class cleanup close cnonct cntllev coalesce codegen col collate collin column comamid comaux1 comaux2 comdef compbl compound compress config continue convert cos cosh cpuid create cross crosstab css curobs cv daccdb daccdbsl daccsl daccsyd dacctab dairy datalines datalines4 datejul datepart datetime day dbcslang dbcstype dclose ddfm ddm delete delimiter depdb depdbsl depsl depsyd deptab dequote descending descript design= device dflang dhms dif digamma dim dinfo display distinct dkricond dkrocond dlm dnum do dopen doptname doptnum dread drop dropnote dsname dsnferr echo else emaildlg emailid emailpw emailserver emailsys encrypt end endsas engine eof eov erf erfc error errorcheck errors exist exp fappend fclose fcol fdelete feedback fetch fetchobs fexist fget file fileclose fileexist filefmt filename fileref  fmterr fmtsearch fnonct fnote font fontalias  fopen foptname foptnum force formatted formchar formdelim formdlim forward fpoint fpos fput fread frewind frlen from fsep fuzz fwrite gaminv gamma getoption getvarc getvarn go goto group gwindow hbar hbound helpenv helploc hms honorappearance hosthelp hostprint hour hpct html hvar ibessel ibr id if index indexc indexw initcmd initstmt inner input inputc inputn inr insert int intck intnx into intrr invaliddata irr is jbessel join juldate keep kentb kurtosis label lag last lbound leave left length levels lgamma lib  library libref line linesize link list log log10 log2 logpdf logpmf logsdf lostcard lowcase lrecl ls macro macrogen maps mautosource max maxdec maxr mdy mean measures median memtype merge merror min minute missing missover mlogic mod mode model modify month mopen mort mprint mrecall msglevel msymtabmax mvarsize myy n nest netpv new news nmiss no nobatch nobs nocaps nocardimage nocenter nocharcode nocmdmac nocol nocum nodate nodbcs nodetails nodmr nodms nodmsbatch nodup nodupkey noduplicates noechoauto noequals noerrorabend noexitwindows nofullstimer noicon noimplmac noint nolist noloadlist nomiss nomlogic nomprint nomrecall nomsgcase nomstored nomultenvappl nonotes nonumber noobs noovp nopad nopercent noprint noprintinit normal norow norsasuser nosetinit  nosplash nosymbolgen note notes notitle notitles notsorted noverbose noxsync noxwait npv null number numkeys nummousekeys nway obs  on open     order ordinal otherwise out outer outp= output over ovp p(1 5 10 25 50 75 90 95 99) pad pad2  paired parm parmcards path pathdll pathname pdf peek peekc pfkey pmf point poisson poke position printer probbeta probbnml probchi probf probgam probhypr probit probnegb probnorm probsig probt procleave prt ps  pw pwreq qtr quote r ranbin rancau random ranexp rangam range ranks rannor ranpoi rantbl rantri ranuni rcorr read recfm register regr remote remove rename repeat repeated replace resolve retain return reuse reverse rewind right round rsquare rtf rtrace rtraceloc s s2 samploc sasautos sascontrol sasfrscr sasmsg sasmstore sasscript sasuser saving scan sdf second select selection separated seq serror set setcomm setot sign simple sin sinh siteinfo skewness skip sle sls sortedby sortpgm sortseq sortsize soundex  spedis splashlocation split spool sqrt start std stderr stdin stfips stimer stname stnamel stop stopover sub subgroup subpopn substr sum sumwgt symbol symbolgen symget symput sysget sysin sysleave sysmsg sysparm sysprint sysprintfont sysprod sysrc system t table tables tan tanh tapeclose tbufsize terminal test then timepart tinv  tnonct to today tol tooldef totper transformout translate trantab tranwrd trigamma trim trimn trunc truncover type unformatted uniform union until upcase update user usericon uss validate value var  weight when where while wincharset window work workinit workterm write wsum xsync xwait yearcutoff yes yyq  min max", ["inDataStep", "inProc"]),
        o("operator", "and not ", ["inDataStep", "inProc"]);
        let s = {
            name: "sas",
            startState: function() {
                return {
                    inDataStep: !1,
                    inProc: !1,
                    inMacro: !1,
                    nextword: !1,
                    continueString: null,
                    continueComment: !1
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : function(e, t) {
                    var O, o = e.next();
                    if ("/" === o && e.eat("*"))
                        return t.continueComment = !0,
                        "comment";
                    if (!0 === t.continueComment)
                        return "*" === o && "/" === e.peek() ? (e.next(),
                        t.continueComment = !1) : e.skipTo("*") ? (e.skipTo("*"),
                        e.next(),
                        e.eat("/") && (t.continueComment = !1)) : e.skipToEnd(),
                        "comment";
                    if ("*" == o && e.column() == e.indentation())
                        return e.skipToEnd(),
                        "comment";
                    var s = o + e.peek();
                    if (('"' === o || "'" === o) && !t.continueString)
                        return t.continueString = o,
                        "string";
                    if (t.continueString)
                        return t.continueString == o ? t.continueString = null : e.skipTo(t.continueString) ? (e.next(),
                        t.continueString = null) : e.skipToEnd(),
                        "string";
                    if (null !== t.continueString && e.eol())
                        return e.skipTo(t.continueString) || e.skipToEnd(),
                        "string";
                    if (/[\d\.]/.test(o))
                        return "." === o ? e.match(/^[0-9]+([eE][\-+]?[0-9]+)?/) : "0" === o ? e.match(/^[xX][0-9a-fA-F]+/) || e.match(/^0[0-7]+/) : e.match(/^[0-9]*\.?[0-9]*([eE][\-+]?[0-9]+)?/),
                        "number";
                    if (i.test(o + e.peek()))
                        return e.next(),
                        "operator";
                    if (r.hasOwnProperty(s)) {
                        if (e.next(),
                        " " === e.peek())
                            return r[s.toLowerCase()]
                    } else if (a.test(o))
                        return "operator";
                    if (null != e.match(/[%&;\w]+/, !1)) {
                        if (O = o + e.match(/[%&;\w]+/, !0),
                        /&/.test(O))
                            return "variable"
                    } else
                        O = o;
                    if (t.nextword)
                        return e.match(/[\w]+/),
                        "." === e.peek() && e.skipTo(" "),
                        t.nextword = !1,
                        "variableName.special";
                    if (O = O.toLowerCase(),
                    t.inDataStep) {
                        if ("run;" === O || e.match(/run\s;/))
                            return t.inDataStep = !1,
                            "builtin";
                        if (O && "." === e.next())
                            return /\w/.test(e.peek()) ? "variableName.special" : "variable";
                        if (O && n.hasOwnProperty(O) && (-1 !== n[O].state.indexOf("inDataStep") || -1 !== n[O].state.indexOf("ALL"))) {
                            e.start < e.pos && e.backUp(e.pos - e.start);
                            for (var l = 0; l < O.length; ++l)
                                e.next();
                            return n[O].style
                        }
                    }
                    if (t.inProc) {
                        if ("run;" === O || "quit;" === O)
                            return t.inProc = !1,
                            "builtin";
                        if (O && n.hasOwnProperty(O) && (-1 !== n[O].state.indexOf("inProc") || -1 !== n[O].state.indexOf("ALL")))
                            return e.match(/[\w]+/),
                            n[O].style
                    }
                    if (t.inMacro)
                        return "%mend" === O ? (";" === e.peek() && e.next(),
                        t.inMacro = !1,
                        "builtin") : O && n.hasOwnProperty(O) && (-1 !== n[O].state.indexOf("inMacro") || -1 !== n[O].state.indexOf("ALL")) ? (e.match(/[\w]+/),
                        n[O].style) : "atom";
                    if (O && n.hasOwnProperty(O)) {
                        if (e.backUp(1),
                        e.match(/[\w]+/),
                        "data" === O && !1 === /=/.test(e.peek()))
                            return t.inDataStep = !0,
                            t.nextword = !0,
                            "builtin";
                        if ("proc" === O)
                            return t.inProc = !0,
                            t.nextword = !0,
                            "builtin";
                        if ("%macro" === O)
                            return t.inMacro = !0,
                            t.nextword = !0,
                            "builtin";
                        if (/title[1-9]/.test(O))
                            return "def";
                        if ("footnote" === O)
                            return e.eat(/[1-9]/),
                            "def";
                        if (!0 === t.inDataStep && -1 !== n[O].state.indexOf("inDataStep") || !0 === t.inProc && -1 !== n[O].state.indexOf("inProc") || !0 === t.inMacro && -1 !== n[O].state.indexOf("inMacro") || -1 !== n[O].state.indexOf("ALL"))
                            return n[O].style
                    }
                    return null
                }(e, t)
            },
            languageData: {
                commentTokens: {
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                }
            }
        }
    },
    8346: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            scheme: function() {
                return y
            }
        });
        var n = "comment"
          , r = "string"
          , i = "symbol"
          , a = "atom"
          , o = "number"
          , s = "bracket";
        function l(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        var c = l("λ case-lambda call/cc class cond-expand define-class define-values exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax define-macro defmacro delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt #f floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? #t tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?")
          , u = l("define let letrec let* lambda define-macro defmacro let-syntax letrec-syntax let-values let*-values define-syntax syntax-rules define-values when unless");
        function p(e, t, O) {
            this.indent = e,
            this.type = t,
            this.prev = O
        }
        function d(e, t, O) {
            e.indentStack = new p(t,O,e.indentStack)
        }
        var f = new RegExp(/^(?:[-+]i|[-+][01]+#*(?:\/[01]+#*)?i|[-+]?[01]+#*(?:\/[01]+#*)?@[-+]?[01]+#*(?:\/[01]+#*)?|[-+]?[01]+#*(?:\/[01]+#*)?[-+](?:[01]+#*(?:\/[01]+#*)?)?i|[-+]?[01]+#*(?:\/[01]+#*)?)(?=[()\s;"]|$)/i)
          , h = new RegExp(/^(?:[-+]i|[-+][0-7]+#*(?:\/[0-7]+#*)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?@[-+]?[0-7]+#*(?:\/[0-7]+#*)?|[-+]?[0-7]+#*(?:\/[0-7]+#*)?[-+](?:[0-7]+#*(?:\/[0-7]+#*)?)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?)(?=[()\s;"]|$)/i)
          , m = new RegExp(/^(?:[-+]i|[-+][\da-f]+#*(?:\/[\da-f]+#*)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?@[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?[-+](?:[\da-f]+#*(?:\/[\da-f]+#*)?)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?)(?=[()\s;"]|$)/i)
          , Q = new RegExp(/^(?:[-+]i|[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)i|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)@[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)?i|(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*))(?=[()\s;"]|$)/i);
        function $(e) {
            return e.match(f)
        }
        function g(e) {
            return e.match(h)
        }
        function P(e, t) {
            return !0 === t && e.backUp(1),
            e.match(Q)
        }
        function S(e) {
            return e.match(m)
        }
        function b(e, t) {
            for (var O, n = !1; null != (O = e.next()); ) {
                if (O == t.token && !n) {
                    t.state.mode = !1;
                    break
                }
                n = !n && "\\" == O
            }
        }
        let y = {
            name: "scheme",
            startState: function() {
                return {
                    indentStack: null,
                    indentation: 0,
                    mode: !1,
                    sExprComment: !1,
                    sExprQuote: !1
                }
            },
            token: function(e, t) {
                if (null == t.indentStack && e.sol() && (t.indentation = e.indentation()),
                e.eatSpace())
                    return null;
                var O = null;
                switch (t.mode) {
                case "string":
                    b(e, {
                        token: '"',
                        state: t
                    }),
                    O = r;
                    break;
                case "symbol":
                    b(e, {
                        token: "|",
                        state: t
                    }),
                    O = i;
                    break;
                case "comment":
                    for (var l, p = !1; null != (l = e.next()); ) {
                        if ("#" == l && p) {
                            t.mode = !1;
                            break
                        }
                        p = "|" == l
                    }
                    O = n;
                    break;
                case "s-expr-comment":
                    if (t.mode = !1,
                    "(" == e.peek() || "[" == e.peek())
                        t.sExprComment = 0;
                    else {
                        e.eatWhile(/[^\s\(\)\[\]]/),
                        O = n;
                        break
                    }
                default:
                    var f = e.next();
                    if ('"' == f)
                        t.mode = "string",
                        O = r;
                    else if ("'" == f)
                        "(" == e.peek() || "[" == e.peek() ? ("number" != typeof t.sExprQuote && (t.sExprQuote = 0),
                        O = a) : (e.eatWhile(/[\w_\-!$%&*+\.\/:<=>?@\^~]/),
                        O = a);
                    else if ("|" == f)
                        t.mode = "symbol",
                        O = i;
                    else if ("#" == f) {
                        if (e.eat("|"))
                            t.mode = "comment",
                            O = n;
                        else if (e.eat(/[tf]/i))
                            O = a;
                        else if (e.eat(";"))
                            t.mode = "s-expr-comment",
                            O = n;
                        else {
                            var h = null
                              , m = !1
                              , Q = !0;
                            e.eat(/[ei]/i) ? m = !0 : e.backUp(1),
                            e.match(/^#b/i) ? h = $ : e.match(/^#o/i) ? h = g : e.match(/^#x/i) ? h = S : e.match(/^#d/i) ? h = P : e.match(/^[-+0-9.]/, !1) ? (Q = !1,
                            h = P) : m || e.eat("#"),
                            null != h && (Q && !m && e.match(/^#[ei]/i),
                            h(e) && (O = o))
                        }
                    } else if (/^[-+0-9.]/.test(f) && P(e, !0))
                        O = o;
                    else if (";" == f)
                        e.skipToEnd(),
                        O = n;
                    else if ("(" == f || "[" == f) {
                        for (var y, x = "", X = e.column(); null != (y = e.eat(/[^\s\(\[\;\)\]]/)); )
                            x += y;
                        x.length > 0 && u.propertyIsEnumerable(x) ? d(t, X + 2, f) : (e.eatSpace(),
                        e.eol() || ";" == e.peek() ? d(t, X + 1, f) : d(t, X + e.current().length, f)),
                        e.backUp(e.current().length - 1),
                        "number" == typeof t.sExprComment && t.sExprComment++,
                        "number" == typeof t.sExprQuote && t.sExprQuote++,
                        O = s
                    } else
                        ")" == f || "]" == f ? (O = s,
                        null != t.indentStack && t.indentStack.type == (")" == f ? "(" : "[") && (t.indentStack = t.indentStack.prev,
                        "number" == typeof t.sExprComment && 0 == --t.sExprComment && (O = n,
                        t.sExprComment = !1),
                        "number" == typeof t.sExprQuote && 0 == --t.sExprQuote && (O = a,
                        t.sExprQuote = !1))) : (e.eatWhile(/[\w_\-!$%&*+\.\/:<=>?@\^~]/),
                        O = c && c.propertyIsEnumerable(e.current()) ? "builtin" : "variable")
                }
                return "number" == typeof t.sExprComment ? n : "number" == typeof t.sExprQuote ? a : O
            },
            indent: function(e) {
                return null == e.indentStack ? e.indentation : e.indentStack.indent
            },
            languageData: {
                closeBrackets: {
                    brackets: ["(", "[", "{", '"']
                },
                commentTokens: {
                    line: ";;"
                }
            }
        }
    },
    6148: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            shell: function() {
                return p
            }
        });
        var n = {};
        function r(e, t) {
            for (var O = 0; O < t.length; O++)
                n[t[O]] = e
        }
        var i = ["true", "false"]
          , a = ["if", "then", "do", "else", "elif", "while", "until", "for", "in", "esac", "fi", "fin", "fil", "done", "exit", "set", "unset", "export", "function"]
          , o = ["ab", "awk", "bash", "beep", "cat", "cc", "cd", "chown", "chmod", "chroot", "clear", "cp", "curl", "cut", "diff", "echo", "find", "gawk", "gcc", "get", "git", "grep", "hg", "kill", "killall", "ln", "ls", "make", "mkdir", "openssl", "mv", "nc", "nl", "node", "npm", "ping", "ps", "restart", "rm", "rmdir", "sed", "service", "sh", "shopt", "shred", "source", "sort", "sleep", "ssh", "start", "stop", "su", "sudo", "svn", "tee", "telnet", "top", "touch", "vi", "vim", "wall", "wc", "wget", "who", "write", "yes", "zsh"];
        function s(e, t) {
            if (e.eatSpace())
                return null;
            var O = e.sol()
              , r = e.next();
            if ("\\" === r)
                return e.next(),
                null;
            if ("'" === r || '"' === r || "`" === r)
                return t.tokens.unshift(l(r, "`" === r ? "quote" : "string")),
                u(e, t);
            if ("#" === r)
                return O && e.eat("!") ? (e.skipToEnd(),
                "meta") : (e.skipToEnd(),
                "comment");
            if ("$" === r)
                return t.tokens.unshift(c),
                u(e, t);
            if ("+" === r || "=" === r)
                return "operator";
            if ("-" === r)
                return e.eat("-"),
                e.eatWhile(/\w/),
                "attribute";
            if ("<" == r) {
                if (e.match("<<"))
                    return "operator";
                var i, a = e.match(/^<-?\s*['"]?([^'"]*)['"]?/);
                if (a)
                    return t.tokens.unshift((i = a[1],
                    function(e, t) {
                        return e.sol() && e.string == i && t.tokens.shift(),
                        e.skipToEnd(),
                        "string.special"
                    }
                    )),
                    "string.special"
            }
            if (/\d/.test(r) && (e.eatWhile(/\d/),
            e.eol() || !/\w/.test(e.peek())))
                return "number";
            e.eatWhile(/[\w-]/);
            var o = e.current();
            return "=" === e.peek() && /\w+/.test(o) ? "def" : n.hasOwnProperty(o) ? n[o] : null
        }
        function l(e, t) {
            var O = "(" == e ? ")" : "{" == e ? "}" : e;
            return function(n, r) {
                for (var i, a = !1; null != (i = n.next()); ) {
                    if (i !== O || a) {
                        if ("$" !== i || a || "'" === e || n.peek() == O) {
                            if (!a && e !== O && i === e)
                                return r.tokens.unshift(l(e, t)),
                                u(n, r);
                            if (!a && /['"]/.test(i) && !/['"]/.test(e)) {
                                r.tokens.unshift(function(e, t) {
                                    return function(O, n) {
                                        return n.tokens[0] = l(e, t),
                                        O.next(),
                                        u(O, n)
                                    }
                                }(i, "string")),
                                n.backUp(1);
                                break
                            }
                        } else {
                            a = !0,
                            n.backUp(1),
                            r.tokens.unshift(c);
                            break
                        }
                    } else {
                        r.tokens.shift();
                        break
                    }
                    a = !a && "\\" === i
                }
                return t
            }
        }
        r("atom", i),
        r("keyword", a),
        r("builtin", o);
        var c = function(e, t) {
            t.tokens.length > 1 && e.eat("$");
            var O = e.next();
            return /['"({]/.test(O) ? (t.tokens[0] = l(O, "(" == O ? "quote" : "{" == O ? "def" : "string"),
            u(e, t)) : (/\d/.test(O) || e.eatWhile(/\w/),
            t.tokens.shift(),
            "def")
        };
        function u(e, t) {
            return (t.tokens[0] || s)(e, t)
        }
        let p = {
            name: "shell",
            startState: function() {
                return {
                    tokens: []
                }
            },
            token: function(e, t) {
                return u(e, t)
            },
            languageData: {
                autocomplete: i.concat(a, o),
                closeBrackets: {
                    brackets: ["(", "[", "{", "'", '"', "`"]
                },
                commentTokens: {
                    line: "#"
                }
            }
        }
    },
    7671: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            sieve: function() {
                return l
            }
        });
        var r = n("if elsif else stop require")
          , i = n("true false not");
        function a(e, t) {
            var O = e.next();
            if ("/" == O && e.eat("*"))
                return t.tokenize = s,
                s(e, t);
            if ("#" === O)
                return e.skipToEnd(),
                "comment";
            if ('"' == O)
                return t.tokenize = function(e, t) {
                    for (var n, r = !1; null != (n = e.next()) && (n != O || r); )
                        r = !r && "\\" == n;
                    return r || (t.tokenize = a),
                    "string"
                }
                ,
                t.tokenize(e, t);
            if ("(" == O)
                return t._indent.push("("),
                t._indent.push("{"),
                null;
            if ("{" === O)
                return t._indent.push("{"),
                null;
            if (")" == O && (t._indent.pop(),
            t._indent.pop()),
            "}" === O)
                return t._indent.pop(),
                null;
            if ("," == O || ";" == O || /[{}\(\),;]/.test(O))
                return null;
            if (/\d/.test(O))
                return e.eatWhile(/[\d]/),
                e.eat(/[KkMmGg]/),
                "number";
            if (":" == O)
                return e.eatWhile(/[a-zA-Z_]/),
                e.eatWhile(/[a-zA-Z0-9_]/),
                "operator";
            e.eatWhile(/\w/);
            var n = e.current();
            return "text" == n && e.eat(":") ? (t.tokenize = o,
            "string") : r.propertyIsEnumerable(n) ? "keyword" : i.propertyIsEnumerable(n) ? "atom" : null
        }
        function o(e, t) {
            return (t._multiLineString = !0,
            e.sol()) ? ("." == e.next() && e.eol() && (t._multiLineString = !1,
            t.tokenize = a),
            "string") : (e.eatSpace(),
            "#" == e.peek()) ? (e.skipToEnd(),
            "comment") : (e.skipToEnd(),
            "string")
        }
        function s(e, t) {
            for (var O, n = !1; null != (O = e.next()); ) {
                if (n && "/" == O) {
                    t.tokenize = a;
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        let l = {
            name: "sieve",
            startState: function(e) {
                return {
                    tokenize: a,
                    baseIndent: e || 0,
                    _indent: []
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : (t.tokenize || a)(e, t)
            },
            indent: function(e, t, O) {
                var n = e._indent.length;
                return t && "}" == t[0] && n--,
                n < 0 && (n = 0),
                n * O.unit
            },
            languageData: {
                indentOnInput: /^\s*\}$/
            }
        }
    },
    4564: function(e, t, O) {
        "use strict";
        function n(e) {
            r(e, "start");
            var t = {}
              , O = e.languageData || {}
              , n = !1;
            for (var a in e)
                if (a != O && e.hasOwnProperty(a))
                    for (var o = t[a] = [], s = e[a], l = 0; l < s.length; l++) {
                        var c = s[l];
                        o.push(new i(c,e)),
                        (c.indent || c.dedent) && (n = !0)
                    }
            return {
                name: O.name,
                startState: function() {
                    return {
                        state: "start",
                        pending: null,
                        indent: n ? [] : null
                    }
                },
                copyState: function(e) {
                    var t = {
                        state: e.state,
                        pending: e.pending,
                        indent: e.indent && e.indent.slice(0)
                    };
                    return e.stack && (t.stack = e.stack.slice(0)),
                    t
                },
                token: function(e, O) {
                    if (O.pending) {
                        var n = O.pending.shift();
                        return 0 == O.pending.length && (O.pending = null),
                        e.pos += n.text.length,
                        n.token
                    }
                    for (var r = t[O.state], i = 0; i < r.length; i++) {
                        var a = r[i]
                          , o = (!a.data.sol || e.sol()) && e.match(a.regex);
                        if (o) {
                            a.data.next ? O.state = a.data.next : a.data.push ? ((O.stack || (O.stack = [])).push(O.state),
                            O.state = a.data.push) : a.data.pop && O.stack && O.stack.length && (O.state = O.stack.pop()),
                            a.data.indent && O.indent.push(e.indentation() + e.indentUnit),
                            a.data.dedent && O.indent.pop();
                            var s = a.token;
                            if (s && s.apply && (s = s(o)),
                            o.length > 2 && a.token && "string" != typeof a.token) {
                                O.pending = [];
                                for (var l = 2; l < o.length; l++)
                                    o[l] && O.pending.push({
                                        text: o[l],
                                        token: a.token[l - 1]
                                    });
                                return e.backUp(o[0].length - (o[1] ? o[1].length : 0)),
                                s[0]
                            }
                            if (s && s.join)
                                return s[0];
                            return s
                        }
                    }
                    return e.next(),
                    null
                },
                indent: function(e, n) {
                    if (null == e.indent || O.dontIndentStates && O.doneIndentState.indexOf(e.state) > -1)
                        return null;
                    var r = e.indent.length - 1
                      , i = t[e.state];
                    i: for (; ; ) {
                        for (var a = 0; a < i.length; a++) {
                            var o = i[a];
                            if (o.data.dedent && !1 !== o.data.dedentIfLineStart) {
                                var s = o.regex.exec(n);
                                if (s && s[0]) {
                                    r--,
                                    (o.next || o.push) && (i = t[o.next || o.push]),
                                    n = n.slice(s[0].length);
                                    continue i
                                }
                            }
                        }
                        break
                    }
                    return r < 0 ? 0 : e.indent[r]
                },
                languageData: O
            }
        }
        function r(e, t) {
            if (!e.hasOwnProperty(t))
                throw Error("Undefined state " + t + " in simple mode")
        }
        function i(e, t) {
            (e.next || e.push) && r(t, e.next || e.push),
            this.regex = function(e, t) {
                if (!e)
                    return /(?:)/;
                var O = "";
                return e instanceof RegExp ? (e.ignoreCase && (O = "i"),
                e = e.source) : e = String(e),
                RegExp("^(?:" + e + ")", O)
            }(e.regex),
            this.token = function(e) {
                if (!e)
                    return null;
                if (e.apply)
                    return e;
                if ("string" == typeof e)
                    return e.replace(/\./g, " ");
                for (var t = [], O = 0; O < e.length; O++)
                    t.push(e[O] && e[O].replace(/\./g, " "));
                return t
            }(e.token),
            this.data = e
        }
        O.d(t, {
            Q: function() {
                return n
            }
        })
    },
    8045: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            smalltalk: function() {
                return d
            }
        });
        var n = /[+\-\/\\*~<>=@%|&?!.,:;^]/
          , r = /true|false|nil|self|super|thisContext/
          , i = function(e, t) {
            this.next = e,
            this.parent = t
        }
          , a = function(e, t, O) {
            this.name = e,
            this.context = t,
            this.eos = O
        }
          , o = function() {
            this.context = new i(s,null),
            this.expectVariable = !0,
            this.indentation = 0,
            this.userIndentationDelta = 0
        };
        o.prototype.userIndent = function(e, t) {
            this.userIndentationDelta = e > 0 ? e / t - this.indentation : 0
        }
        ;
        var s = function(e, t, O) {
            var o = new a(null,t,!1)
              , s = e.next();
            return '"' === s ? o = l(e, new i(l,t)) : "'" === s ? o = c(e, new i(c,t)) : "#" === s ? "'" === e.peek() ? (e.next(),
            o = u(e, new i(u,t))) : e.eatWhile(/[^\s.{}\[\]()]/) ? o.name = "string.special" : o.name = "meta" : "$" === s ? ("<" === e.next() && (e.eatWhile(/[^\s>]/),
            e.next()),
            o.name = "string.special") : "|" === s && O.expectVariable ? o.context = new i(p,t) : /[\[\]{}()]/.test(s) ? (o.name = "bracket",
            o.eos = /[\[{(]/.test(s),
            "[" === s ? O.indentation++ : "]" === s && (O.indentation = Math.max(0, O.indentation - 1))) : n.test(s) ? (e.eatWhile(n),
            o.name = "operator",
            o.eos = ";" !== s) : /\d/.test(s) ? (e.eatWhile(/[\w\d]/),
            o.name = "number") : /[\w_]/.test(s) ? (e.eatWhile(/[\w\d_]/),
            o.name = O.expectVariable ? r.test(e.current()) ? "keyword" : "variable" : null) : o.eos = O.expectVariable,
            o
        }
          , l = function(e, t) {
            return e.eatWhile(/[^"]/),
            new a("comment",e.eat('"') ? t.parent : t,!0)
        }
          , c = function(e, t) {
            return e.eatWhile(/[^']/),
            new a("string",e.eat("'") ? t.parent : t,!1)
        }
          , u = function(e, t) {
            return e.eatWhile(/[^']/),
            new a("string.special",e.eat("'") ? t.parent : t,!1)
        }
          , p = function(e, t) {
            var O = new a(null,t,!1);
            return "|" === e.next() ? (O.context = t.parent,
            O.eos = !0) : (e.eatWhile(/[^|]/),
            O.name = "variable"),
            O
        };
        let d = {
            name: "smalltalk",
            startState: function() {
                return new o
            },
            token: function(e, t) {
                if (t.userIndent(e.indentation(), e.indentUnit),
                e.eatSpace())
                    return null;
                var O = t.context.next(e, t.context, t);
                return t.context = O.context,
                t.expectVariable = O.eos,
                O.name
            },
            blankLine: function(e, t) {
                e.userIndent(0, t)
            },
            indent: function(e, t, O) {
                var n = e.context.next === s && t && "]" === t.charAt(0) ? -1 : e.userIndentationDelta;
                return (e.indentation + n) * O.unit
            },
            languageData: {
                indentOnInput: /^\s*\]$/
            }
        }
    },
    1583: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            solr: function() {
                return o
            }
        });
        var n = /[^\s\|\!\+\-\*\?\~\^\&\:\(\)\[\]\{\}\"\\]/
          , r = /[\|\!\+\-\*\?\~\^\&]/
          , i = /^(OR|AND|NOT|TO)$/i;
        function a(e, t) {
            var O, o = e.next();
            return '"' == o ? t.tokenize = function(e, t) {
                for (var O, n = !1; null != (O = e.next()) && (O != o || n); )
                    n = !n && "\\" == O;
                return n || (t.tokenize = a),
                "string"
            }
            : r.test(o) ? t.tokenize = function(e, t) {
                return "|" == o ? e.eat(/\|/) : "&" == o && e.eat(/\&/),
                t.tokenize = a,
                "operator"
            }
            : n.test(o) && (t.tokenize = (O = o,
            function(e, t) {
                for (var r, o = O; (O = e.peek()) && null != O.match(n); )
                    o += e.next();
                return (t.tokenize = a,
                i.test(o)) ? "operator" : parseFloat(r = o).toString() === r ? "number" : ":" == e.peek() ? "propertyName" : "string"
            }
            )),
            t.tokenize != a ? t.tokenize(e, t) : null
        }
        let o = {
            name: "solr",
            startState: function() {
                return {
                    tokenize: a
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : t.tokenize(e, t)
            }
        }
    },
    8008: function(e, t, O) {
        "use strict";
        function n(e) {
            return RegExp("^(?:" + e.join("|") + ")$", "i")
        }
        O.r(t),
        O.d(t, {
            sparql: function() {
                return p
            }
        });
        var r, i = n(["str", "lang", "langmatches", "datatype", "bound", "sameterm", "isiri", "isuri", "iri", "uri", "bnode", "count", "sum", "min", "max", "avg", "sample", "group_concat", "rand", "abs", "ceil", "floor", "round", "concat", "substr", "strlen", "replace", "ucase", "lcase", "encode_for_uri", "contains", "strstarts", "strends", "strbefore", "strafter", "year", "month", "day", "hours", "minutes", "seconds", "timezone", "tz", "now", "uuid", "struuid", "md5", "sha1", "sha256", "sha384", "sha512", "coalesce", "if", "strlang", "strdt", "isnumeric", "regex", "exists", "isblank", "isliteral", "a", "bind"]), a = n(["base", "prefix", "select", "distinct", "reduced", "construct", "describe", "ask", "from", "named", "where", "order", "limit", "offset", "filter", "optional", "graph", "by", "asc", "desc", "as", "having", "undef", "values", "group", "minus", "in", "not", "service", "silent", "using", "insert", "delete", "union", "true", "false", "with", "data", "copy", "to", "move", "add", "create", "drop", "clear", "load", "into"]), o = /[*+\-<>=&|\^\/!\?]/;
        function s(e, t) {
            var O = e.next();
            if (r = null,
            "$" == O || "?" == O)
                return "?" == O && e.match(/\s/, !1) ? "operator" : (e.match(/^[A-Za-z0-9_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][A-Za-z0-9_\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]*/),
                "variableName.local");
            if ("<" == O && !e.match(/^[\s\u00a0=]/, !1))
                return e.match(/^[^\s\u00a0>]*>?/),
                "atom";
            if ('"' == O || "'" == O)
                return t.tokenize = function(e, t) {
                    for (var n, r = !1; null != (n = e.next()); ) {
                        if (n == O && !r) {
                            t.tokenize = s;
                            break
                        }
                        r = !r && "\\" == n
                    }
                    return "string"
                }
                ,
                t.tokenize(e, t);
            if (/[{}\(\),\.;\[\]]/.test(O))
                return r = O,
                "bracket";
            if ("#" == O)
                return e.skipToEnd(),
                "comment";
            if (o.test(O))
                return "operator";
            if (":" == O)
                return l(e),
                "atom";
            if ("@" == O)
                return e.eatWhile(/[a-z\d\-]/i),
                "meta";
            if (e.eatWhile(/[_\w\d]/),
            e.eat(":"))
                return l(e),
                "atom";
            var n = e.current();
            return i.test(n) ? "builtin" : a.test(n) ? "keyword" : "variable"
        }
        function l(e) {
            e.match(/(\.(?=[\w_\-\\%])|[:\w_-]|\\[-\\_~.!$&'()*+,;=/?#@%]|%[a-f\d][a-f\d])+/i)
        }
        function c(e, t, O) {
            e.context = {
                prev: e.context,
                indent: e.indent,
                col: O,
                type: t
            }
        }
        function u(e) {
            e.indent = e.context.indent,
            e.context = e.context.prev
        }
        let p = {
            name: "sparql",
            startState: function() {
                return {
                    tokenize: s,
                    context: null,
                    indent: 0,
                    col: 0
                }
            },
            token: function(e, t) {
                if (e.sol() && (t.context && null == t.context.align && (t.context.align = !1),
                t.indent = e.indentation()),
                e.eatSpace())
                    return null;
                var O = t.tokenize(e, t);
                if ("comment" != O && t.context && null == t.context.align && "pattern" != t.context.type && (t.context.align = !0),
                "(" == r)
                    c(t, ")", e.column());
                else if ("[" == r)
                    c(t, "]", e.column());
                else if ("{" == r)
                    c(t, "}", e.column());
                else if (/[\]\}\)]/.test(r)) {
                    for (; t.context && "pattern" == t.context.type; )
                        u(t);
                    t.context && r == t.context.type && (u(t),
                    "}" == r && t.context && "pattern" == t.context.type && u(t))
                } else
                    "." == r && t.context && "pattern" == t.context.type ? u(t) : /atom|string|variable/.test(O) && t.context && (/[\}\]]/.test(t.context.type) ? c(t, "pattern", e.column()) : "pattern" != t.context.type || t.context.align || (t.context.align = !0,
                    t.context.col = e.column()));
                return O
            },
            indent: function(e, t, O) {
                var n = t && t.charAt(0)
                  , r = e.context;
                if (/[\]\}]/.test(n))
                    for (; r && "pattern" == r.type; )
                        r = r.prev;
                var i = r && n == r.type;
                return r ? "pattern" == r.type ? r.col : r.align ? r.col + (i ? 0 : 1) : r.indent + (i ? 0 : O.unit) : 0
            },
            languageData: {
                commentTokens: {
                    line: "#"
                }
            }
        }
    },
    9316: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            spreadsheet: function() {
                return n
            }
        });
        let n = {
            name: "spreadsheet",
            startState: function() {
                return {
                    stringType: null,
                    stack: []
                }
            },
            token: function(e, t) {
                if (e) {
                    switch (0 === t.stack.length && ('"' == e.peek() || "'" == e.peek()) && (t.stringType = e.peek(),
                    e.next(),
                    t.stack.unshift("string")),
                    t.stack[0]) {
                    case "string":
                        for (; "string" === t.stack[0] && !e.eol(); )
                            e.peek() === t.stringType ? (e.next(),
                            t.stack.shift()) : "\\" === e.peek() ? (e.next(),
                            e.next()) : e.match(/^.[^\\\"\']*/);
                        return "string";
                    case "characterClass":
                        for (; "characterClass" === t.stack[0] && !e.eol(); )
                            e.match(/^[^\]\\]+/) || e.match(/^\\./) || t.stack.shift();
                        return "operator"
                    }
                    var O = e.peek();
                    switch (O) {
                    case "[":
                        return e.next(),
                        t.stack.unshift("characterClass"),
                        "bracket";
                    case ":":
                        return e.next(),
                        "operator";
                    case "\\":
                        if (e.match(/\\[a-z]+/))
                            return "string.special";
                        return e.next(),
                        "atom";
                    case ".":
                    case ",":
                    case ";":
                    case "*":
                    case "-":
                    case "+":
                    case "^":
                    case "<":
                    case "/":
                    case "=":
                        return e.next(),
                        "atom";
                    case "$":
                        return e.next(),
                        "builtin"
                    }
                    return e.match(/\d+/) ? e.match(/^\w+/) ? "error" : "number" : e.match(/^[a-zA-Z_]\w*/) ? e.match(/(?=[\(.])/, !1) ? "keyword" : "variable" : -1 != ["[", "]", "(", ")", "{", "}"].indexOf(O) ? (e.next(),
                    "bracket") : (e.eatSpace() || e.next(),
                    null)
                }
            }
        }
    },
    2199: function(e, t, O) {
        "use strict";
        function n(e) {
            function t(e, t) {
                e.cmdState.push(t)
            }
            function O(e) {
                return e.cmdState.length > 0 ? e.cmdState[e.cmdState.length - 1] : null
            }
            function n(e, t, O) {
                return function() {
                    this.name = e,
                    this.bracketNo = 0,
                    this.style = t,
                    this.styles = O,
                    this.argument = null,
                    this.styleIdentifier = function() {
                        return this.styles[this.bracketNo - 1] || null
                    }
                    ,
                    this.openBracket = function() {
                        return this.bracketNo++,
                        "bracket"
                    }
                    ,
                    this.closeBracket = function() {}
                }
            }
            var r = {};
            function i(e, n) {
                if (e.match(/^\\[a-zA-Z@\xc0-\u1fff\u2060-\uffff]+/)) {
                    var i, s = e.current().slice(1);
                    return i = new (i = r.hasOwnProperty(s) ? r[s] : r.DEFAULT),
                    t(n, i),
                    n.f = o,
                    i.style
                }
                if (e.match(/^\\[$&%#{}_]/) || e.match(/^\\[,;!\/\\]/))
                    return "tag";
                if (e.match("\\["))
                    return n.f = function(e, t) {
                        return a(e, t, "\\]")
                    }
                    ,
                    "keyword";
                if (e.match("\\("))
                    return n.f = function(e, t) {
                        return a(e, t, "\\)")
                    }
                    ,
                    "keyword";
                if (e.match("$$"))
                    return n.f = function(e, t) {
                        return a(e, t, "$$")
                    }
                    ,
                    "keyword";
                if (e.match("$"))
                    return n.f = function(e, t) {
                        return a(e, t, "$")
                    }
                    ,
                    "keyword";
                var l = e.next();
                return "%" == l ? (e.skipToEnd(),
                "comment") : "}" == l || "]" == l ? (i = O(n)) ? (i.closeBracket(l),
                n.f = o,
                "bracket") : "error" : "{" == l || "[" == l ? (i = new (i = r.DEFAULT),
                t(n, i),
                "bracket") : /\d/.test(l) ? (e.eatWhile(/[\w.%]/),
                "atom") : (e.eatWhile(/[\w\-_]/),
                "begin" == (i = function(e) {
                    for (var t = e.cmdState, O = t.length - 1; O >= 0; O--) {
                        var n = t[O];
                        if ("DEFAULT" != n.name)
                            return n
                    }
                    return {
                        styleIdentifier: function() {
                            return null
                        }
                    }
                }(n)).name && (i.argument = e.current()),
                i.styleIdentifier())
            }
            function a(e, t, O) {
                if (e.eatSpace())
                    return null;
                if (O && e.match(O))
                    return t.f = i,
                    "keyword";
                if (e.match(/^\\[a-zA-Z@]+/))
                    return "tag";
                if (e.match(/^[a-zA-Z]+/))
                    return "variableName.special";
                if (e.match(/^\\[$&%#{}_]/) || e.match(/^\\[,;!\/]/) || e.match(/^[\^_&]/))
                    return "tag";
                if (e.match(/^[+\-<>|=,\/@!*:;'"`~#?]/))
                    return null;
                if (e.match(/^(\d+\.\d*|\d*\.\d+|\d+)/))
                    return "number";
                var n = e.next();
                return "{" == n || "}" == n || "[" == n || "]" == n || "(" == n || ")" == n ? "bracket" : "%" == n ? (e.skipToEnd(),
                "comment") : "error"
            }
            function o(e, t) {
                var n, r = e.peek();
                return "{" == r || "[" == r ? (O(t).openBracket(r),
                e.eat(r),
                t.f = i,
                "bracket") : /[ \t\r]/.test(r) ? (e.eat(r),
                null) : (t.f = i,
                (n = t.cmdState.pop()) && n.closeBracket(),
                i(e, t))
            }
            return r.importmodule = n("importmodule", "tag", ["string", "builtin"]),
            r.documentclass = n("documentclass", "tag", ["", "atom"]),
            r.usepackage = n("usepackage", "tag", ["atom"]),
            r.begin = n("begin", "tag", ["atom"]),
            r.end = n("end", "tag", ["atom"]),
            r.label = n("label", "tag", ["atom"]),
            r.ref = n("ref", "tag", ["atom"]),
            r.eqref = n("eqref", "tag", ["atom"]),
            r.cite = n("cite", "tag", ["atom"]),
            r.bibitem = n("bibitem", "tag", ["atom"]),
            r.Bibitem = n("Bibitem", "tag", ["atom"]),
            r.RBibitem = n("RBibitem", "tag", ["atom"]),
            r.DEFAULT = function() {
                this.name = "DEFAULT",
                this.style = "tag",
                this.styleIdentifier = this.openBracket = this.closeBracket = function() {}
            }
            ,
            {
                name: "stex",
                startState: function() {
                    return {
                        cmdState: [],
                        f: e ? function(e, t) {
                            return a(e, t)
                        }
                        : i
                    }
                },
                copyState: function(e) {
                    return {
                        cmdState: e.cmdState.slice(),
                        f: e.f
                    }
                },
                token: function(e, t) {
                    return t.f(e, t)
                },
                blankLine: function(e) {
                    e.f = i,
                    e.cmdState.length = 0
                },
                languageData: {
                    commentTokens: {
                        line: "%"
                    }
                }
            }
        }
        O.r(t),
        O.d(t, {
            stex: function() {
                return r
            },
            stexMath: function() {
                return i
            }
        });
        let r = n(!1)
          , i = n(!0)
    },
    9744: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            stylus: function() {
                return ei
            }
        });
        var n = ["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "bgsound", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "nobr", "noframes", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "u", "ul", "var", "video"]
          , r = ["domain", "regexp", "url-prefix", "url"]
          , i = ["all", "aural", "braille", "handheld", "print", "projection", "screen", "tty", "tv", "embossed"]
          , a = ["width", "min-width", "max-width", "height", "min-height", "max-height", "device-width", "min-device-width", "max-device-width", "device-height", "min-device-height", "max-device-height", "aspect-ratio", "min-aspect-ratio", "max-aspect-ratio", "device-aspect-ratio", "min-device-aspect-ratio", "max-device-aspect-ratio", "color", "min-color", "max-color", "color-index", "min-color-index", "max-color-index", "monochrome", "min-monochrome", "max-monochrome", "resolution", "min-resolution", "max-resolution", "scan", "grid", "dynamic-range", "video-dynamic-range"]
          , o = ["align-content", "align-items", "align-self", "alignment-adjust", "alignment-baseline", "anchor-point", "animation", "animation-delay", "animation-direction", "animation-duration", "animation-fill-mode", "animation-iteration-count", "animation-name", "animation-play-state", "animation-timing-function", "appearance", "azimuth", "backface-visibility", "background", "background-attachment", "background-clip", "background-color", "background-image", "background-origin", "background-position", "background-repeat", "background-size", "baseline-shift", "binding", "bleed", "bookmark-label", "bookmark-level", "bookmark-state", "bookmark-target", "border", "border-bottom", "border-bottom-color", "border-bottom-left-radius", "border-bottom-right-radius", "border-bottom-style", "border-bottom-width", "border-collapse", "border-color", "border-image", "border-image-outset", "border-image-repeat", "border-image-slice", "border-image-source", "border-image-width", "border-left", "border-left-color", "border-left-style", "border-left-width", "border-radius", "border-right", "border-right-color", "border-right-style", "border-right-width", "border-spacing", "border-style", "border-top", "border-top-color", "border-top-left-radius", "border-top-right-radius", "border-top-style", "border-top-width", "border-width", "bottom", "box-decoration-break", "box-shadow", "box-sizing", "break-after", "break-before", "break-inside", "caption-side", "clear", "clip", "color", "color-profile", "column-count", "column-fill", "column-gap", "column-rule", "column-rule-color", "column-rule-style", "column-rule-width", "column-span", "column-width", "columns", "content", "counter-increment", "counter-reset", "crop", "cue", "cue-after", "cue-before", "cursor", "direction", "display", "dominant-baseline", "drop-initial-after-adjust", "drop-initial-after-align", "drop-initial-before-adjust", "drop-initial-before-align", "drop-initial-size", "drop-initial-value", "elevation", "empty-cells", "fit", "fit-position", "flex", "flex-basis", "flex-direction", "flex-flow", "flex-grow", "flex-shrink", "flex-wrap", "float", "float-offset", "flow-from", "flow-into", "font", "font-feature-settings", "font-family", "font-kerning", "font-language-override", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-synthesis", "font-variant", "font-variant-alternates", "font-variant-caps", "font-variant-east-asian", "font-variant-ligatures", "font-variant-numeric", "font-variant-position", "font-weight", "grid", "grid-area", "grid-auto-columns", "grid-auto-flow", "grid-auto-position", "grid-auto-rows", "grid-column", "grid-column-end", "grid-column-start", "grid-row", "grid-row-end", "grid-row-start", "grid-template", "grid-template-areas", "grid-template-columns", "grid-template-rows", "hanging-punctuation", "height", "hyphens", "icon", "image-orientation", "image-rendering", "image-resolution", "inline-box-align", "justify-content", "left", "letter-spacing", "line-break", "line-height", "line-stacking", "line-stacking-ruby", "line-stacking-shift", "line-stacking-strategy", "list-style", "list-style-image", "list-style-position", "list-style-type", "margin", "margin-bottom", "margin-left", "margin-right", "margin-top", "marker-offset", "marks", "marquee-direction", "marquee-loop", "marquee-play-count", "marquee-speed", "marquee-style", "max-height", "max-width", "min-height", "min-width", "move-to", "nav-down", "nav-index", "nav-left", "nav-right", "nav-up", "object-fit", "object-position", "opacity", "order", "orphans", "outline", "outline-color", "outline-offset", "outline-style", "outline-width", "overflow", "overflow-style", "overflow-wrap", "overflow-x", "overflow-y", "padding", "padding-bottom", "padding-left", "padding-right", "padding-top", "page", "page-break-after", "page-break-before", "page-break-inside", "page-policy", "pause", "pause-after", "pause-before", "perspective", "perspective-origin", "pitch", "pitch-range", "play-during", "position", "presentation-level", "punctuation-trim", "quotes", "region-break-after", "region-break-before", "region-break-inside", "region-fragment", "rendering-intent", "resize", "rest", "rest-after", "rest-before", "richness", "right", "rotation", "rotation-point", "ruby-align", "ruby-overhang", "ruby-position", "ruby-span", "shape-image-threshold", "shape-inside", "shape-margin", "shape-outside", "size", "speak", "speak-as", "speak-header", "speak-numeral", "speak-punctuation", "speech-rate", "stress", "string-set", "tab-size", "table-layout", "target", "target-name", "target-new", "target-position", "text-align", "text-align-last", "text-decoration", "text-decoration-color", "text-decoration-line", "text-decoration-skip", "text-decoration-style", "text-emphasis", "text-emphasis-color", "text-emphasis-position", "text-emphasis-style", "text-height", "text-indent", "text-justify", "text-outline", "text-overflow", "text-shadow", "text-size-adjust", "text-space-collapse", "text-transform", "text-underline-position", "text-wrap", "top", "transform", "transform-origin", "transform-style", "transition", "transition-delay", "transition-duration", "transition-property", "transition-timing-function", "unicode-bidi", "vertical-align", "visibility", "voice-balance", "voice-duration", "voice-family", "voice-pitch", "voice-range", "voice-rate", "voice-stress", "voice-volume", "volume", "white-space", "widows", "width", "will-change", "word-break", "word-spacing", "word-wrap", "z-index", "clip-path", "clip-rule", "mask", "enable-background", "filter", "flood-color", "flood-opacity", "lighting-color", "stop-color", "stop-opacity", "pointer-events", "color-interpolation", "color-interpolation-filters", "color-rendering", "fill", "fill-opacity", "fill-rule", "image-rendering", "marker", "marker-end", "marker-mid", "marker-start", "shape-rendering", "stroke", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke-width", "text-rendering", "baseline-shift", "dominant-baseline", "glyph-orientation-horizontal", "glyph-orientation-vertical", "text-anchor", "writing-mode", "font-smoothing", "osx-font-smoothing"]
          , s = ["scrollbar-arrow-color", "scrollbar-base-color", "scrollbar-dark-shadow-color", "scrollbar-face-color", "scrollbar-highlight-color", "scrollbar-shadow-color", "scrollbar-3d-light-color", "scrollbar-track-color", "shape-inside", "searchfield-cancel-button", "searchfield-decoration", "searchfield-results-button", "searchfield-results-decoration", "zoom"]
          , l = ["font-family", "src", "unicode-range", "font-variant", "font-feature-settings", "font-stretch", "font-weight", "font-style"]
          , c = ["aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "grey", "green", "greenyellow", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "rebeccapurple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen"]
          , u = ["above", "absolute", "activeborder", "additive", "activecaption", "afar", "after-white-space", "ahead", "alias", "all", "all-scroll", "alphabetic", "alternate", "always", "amharic", "amharic-abegede", "antialiased", "appworkspace", "arabic-indic", "armenian", "asterisks", "attr", "auto", "avoid", "avoid-column", "avoid-page", "avoid-region", "background", "backwards", "baseline", "below", "bidi-override", "binary", "bengali", "blink", "block", "block-axis", "bold", "bolder", "border", "border-box", "both", "bottom", "break", "break-all", "break-word", "bullets", "button", "buttonface", "buttonhighlight", "buttonshadow", "buttontext", "calc", "cambodian", "capitalize", "caps-lock-indicator", "caption", "captiontext", "caret", "cell", "center", "checkbox", "circle", "cjk-decimal", "cjk-earthly-branch", "cjk-heavenly-stem", "cjk-ideographic", "clear", "clip", "close-quote", "col-resize", "collapse", "column", "compact", "condensed", "conic-gradient", "contain", "content", "contents", "content-box", "context-menu", "continuous", "copy", "counter", "counters", "cover", "crop", "cross", "crosshair", "currentcolor", "cursive", "cyclic", "dashed", "decimal", "decimal-leading-zero", "default", "default-button", "destination-atop", "destination-in", "destination-out", "destination-over", "devanagari", "disc", "discard", "disclosure-closed", "disclosure-open", "document", "dot-dash", "dot-dot-dash", "dotted", "double", "down", "e-resize", "ease", "ease-in", "ease-in-out", "ease-out", "element", "ellipse", "ellipsis", "embed", "end", "ethiopic", "ethiopic-abegede", "ethiopic-abegede-am-et", "ethiopic-abegede-gez", "ethiopic-abegede-ti-er", "ethiopic-abegede-ti-et", "ethiopic-halehame-aa-er", "ethiopic-halehame-aa-et", "ethiopic-halehame-am-et", "ethiopic-halehame-gez", "ethiopic-halehame-om-et", "ethiopic-halehame-sid-et", "ethiopic-halehame-so-et", "ethiopic-halehame-ti-er", "ethiopic-halehame-ti-et", "ethiopic-halehame-tig", "ethiopic-numeric", "ew-resize", "expanded", "extends", "extra-condensed", "extra-expanded", "fantasy", "fast", "fill", "fixed", "flat", "flex", "footnotes", "forwards", "from", "geometricPrecision", "georgian", "graytext", "groove", "gujarati", "gurmukhi", "hand", "hangul", "hangul-consonant", "hebrew", "help", "hidden", "hide", "high", "higher", "highlight", "highlighttext", "hiragana", "hiragana-iroha", "horizontal", "hsl", "hsla", "icon", "ignore", "inactiveborder", "inactivecaption", "inactivecaptiontext", "infinite", "infobackground", "infotext", "inherit", "initial", "inline", "inline-axis", "inline-block", "inline-flex", "inline-table", "inset", "inside", "intrinsic", "invert", "italic", "japanese-formal", "japanese-informal", "justify", "kannada", "katakana", "katakana-iroha", "keep-all", "khmer", "korean-hangul-formal", "korean-hanja-formal", "korean-hanja-informal", "landscape", "lao", "large", "larger", "left", "level", "lighter", "line-through", "linear", "linear-gradient", "lines", "list-item", "listbox", "listitem", "local", "logical", "loud", "lower", "lower-alpha", "lower-armenian", "lower-greek", "lower-hexadecimal", "lower-latin", "lower-norwegian", "lower-roman", "lowercase", "ltr", "malayalam", "match", "matrix", "matrix3d", "media-play-button", "media-slider", "media-sliderthumb", "media-volume-slider", "media-volume-sliderthumb", "medium", "menu", "menulist", "menulist-button", "menutext", "message-box", "middle", "min-intrinsic", "mix", "mongolian", "monospace", "move", "multiple", "myanmar", "n-resize", "narrower", "ne-resize", "nesw-resize", "no-close-quote", "no-drop", "no-open-quote", "no-repeat", "none", "normal", "not-allowed", "nowrap", "ns-resize", "numbers", "numeric", "nw-resize", "nwse-resize", "oblique", "octal", "open-quote", "optimizeLegibility", "optimizeSpeed", "oriya", "oromo", "outset", "outside", "outside-shape", "overlay", "overline", "padding", "padding-box", "painted", "page", "paused", "persian", "perspective", "plus-darker", "plus-lighter", "pointer", "polygon", "portrait", "pre", "pre-line", "pre-wrap", "preserve-3d", "progress", "push-button", "radial-gradient", "radio", "read-only", "read-write", "read-write-plaintext-only", "rectangle", "region", "relative", "repeat", "repeating-linear-gradient", "repeating-radial-gradient", "repeating-conic-gradient", "repeat-x", "repeat-y", "reset", "reverse", "rgb", "rgba", "ridge", "right", "rotate", "rotate3d", "rotateX", "rotateY", "rotateZ", "round", "row-resize", "rtl", "run-in", "running", "s-resize", "sans-serif", "scale", "scale3d", "scaleX", "scaleY", "scaleZ", "scroll", "scrollbar", "scroll-position", "se-resize", "searchfield", "searchfield-cancel-button", "searchfield-decoration", "searchfield-results-button", "searchfield-results-decoration", "semi-condensed", "semi-expanded", "separate", "serif", "show", "sidama", "simp-chinese-formal", "simp-chinese-informal", "single", "skew", "skewX", "skewY", "skip-white-space", "slide", "slider-horizontal", "slider-vertical", "sliderthumb-horizontal", "sliderthumb-vertical", "slow", "small", "small-caps", "small-caption", "smaller", "solid", "somali", "source-atop", "source-in", "source-out", "source-over", "space", "spell-out", "square", "square-button", "standard", "start", "static", "status-bar", "stretch", "stroke", "sub", "subpixel-antialiased", "super", "sw-resize", "symbolic", "symbols", "table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row", "table-row-group", "tamil", "telugu", "text", "text-bottom", "text-top", "textarea", "textfield", "thai", "thick", "thin", "threeddarkshadow", "threedface", "threedhighlight", "threedlightshadow", "threedshadow", "tibetan", "tigre", "tigrinya-er", "tigrinya-er-abegede", "tigrinya-et", "tigrinya-et-abegede", "to", "top", "trad-chinese-formal", "trad-chinese-informal", "translate", "translate3d", "translateX", "translateY", "translateZ", "transparent", "ultra-condensed", "ultra-expanded", "underline", "up", "upper-alpha", "upper-armenian", "upper-greek", "upper-hexadecimal", "upper-latin", "upper-norwegian", "upper-roman", "uppercase", "urdu", "url", "var", "vertical", "vertical-text", "visible", "visibleFill", "visiblePainted", "visibleStroke", "visual", "w-resize", "wait", "wave", "wider", "window", "windowframe", "windowtext", "words", "x-large", "x-small", "xor", "xx-large", "xx-small", "bicubic", "optimizespeed", "grayscale", "row", "row-reverse", "wrap", "wrap-reverse", "column-reverse", "flex-start", "flex-end", "space-between", "space-around", "unset"]
          , p = ["in", "and", "or", "not", "is not", "is a", "is", "isnt", "defined", "if unless"]
          , d = ["for", "if", "else", "unless", "from", "to"]
          , f = ["null", "true", "false", "href", "title", "type", "not-allowed", "readonly", "disabled"]
          , h = n.concat(r, i, a, o, s, c, u, l, p, d, f, ["@font-face", "@keyframes", "@media", "@viewport", "@page", "@host", "@supports", "@block", "@css"]);
        function m(e) {
            return RegExp("^((" + (e = e.sort(function(e, t) {
                return t > e
            })).join(")|(") + "))\\b")
        }
        function Q(e) {
            for (var t = {}, O = 0; O < e.length; ++O)
                t[e[O]] = !0;
            return t
        }
        var $, g, P, S, b = Q(n), y = /^(a|b|i|s|col|em)$/i, x = Q(o), X = Q(s), v = Q(u), k = Q(c), w = Q(r), T = m(r), _ = Q(a), W = Q(i), Z = Q(l), z = /^\s*([.]{2,3}|&&|\|\||\*\*|[?!=:]?=|[-+*\/%<>]=?|\?:|\~)/, q = m(p), Y = Q(d), R = new RegExp(/^\-(moz|ms|o|webkit)-/i), U = Q(f), V = "", E = {};
        function j(e, t) {
            if (V = e.string.match(/(^[\w-]+\s*=\s*$)|(^\s*[\w-]+\s*=\s*[\w-])|(^\s*(\.|#|@|\$|\&|\[|\d|\+|::?|\{|\>|~|\/)?\s*[\w-]*([a-z0-9-]|\*|\/\*)(\(|,)?)/),
            t.context.line.firstWord = V ? V[0].replace(/^\s*/, "") : "",
            t.context.line.indent = e.indentation(),
            $ = e.peek(),
            e.match("//"))
                return e.skipToEnd(),
                ["comment", "comment"];
            if (e.match("/*"))
                return t.tokenize = G,
                G(e, t);
            if ('"' == $ || "'" == $)
                return e.next(),
                t.tokenize = C($),
                t.tokenize(e, t);
            if ("@" == $)
                return e.next(),
                e.eatWhile(/[\w\\-]/),
                ["def", e.current()];
            if ("#" == $) {
                if (e.next(),
                e.match(/^[0-9a-f]{3}([0-9a-f]([0-9a-f]{2}){0,2})?\b(?!-)/i))
                    return ["atom", "atom"];
                if (e.match(/^[a-z][\w-]*/i))
                    return ["builtin", "hash"]
            }
            return e.match(R) ? ["meta", "vendor-prefixes"] : e.match(/^-?[0-9]?\.?[0-9]/) ? (e.eatWhile(/[a-z%]/i),
            ["number", "unit"]) : "!" == $ ? (e.next(),
            [e.match(/^(important|optional)/i) ? "keyword" : "operator", "important"]) : "." == $ && e.match(/^\.[a-z][\w-]*/i) ? ["qualifier", "qualifier"] : e.match(T) ? ("(" == e.peek() && (t.tokenize = A),
            ["property", "word"]) : e.match(/^[a-z][\w-]*\(/i) ? (e.backUp(1),
            ["keyword", "mixin"]) : e.match(/^(\+|-)[a-z][\w-]*\(/i) ? (e.backUp(1),
            ["keyword", "block-mixin"]) : e.string.match(/^\s*&/) && e.match(/^[-_]+[a-z][\w-]*/) ? ["qualifier", "qualifier"] : e.match(/^(\/|&)(-|_|:|\.|#|[a-z])/) ? (e.backUp(1),
            ["variableName.special", "reference"]) : e.match(/^&{1}\s*$/) ? ["variableName.special", "reference"] : e.match(q) ? ["operator", "operator"] : e.match(/^\$?[-_]*[a-z0-9]+[\w-]*/i) ? e.match(/^(\.|\[)[\w-\'\"\]]+/i, !1) && !L(e.current()) ? (e.match("."),
            ["variable", "variable-name"]) : ["variable", "word"] : e.match(z) ? ["operator", e.current()] : /[:;,{}\[\]\(\)]/.test($) ? (e.next(),
            [null, $]) : (e.next(),
            [null, null])
        }
        function G(e, t) {
            for (var O, n = !1; null != (O = e.next()); ) {
                if (n && "/" == O) {
                    t.tokenize = null;
                    break
                }
                n = "*" == O
            }
            return ["comment", "comment"]
        }
        function C(e) {
            return function(t, O) {
                for (var n, r = !1; null != (n = t.next()); ) {
                    if (n == e && !r) {
                        ")" == e && t.backUp(1);
                        break
                    }
                    r = !r && "\\" == n
                }
                return n != e && (r || ")" == e) || (O.tokenize = null),
                ["string", "string"]
            }
        }
        function A(e, t) {
            return e.next(),
            e.match(/\s*[\"\')]/, !1) ? t.tokenize = null : t.tokenize = C(")"),
            [null, "("]
        }
        function I(e, t, O, n) {
            this.type = e,
            this.indent = t,
            this.prev = O,
            this.line = n || {
                firstWord: "",
                indent: 0
            }
        }
        function J(e, t, O, n) {
            return n = n >= 0 ? n : t.indentUnit,
            e.context = new I(O,t.indentation() + n,e.context),
            O
        }
        function N(e, t, O) {
            var n = e.context.indent - t.indentUnit;
            return O = O || !1,
            e.context = e.context.prev,
            O && (e.context.indent = n),
            e.context.type
        }
        function D(e, t, O, n) {
            for (var r = n || 1; r > 0; r--)
                O.context = O.context.prev;
            return E[O.context.type](e, t, O)
        }
        function L(e) {
            return e.toLowerCase()in b
        }
        function F(e) {
            return (e = e.toLowerCase())in x || e in Z
        }
        function M(e) {
            return e.toLowerCase()in Y
        }
        function B(e) {
            return e.toLowerCase().match(R)
        }
        function H(e) {
            var t = e.toLowerCase()
              , O = "variable";
            return L(e) ? O = "tag" : M(e) ? O = "block-keyword" : F(e) ? O = "property" : t in v || t in U ? O = "atom" : "return" == t || t in k ? O = "keyword" : e.match(/^[A-Z]/) && (O = "string"),
            O
        }
        function K(e, t) {
            return en(t) && ("{" == e || "]" == e || "hash" == e || "qualifier" == e) || "block-mixin" == e
        }
        function ee(e, t) {
            return "{" == e && t.match(/^\s*\$?[\w-]+/i, !1)
        }
        function et(e, t) {
            return ":" == e && t.match(/^[a-z-]+/, !1)
        }
        function eO(e) {
            return e.sol() || e.string.match(RegExp("^\\s*" + e.current().replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&")))
        }
        function en(e) {
            return e.eol() || e.match(/^\s*$/, !1)
        }
        function er(e) {
            var t = /^\s*[-_]*[a-z0-9]+[\w-]*/i
              , O = "string" == typeof e ? e.match(t) : e.string.match(t);
            return O ? O[0].replace(/^\s*/, "") : ""
        }
        E.block = function(e, t, O) {
            if ("comment" == e && eO(t) || "," == e && en(t) || "mixin" == e)
                return J(O, t, "block", 0);
            if (ee(e, t))
                return J(O, t, "interpolation");
            if (en(t) && "]" == e && !/^\s*(\.|#|:|\[|\*|&)/.test(t.string) && !L(er(t)))
                return J(O, t, "block", 0);
            if (K(e, t))
                return J(O, t, "block");
            if ("}" == e && en(t))
                return J(O, t, "block", 0);
            if ("variable-name" == e)
                return t.string.match(/^\s?\$[\w-\.\[\]\'\"]+$/) || M(er(t)) ? J(O, t, "variableName") : J(O, t, "variableName", 0);
            if ("=" == e)
                return en(t) || M(er(t)) ? J(O, t, "block") : J(O, t, "block", 0);
            if ("*" == e && (en(t) || t.match(/\s*(,|\.|#|\[|:|{)/, !1)))
                return S = "tag",
                J(O, t, "block");
            if (et(e, t))
                return J(O, t, "pseudo");
            if (/@(font-face|media|supports|(-moz-)?document)/.test(e))
                return J(O, t, en(t) ? "block" : "atBlock");
            if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(e))
                return J(O, t, "keyframes");
            if (/@extends?/.test(e))
                return J(O, t, "extend", 0);
            if (e && "@" == e.charAt(0))
                return t.indentation() > 0 && F(t.current().slice(1)) ? (S = "variable",
                "block") : /(@import|@require|@charset)/.test(e) ? J(O, t, "block", 0) : J(O, t, "block");
            if ("reference" == e && en(t))
                return J(O, t, "block");
            if ("(" == e)
                return J(O, t, "parens");
            if ("vendor-prefixes" == e)
                return J(O, t, "vendorPrefixes");
            if ("word" == e) {
                var n = t.current();
                if ("property" == (S = H(n)))
                    return eO(t) ? J(O, t, "block", 0) : (S = "atom",
                    "block");
                if ("tag" == S) {
                    if (/embed|menu|pre|progress|sub|table/.test(n) && F(er(t)) || t.string.match(RegExp("\\[\\s*" + n + "|" + n + "\\s*\\]")))
                        return S = "atom",
                        "block";
                    if (y.test(n) && (eO(t) && t.string.match(/=/) || !eO(t) && !t.string.match(/^(\s*\.|#|\&|\[|\/|>|\*)/) && !L(er(t))))
                        return (S = "variable",
                        M(er(t))) ? "block" : J(O, t, "block", 0);
                    if (en(t))
                        return J(O, t, "block")
                }
                if ("block-keyword" == S)
                    return (S = "keyword",
                    t.current(/(if|unless)/) && !eO(t)) ? "block" : J(O, t, "block");
                if ("return" == n)
                    return J(O, t, "block", 0);
                if ("variable" == S && t.string.match(/^\s?\$[\w-\.\[\]\'\"]+$/))
                    return J(O, t, "block")
            }
            return O.context.type
        }
        ,
        E.parens = function(e, t, O) {
            if ("(" == e)
                return J(O, t, "parens");
            if (")" == e)
                return "parens" == O.context.prev.type ? N(O, t) : t.string.match(/^[a-z][\w-]*\(/i) && en(t) || M(er(t)) || /(\.|#|:|\[|\*|&|>|~|\+|\/)/.test(er(t)) || !t.string.match(/^-?[a-z][\w-\.\[\]\'\"]*\s*=/) && L(er(t)) ? J(O, t, "block") : t.string.match(/^[\$-]?[a-z][\w-\.\[\]\'\"]*\s*=/) || t.string.match(/^\s*(\(|\)|[0-9])/) || t.string.match(/^\s+[a-z][\w-]*\(/i) || t.string.match(/^\s+[\$-]?[a-z]/i) ? J(O, t, "block", 0) : en(t) ? J(O, t, "block") : J(O, t, "block", 0);
            if (e && "@" == e.charAt(0) && F(t.current().slice(1)) && (S = "variable"),
            "word" == e) {
                var n = t.current();
                "tag" == (S = H(n)) && y.test(n) && (S = "variable"),
                ("property" == S || "to" == n) && (S = "atom")
            }
            return "variable-name" == e ? J(O, t, "variableName") : et(e, t) ? J(O, t, "pseudo") : O.context.type
        }
        ,
        E.vendorPrefixes = function(e, t, O) {
            return "word" == e ? (S = "property",
            J(O, t, "block", 0)) : N(O, t)
        }
        ,
        E.pseudo = function(e, t, O) {
            return F(er(t.string)) ? D(e, t, O) : (t.match(/^[a-z-]+/),
            S = "variableName.special",
            en(t)) ? J(O, t, "block") : N(O, t)
        }
        ,
        E.atBlock = function(e, t, O) {
            if ("(" == e)
                return J(O, t, "atBlock_parens");
            if (K(e, t))
                return J(O, t, "block");
            if (ee(e, t))
                return J(O, t, "interpolation");
            if ("word" == e) {
                var n = t.current().toLowerCase();
                if ("tag" == (S = /^(only|not|and|or)$/.test(n) ? "keyword" : w.hasOwnProperty(n) ? "tag" : W.hasOwnProperty(n) ? "attribute" : _.hasOwnProperty(n) ? "property" : X.hasOwnProperty(n) ? "string.special" : H(t.current())) && en(t))
                    return J(O, t, "block")
            }
            return "operator" == e && /^(not|and|or)$/.test(t.current()) && (S = "keyword"),
            O.context.type
        }
        ,
        E.atBlock_parens = function(e, t, O) {
            if ("{" == e || "}" == e)
                return O.context.type;
            if (")" == e)
                return en(t) ? J(O, t, "block") : J(O, t, "atBlock");
            if ("word" == e) {
                var n = t.current().toLowerCase();
                return S = H(n),
                /^(max|min)/.test(n) && (S = "property"),
                "tag" == S && (S = y.test(n) ? "variable" : "atom"),
                O.context.type
            }
            return E.atBlock(e, t, O)
        }
        ,
        E.keyframes = function(e, t, O) {
            return "0" == t.indentation() && ("}" == e && eO(t) || "]" == e || "hash" == e || "qualifier" == e || L(t.current())) ? D(e, t, O) : "{" == e ? J(O, t, "keyframes") : "}" == e ? eO(t) ? N(O, t, !0) : J(O, t, "keyframes") : "unit" == e && /^[0-9]+\%$/.test(t.current()) ? J(O, t, "keyframes") : "word" == e && "block-keyword" == (S = H(t.current())) ? (S = "keyword",
            J(O, t, "keyframes")) : /@(font-face|media|supports|(-moz-)?document)/.test(e) ? J(O, t, en(t) ? "block" : "atBlock") : "mixin" == e ? J(O, t, "block", 0) : O.context.type
        }
        ,
        E.interpolation = function(e, t, O) {
            return ("{" == e && N(O, t) && J(O, t, "block"),
            "}" == e) ? t.string.match(/^\s*(\.|#|:|\[|\*|&|>|~|\+|\/)/i) || t.string.match(/^\s*[a-z]/i) && L(er(t)) ? J(O, t, "block") : !t.string.match(/^(\{|\s*\&)/) || t.match(/\s*[\w-]/, !1) ? J(O, t, "block", 0) : J(O, t, "block") : "variable-name" == e ? J(O, t, "variableName", 0) : ("word" == e && "tag" == (S = H(t.current())) && (S = "atom"),
            O.context.type)
        }
        ,
        E.extend = function(e, t, O) {
            return "[" == e || "=" == e ? "extend" : "]" == e ? N(O, t) : "word" == e ? (S = H(t.current()),
            "extend") : N(O, t)
        }
        ,
        E.variableName = function(e, t, O) {
            return "string" == e || "[" == e || "]" == e || t.current().match(/^(\.|\$)/) ? (t.current().match(/^\.[\w-]+/i) && (S = "variable"),
            "variableName") : D(e, t, O)
        }
        ;
        let ei = {
            name: "stylus",
            startState: function() {
                return {
                    tokenize: null,
                    state: "block",
                    context: new I("block",0,null)
                }
            },
            token: function(e, t) {
                return !t.tokenize && e.eatSpace() ? null : ((g = (t.tokenize || j)(e, t)) && "object" == typeof g && (P = g[1],
                g = g[0]),
                S = g,
                t.state = E[t.state](P, e, t),
                S)
            },
            indent: function(e, t, O) {
                var n = e.context
                  , r = t && t.charAt(0)
                  , i = n.indent
                  , a = er(t)
                  , o = O.lineIndent(O.pos)
                  , s = e.context.prev ? e.context.prev.line.firstWord : ""
                  , l = e.context.prev ? e.context.prev.line.indent : o;
                return n.prev && ("}" == r && ("block" == n.type || "atBlock" == n.type || "keyframes" == n.type) || ")" == r && ("parens" == n.type || "atBlock_parens" == n.type) || "{" == r && "at" == n.type) ? i = n.indent - O.unit : !/(\})/.test(r) && (/@|\$|\d/.test(r) || /^\{/.test(t) || /^\s*\/(\/|\*)/.test(t) || /^\s*\/\*/.test(s) || /^\s*[\w-\.\[\]\'\"]+\s*(\?|:|\+)?=/i.test(t) || /^(\+|-)?[a-z][\w-]*\(/i.test(t) || /^return/.test(t) || M(a) ? i = o : /(\.|#|:|\[|\*|&|>|~|\+|\/)/.test(r) || L(a) ? i = /\,\s*$/.test(s) ? l : !e.sol() && (/(\.|#|:|\[|\*|&|>|~|\+|\/)/.test(s) || L(s)) ? o <= l ? l : l + O.unit : o : !/,\s*$/.test(t) && (B(a) || F(a)) && (i = M(s) ? o <= l ? l : l + O.unit : /^\{/.test(s) ? o <= l ? o : l + O.unit : B(s) || F(s) ? o >= l ? l : o : /^(\.|#|:|\[|\*|&|@|\+|\-|>|~|\/)/.test(s) || /=\s*$/.test(s) || L(s) || /^\$[\w-\.\[\]\'\"]/.test(s) ? l + O.unit : o)),
                i
            },
            languageData: {
                indentOnInput: /^\s*\}$/,
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                },
                autocomplete: h
            }
        }
    },
    8777: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = 0; O < e.length; O++)
                t[e[O]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            swift: function() {
                return b
            }
        });
        var r = n(["_", "var", "let", "actor", "class", "enum", "extension", "import", "protocol", "struct", "func", "typealias", "associatedtype", "open", "public", "internal", "fileprivate", "private", "deinit", "init", "new", "override", "self", "subscript", "super", "convenience", "dynamic", "final", "indirect", "lazy", "required", "static", "unowned", "unowned(safe)", "unowned(unsafe)", "weak", "as", "is", "break", "case", "continue", "default", "else", "fallthrough", "for", "guard", "if", "in", "repeat", "switch", "where", "while", "defer", "return", "inout", "mutating", "nonmutating", "isolated", "nonisolated", "catch", "do", "rethrows", "throw", "throws", "async", "await", "try", "didSet", "get", "set", "willSet", "assignment", "associativity", "infix", "left", "none", "operator", "postfix", "precedence", "precedencegroup", "prefix", "right", "Any", "AnyObject", "Type", "dynamicType", "Self", "Protocol", "__COLUMN__", "__FILE__", "__FUNCTION__", "__LINE__"])
          , i = n(["var", "let", "actor", "class", "enum", "extension", "import", "protocol", "struct", "func", "typealias", "associatedtype", "for"])
          , a = n(["true", "false", "nil", "self", "super", "_"])
          , o = n(["Array", "Bool", "Character", "Dictionary", "Double", "Float", "Int", "Int8", "Int16", "Int32", "Int64", "Never", "Optional", "Set", "String", "UInt8", "UInt16", "UInt32", "UInt64", "Void"])
          , s = /^\-?0b[01][01_]*/
          , l = /^\-?0o[0-7][0-7_]*/
          , c = /^\-?0x[\dA-Fa-f][\dA-Fa-f_]*(?:(?:\.[\dA-Fa-f][\dA-Fa-f_]*)?[Pp]\-?\d[\d_]*)?/
          , u = /^\-?\d[\d_]*(?:\.\d[\d_]*)?(?:[Ee]\-?\d[\d_]*)?/
          , p = /^\$\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\1/
          , d = /^\.(?:\$\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\1)/
          , f = /^\#[A-Za-z]+/
          , h = /^@(?:\$\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\1)/;
        function m(e, t, O) {
            if (e.sol() && (t.indented = e.indentation()),
            e.eatSpace())
                return null;
            var n, m = e.peek();
            if ("/" == m) {
                if (e.match("//"))
                    return e.skipToEnd(),
                    "comment";
                if (e.match("/*"))
                    return t.tokenize.push($),
                    $(e, t)
            }
            if (e.match(f))
                return "builtin";
            if (e.match(h))
                return "attribute";
            if (e.match(s) || e.match(l) || e.match(c) || e.match(u))
                return "number";
            if (e.match(d))
                return "property";
            if ("+-/*%=|&<>~^?!".indexOf(m) > -1)
                return e.next(),
                "operator";
            if (":;,.(){}[]".indexOf(m) > -1)
                return e.next(),
                e.match(".."),
                "punctuation";
            if (n = e.match(/("""|"|')/)) {
                var g = Q.bind(null, n[0]);
                return t.tokenize.push(g),
                g(e, t)
            }
            if (e.match(p)) {
                var P = e.current();
                return o.hasOwnProperty(P) ? "type" : a.hasOwnProperty(P) ? "atom" : r.hasOwnProperty(P) ? (i.hasOwnProperty(P) && (t.prev = "define"),
                "keyword") : "define" == O ? "def" : "variable"
            }
            return e.next(),
            null
        }
        function Q(e, t, O) {
            for (var n, r = 1 == e.length, i = !1; n = t.peek(); )
                if (i) {
                    if (t.next(),
                    "(" == n)
                        return O.tokenize.push(function() {
                            var e = 0;
                            return function(t, O, n) {
                                var r = m(t, O, n);
                                if ("punctuation" == r) {
                                    if ("(" == t.current())
                                        ++e;
                                    else if (")" == t.current()) {
                                        if (0 == e)
                                            return t.backUp(1),
                                            O.tokenize.pop(),
                                            O.tokenize[O.tokenize.length - 1](t, O);
                                        --e
                                    }
                                }
                                return r
                            }
                        }()),
                        "string";
                    i = !1
                } else {
                    if (t.match(e))
                        return O.tokenize.pop(),
                        "string";
                    t.next(),
                    i = "\\" == n
                }
            return r && O.tokenize.pop(),
            "string"
        }
        function $(e, t) {
            for (var O; O = e.next(); )
                if ("/" === O && e.eat("*"))
                    t.tokenize.push($);
                else if ("*" === O && e.eat("/")) {
                    t.tokenize.pop();
                    break
                }
            return "comment"
        }
        function g(e, t, O) {
            this.prev = e,
            this.align = t,
            this.indented = O
        }
        function P(e, t) {
            var O = t.match(/^\s*($|\/[\/\*]|[)}\]])/, !1) ? null : t.column() + 1;
            e.context = new g(e.context,O,e.indented)
        }
        function S(e) {
            e.context && (e.indented = e.context.indented,
            e.context = e.context.prev)
        }
        let b = {
            name: "swift",
            startState: function() {
                return {
                    prev: null,
                    context: null,
                    indented: 0,
                    tokenize: []
                }
            },
            token: function(e, t) {
                var O = t.prev;
                t.prev = null;
                var n = (t.tokenize[t.tokenize.length - 1] || m)(e, t, O);
                if (n && "comment" != n ? t.prev || (t.prev = n) : t.prev = O,
                "punctuation" == n) {
                    var r = /[\(\[\{]|([\]\)\}])/.exec(e.current());
                    r && (r[1] ? S : P)(t, e)
                }
                return n
            },
            indent: function(e, t, O) {
                var n = e.context;
                if (!n)
                    return 0;
                var r = /^[\]\}\)]/.test(t);
                return null != n.align ? n.align - (r ? 1 : 0) : n.indented + (r ? 0 : O.unit)
            },
            languageData: {
                indentOnInput: /^\s*[\)\}\]]$/,
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                },
                closeBrackets: {
                    brackets: ["(", "[", "{", "'", '"', "`"]
                }
            }
        }
    },
    1087: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            tcl: function() {
                return u
            }
        });
        var r = n("Tcl safe after append array auto_execok auto_import auto_load auto_mkindex auto_mkindex_old auto_qualify auto_reset bgerror binary break catch cd close concat continue dde eof encoding error eval exec exit expr fblocked fconfigure fcopy file fileevent filename filename flush for foreach format gets glob global history http if incr info interp join lappend lindex linsert list llength load lrange lreplace lsearch lset lsort memory msgcat namespace open package parray pid pkg::create pkg_mkIndex proc puts pwd re_syntax read regex regexp registry regsub rename resource return scan seek set socket source split string subst switch tcl_endOfWord tcl_findLibrary tcl_startOfNextWord tcl_wordBreakAfter tcl_startOfPreviousWord tcl_wordBreakBefore tcltest tclvars tell time trace unknown unset update uplevel upvar variable vwait")
          , i = n("if elseif else and not or eq ne in ni for foreach while switch")
          , a = /[+\-*&%=<>!?^\/\|]/;
        function o(e, t, O) {
            return t.tokenize = O,
            O(e, t)
        }
        function s(e, t) {
            var O = t.beforeParams;
            t.beforeParams = !1;
            var n = e.next();
            if (('"' == n || "'" == n) && t.inParams)
                return o(e, t, function(e, t) {
                    for (var O, r = !1, i = !1; null != (O = e.next()); ) {
                        if (O == n && !r) {
                            i = !0;
                            break
                        }
                        r = !r && "\\" == O
                    }
                    return i && (t.tokenize = s),
                    "string"
                });
            if (/[\[\]{}\(\),;\.]/.test(n))
                return "(" == n && O ? t.inParams = !0 : ")" == n && (t.inParams = !1),
                null;
            if (/\d/.test(n))
                return e.eatWhile(/[\w\.]/),
                "number";
            if ("#" == n)
                return e.eat("*") ? o(e, t, l) : "#" == n && e.match(/ *\[ *\[/) ? o(e, t, c) : (e.skipToEnd(),
                "comment");
            if ('"' == n)
                return e.skipTo(/"/),
                "comment";
            if ("$" == n)
                return e.eatWhile(/[$_a-z0-9A-Z\.{:]/),
                e.eatWhile(/}/),
                t.beforeParams = !0,
                "builtin";
            if (a.test(n))
                return e.eatWhile(a),
                "comment";
            e.eatWhile(/[\w\$_{}\xa1-\uffff]/);
            var u = e.current().toLowerCase();
            return r && r.propertyIsEnumerable(u) ? "keyword" : i && i.propertyIsEnumerable(u) ? (t.beforeParams = !0,
            "keyword") : null
        }
        function l(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("#" == O && n) {
                    t.tokenize = s;
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        function c(e, t) {
            for (var O, n = 0; O = e.next(); ) {
                if ("#" == O && 2 == n) {
                    t.tokenize = s;
                    break
                }
                "]" == O ? n++ : " " != O && (n = 0)
            }
            return "meta"
        }
        let u = {
            name: "tcl",
            startState: function() {
                return {
                    tokenize: s,
                    beforeParams: !1,
                    inParams: !1
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : t.tokenize(e, t)
            },
            languageData: {
                commentTokens: {
                    line: "#"
                }
            }
        }
    },
    2587: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            textile: function() {
                return u
            }
        });
        var n = {
            addition: "inserted",
            attributes: "propertyName",
            bold: "strong",
            cite: "keyword",
            code: "monospace",
            definitionList: "list",
            deletion: "deleted",
            div: "punctuation",
            em: "emphasis",
            footnote: "variable",
            footCite: "qualifier",
            header: "heading",
            html: "comment",
            image: "atom",
            italic: "emphasis",
            link: "link",
            linkDefinition: "link",
            list1: "list",
            list2: "list.special",
            list3: "list",
            notextile: "string.special",
            pre: "operator",
            p: "content",
            quote: "bracket",
            span: "quote",
            specialChar: "character",
            strong: "strong",
            sub: "content.special",
            sup: "content.special",
            table: "variableName.special",
            tableHeading: "operator"
        };
        function r(e, t, O) {
            if ("_" === O)
                return e.eat("_") ? i(e, t, "italic", /__/, 2) : i(e, t, "em", /_/, 1);
            if ("*" === O)
                return e.eat("*") ? i(e, t, "bold", /\*\*/, 2) : i(e, t, "strong", /\*/, 1);
            if ("[" === O)
                return e.match(/\d+\]/) && (t.footCite = !0),
                a(t);
            if ("(" === O && e.match(/^(r|tm|c)\)/))
                return n.specialChar;
            if ("<" === O && e.match(/(\w+)[^>]+>[^<]+<\/\1>/))
                return n.html;
            if ("?" === O && e.eat("?"))
                return i(e, t, "cite", /\?\?/, 2);
            if ("=" === O && e.eat("="))
                return i(e, t, "notextile", /==/, 2);
            if ("-" === O && !e.eat("-"))
                return i(e, t, "deletion", /-/, 1);
            if ("+" === O)
                return i(e, t, "addition", /\+/, 1);
            if ("~" === O)
                return i(e, t, "sub", /~/, 1);
            if ("^" === O)
                return i(e, t, "sup", /\^/, 1);
            if ("%" === O)
                return i(e, t, "span", /%/, 1);
            if ("@" === O)
                return i(e, t, "code", /@/, 1);
            if ("!" === O) {
                var r = i(e, t, "image", /(?:\([^\)]+\))?!/, 1);
                return e.match(/^:\S+/),
                r
            }
            return a(t)
        }
        function i(e, t, O, n, r) {
            var i = e.pos > r ? e.string.charAt(e.pos - r - 1) : null
              , o = e.peek();
            if (t[O]) {
                if ((!o || /\W/.test(o)) && i && /\S/.test(i)) {
                    var s = a(t);
                    return t[O] = !1,
                    s
                }
            } else
                (!i || /\W/.test(i)) && o && /\S/.test(o) && e.match(RegExp("^.*\\S" + n.source + "(?:\\W|$)"), !1) && (t[O] = !0,
                t.mode = c.attributes);
            return a(t)
        }
        function a(e) {
            var t = o(e);
            if (t)
                return t;
            var O = [];
            return e.layoutType && O.push(n[e.layoutType]),
            O = O.concat(function(e) {
                for (var t = [], O = 1; O < arguments.length; ++O)
                    e[arguments[O]] && t.push(n[arguments[O]]);
                return t
            }(e, "addition", "bold", "cite", "code", "deletion", "em", "footCite", "image", "italic", "link", "span", "strong", "sub", "sup", "table", "tableHeading")),
            "header" === e.layoutType && O.push(n.header + "-" + e.header),
            O.length ? O.join(" ") : null
        }
        function o(e) {
            var t = e.layoutType;
            switch (t) {
            case "notextile":
            case "code":
            case "pre":
                return n[t];
            default:
                if (e.notextile)
                    return n.notextile + (t ? " " + n[t] : "");
                return null
            }
        }
        var s = {
            cache: {},
            single: {
                bc: "bc",
                bq: "bq",
                definitionList: /- .*?:=+/,
                definitionListEnd: /.*=:\s*$/,
                div: "div",
                drawTable: /\|.*\|/,
                foot: /fn\d+/,
                header: /h[1-6]/,
                html: /\s*<(?:\/)?(\w+)(?:[^>]+)?>(?:[^<]+<\/\1>)?/,
                link: /[^"]+":\S/,
                linkDefinition: /\[[^\s\]]+\]\S+/,
                list: /(?:#+|\*+)/,
                notextile: "notextile",
                para: "p",
                pre: "pre",
                table: "table",
                tableCellAttributes: /[\/\\]\d+/,
                tableHeading: /\|_\./,
                tableText: /[^"_\*\[\(\?\+~\^%@|-]+/,
                text: /[^!"_=\*\[\(<\?\+~\^%@-]+/
            },
            attributes: {
                align: /(?:<>|<|>|=)/,
                selector: /\([^\(][^\)]+\)/,
                lang: /\[[^\[\]]+\]/,
                pad: /(?:\(+|\)+){1,2}/,
                css: /\{[^\}]+\}/
            },
            createRe: function(e) {
                switch (e) {
                case "drawTable":
                    return s.makeRe("^", s.single.drawTable, "$");
                case "html":
                    return s.makeRe("^", s.single.html, "(?:", s.single.html, ")*", "$");
                case "linkDefinition":
                    return s.makeRe("^", s.single.linkDefinition, "$");
                case "listLayout":
                    return s.makeRe("^", s.single.list, l("allAttributes"), "*\\s+");
                case "tableCellAttributes":
                    return s.makeRe("^", s.choiceRe(s.single.tableCellAttributes, l("allAttributes")), "+\\.");
                case "type":
                    return s.makeRe("^", l("allTypes"));
                case "typeLayout":
                    return s.makeRe("^", l("allTypes"), l("allAttributes"), "*\\.\\.?", "(\\s+|$)");
                case "attributes":
                    return s.makeRe("^", l("allAttributes"), "+");
                case "allTypes":
                    return s.choiceRe(s.single.div, s.single.foot, s.single.header, s.single.bc, s.single.bq, s.single.notextile, s.single.pre, s.single.table, s.single.para);
                case "allAttributes":
                    return s.choiceRe(s.attributes.selector, s.attributes.css, s.attributes.lang, s.attributes.align, s.attributes.pad);
                default:
                    return s.makeRe("^", s.single[e])
                }
            },
            makeRe: function() {
                for (var e = "", t = 0; t < arguments.length; ++t) {
                    var O = arguments[t];
                    e += "string" == typeof O ? O : O.source
                }
                return new RegExp(e)
            },
            choiceRe: function() {
                for (var e = [arguments[0]], t = 1; t < arguments.length; ++t)
                    e[2 * t - 1] = "|",
                    e[2 * t] = arguments[t];
                return e.unshift("(?:"),
                e.push(")"),
                s.makeRe.apply(null, e)
            }
        };
        function l(e) {
            return s.cache[e] || (s.cache[e] = s.createRe(e))
        }
        var c = {
            newLayout: function(e, t) {
                var O;
                return e.match(l("typeLayout"), !1) ? (t.spanningLayout = !1,
                (t.mode = c.blockType)(e, t)) : (!o(t) && (e.match(l("listLayout"), !1) ? O = c.list : e.match(l("drawTable"), !1) ? O = c.table : e.match(l("linkDefinition"), !1) ? O = c.linkDefinition : e.match(l("definitionList")) ? O = c.definitionList : e.match(l("html"), !1) && (O = c.html)),
                (t.mode = O || c.text)(e, t))
            },
            blockType: function(e, t) {
                var O, n;
                return (t.layoutType = null,
                O = e.match(l("type"))) ? ((O = (n = O[0]).match(l("header"))) ? (t.layoutType = "header",
                t.header = parseInt(O[0][1])) : n.match(l("bq")) ? t.layoutType = "quote" : n.match(l("bc")) ? t.layoutType = "code" : n.match(l("foot")) ? t.layoutType = "footnote" : n.match(l("notextile")) ? t.layoutType = "notextile" : n.match(l("pre")) ? t.layoutType = "pre" : n.match(l("div")) ? t.layoutType = "div" : n.match(l("table")) && (t.layoutType = "table"),
                t.mode = c.attributes,
                a(t)) : (t.mode = c.text)(e, t)
            },
            text: function(e, t) {
                if (e.match(l("text")))
                    return a(t);
                var O = e.next();
                return '"' === O ? (t.mode = c.link)(e, t) : r(e, t, O)
            },
            attributes: function(e, t) {
                return (t.mode = c.layoutLength,
                e.match(l("attributes"))) ? n.attributes : a(t)
            },
            layoutLength: function(e, t) {
                return e.eat(".") && e.eat(".") && (t.spanningLayout = !0),
                t.mode = c.text,
                a(t)
            },
            list: function(e, t) {
                var O = e.match(l("list"));
                t.listDepth = O[0].length;
                var n = (t.listDepth - 1) % 3;
                return n ? 1 === n ? t.layoutType = "list2" : t.layoutType = "list3" : t.layoutType = "list1",
                t.mode = c.attributes,
                a(t)
            },
            link: function(e, t) {
                return (t.mode = c.text,
                e.match(l("link"))) ? (e.match(/\S+/),
                n.link) : a(t)
            },
            linkDefinition: function(e) {
                return e.skipToEnd(),
                n.linkDefinition
            },
            definitionList: function(e, t) {
                return e.match(l("definitionList")),
                t.layoutType = "definitionList",
                e.match(/\s*$/) ? t.spanningLayout = !0 : t.mode = c.attributes,
                a(t)
            },
            html: function(e) {
                return e.skipToEnd(),
                n.html
            },
            table: function(e, t) {
                return t.layoutType = "table",
                (t.mode = c.tableCell)(e, t)
            },
            tableCell: function(e, t) {
                return e.match(l("tableHeading")) ? t.tableHeading = !0 : e.eat("|"),
                t.mode = c.tableCellAttributes,
                a(t)
            },
            tableCellAttributes: function(e, t) {
                return (t.mode = c.tableText,
                e.match(l("tableCellAttributes"))) ? n.attributes : a(t)
            },
            tableText: function(e, t) {
                return e.match(l("tableText")) ? a(t) : "|" === e.peek() ? (t.mode = c.tableCell,
                a(t)) : r(e, t, e.next())
            }
        };
        let u = {
            name: "textile",
            startState: function() {
                return {
                    mode: c.newLayout
                }
            },
            token: function(e, t) {
                if (e.sol()) {
                    var O;
                    (O = t).mode = c.newLayout,
                    O.tableHeading = !1,
                    "definitionList" === O.layoutType && O.spanningLayout && e.match(l("definitionListEnd"), !1) && (O.spanningLayout = !1)
                }
                return t.mode(e, t)
            },
            blankLine: function(e) {
                var t = e.spanningLayout
                  , O = e.layoutType;
                for (var n in e)
                    e.hasOwnProperty(n) && delete e[n];
                e.mode = c.newLayout,
                t && (e.layoutType = O,
                e.spanningLayout = !0)
            }
        }
    },
    2511: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            tiddlyWiki: function() {
                return v
            }
        });
        var n = {}
          , r = {
            allTags: !0,
            closeAll: !0,
            list: !0,
            newJournal: !0,
            newTiddler: !0,
            permaview: !0,
            saveChanges: !0,
            search: !0,
            slider: !0,
            tabs: !0,
            tag: !0,
            tagging: !0,
            tags: !0,
            tiddler: !0,
            timeline: !0,
            today: !0,
            version: !0,
            option: !0,
            with: !0,
            filter: !0
        }
          , i = /[\w_\-]/i
          , a = /^\-\-\-\-+$/
          , o = /^\/\*\*\*$/
          , s = /^\*\*\*\/$/
          , l = /^<<<$/
          , c = /^\/\/\{\{\{$/
          , u = /^\/\/\}\}\}$/
          , p = /^<!--\{\{\{-->$/
          , d = /^<!--\}\}\}-->$/
          , f = /^\{\{\{$/
          , h = /^\}\}\}$/
          , m = /.*?\}\}\}/;
        function Q(e, t, O) {
            return t.tokenize = O,
            O(e, t)
        }
        function $(e, t) {
            var O = e.sol()
              , r = e.peek();
            if (t.block = !1,
            O && /[<\/\*{}\-]/.test(r)) {
                if (e.match(f))
                    return t.block = !0,
                    Q(e, t, S);
                if (e.match(l))
                    return "quote";
                if (e.match(o) || e.match(s) || e.match(c) || e.match(u) || e.match(p) || e.match(d))
                    return "comment";
                if (e.match(a))
                    return "contentSeparator"
            }
            if (e.next(),
            O && /[\/\*!#;:>|]/.test(r)) {
                if ("!" == r)
                    return e.skipToEnd(),
                    "header";
                if ("*" == r)
                    return e.eatWhile("*"),
                    "comment";
                if ("#" == r)
                    return e.eatWhile("#"),
                    "comment";
                if (";" == r)
                    return e.eatWhile(";"),
                    "comment";
                if (":" == r)
                    return e.eatWhile(":"),
                    "comment";
                if (">" == r)
                    return e.eatWhile(">"),
                    "quote";
                if ("|" == r)
                    return "header"
            }
            if ("{" == r && e.match("{{"))
                return Q(e, t, S);
            if (/[hf]/i.test(r) && /[ti]/i.test(e.peek()) && e.match(/\b(ttps?|tp|ile):\/\/[\-A-Z0-9+&@#\/%?=~_|$!:,.;]*[A-Z0-9+&@#\/%=~_|$]/i))
                return "link";
            if ('"' == r)
                return "string";
            if ("~" == r || /[\[\]]/.test(r) && e.match(r))
                return "brace";
            if ("@" == r)
                return e.eatWhile(i),
                "link";
            if (/\d/.test(r))
                return e.eatWhile(/\d/),
                "number";
            if ("/" == r) {
                if (e.eat("%"))
                    return Q(e, t, g);
                if (e.eat("/"))
                    return Q(e, t, b)
            }
            if ("_" == r && e.eat("_"))
                return Q(e, t, y);
            if ("-" == r && e.eat("-")) {
                if (" " != e.peek())
                    return Q(e, t, x);
                if (" " == e.peek())
                    return "brace"
            }
            return "'" == r && e.eat("'") ? Q(e, t, P) : "<" == r && e.eat("<") ? Q(e, t, X) : (e.eatWhile(/[\w\$_]/),
            n.propertyIsEnumerable(e.current()) ? "keyword" : null)
        }
        function g(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("/" == O && n) {
                    t.tokenize = $;
                    break
                }
                n = "%" == O
            }
            return "comment"
        }
        function P(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("'" == O && n) {
                    t.tokenize = $;
                    break
                }
                n = "'" == O
            }
            return "strong"
        }
        function S(e, t) {
            var O = t.block;
            return O && e.current() ? "comment" : !O && e.match(m) || O && e.sol() && e.match(h) ? (t.tokenize = $,
            "comment") : (e.next(),
            "comment")
        }
        function b(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("/" == O && n) {
                    t.tokenize = $;
                    break
                }
                n = "/" == O
            }
            return "emphasis"
        }
        function y(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("_" == O && n) {
                    t.tokenize = $;
                    break
                }
                n = "_" == O
            }
            return "link"
        }
        function x(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("-" == O && n) {
                    t.tokenize = $;
                    break
                }
                n = "-" == O
            }
            return "deleted"
        }
        function X(e, t) {
            if ("<<" == e.current())
                return "meta";
            var O = e.next();
            return O ? ">" == O && ">" == e.peek() ? (e.next(),
            t.tokenize = $,
            "meta") : (e.eatWhile(/[\w\$_]/),
            r.propertyIsEnumerable(e.current()) ? "keyword" : null) : (t.tokenize = $,
            null)
        }
        let v = {
            name: "tiddlywiki",
            startState: function() {
                return {
                    tokenize: $
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : t.tokenize(e, t)
            }
        }
    },
    811: function(e, t, O) {
        "use strict";
        var n, r, i, a;
        function o(e, t, O) {
            return function(n, r) {
                for (; !n.eol(); ) {
                    if (n.match(t)) {
                        r.tokenize = l;
                        break
                    }
                    n.next()
                }
                return O && (r.tokenize = O),
                e
            }
        }
        function s(e) {
            return function(t, O) {
                for (; !t.eol(); )
                    t.next();
                return O.tokenize = l,
                e
            }
        }
        function l(e, t) {
            function O(O) {
                return t.tokenize = O,
                O(e, t)
            }
            var n = e.sol()
              , r = e.next();
            switch (r) {
            case "{":
                return e.eat("/"),
                e.eatSpace(),
                e.eatWhile(/[^\s\u00a0=\"\'\/?(}]/),
                t.tokenize = c,
                "tag";
            case "_":
                if (e.eat("_"))
                    return O(o("strong", "__", l));
                break;
            case "'":
                if (e.eat("'"))
                    return O(o("em", "''", l));
                break;
            case "(":
                if (e.eat("("))
                    return O(o("link", "))", l));
                break;
            case "[":
                return O(o("url", "]", l));
            case "|":
                if (e.eat("|"))
                    return O(o("comment", "||"));
                break;
            case "-":
                if (e.eat("="))
                    return O(o("header string", "=-", l));
                if (e.eat("-"))
                    return O(o("error tw-deleted", "--", l));
                break;
            case "=":
                if (e.match("=="))
                    return O(o("tw-underline", "===", l));
                break;
            case ":":
                if (e.eat(":"))
                    return O(o("comment", "::"));
                break;
            case "^":
                return O(o("tw-box", "^"));
            case "~":
                if (e.match("np~"))
                    return O(o("meta", "~/np~"))
            }
            if (n)
                switch (r) {
                case "!":
                    if (e.match("!!!!!") || e.match("!!!!"))
                        return O(s("header string"));
                    if (e.match("!!!"))
                        return O(s("header string"));
                    if (e.match("!!"))
                        return O(s("header string"));
                    else
                        return O(s("header string"));
                case "*":
                case "#":
                case "+":
                    return O(s("tw-listitem bracket"))
                }
            return null
        }
        function c(e, t) {
            var O = e.next()
              , n = e.peek();
            return "}" == O ? (t.tokenize = l,
            "tag") : "(" == O || ")" == O ? "bracket" : "=" == O ? (r = "equals",
            ">" == n && (e.next(),
            n = e.peek()),
            /[\'\"]/.test(n) || (t.tokenize = function(e, t) {
                for (; !e.eol(); ) {
                    var O = e.next()
                      , n = e.peek();
                    if (" " == O || "," == O || /[ )}]/.test(n)) {
                        t.tokenize = c;
                        break
                    }
                }
                return "string"
            }
            ),
            "operator") : /[\'\"]/.test(O) ? (t.tokenize = function(e, t) {
                for (; !e.eol(); )
                    if (e.next() == O) {
                        t.tokenize = c;
                        break
                    }
                return "string"
            }
            ,
            t.tokenize(e, t)) : (e.eatWhile(/[^\s\u00a0=\"\'\/?]/),
            "keyword")
        }
        function u() {
            for (var e = arguments.length - 1; e >= 0; e--)
                i.cc.push(arguments[e])
        }
        function p() {
            return u.apply(null, arguments),
            !0
        }
        function d(e, t) {
            var O = i.context && i.context.noIndent;
            i.context = {
                prev: i.context,
                pluginName: e,
                indent: i.indented,
                startOfLine: t,
                noIndent: O
            }
        }
        function f() {
            i.context && (i.context = i.context.prev)
        }
        function h(e) {
            if ("openPlugin" == e) {
                var t;
                return i.pluginName = n,
                p(m, (t = i.startOfLine,
                function(e) {
                    return "selfclosePlugin" == e || "endPlugin" == e || "endPlugin" == e && d(i.pluginName, t),
                    p()
                }
                ))
            }
            if ("closePlugin" == e) {
                var O, r = !1;
                return i.context ? (r = i.context.pluginName != n,
                f()) : r = !0,
                r && (a = "error"),
                p((O = r,
                function(e) {
                    return (O && (a = "error"),
                    "endPlugin" == e) ? p() : u()
                }
                ))
            }
            return "string" == e && (i.context && "!cdata" == i.context.name || d("!cdata"),
            i.tokenize == l && f()),
            p()
        }
        function m(e) {
            return "keyword" == e ? (a = "attribute",
            p(m)) : "equals" == e ? p(Q, m) : u()
        }
        function Q(e) {
            return "keyword" == e ? (a = "string",
            p()) : "string" == e ? p($) : u()
        }
        function $(e) {
            return "string" == e ? p($) : u()
        }
        O.r(t),
        O.d(t, {
            tiki: function() {
                return g
            }
        });
        let g = {
            name: "tiki",
            startState: function() {
                return {
                    tokenize: l,
                    cc: [],
                    indented: 0,
                    startOfLine: !0,
                    pluginName: null,
                    context: null
                }
            },
            token: function(e, t) {
                if (e.sol() && (t.startOfLine = !0,
                t.indented = e.indentation()),
                e.eatSpace())
                    return null;
                a = r = n = null;
                var O = t.tokenize(e, t);
                if ((O || r) && "comment" != O)
                    for (i = t; !(t.cc.pop() || h)(r || O); )
                        ;
                return t.startOfLine = !1,
                a || O
            },
            indent: function(e, t, O) {
                var n = e.context;
                if (n && n.noIndent)
                    return 0;
                for (n && /^{\//.test(t) && (n = n.prev); n && !n.startOfLine; )
                    n = n.prev;
                return n ? n.indent + O.unit : 0
            }
        }
    },
    4686: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            toml: function() {
                return n
            }
        });
        let n = {
            name: "toml",
            startState: function() {
                return {
                    inString: !1,
                    stringType: "",
                    lhs: !0,
                    inArray: 0
                }
            },
            token: function(e, t) {
                if (t.inString || '"' != e.peek() && "'" != e.peek() || (t.stringType = e.peek(),
                e.next(),
                t.inString = !0),
                e.sol() && 0 === t.inArray && (t.lhs = !0),
                t.inString) {
                    for (; t.inString && !e.eol(); )
                        e.peek() === t.stringType ? (e.next(),
                        t.inString = !1) : "\\" === e.peek() ? (e.next(),
                        e.next()) : e.match(/^.[^\\\"\']*/);
                    return t.lhs ? "property" : "string"
                }
                if (t.inArray && "]" === e.peek())
                    return e.next(),
                    t.inArray--,
                    "bracket";
                if (t.lhs && "[" === e.peek() && e.skipTo("]"))
                    return e.next(),
                    "]" === e.peek() && e.next(),
                    "atom";
                if ("#" === e.peek())
                    return e.skipToEnd(),
                    "comment";
                if (e.eatSpace())
                    ;
                else if (t.lhs && e.eatWhile(function(e) {
                    return "=" != e && " " != e
                }))
                    return "property";
                else if (t.lhs && "=" === e.peek())
                    e.next(),
                    t.lhs = !1;
                else {
                    if (!t.lhs && e.match(/^\d\d\d\d[\d\-\:\.T]*Z/) || !t.lhs && (e.match("true") || e.match("false")))
                        return "atom";
                    if (!t.lhs && "[" === e.peek())
                        return t.inArray++,
                        e.next(),
                        "bracket";
                    if (!t.lhs && e.match(/^\-?\d+(?:\.\d+)?/))
                        return "number";
                    e.eatSpace() || e.next()
                }
                return null
            },
            languageData: {
                commentTokens: {
                    line: "#"
                }
            }
        }
    },
    3355: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            troff: function() {
                return i
            }
        });
        var n = {};
        function r(e) {
            if (e.eatSpace())
                return null;
            var t = e.sol()
              , O = e.next();
            if ("\\" === O)
                return e.match("fB") || e.match("fR") || e.match("fI") || e.match("u") || e.match("d") || e.match("%") || e.match("&") ? "string" : e.match("m[") ? (e.skipTo("]"),
                e.next(),
                "string") : e.match("s+") || e.match("s-") ? (e.eatWhile(/[\d-]/),
                "string") : ((e.match("(") || e.match("*(")) && e.eatWhile(/[\w-]/),
                "string");
            if (t && ("." === O || "'" === O) && e.eat("\\") && e.eat('"'))
                return e.skipToEnd(),
                "comment";
            if (t && "." === O) {
                if (e.match("B ") || e.match("I ") || e.match("R "))
                    return "attribute";
                if (e.match("TH ") || e.match("SH ") || e.match("SS ") || e.match("HP "))
                    return e.skipToEnd(),
                    "quote";
                if (e.match(/[A-Z]/) && e.match(/[A-Z]/) || e.match(/[a-z]/) && e.match(/[a-z]/))
                    return "attribute"
            }
            e.eatWhile(/[\w-]/);
            var r = e.current();
            return n.hasOwnProperty(r) ? n[r] : null
        }
        let i = {
            name: "troff",
            startState: function() {
                return {
                    tokens: []
                }
            },
            token: function(e, t) {
                return (t.tokens[0] || r)(e, t)
            }
        }
    },
    6482: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            ttcn: function() {
                return _
            }
        });
        let r = {
            name: "ttcn",
            keywords: n("activate address alive all alt altstep and and4b any break case component const continue control deactivate display do else encode enumerated except exception execute extends extension external for from function goto group if import in infinity inout interleave label language length log match message mixed mod modifies module modulepar mtc noblock not not4b nowait of on optional or or4b out override param pattern port procedure record recursive rem repeat return runs select self sender set signature system template testcase to type union value valueof var variant while with xor xor4b"),
            builtin: n("bit2hex bit2int bit2oct bit2str char2int char2oct encvalue decomp decvalue float2int float2str hex2bit hex2int hex2oct hex2str int2bit int2char int2float int2hex int2oct int2str int2unichar isbound ischosen ispresent isvalue lengthof log2str oct2bit oct2char oct2hex oct2int oct2str regexp replace rnd sizeof str2bit str2float str2hex str2int str2oct substr unichar2int unichar2char enum2int"),
            types: n("anytype bitstring boolean char charstring default float hexstring integer objid octetstring universal verdicttype timer"),
            timerOps: n("read running start stop timeout"),
            portOps: n("call catch check clear getcall getreply halt raise receive reply send trigger"),
            configOps: n("create connect disconnect done kill killed map unmap"),
            verdictOps: n("getverdict setverdict"),
            sutOps: n("action"),
            functionOps: n("apply derefers refers"),
            verdictConsts: n("error fail inconc none pass"),
            booleanConsts: n("true false"),
            otherConsts: n("null NULL omit"),
            visibilityModifiers: n("private public friend"),
            templateMatch: n("complement ifpresent subset superset permutation"),
            multiLineStrings: !0
        };
        var i, a = [];
        function o(e) {
            if (e)
                for (var t in e)
                    e.hasOwnProperty(t) && a.push(t)
        }
        o(r.keywords),
        o(r.builtin),
        o(r.timerOps),
        o(r.portOps);
        var s = r.keywords || {}
          , l = r.builtin || {}
          , c = r.timerOps || {}
          , u = r.portOps || {}
          , p = r.configOps || {}
          , d = r.verdictOps || {}
          , f = r.sutOps || {}
          , h = r.functionOps || {}
          , m = r.verdictConsts || {}
          , Q = r.booleanConsts || {}
          , $ = r.otherConsts || {}
          , g = r.types || {}
          , P = r.visibilityModifiers || {}
          , S = r.templateMatch || {}
          , b = r.multiLineStrings
          , y = !1 !== r.indentStatements
          , x = /[+\-*&@=<>!\/]/;
        function X(e, t) {
            var O = e.next();
            if ('"' == O || "'" == O)
                return t.tokenize = function(e, t) {
                    for (var n, r = !1, i = !1; null != (n = e.next()); ) {
                        if (n == O && !r) {
                            var a = e.peek();
                            a && ("b" == (a = a.toLowerCase()) || "h" == a || "o" == a) && e.next(),
                            i = !0;
                            break
                        }
                        r = !r && "\\" == n
                    }
                    return (i || !(r || b)) && (t.tokenize = null),
                    "string"
                }
                ,
                t.tokenize(e, t);
            if (/[\[\]{}\(\),;\\:\?\.]/.test(O))
                return i = O,
                "punctuation";
            if ("#" == O)
                return e.skipToEnd(),
                "atom";
            if ("%" == O)
                return e.eatWhile(/\b/),
                "atom";
            if (/\d/.test(O))
                return e.eatWhile(/[\w\.]/),
                "number";
            if ("/" == O) {
                if (e.eat("*"))
                    return t.tokenize = v,
                    v(e, t);
                if (e.eat("/"))
                    return e.skipToEnd(),
                    "comment"
            }
            if (x.test(O))
                return "@" == O && (e.match("try") || e.match("catch") || e.match("lazy")) ? "keyword" : (e.eatWhile(x),
                "operator");
            e.eatWhile(/[\w\$_\xa1-\uffff]/);
            var n = e.current();
            return s.propertyIsEnumerable(n) ? "keyword" : l.propertyIsEnumerable(n) ? "builtin" : c.propertyIsEnumerable(n) || p.propertyIsEnumerable(n) || d.propertyIsEnumerable(n) || u.propertyIsEnumerable(n) || f.propertyIsEnumerable(n) || h.propertyIsEnumerable(n) ? "def" : m.propertyIsEnumerable(n) || Q.propertyIsEnumerable(n) || $.propertyIsEnumerable(n) ? "string" : g.propertyIsEnumerable(n) ? "typeName.standard" : P.propertyIsEnumerable(n) ? "modifier" : S.propertyIsEnumerable(n) ? "atom" : "variable"
        }
        function v(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("/" == O && n) {
                    t.tokenize = null;
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        function k(e, t, O, n, r) {
            this.indented = e,
            this.column = t,
            this.type = O,
            this.align = n,
            this.prev = r
        }
        function w(e, t, O) {
            var n = e.indented;
            return e.context && "statement" == e.context.type && (n = e.context.indented),
            e.context = new k(n,t,O,null,e.context)
        }
        function T(e) {
            var t = e.context.type;
            return (")" == t || "]" == t || "}" == t) && (e.indented = e.context.indented),
            e.context = e.context.prev
        }
        let _ = {
            name: "ttcn",
            startState: function() {
                return {
                    tokenize: null,
                    context: new k(0,0,"top",!1),
                    indented: 0,
                    startOfLine: !0
                }
            },
            token: function(e, t) {
                var O = t.context;
                if (e.sol() && (null == O.align && (O.align = !1),
                t.indented = e.indentation(),
                t.startOfLine = !0),
                e.eatSpace())
                    return null;
                i = null;
                var n = (t.tokenize || X)(e, t);
                if ("comment" == n)
                    return n;
                if (null == O.align && (O.align = !0),
                (";" == i || ":" == i || "," == i) && "statement" == O.type)
                    T(t);
                else if ("{" == i)
                    w(t, e.column(), "}");
                else if ("[" == i)
                    w(t, e.column(), "]");
                else if ("(" == i)
                    w(t, e.column(), ")");
                else if ("}" == i) {
                    for (; "statement" == O.type; )
                        O = T(t);
                    for ("}" == O.type && (O = T(t)); "statement" == O.type; )
                        O = T(t)
                } else
                    i == O.type ? T(t) : y && (("}" == O.type || "top" == O.type) && ";" != i || "statement" == O.type && "newstatement" == i) && w(t, e.column(), "statement");
                return t.startOfLine = !1,
                n
            },
            languageData: {
                indentOnInput: /^\s*[{}]$/,
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                },
                autocomplete: a
            }
        }
    },
    6547: function(e, t, O) {
        "use strict";
        function n(e) {
            return RegExp("^(?:" + e.join("|") + ")$", "i")
        }
        O.r(t),
        O.d(t, {
            turtle: function() {
                return c
            }
        }),
        n([]);
        var r, i = n(["@prefix", "@base", "a"]), a = /[*+\-<>=&|]/;
        function o(e, t) {
            var O, n = e.next();
            if (r = null,
            "<" == n && !e.match(/^[\s\u00a0=]/, !1))
                return e.match(/^[^\s\u00a0>]*>?/),
                "atom";
            if ('"' == n || "'" == n)
                return t.tokenize = function(e, t) {
                    for (var O, r = !1; null != (O = e.next()); ) {
                        if (O == n && !r) {
                            t.tokenize = o;
                            break
                        }
                        r = !r && "\\" == O
                    }
                    return "string"
                }
                ,
                t.tokenize(e, t);
            if (/[{}\(\),\.;\[\]]/.test(n))
                return r = n,
                null;
            if ("#" == n)
                return e.skipToEnd(),
                "comment";
            if (a.test(n))
                return e.eatWhile(a),
                null;
            if (":" == n)
                return "operator";
            if (e.eatWhile(/[_\w\d]/),
            ":" == e.peek())
                return "variableName.special";
            var O = e.current();
            return i.test(O) ? "meta" : n >= "A" && n <= "Z" ? "comment" : "keyword"
        }
        function s(e, t, O) {
            e.context = {
                prev: e.context,
                indent: e.indent,
                col: O,
                type: t
            }
        }
        function l(e) {
            e.indent = e.context.indent,
            e.context = e.context.prev
        }
        let c = {
            name: "turtle",
            startState: function() {
                return {
                    tokenize: o,
                    context: null,
                    indent: 0,
                    col: 0
                }
            },
            token: function(e, t) {
                if (e.sol() && (t.context && null == t.context.align && (t.context.align = !1),
                t.indent = e.indentation()),
                e.eatSpace())
                    return null;
                var O = t.tokenize(e, t);
                if ("comment" != O && t.context && null == t.context.align && "pattern" != t.context.type && (t.context.align = !0),
                "(" == r)
                    s(t, ")", e.column());
                else if ("[" == r)
                    s(t, "]", e.column());
                else if ("{" == r)
                    s(t, "}", e.column());
                else if (/[\]\}\)]/.test(r)) {
                    for (; t.context && "pattern" == t.context.type; )
                        l(t);
                    t.context && r == t.context.type && l(t)
                } else
                    "." == r && t.context && "pattern" == t.context.type ? l(t) : /atom|string|variable/.test(O) && t.context && (/[\}\]]/.test(t.context.type) ? s(t, "pattern", e.column()) : "pattern" != t.context.type || t.context.align || (t.context.align = !0,
                    t.context.col = e.column()));
                return O
            },
            indent: function(e, t, O) {
                var n = t && t.charAt(0)
                  , r = e.context;
                if (/[\]\}]/.test(n))
                    for (; r && "pattern" == r.type; )
                        r = r.prev;
                var i = r && n == r.type;
                return r ? "pattern" == r.type ? r.col : r.align ? r.col + (i ? 0 : 1) : r.indent + (i ? 0 : O.unit) : 0
            },
            languageData: {
                commentTokens: {
                    line: "#"
                }
            }
        }
    },
    5593: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            vb: function() {
                return w
            }
        });
        var n = "error";
        function r(e) {
            return RegExp("^((" + e.join(")|(") + "))\\b", "i")
        }
        var i = RegExp("^[\\+\\-\\*/%&\\\\|\\^~<>!]")
          , a = RegExp("^[\\(\\)\\[\\]\\{\\}@,:`=;\\.]")
          , o = RegExp("^((==)|(<>)|(<=)|(>=)|(<>)|(<<)|(>>)|(//)|(\\*\\*))")
          , s = RegExp("^((\\+=)|(\\-=)|(\\*=)|(%=)|(/=)|(&=)|(\\|=)|(\\^=))")
          , l = RegExp("^((//=)|(>>=)|(<<=)|(\\*\\*=))")
          , c = RegExp("^[_A-Za-z][_A-Za-z0-9]*")
          , u = ["class", "module", "sub", "enum", "select", "while", "if", "function", "get", "set", "property", "try", "structure", "synclock", "using", "with"]
          , p = ["else", "elseif", "case", "catch", "finally"]
          , d = ["next", "loop"]
          , f = ["and", "andalso", "or", "orelse", "xor", "in", "not", "is", "isnot", "like"]
          , h = r(f)
          , m = ["#const", "#else", "#elseif", "#end", "#if", "#region", "addhandler", "addressof", "alias", "as", "byref", "byval", "cbool", "cbyte", "cchar", "cdate", "cdbl", "cdec", "cint", "clng", "cobj", "compare", "const", "continue", "csbyte", "cshort", "csng", "cstr", "cuint", "culng", "cushort", "declare", "default", "delegate", "dim", "directcast", "each", "erase", "error", "event", "exit", "explicit", "false", "for", "friend", "gettype", "goto", "handles", "implements", "imports", "infer", "inherits", "interface", "isfalse", "istrue", "lib", "me", "mod", "mustinherit", "mustoverride", "my", "mybase", "myclass", "namespace", "narrowing", "new", "nothing", "notinheritable", "notoverridable", "of", "off", "on", "operator", "option", "optional", "out", "overloads", "overridable", "overrides", "paramarray", "partial", "private", "protected", "public", "raiseevent", "readonly", "redim", "removehandler", "resume", "return", "shadows", "shared", "static", "step", "stop", "strict", "then", "throw", "to", "true", "trycast", "typeof", "until", "until", "when", "widening", "withevents", "writeonly"]
          , Q = ["object", "boolean", "char", "string", "byte", "sbyte", "short", "ushort", "int16", "uint16", "integer", "uinteger", "int32", "uint32", "long", "ulong", "int64", "uint64", "decimal", "single", "double", "float", "date", "datetime", "intptr", "uintptr"]
          , $ = r(m)
          , g = r(Q)
          , P = r(u)
          , S = r(p)
          , b = r(d)
          , y = r(["end"])
          , x = r(["do"]);
        function X(e, t) {
            t.currentIndent++
        }
        function v(e, t) {
            t.currentIndent--
        }
        function k(e, t) {
            if (e.eatSpace())
                return null;
            if ("'" === e.peek())
                return e.skipToEnd(),
                "comment";
            if (e.match(/^((&H)|(&O))?[0-9\.a-f]/i, !1)) {
                var O, r, u, p = !1;
                if (e.match(/^\d*\.\d+F?/i) ? p = !0 : e.match(/^\d+\.\d*F?/) ? p = !0 : e.match(/^\.\d+F?/) && (p = !0),
                p)
                    return e.eat(/J/i),
                    "number";
                var d = !1;
                if (e.match(/^&H[0-9a-f]+/i) ? d = !0 : e.match(/^&O[0-7]+/i) ? d = !0 : e.match(/^[1-9]\d*F?/) ? (e.eat(/J/i),
                d = !0) : e.match(/^0(?![\dx])/i) && (d = !0),
                d)
                    return e.eat(/L/i),
                    "number"
            }
            return e.match('"') ? (t.tokenize = (r = 1 == (O = e.current()).length,
            u = "string",
            function(e, t) {
                for (; !e.eol(); ) {
                    if (e.eatWhile(/[^'"]/),
                    e.match(O))
                        return t.tokenize = k,
                        u;
                    e.eat(/['"]/)
                }
                return r && (t.tokenize = k),
                u
            }
            ),
            t.tokenize(e, t)) : e.match(l) || e.match(s) ? null : e.match(o) || e.match(i) || e.match(h) ? "operator" : e.match(a) ? null : e.match(x) ? (X(e, t),
            t.doInCurrentLine = !0,
            "keyword") : e.match(P) ? (t.doInCurrentLine ? t.doInCurrentLine = !1 : X(e, t),
            "keyword") : e.match(S) ? "keyword" : e.match(y) ? (v(e, t),
            v(e, t),
            "keyword") : e.match(b) ? (v(e, t),
            "keyword") : e.match(g) || e.match($) ? "keyword" : e.match(c) ? "variable" : (e.next(),
            n)
        }
        let w = {
            name: "vb",
            startState: function() {
                return {
                    tokenize: k,
                    lastToken: null,
                    currentIndent: 0,
                    nextLineIndent: 0,
                    doInCurrentLine: !1
                }
            },
            token: function(e, t) {
                e.sol() && (t.currentIndent += t.nextLineIndent,
                t.nextLineIndent = 0,
                t.doInCurrentLine = 0);
                var O = function(e, t) {
                    var O = t.tokenize(e, t)
                      , r = e.current();
                    if ("." === r)
                        return "variable" === (O = t.tokenize(e, t)) ? "variable" : n;
                    var i = "[({".indexOf(r);
                    return (-1 !== i && X(e, t),
                    -1 !== (i = "])}".indexOf(r)) && v(e, t)) ? n : O
                }(e, t);
                return t.lastToken = {
                    style: O,
                    content: e.current()
                },
                O
            },
            indent: function(e, t, O) {
                var n = t.replace(/^\s+|\s+$/g, "");
                return n.match(b) || n.match(y) || n.match(S) ? O.unit * (e.currentIndent - 1) : e.currentIndent < 0 ? 0 : e.currentIndent * O.unit
            },
            languageData: {
                closeBrackets: {
                    brackets: ["(", "[", "{", '"']
                },
                commentTokens: {
                    line: "'"
                },
                autocomplete: u.concat(p).concat(d).concat(f).concat(m).concat(Q)
            }
        }
    },
    1747: function(e, t, O) {
        "use strict";
        function n(e) {
            var t = "error";
            function O(e) {
                return RegExp("^((" + e.join(")|(") + "))\\b", "i")
            }
            var n = RegExp("^[\\+\\-\\*/&\\\\\\^<>=]")
              , r = RegExp("^((<>)|(<=)|(>=))")
              , i = RegExp("^[\\.,]")
              , a = RegExp("^[\\(\\)]")
              , o = RegExp("^[A-Za-z][_A-Za-z0-9]*")
              , s = O(["and", "or", "not", "xor", "is", "mod", "eqv", "imp"])
              , l = ["WScript", "err", "debug", "RegExp"]
              , c = ["clear", "execute", "raise", "replace", "test", "write", "writeline", "close", "open", "state", "eof", "update", "addnew", "end", "createobject", "quit"].concat(["description", "firstindex", "global", "helpcontext", "helpfile", "ignorecase", "length", "number", "pattern", "source", "value", "count"]);
            l = l.concat(["vbBlack", "vbRed", "vbGreen", "vbYellow", "vbBlue", "vbMagenta", "vbCyan", "vbWhite", "vbBinaryCompare", "vbTextCompare", "vbSunday", "vbMonday", "vbTuesday", "vbWednesday", "vbThursday", "vbFriday", "vbSaturday", "vbUseSystemDayOfWeek", "vbFirstJan1", "vbFirstFourDays", "vbFirstFullWeek", "vbGeneralDate", "vbLongDate", "vbShortDate", "vbLongTime", "vbShortTime", "vbObjectError", "vbOKOnly", "vbOKCancel", "vbAbortRetryIgnore", "vbYesNoCancel", "vbYesNo", "vbRetryCancel", "vbCritical", "vbQuestion", "vbExclamation", "vbInformation", "vbDefaultButton1", "vbDefaultButton2", "vbDefaultButton3", "vbDefaultButton4", "vbApplicationModal", "vbSystemModal", "vbOK", "vbCancel", "vbAbort", "vbRetry", "vbIgnore", "vbYes", "vbNo", "vbCr", "VbCrLf", "vbFormFeed", "vbLf", "vbNewLine", "vbNullChar", "vbNullString", "vbTab", "vbVerticalTab", "vbUseDefault", "vbTrue", "vbFalse", "vbEmpty", "vbNull", "vbInteger", "vbLong", "vbSingle", "vbDouble", "vbCurrency", "vbDate", "vbString", "vbObject", "vbError", "vbBoolean", "vbVariant", "vbDataObject", "vbDecimal", "vbByte", "vbArray"]),
            e.isASP && (l = l.concat(["server", "response", "request", "session", "application"]),
            c = c.concat(["addheader", "appendtolog", "binarywrite", "end", "flush", "redirect", "binaryread", "remove", "removeall", "lock", "unlock", "abandon", "getlasterror", "htmlencode", "mappath", "transfer", "urlencode"], ["buffer", "cachecontrol", "charset", "contenttype", "expires", "expiresabsolute", "isclientconnected", "pics", "status", "clientcertificate", "cookies", "form", "querystring", "servervariables", "totalbytes", "contents", "staticobjects", "codepage", "lcid", "sessionid", "timeout", "scripttimeout"]));
            var u = O(["dim", "redim", "then", "until", "randomize", "byval", "byref", "new", "property", "exit", "in", "const", "private", "public", "get", "set", "let", "stop", "on error resume next", "on error goto 0", "option explicit", "call", "me"])
              , p = O(["true", "false", "nothing", "empty", "null"])
              , d = O(["abs", "array", "asc", "atn", "cbool", "cbyte", "ccur", "cdate", "cdbl", "chr", "cint", "clng", "cos", "csng", "cstr", "date", "dateadd", "datediff", "datepart", "dateserial", "datevalue", "day", "escape", "eval", "execute", "exp", "filter", "formatcurrency", "formatdatetime", "formatnumber", "formatpercent", "getlocale", "getobject", "getref", "hex", "hour", "inputbox", "instr", "instrrev", "int", "fix", "isarray", "isdate", "isempty", "isnull", "isnumeric", "isobject", "join", "lbound", "lcase", "left", "len", "loadpicture", "log", "ltrim", "rtrim", "trim", "maths", "mid", "minute", "month", "monthname", "msgbox", "now", "oct", "replace", "rgb", "right", "rnd", "round", "scriptengine", "scriptenginebuildversion", "scriptenginemajorversion", "scriptengineminorversion", "second", "setlocale", "sgn", "sin", "space", "split", "sqr", "strcomp", "string", "strreverse", "tan", "time", "timer", "timeserial", "timevalue", "typename", "ubound", "ucase", "unescape", "vartype", "weekday", "weekdayname", "year"])
              , f = O(l)
              , h = O(c)
              , m = O(["class", "sub", "select", "while", "if", "function", "property", "with", "for"])
              , Q = O(["else", "elseif", "case"])
              , $ = O(["next", "loop", "wend"])
              , g = O(["end"])
              , P = O(["do"])
              , S = O(["on error resume next", "exit"])
              , b = O(["rem"]);
            function y(e, t) {
                t.currentIndent++
            }
            function x(e, t) {
                t.currentIndent--
            }
            function X(e, O) {
                if (e.eatSpace())
                    return null;
                if ("'" === e.peek() || e.match(b))
                    return e.skipToEnd(),
                    "comment";
                if (e.match(/^((&H)|(&O))?[0-9\.]/i, !1) && !e.match(/^((&H)|(&O))?[0-9\.]+[a-z_]/i, !1)) {
                    var l, c, v, k = !1;
                    if (e.match(/^\d*\.\d+/i) ? k = !0 : e.match(/^\d+\.\d*/) ? k = !0 : e.match(/^\.\d+/) && (k = !0),
                    k)
                        return e.eat(/J/i),
                        "number";
                    var w = !1;
                    if (e.match(/^&H[0-9a-f]+/i) ? w = !0 : e.match(/^&O[0-7]+/i) ? w = !0 : e.match(/^[1-9]\d*F?/) ? (e.eat(/J/i),
                    w = !0) : e.match(/^0(?![\dx])/i) && (w = !0),
                    w)
                        return e.eat(/L/i),
                        "number"
                }
                return e.match('"') ? (O.tokenize = (c = 1 == (l = e.current()).length,
                v = "string",
                function(e, t) {
                    for (; !e.eol(); ) {
                        if (e.eatWhile(/[^'"]/),
                        e.match(l))
                            return t.tokenize = X,
                            v;
                        e.eat(/['"]/)
                    }
                    return c && (t.tokenize = X),
                    v
                }
                ),
                O.tokenize(e, O)) : e.match(r) || e.match(n) || e.match(s) ? "operator" : e.match(i) ? null : e.match(a) ? "bracket" : e.match(S) ? (O.doInCurrentLine = !0,
                "keyword") : e.match(P) ? (y(e, O),
                O.doInCurrentLine = !0,
                "keyword") : e.match(m) ? (O.doInCurrentLine ? O.doInCurrentLine = !1 : y(e, O),
                "keyword") : e.match(Q) ? "keyword" : e.match(g) ? (x(e, O),
                x(e, O),
                "keyword") : e.match($) ? (O.doInCurrentLine ? O.doInCurrentLine = !1 : x(e, O),
                "keyword") : e.match(u) ? "keyword" : e.match(p) ? "atom" : e.match(h) ? "variableName.special" : e.match(d) || e.match(f) ? "builtin" : e.match(o) ? "variable" : (e.next(),
                t)
            }
            return {
                name: "vbscript",
                startState: function() {
                    return {
                        tokenize: X,
                        lastToken: null,
                        currentIndent: 0,
                        nextLineIndent: 0,
                        doInCurrentLine: !1,
                        ignoreKeyword: !1
                    }
                },
                token: function(e, O) {
                    e.sol() && (O.currentIndent += O.nextLineIndent,
                    O.nextLineIndent = 0,
                    O.doInCurrentLine = 0);
                    var n = function(e, O) {
                        var n = O.tokenize(e, O)
                          , r = e.current();
                        if ("." === r) {
                            if (n = O.tokenize(e, O),
                            r = e.current(),
                            !n || "variable" !== n.substr(0, 8) && "builtin" !== n && "keyword" !== n)
                                return t;
                            ("builtin" === n || "keyword" === n) && (n = "variable"),
                            c.indexOf(r.substr(1)) > -1 && (n = "keyword")
                        }
                        return n
                    }(e, O);
                    return O.lastToken = {
                        style: n,
                        content: e.current()
                    },
                    null === n && (n = null),
                    n
                },
                indent: function(e, t, O) {
                    var n = t.replace(/^\s+|\s+$/g, "");
                    return n.match($) || n.match(g) || n.match(Q) ? O.unit * (e.currentIndent - 1) : e.currentIndent < 0 ? 0 : e.currentIndent * O.unit
                }
            }
        }
        O.r(t),
        O.d(t, {
            vbScript: function() {
                return r
            },
            vbScriptASP: function() {
                return i
            }
        });
        let r = n({})
          , i = n({
            isASP: !0
        })
    },
    2928: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }
        O.r(t),
        O.d(t, {
            velocity: function() {
                return d
            }
        });
        var r = n("#end #else #break #stop #[[ #]] #{end} #{else} #{break} #{stop}")
          , i = n("#if #elseif #foreach #set #include #parse #macro #define #evaluate #{if} #{elseif} #{foreach} #{set} #{include} #{parse} #{macro} #{define} #{evaluate}")
          , a = n("$foreach.count $foreach.hasNext $foreach.first $foreach.last $foreach.topmost $foreach.parent.count $foreach.parent.hasNext $foreach.parent.first $foreach.parent.last $foreach.parent $velocityCount $!bodyContent $bodyContent")
          , o = /[+\-*&%=<>!?:\/|]/;
        function s(e, t, O) {
            return t.tokenize = O,
            O(e, t)
        }
        function l(e, t) {
            var O = t.beforeParams;
            t.beforeParams = !1;
            var n = e.next();
            if ("'" == n && !t.inString && t.inParams)
                return t.lastTokenWasBuiltin = !1,
                s(e, t, c(n));
            if ('"' == n) {
                if (t.lastTokenWasBuiltin = !1,
                t.inString)
                    return t.inString = !1,
                    "string";
                if (t.inParams)
                    return s(e, t, c(n))
            } else {
                if (/[\[\]{}\(\),;\.]/.test(n))
                    return "(" == n && O ? t.inParams = !0 : ")" == n && (t.inParams = !1,
                    t.lastTokenWasBuiltin = !0),
                    null;
                if (/\d/.test(n))
                    return t.lastTokenWasBuiltin = !1,
                    e.eatWhile(/[\w\.]/),
                    "number";
                if ("#" == n && e.eat("*"))
                    return t.lastTokenWasBuiltin = !1,
                    s(e, t, u);
                if ("#" == n && e.match(/ *\[ *\[/))
                    return t.lastTokenWasBuiltin = !1,
                    s(e, t, p);
                if ("#" == n && e.eat("#"))
                    return t.lastTokenWasBuiltin = !1,
                    e.skipToEnd(),
                    "comment";
                if ("$" == n)
                    return (e.eat("!"),
                    e.eatWhile(/[\w\d\$_\.{}-]/),
                    a && a.propertyIsEnumerable(e.current())) ? "keyword" : (t.lastTokenWasBuiltin = !0,
                    t.beforeParams = !0,
                    "builtin");
                if (o.test(n))
                    return t.lastTokenWasBuiltin = !1,
                    e.eatWhile(o),
                    "operator";
                e.eatWhile(/[\w\$_{}@]/);
                var l = e.current();
                return r && r.propertyIsEnumerable(l) ? "keyword" : i && i.propertyIsEnumerable(l) || e.current().match(/^#@?[a-z0-9_]+ *$/i) && "(" == e.peek() && !(i && i.propertyIsEnumerable(l.toLowerCase())) ? (t.beforeParams = !0,
                t.lastTokenWasBuiltin = !1,
                "keyword") : t.inString ? (t.lastTokenWasBuiltin = !1,
                "string") : e.pos > l.length && "." == e.string.charAt(e.pos - l.length - 1) && t.lastTokenWasBuiltin ? "builtin" : (t.lastTokenWasBuiltin = !1,
                null)
            }
        }
        function c(e) {
            return function(t, O) {
                for (var n, r = !1, i = !1; null != (n = t.next()); ) {
                    if (n == e && !r) {
                        i = !0;
                        break
                    }
                    if ('"' == e && "$" == t.peek() && !r) {
                        O.inString = !0,
                        i = !0;
                        break
                    }
                    r = !r && "\\" == n
                }
                return i && (O.tokenize = l),
                "string"
            }
        }
        function u(e, t) {
            for (var O, n = !1; O = e.next(); ) {
                if ("#" == O && n) {
                    t.tokenize = l;
                    break
                }
                n = "*" == O
            }
            return "comment"
        }
        function p(e, t) {
            for (var O, n = 0; O = e.next(); ) {
                if ("#" == O && 2 == n) {
                    t.tokenize = l;
                    break
                }
                "]" == O ? n++ : " " != O && (n = 0)
            }
            return "meta"
        }
        let d = {
            name: "velocity",
            startState: function() {
                return {
                    tokenize: l,
                    beforeParams: !1,
                    inParams: !1,
                    inString: !1,
                    lastTokenWasBuiltin: !1
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : t.tokenize(e, t)
            },
            languageData: {
                commentTokens: {
                    line: "##",
                    block: {
                        open: "#*",
                        close: "*#"
                    }
                }
            }
        }
    },
    5113: function(e, t, O) {
        "use strict";
        function n(e) {
            var t, O, n = e.statementIndentUnit, r = e.dontAlignCalls, i = e.noIndentKeywords || [], a = e.multiLineStrings, o = e.hooks || {};
            function s(e) {
                for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                    t[O[n]] = !0;
                return t
            }
            var l = s("accept_on alias always always_comb always_ff always_latch and assert assign assume automatic before begin bind bins binsof bit break buf bufif0 bufif1 byte case casex casez cell chandle checker class clocking cmos config const constraint context continue cover covergroup coverpoint cross deassign default defparam design disable dist do edge else end endcase endchecker endclass endclocking endconfig endfunction endgenerate endgroup endinterface endmodule endpackage endprimitive endprogram endproperty endspecify endsequence endtable endtask enum event eventually expect export extends extern final first_match for force foreach forever fork forkjoin function generate genvar global highz0 highz1 if iff ifnone ignore_bins illegal_bins implements implies import incdir include initial inout input inside instance int integer interconnect interface intersect join join_any join_none large let liblist library local localparam logic longint macromodule matches medium modport module nand negedge nettype new nexttime nmos nor noshowcancelled not notif0 notif1 null or output package packed parameter pmos posedge primitive priority program property protected pull0 pull1 pulldown pullup pulsestyle_ondetect pulsestyle_onevent pure rand randc randcase randsequence rcmos real realtime ref reg reject_on release repeat restrict return rnmos rpmos rtran rtranif0 rtranif1 s_always s_eventually s_nexttime s_until s_until_with scalared sequence shortint shortreal showcancelled signed small soft solve specify specparam static string strong strong0 strong1 struct super supply0 supply1 sync_accept_on sync_reject_on table tagged task this throughout time timeprecision timeunit tran tranif0 tranif1 tri tri0 tri1 triand trior trireg type typedef union unique unique0 unsigned until until_with untyped use uwire var vectored virtual void wait wait_order wand weak weak0 weak1 while wildcard wire with within wor xnor xor")
              , c = /[\+\-\*\/!~&|^%=?:]/
              , u = /[\[\]{}()]/
              , p = /\d[0-9_]*/
              , d = /\d*\s*'s?d\s*\d[0-9_]*/i
              , f = /\d*\s*'s?b\s*[xz01][xz01_]*/i
              , h = /\d*\s*'s?o\s*[xz0-7][xz0-7_]*/i
              , m = /\d*\s*'s?h\s*[0-9a-fxz?][0-9a-fxz?_]*/i
              , Q = /(\d[\d_]*(\.\d[\d_]*)?E-?[\d_]+)|(\d[\d_]*\.\d[\d_]*)/i
              , $ = /^((\w+)|[)}\]])/
              , g = /[)}\]]/
              , P = s("case checker class clocking config function generate interface module package primitive program property specify sequence table task")
              , S = {};
            for (var b in P)
                S[b] = "end" + b;
            for (var y in S.begin = "end",
            S.casex = "endcase",
            S.casez = "endcase",
            S.do = "while",
            S.fork = "join;join_any;join_none",
            S.covergroup = "endgroup",
            i) {
                var b = i[y];
                S[b] && (S[b] = void 0)
            }
            var x = s("always always_comb always_ff always_latch assert assign assume else export for foreach forever if import initial repeat while");
            function X(e, n) {
                var r, i = e.peek();
                if (o[i] && !1 != (r = o[i](e, n)) || o.tokenBase && !1 != (r = o.tokenBase(e, n)))
                    return r;
                if (/[,;:\.]/.test(i))
                    return t = e.next(),
                    null;
                if (u.test(i))
                    return t = e.next(),
                    "bracket";
                if ("`" == i)
                    return (e.next(),
                    e.eatWhile(/[\w\$_]/)) ? "def" : null;
                if ("$" == i)
                    return (e.next(),
                    e.eatWhile(/[\w\$_]/)) ? "meta" : null;
                if ("#" == i)
                    return e.next(),
                    e.eatWhile(/[\d_.]/),
                    "def";
                if ('"' == i)
                    return e.next(),
                    n.tokenize = function(e, t) {
                        for (var O, n = !1, r = !1; null != (O = e.next()); ) {
                            if (O == i && !n) {
                                r = !0;
                                break
                            }
                            n = !n && "\\" == O
                        }
                        return (r || !(n || a)) && (t.tokenize = X),
                        "string"
                    }
                    ,
                    n.tokenize(e, n);
                if ("/" == i) {
                    if (e.next(),
                    e.eat("*"))
                        return n.tokenize = v,
                        v(e, n);
                    if (e.eat("/"))
                        return e.skipToEnd(),
                        "comment";
                    e.backUp(1)
                }
                if (e.match(Q) || e.match(d) || e.match(f) || e.match(h) || e.match(m) || e.match(p) || e.match(Q))
                    return "number";
                if (e.eatWhile(c))
                    return "meta";
                if (e.eatWhile(/[\w\$_]/)) {
                    var s = e.current();
                    return l[s] ? (S[s] && (t = "newblock"),
                    x[s] && (t = "newstatement"),
                    O = s,
                    "keyword") : "variable"
                }
                return e.next(),
                null
            }
            function v(e, t) {
                for (var O, n = !1; O = e.next(); ) {
                    if ("/" == O && n) {
                        t.tokenize = X;
                        break
                    }
                    n = "*" == O
                }
                return "comment"
            }
            function k(e, t, O, n, r) {
                this.indented = e,
                this.column = t,
                this.type = O,
                this.align = n,
                this.prev = r
            }
            function w(e, t, O) {
                var n = e.indented
                  , r = new k(n,t,O,null,e.context);
                return e.context = r
            }
            function T(e) {
                var t = e.context.type;
                return (")" == t || "]" == t || "}" == t) && (e.indented = e.context.indented),
                e.context = e.context.prev
            }
            function _(e, t) {
                if (e == t)
                    return !0;
                var O = t.split(";");
                for (var n in O)
                    if (e == O[n])
                        return !0;
                return !1
            }
            return {
                name: "verilog",
                startState: function(e) {
                    var t = {
                        tokenize: null,
                        context: new k(-e,0,"top",!1),
                        indented: 0,
                        startOfLine: !0
                    };
                    return o.startState && o.startState(t),
                    t
                },
                token: function(e, n) {
                    var r = n.context;
                    if (e.sol() && (null == r.align && (r.align = !1),
                    n.indented = e.indentation(),
                    n.startOfLine = !0),
                    o.token) {
                        var i = o.token(e, n);
                        if (void 0 !== i)
                            return i
                    }
                    if (e.eatSpace())
                        return null;
                    t = null,
                    O = null;
                    var i = (n.tokenize || X)(e, n);
                    if ("comment" == i || "meta" == i || "variable" == i)
                        return i;
                    if (null == r.align && (r.align = !0),
                    t == r.type)
                        T(n);
                    else if (";" == t && "statement" == r.type || r.type && _(O, r.type))
                        for (r = T(n); r && "statement" == r.type; )
                            r = T(n);
                    else if ("{" == t)
                        w(n, e.column(), "}");
                    else if ("[" == t)
                        w(n, e.column(), "]");
                    else if ("(" == t)
                        w(n, e.column(), ")");
                    else if (r && "endcase" == r.type && ":" == t)
                        w(n, e.column(), "statement");
                    else if ("newstatement" == t)
                        w(n, e.column(), "statement");
                    else if ("newblock" == t) {
                        if ("function" == O && r && ("statement" == r.type || "endgroup" == r.type))
                            ;
                        else if ("task" == O && r && "statement" == r.type)
                            ;
                        else {
                            var a = S[O];
                            w(n, e.column(), a)
                        }
                    }
                    return n.startOfLine = !1,
                    i
                },
                indent: function(e, t, O) {
                    if (e.tokenize != X && null != e.tokenize)
                        return null;
                    if (o.indent) {
                        var i = o.indent(e);
                        if (i >= 0)
                            return i
                    }
                    var a = e.context
                      , s = t && t.charAt(0);
                    "statement" == a.type && "}" == s && (a = a.prev);
                    var l = !1
                      , c = t.match($);
                    return (c && (l = _(c[0], a.type)),
                    "statement" == a.type) ? a.indented + ("{" == s ? 0 : n || O.unit) : g.test(a.type) && a.align && !r ? a.column + (l ? 0 : 1) : ")" != a.type || l ? a.indented + (l ? 0 : O.unit) : a.indented + (n || O.unit)
                },
                languageData: {
                    indentOnInput: function() {
                        var e = [];
                        for (var t in S)
                            if (S[t]) {
                                var O = S[t].split(";");
                                for (var n in O)
                                    e.push(O[n])
                            }
                        return RegExp("[{}()\\[\\]]|(" + e.join("|") + ")$")
                    }(),
                    commentTokens: {
                        line: "//",
                        block: {
                            open: "/*",
                            close: "*/"
                        }
                    }
                }
            }
        }
        O.r(t),
        O.d(t, {
            tlv: function() {
                return c
            },
            verilog: function() {
                return r
            }
        });
        let r = n({});
        var i = {
            "|": "link",
            ">": "property",
            $: "variable",
            $$: "variable",
            "?$": "qualifier",
            "?*": "qualifier",
            "-": "contentSeparator",
            "/": "property",
            "/-": "property",
            "@": "variableName.special",
            "@-": "variableName.special",
            "@++": "variableName.special",
            "@+=": "variableName.special",
            "@+=-": "variableName.special",
            "@--": "variableName.special",
            "@-=": "variableName.special",
            "%+": "tag",
            "%-": "tag",
            "%": "tag",
            ">>": "tag",
            "<<": "tag",
            "<>": "tag",
            "#": "tag",
            "^": "attribute",
            "^^": "attribute",
            "^!": "attribute",
            "*": "variable",
            "**": "variable",
            "\\": "keyword",
            '"': "comment"
        }
          , a = {
            "/": "beh-hier",
            ">": "beh-hier",
            "-": "phys-hier",
            "|": "pipe",
            "?": "when",
            "@": "stage",
            "\\": "keyword"
        }
          , o = /^([~!@#\$%\^&\*-\+=\?\/\\\|'"<>]+)([\d\w_]*)/
          , s = /^[! ] */
          , l = /^\/[\/\*]/;
        let c = n({
            hooks: {
                electricInput: !1,
                token: function(e, t) {
                    var O, n = void 0;
                    if (e.sol() && !t.tlvInBlockComment) {
                        "\\" == e.peek() && (n = "def",
                        e.skipToEnd(),
                        e.string.match(/\\SV/) ? t.tlvCodeActive = !1 : e.string.match(/\\TLV/) && (t.tlvCodeActive = !0)),
                        t.tlvCodeActive && 0 == e.pos && 0 == t.indented && (O = e.match(s, !1)) && (t.indented = O[0].length);
                        var r = t.indented
                          , c = r / 3;
                        if (c <= t.tlvIndentationStyle.length) {
                            var u = e.string.length == r
                              , p = 3 * c;
                            if (p < e.string.length) {
                                var d = e.string.slice(p)
                                  , f = d[0];
                                a[f] && (O = d.match(o)) && i[O[1]] && (r += 3,
                                !("\\" == f && p > 0) && (t.tlvIndentationStyle[c] = a[f],
                                c++))
                            }
                            if (!u)
                                for (; t.tlvIndentationStyle.length > c; )
                                    t.tlvIndentationStyle.pop()
                        }
                        t.tlvNextIndent = r
                    }
                    if (t.tlvCodeActive) {
                        if (void 0 !== n)
                            ;
                        else if (t.tlvInBlockComment)
                            e.match(/^.*?\*\//) ? t.tlvInBlockComment = !1 : e.skipToEnd(),
                            n = "comment";
                        else if ((O = e.match(l)) && !t.tlvInBlockComment)
                            "//" == O[0] ? e.skipToEnd() : t.tlvInBlockComment = !0,
                            n = "comment";
                        else if (O = e.match(o)) {
                            var h = O[1]
                              , m = O[2];
                            i.hasOwnProperty(h) && (m.length > 0 || e.eol()) ? n = i[h] : e.backUp(e.current().length - 1)
                        } else
                            e.match(/^\t+/) ? n = "invalid" : e.match(/^[\[\]{}\(\);\:]+/) ? n = "meta" : (O = e.match(/^[mM]4([\+_])?[\w\d_]*/)) ? n = "+" == O[1] ? "keyword.special" : "keyword" : e.match(/^ +/) ? e.eol() && (n = "error") : e.match(/^[\w\d_]+/) ? n = "number" : e.next()
                    } else
                        e.match(/^[mM]4([\w\d_]*)/) && (n = "keyword");
                    return n
                },
                indent: function(e) {
                    return !0 == e.tlvCodeActive ? e.tlvNextIndent : -1
                },
                startState: function(e) {
                    e.tlvIndentationStyle = [],
                    e.tlvCodeActive = !0,
                    e.tlvNextIndent = -1,
                    e.tlvInBlockComment = !1
                }
            }
        })
    },
    1124: function(e, t, O) {
        "use strict";
        function n(e) {
            for (var t = {}, O = e.split(","), n = 0; n < O.length; ++n) {
                var r = O[n].toUpperCase()
                  , i = O[n].charAt(0).toUpperCase() + O[n].slice(1);
                t[O[n]] = !0,
                t[r] = !0,
                t[i] = !0
            }
            return t
        }
        function r(e) {
            return e.eatWhile(/[\w\$_]/),
            "meta"
        }
        O.r(t),
        O.d(t, {
            vhdl: function() {
                return h
            }
        });
        var i, a = n("null"), o = {
            "`": r,
            $: r
        }, s = n("abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor"), l = n("architecture,entity,begin,case,port,else,elsif,end,for,function,if"), c = /[&|~><!\)\(*#%@+\/=?\:;}{,\.\^\-\[\]]/;
        function u(e, t) {
            var O = e.next();
            if (o[O]) {
                var n = o[O](e, t);
                if (!1 !== n)
                    return n
            }
            if ('"' == O)
                return t.tokenize = function(e, t) {
                    for (var n, r = !1, i = !1; null != (n = e.next()); ) {
                        if (n == O && !r) {
                            i = !0;
                            break
                        }
                        r = !r && "--" == n
                    }
                    return (i || !r) && (t.tokenize = u),
                    "string.special"
                }
                ,
                t.tokenize(e, t);
            if ("'" == O)
                return t.tokenize = function(e, t) {
                    for (var n, r = !1, i = !1; null != (n = e.next()); ) {
                        if (n == O && !r) {
                            i = !0;
                            break
                        }
                        r = !r && "--" == n
                    }
                    return (i || !r) && (t.tokenize = u),
                    "string"
                }
                ,
                t.tokenize(e, t);
            if (/[\[\]{}\(\),;\:\.]/.test(O))
                return i = O,
                null;
            if (/[\d']/.test(O))
                return e.eatWhile(/[\w\.']/),
                "number";
            if ("-" == O && e.eat("-"))
                return e.skipToEnd(),
                "comment";
            if (c.test(O))
                return e.eatWhile(c),
                "operator";
            e.eatWhile(/[\w\$_]/);
            var r = e.current();
            return s.propertyIsEnumerable(r.toLowerCase()) ? (l.propertyIsEnumerable(r) && (i = "newstatement"),
            "keyword") : a.propertyIsEnumerable(r) ? "atom" : "variable"
        }
        function p(e, t, O, n, r) {
            this.indented = e,
            this.column = t,
            this.type = O,
            this.align = n,
            this.prev = r
        }
        function d(e, t, O) {
            return e.context = new p(e.indented,t,O,null,e.context)
        }
        function f(e) {
            var t = e.context.type;
            return (")" == t || "]" == t || "}" == t) && (e.indented = e.context.indented),
            e.context = e.context.prev
        }
        let h = {
            name: "vhdl",
            startState: function(e) {
                return {
                    tokenize: null,
                    context: new p(-e,0,"top",!1),
                    indented: 0,
                    startOfLine: !0
                }
            },
            token: function(e, t) {
                var O = t.context;
                if (e.sol() && (null == O.align && (O.align = !1),
                t.indented = e.indentation(),
                t.startOfLine = !0),
                e.eatSpace())
                    return null;
                i = null;
                var n = (t.tokenize || u)(e, t);
                if ("comment" == n || "meta" == n)
                    return n;
                if (null == O.align && (O.align = !0),
                (";" == i || ":" == i) && "statement" == O.type)
                    f(t);
                else if ("{" == i)
                    d(t, e.column(), "}");
                else if ("[" == i)
                    d(t, e.column(), "]");
                else if ("(" == i)
                    d(t, e.column(), ")");
                else if ("}" == i) {
                    for (; "statement" == O.type; )
                        O = f(t);
                    for ("}" == O.type && (O = f(t)); "statement" == O.type; )
                        O = f(t)
                } else
                    i == O.type ? f(t) : ("}" == O.type || "top" == O.type || "statement" == O.type && "newstatement" == i) && d(t, e.column(), "statement");
                return t.startOfLine = !1,
                n
            },
            indent: function(e, t, O) {
                if (e.tokenize != u && null != e.tokenize)
                    return 0;
                var n = t && t.charAt(0)
                  , r = e.context
                  , i = n == r.type;
                return "statement" == r.type ? r.indented + ("{" == n ? 0 : O.unit) : r.align ? r.column + (i ? 0 : 1) : r.indented + (i ? 0 : O.unit)
            },
            languageData: {
                indentOnInput: /^\s*[{}]$/,
                commentTokens: {
                    line: "--"
                }
            }
        }
    },
    314: function(e, t, O) {
        "use strict";
        function n(e) {
            return RegExp("^((" + e.join(")|(") + "))\\b")
        }
        O.r(t),
        O.d(t, {
            webIDL: function() {
                return y
            }
        });
        var r = ["Clamp", "Constructor", "EnforceRange", "Exposed", "ImplicitThis", "Global", "PrimaryGlobal", "LegacyArrayClass", "LegacyUnenumerableNamedProperties", "LenientThis", "NamedConstructor", "NewObject", "NoInterfaceObject", "OverrideBuiltins", "PutForwards", "Replaceable", "SameObject", "TreatNonObjectAsNull", "TreatNullAs", "EmptyString", "Unforgeable", "Unscopeable"]
          , i = n(r)
          , a = ["unsigned", "short", "long", "unrestricted", "float", "double", "boolean", "byte", "octet", "Promise", "ArrayBuffer", "DataView", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint16Array", "Uint32Array", "Uint8ClampedArray", "Float32Array", "Float64Array", "ByteString", "DOMString", "USVString", "sequence", "object", "RegExp", "Error", "DOMException", "FrozenArray", "any", "void"]
          , o = n(a)
          , s = ["attribute", "callback", "const", "deleter", "dictionary", "enum", "getter", "implements", "inherit", "interface", "iterable", "legacycaller", "maplike", "partial", "required", "serializer", "setlike", "setter", "static", "stringifier", "typedef", "optional", "readonly", "or"]
          , l = n(s)
          , c = ["true", "false", "Infinity", "NaN", "null"]
          , u = n(c)
          , p = n(["callback", "dictionary", "enum", "interface"])
          , d = n(["typedef"])
          , f = /^[:<=>?]/
          , h = /^-?([1-9][0-9]*|0[Xx][0-9A-Fa-f]+|0[0-7]*)/
          , m = /^-?(([0-9]+\.[0-9]*|[0-9]*\.[0-9]+)([Ee][+-]?[0-9]+)?|[0-9]+[Ee][+-]?[0-9]+)/
          , Q = /^_?[A-Za-z][0-9A-Z_a-z-]*/
          , $ = /^_?[A-Za-z][0-9A-Z_a-z-]*(?=\s*;)/
          , g = /^"[^"]*"/
          , P = /^\/\*.*?\*\//
          , S = /^\/\*.*/
          , b = /^.*?\*\//;
        let y = {
            name: "webidl",
            startState: function() {
                return {
                    inComment: !1,
                    lastToken: "",
                    startDef: !1,
                    endDef: !1
                }
            },
            token: function(e, t) {
                var O = function(e, t) {
                    if (e.eatSpace())
                        return null;
                    if (t.inComment)
                        return e.match(b) ? (t.inComment = !1,
                        "comment") : (e.skipToEnd(),
                        "comment");
                    if (e.match("//"))
                        return e.skipToEnd(),
                        "comment";
                    if (e.match(P))
                        return "comment";
                    if (e.match(S))
                        return t.inComment = !0,
                        "comment";
                    if (e.match(/^-?[0-9\.]/, !1) && (e.match(h) || e.match(m)))
                        return "number";
                    if (e.match(g))
                        return "string";
                    if (t.startDef && e.match(Q))
                        return "def";
                    if (t.endDef && e.match($))
                        return t.endDef = !1,
                        "def";
                    if (e.match(l))
                        return "keyword";
                    if (e.match(o)) {
                        var O = t.lastToken
                          , n = (e.match(/^\s*(.+?)\b/, !1) || [])[1];
                        return ":" === O || "implements" === O || "implements" === n || "=" === n ? "builtin" : "type"
                    }
                    return e.match(i) ? "builtin" : e.match(u) ? "atom" : e.match(Q) ? "variable" : e.match(f) ? "operator" : (e.next(),
                    null)
                }(e, t);
                if (O) {
                    var n = e.current();
                    t.lastToken = n,
                    "keyword" === O ? (t.startDef = p.test(n),
                    t.endDef = t.endDef || d.test(n)) : t.startDef = !1
                }
                return O
            },
            languageData: {
                autocomplete: r.concat(a).concat(s).concat(c)
            }
        }
    },
    8856: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            xQuery: function() {
                return Q
            }
        });
        var n = function() {
            function e(e) {
                return {
                    type: e,
                    style: "keyword"
                }
            }
            for (var t = e("operator"), O = {
                type: "atom",
                style: "atom"
            }, n = {
                type: "axis_specifier",
                style: "qualifier"
            }, r = {
                ",": {
                    type: "punctuation",
                    style: null
                }
            }, i = ["after", "all", "allowing", "ancestor", "ancestor-or-self", "any", "array", "as", "ascending", "at", "attribute", "base-uri", "before", "boundary-space", "by", "case", "cast", "castable", "catch", "child", "collation", "comment", "construction", "contains", "content", "context", "copy", "copy-namespaces", "count", "decimal-format", "declare", "default", "delete", "descendant", "descendant-or-self", "descending", "diacritics", "different", "distance", "document", "document-node", "element", "else", "empty", "empty-sequence", "encoding", "end", "entire", "every", "exactly", "except", "external", "first", "following", "following-sibling", "for", "from", "ftand", "ftnot", "ft-option", "ftor", "function", "fuzzy", "greatest", "group", "if", "import", "in", "inherit", "insensitive", "insert", "instance", "intersect", "into", "invoke", "is", "item", "language", "last", "lax", "least", "let", "levels", "lowercase", "map", "modify", "module", "most", "namespace", "next", "no", "node", "nodes", "no-inherit", "no-preserve", "not", "occurs", "of", "only", "option", "order", "ordered", "ordering", "paragraph", "paragraphs", "parent", "phrase", "preceding", "preceding-sibling", "preserve", "previous", "processing-instruction", "relationship", "rename", "replace", "return", "revalidation", "same", "satisfies", "schema", "schema-attribute", "schema-element", "score", "self", "sensitive", "sentence", "sentences", "sequence", "skip", "sliding", "some", "stable", "start", "stemming", "stop", "strict", "strip", "switch", "text", "then", "thesaurus", "times", "to", "transform", "treat", "try", "tumbling", "type", "typeswitch", "union", "unordered", "update", "updating", "uppercase", "using", "validate", "value", "variable", "version", "weight", "when", "where", "wildcards", "window", "with", "without", "word", "words", "xquery"], a = 0, o = i.length; a < o; a++)
                r[i[a]] = e(i[a]);
            for (var s = ["xs:anyAtomicType", "xs:anySimpleType", "xs:anyType", "xs:anyURI", "xs:base64Binary", "xs:boolean", "xs:byte", "xs:date", "xs:dateTime", "xs:dateTimeStamp", "xs:dayTimeDuration", "xs:decimal", "xs:double", "xs:duration", "xs:ENTITIES", "xs:ENTITY", "xs:float", "xs:gDay", "xs:gMonth", "xs:gMonthDay", "xs:gYear", "xs:gYearMonth", "xs:hexBinary", "xs:ID", "xs:IDREF", "xs:IDREFS", "xs:int", "xs:integer", "xs:item", "xs:java", "xs:language", "xs:long", "xs:Name", "xs:NCName", "xs:negativeInteger", "xs:NMTOKEN", "xs:NMTOKENS", "xs:nonNegativeInteger", "xs:nonPositiveInteger", "xs:normalizedString", "xs:NOTATION", "xs:numeric", "xs:positiveInteger", "xs:precisionDecimal", "xs:QName", "xs:short", "xs:string", "xs:time", "xs:token", "xs:unsignedByte", "xs:unsignedInt", "xs:unsignedLong", "xs:unsignedShort", "xs:untyped", "xs:untypedAtomic", "xs:yearMonthDuration"], a = 0, o = s.length; a < o; a++)
                r[s[a]] = O;
            for (var l = ["eq", "ne", "lt", "le", "gt", "ge", ":=", "=", ">", ">=", "<", "<=", ".", "|", "?", "and", "or", "div", "idiv", "mod", "*", "/", "+", "-"], a = 0, o = l.length; a < o; a++)
                r[l[a]] = t;
            for (var c = ["self::", "attribute::", "child::", "descendant::", "descendant-or-self::", "parent::", "ancestor::", "ancestor-or-self::", "following::", "preceding::", "following-sibling::", "preceding-sibling::"], a = 0, o = c.length; a < o; a++)
                r[c[a]] = n;
            return r
        }();
        function r(e, t, O) {
            return t.tokenize = O,
            O(e, t)
        }
        function i(e, t) {
            var O = e.next()
              , d = !1
              , Q = '"' === e.current() ? e.match(/^[^\"]+\"\:/, !1) : "'" === e.current() && e.match(/^[^\"]+\'\:/, !1);
            if ("<" == O) {
                if (e.match("!--", !0))
                    return r(e, t, c);
                if (e.match("![CDATA", !1))
                    return t.tokenize = u,
                    "tag";
                if (e.match("?", !1))
                    return r(e, t, p);
                var $, g = e.eat("/");
                e.eatSpace();
                for (var P, S = ""; P = e.eat(/[^\s\u00a0=<>\"\'\/?]/); )
                    S += P;
                return r(e, t, ($ = S,
                function(e, t) {
                    return (e.eatSpace(),
                    g && e.eat(">")) ? (m(t),
                    t.tokenize = i,
                    "tag") : (e.eat("/") || h(t, {
                        type: "tag",
                        name: $,
                        tokenize: i
                    }),
                    e.eat(">") ? t.tokenize = i : t.tokenize = l,
                    "tag")
                }
                ))
            }
            if ("{" == O)
                return h(t, {
                    type: "codeblock"
                }),
                null;
            if ("}" == O)
                return m(t),
                null;
            if (f(t, "tag"))
                return ">" == O ? "tag" : "/" == O && e.eat(">") ? (m(t),
                "tag") : "variable";
            if (/\d/.test(O))
                return e.match(/^\d*(?:\.\d*)?(?:E[+\-]?\d+)?/),
                "atom";
            if ("(" === O && e.eat(":"))
                return h(t, {
                    type: "comment"
                }),
                r(e, t, a);
            if (!Q && ('"' === O || "'" === O))
                return r(e, t, o(O));
            if ("$" === O)
                return r(e, t, s);
            if (":" === O && e.eat("="))
                return "keyword";
            if ("(" === O)
                return h(t, {
                    type: "paren"
                }),
                null;
            if (")" === O)
                return m(t),
                null;
            if ("[" === O)
                return h(t, {
                    type: "bracket"
                }),
                null;
            if ("]" === O)
                return m(t),
                null;
            var b = n.propertyIsEnumerable(O) && n[O];
            if (Q && '"' === O)
                for (; '"' !== e.next(); )
                    ;
            if (Q && "'" === O)
                for (; "'" !== e.next(); )
                    ;
            b || e.eatWhile(/[\w\$_-]/);
            var y = e.eat(":");
            !e.eat(":") && y && e.eatWhile(/[\w\$_-]/),
            e.match(/^[ \t]*\(/, !1) && (d = !0);
            var x = e.current();
            return (b = n.propertyIsEnumerable(x) && n[x],
            d && !b && (b = {
                type: "function_call",
                style: "def"
            }),
            f(t, "xmlconstructor")) ? (m(t),
            "variable") : (("element" == x || "attribute" == x || "axis_specifier" == b.type) && h(t, {
                type: "xmlconstructor"
            }),
            b ? b.style : "variable")
        }
        function a(e, t) {
            for (var O, n = !1, r = !1, i = 0; O = e.next(); ) {
                if (")" == O && n) {
                    if (i > 0)
                        i--;
                    else {
                        m(t);
                        break
                    }
                } else
                    ":" == O && r && i++;
                n = ":" == O,
                r = "(" == O
            }
            return "comment"
        }
        function o(e, t) {
            return function(O, n) {
                var r;
                if (f(n, "string") && O.current() == e)
                    return m(n),
                    t && (n.tokenize = t),
                    "string";
                if (h(n, {
                    type: "string",
                    name: e,
                    tokenize: o(e, t)
                }),
                O.match("{", !1) && d(n))
                    return n.tokenize = i,
                    "string";
                for (; r = O.next(); ) {
                    if (r == e) {
                        m(n),
                        t && (n.tokenize = t);
                        break
                    }
                    if (O.match("{", !1) && d(n)) {
                        n.tokenize = i;
                        break
                    }
                }
                return "string"
            }
        }
        function s(e, t) {
            var O = /[\w\$_-]/;
            if (e.eat('"')) {
                for (; '"' !== e.next(); )
                    ;
                e.eat(":")
            } else
                e.eatWhile(O),
                e.match(":=", !1) || e.eat(":");
            return e.eatWhile(O),
            t.tokenize = i,
            "variable"
        }
        function l(e, t) {
            var O = e.next();
            return "/" == O && e.eat(">") ? (d(t) && m(t),
            f(t, "tag") && m(t),
            "tag") : ">" == O ? (d(t) && m(t),
            "tag") : "=" == O ? null : '"' == O || "'" == O ? r(e, t, o(O, l)) : (d(t) || h(t, {
                type: "attribute",
                tokenize: l
            }),
            e.eat(/[a-zA-Z_:]/),
            e.eatWhile(/[-a-zA-Z0-9_:.]/),
            e.eatSpace(),
            (e.match(">", !1) || e.match("/", !1)) && (m(t),
            t.tokenize = i),
            "attribute")
        }
        function c(e, t) {
            for (var O; O = e.next(); )
                if ("-" == O && e.match("->", !0))
                    return t.tokenize = i,
                    "comment"
        }
        function u(e, t) {
            for (var O; O = e.next(); )
                if ("]" == O && e.match("]", !0))
                    return t.tokenize = i,
                    "comment"
        }
        function p(e, t) {
            for (var O; O = e.next(); )
                if ("?" == O && e.match(">", !0))
                    return t.tokenize = i,
                    "processingInstruction"
        }
        function d(e) {
            return f(e, "attribute")
        }
        function f(e, t) {
            return e.stack.length && e.stack[e.stack.length - 1].type == t
        }
        function h(e, t) {
            e.stack.push(t)
        }
        function m(e) {
            e.stack.pop();
            var t = e.stack.length && e.stack[e.stack.length - 1].tokenize;
            e.tokenize = t || i
        }
        let Q = {
            name: "xquery",
            startState: function() {
                return {
                    tokenize: i,
                    cc: [],
                    stack: []
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : t.tokenize(e, t)
            },
            languageData: {
                commentTokens: {
                    block: {
                        open: "(:",
                        close: ":)"
                    }
                }
            }
        }
    },
    2819: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            yacas: function() {
                return d
            }
        });
        var n = function(e) {
            for (var t = {}, O = e.split(" "), n = 0; n < O.length; ++n)
                t[O[n]] = !0;
            return t
        }("Assert BackQuote D Defun Deriv For ForEach FromFile FromString Function Integrate InverseTaylor Limit LocalSymbols Macro MacroRule MacroRulePattern NIntegrate Rule RulePattern Subst TD TExplicitSum TSum Taylor Taylor1 Taylor2 Taylor3 ToFile ToStdout ToString TraceRule Until While")
          , r = "(?:[a-zA-Z\\$'][a-zA-Z0-9\\$']*)"
          , i = RegExp("(?:(?:\\.\\d+|\\d+\\.\\d*|\\d+)(?:[eE][+-]?\\d+)?)")
          , a = new RegExp(r)
          , o = RegExp(r + "?_" + r)
          , s = RegExp(r + "\\s*\\(");
        function l(e, t) {
            if ('"' === (O = e.next()))
                return t.tokenize = c,
                t.tokenize(e, t);
            if ("/" === O) {
                if (e.eat("*"))
                    return t.tokenize = u,
                    t.tokenize(e, t);
                if (e.eat("/"))
                    return e.skipToEnd(),
                    "comment"
            }
            e.backUp(1);
            var O, r = e.match(/^(\w+)\s*\(/, !1);
            null !== r && n.hasOwnProperty(r[1]) && t.scopes.push("bodied");
            var l = p(t);
            if ("bodied" === l && "[" === O && t.scopes.pop(),
            ("[" === O || "{" === O || "(" === O) && t.scopes.push(O),
            ("[" === (l = p(t)) && "]" === O || "{" === l && "}" === O || "(" === l && ")" === O) && t.scopes.pop(),
            ";" === O)
                for (; "bodied" === l; )
                    t.scopes.pop(),
                    l = p(t);
            return e.match(/\d+ *#/, !0, !1) ? "qualifier" : e.match(i, !0, !1) ? "number" : e.match(o, !0, !1) ? "variableName.special" : e.match(/(?:\[|\]|{|}|\(|\))/, !0, !1) ? "bracket" : e.match(s, !0, !1) ? (e.backUp(1),
            "variableName.function") : e.match(a, !0, !1) ? "variable" : e.match(/(?:\\|\+|\-|\*|\/|,|;|\.|:|@|~|=|>|<|&|\||_|`|'|\^|\?|!|%|#)/, !0, !1) ? "operator" : "error"
        }
        function c(e, t) {
            for (var O, n = !1, r = !1; null != (O = e.next()); ) {
                if ('"' === O && !r) {
                    n = !0;
                    break
                }
                r = !r && "\\" === O
            }
            return n && !r && (t.tokenize = l),
            "string"
        }
        function u(e, t) {
            for (var O, n; null != (n = e.next()); ) {
                if ("*" === O && "/" === n) {
                    t.tokenize = l;
                    break
                }
                O = n
            }
            return "comment"
        }
        function p(e) {
            var t = null;
            return e.scopes.length > 0 && (t = e.scopes[e.scopes.length - 1]),
            t
        }
        let d = {
            name: "yacas",
            startState: function() {
                return {
                    tokenize: l,
                    scopes: []
                }
            },
            token: function(e, t) {
                return e.eatSpace() ? null : t.tokenize(e, t)
            },
            indent: function(e, t, O) {
                if (e.tokenize !== l && null !== e.tokenize)
                    return null;
                var n = 0;
                return ("]" === t || "];" === t || "}" === t || "};" === t || ");" === t) && (n = -1),
                (e.scopes.length + n) * O.unit
            },
            languageData: {
                electricInput: /[{}\[\]()\;]/,
                commentTokens: {
                    line: "//",
                    block: {
                        open: "/*",
                        close: "*/"
                    }
                }
            }
        }
    },
    5866: function(e, t, O) {
        "use strict";
        O.r(t),
        O.d(t, {
            yaml: function() {
                return r
            }
        });
        var n = RegExp("\\b((true)|(false)|(on)|(off)|(yes)|(no))$", "i");
        let r = {
            name: "yaml",
            token: function(e, t) {
                var O = e.peek()
                  , r = t.escaped;
                if (t.escaped = !1,
                "#" == O && (0 == e.pos || /\s/.test(e.string.charAt(e.pos - 1))))
                    return e.skipToEnd(),
                    "comment";
                if (e.match(/^('([^']|\\.)*'?|"([^"]|\\.)*"?)/))
                    return "string";
                if (t.literal && e.indentation() > t.keyCol)
                    return e.skipToEnd(),
                    "string";
                if (t.literal && (t.literal = !1),
                e.sol()) {
                    if (t.keyCol = 0,
                    t.pair = !1,
                    t.pairStart = !1,
                    e.match("---") || e.match("..."))
                        return "def";
                    if (e.match(/^\s*-\s+/))
                        return "meta"
                }
                if (e.match(/^(\{|\}|\[|\])/))
                    return "{" == O ? t.inlinePairs++ : "}" == O ? t.inlinePairs-- : "[" == O ? t.inlineList++ : t.inlineList--,
                    "meta";
                if (t.inlineList > 0 && !r && "," == O)
                    return e.next(),
                    "meta";
                if (t.inlinePairs > 0 && !r && "," == O)
                    return t.keyCol = 0,
                    t.pair = !1,
                    t.pairStart = !1,
                    e.next(),
                    "meta";
                if (t.pairStart) {
                    if (e.match(/^\s*(\||\>)\s*/))
                        return t.literal = !0,
                        "meta";
                    if (e.match(/^\s*(\&|\*)[a-z0-9\._-]+\b/i))
                        return "variable";
                    if (0 == t.inlinePairs && e.match(/^\s*-?[0-9\.\,]+\s?$/) || t.inlinePairs > 0 && e.match(/^\s*-?[0-9\.\,]+\s?(?=(,|}))/))
                        return "number";
                    if (e.match(n))
                        return "keyword"
                }
                return !t.pair && e.match(/^\s*(?:[,\[\]{}&*!|>'"%@`][^\s'":]|[^,\[\]{}#&*!|>'"%@`])[^#]*?(?=\s*:($|\s))/) ? (t.pair = !0,
                t.keyCol = e.indentation(),
                "atom") : t.pair && e.match(/^:\s*/) ? (t.pairStart = !0,
                "meta") : (t.pairStart = !1,
                t.escaped = "\\" == O,
                e.next(),
                null)
            },
            startState: function() {
                return {
                    pair: !1,
                    pairStart: !1,
                    keyCol: 0,
                    inlinePairs: 0,
                    inlineList: 0,
                    literal: !1,
                    escaped: !1
                }
            },
            languageData: {
                commentTokens: {
                    line: "#"
                }
            }
        }
    },
    4869: function(e, t, O) {
        "use strict";
        function n(e) {
            e ? (t = /^(exx?|(ld|cp)([di]r?)?|[lp]ea|pop|push|ad[cd]|cpl|daa|dec|inc|neg|sbc|sub|and|bit|[cs]cf|x?or|res|set|r[lr]c?a?|r[lr]d|s[lr]a|srl|djnz|nop|[de]i|halt|im|in([di]mr?|ir?|irx|2r?)|ot(dmr?|[id]rx|imr?)|out(0?|[di]r?|[di]2r?)|tst(io)?|slp)(\.([sl]?i)?[sl])?\b/i,
            O = /^(((call|j[pr]|rst|ret[in]?)(\.([sl]?i)?[sl])?)|(rs|st)mix)\b/i) : (t = /^(exx?|(ld|cp|in)([di]r?)?|pop|push|ad[cd]|cpl|daa|dec|inc|neg|sbc|sub|and|bit|[cs]cf|x?or|res|set|r[lr]c?a?|r[lr]d|s[lr]a|srl|djnz|nop|rst|[de]i|halt|im|ot[di]r|out[di]?)\b/i,
            O = /^(call|j[pr]|ret[in]?|b_?(call|jump))\b/i);
            var t, O, n = /^(af?|bc?|c|de?|e|hl?|l|i[xy]?|r|sp)\b/i, r = /^(n?[zc]|p[oe]?|m)\b/i, i = /^([hl][xy]|i[xy][hl]|slia|sll)\b/i, a = /^([\da-f]+h|[0-7]+o|[01]+b|\d+d?)\b/i;
            return {
                name: "z80",
                startState: function() {
                    return {
                        context: 0
                    }
                },
                token: function(o, s) {
                    var l;
                    if (o.column() || (s.context = 0),
                    o.eatSpace())
                        return null;
                    if (o.eatWhile(/\w/)) {
                        if (e && o.eat(".") && o.eatWhile(/\w/),
                        l = o.current(),
                        o.indentation()) {
                            if ((1 == s.context || 4 == s.context) && n.test(l))
                                return s.context = 4,
                                "variable";
                            if (2 == s.context && r.test(l))
                                return s.context = 4,
                                "variableName.special";
                            if (t.test(l))
                                return s.context = 1,
                                "keyword";
                            if (O.test(l))
                                return s.context = 2,
                                "keyword";
                            if (4 == s.context && a.test(l))
                                return "number";
                            if (i.test(l))
                                return "error"
                        } else if (o.match(a))
                            return "number"
                    } else if (o.eat(";"))
                        return o.skipToEnd(),
                        "comment";
                    else if (o.eat('"')) {
                        for (; (l = o.next()) && '"' != l; )
                            "\\" == l && o.next();
                        return "string"
                    } else if (o.eat("'")) {
                        if (o.match(/\\?.'/))
                            return "number"
                    } else if (o.eat(".") || o.sol() && o.eat("#")) {
                        if (s.context = 5,
                        o.eatWhile(/\w/))
                            return "def"
                    } else if (o.eat("$")) {
                        if (o.eatWhile(/[\da-f]/i))
                            return "number"
                    } else if (o.eat("%")) {
                        if (o.eatWhile(/[01]/))
                            return "number"
                    } else
                        o.next();
                    return null
                }
            }
        }
        O.r(t),
        O.d(t, {
            ez80: function() {
                return i
            },
            z80: function() {
                return r
            }
        });
        let r = n(!1)
          , i = n(!0)
    },
    4091: function(e, t, O) {
        "use strict";
        let n;
        O.d(t, {
            BO: function() {
                return eg
            },
            D0: function() {
                return em
            },
            Gz: function() {
                return eU
            },
            IS: function() {
                return eR
            },
            Py: function() {
                return ec
            },
            QQ: function() {
                return I
            },
            Wl: function() {
                return D
            },
            Xs: function() {
                return ex
            },
            YW: function() {
                return eu
            },
            as: function() {
                return k
            },
            bg: function() {
                return P
            },
            cp: function() {
                return f
            },
            f_: function() {
                return eX
            },
            gc: function() {
                return X
            },
            gm: function() {
                return g
            },
            jT: function() {
                return Y
            },
            n0: function() {
                return v
            },
            nZ: function() {
                return S
            },
            q6: function() {
                return eo
            },
            r$: function() {
                return V
            },
            uU: function() {
                return eP
            },
            xv: function() {
                return r
            },
            yy: function() {
                return e$
            }
        });
        class r {
            constructor() {}
            lineAt(e) {
                if (e < 0 || e > this.length)
                    throw RangeError(`Invalid position ${e} in document of length ${this.length}`);
                return this.lineInner(e, !1, 1, 0)
            }
            line(e) {
                if (e < 1 || e > this.lines)
                    throw RangeError(`Invalid line number ${e} in ${this.lines}-line document`);
                return this.lineInner(e, !0, 1, 0)
            }
            replace(e, t, O) {
                let n = [];
                return this.decompose(0, e, n, 2),
                O.length && O.decompose(0, O.length, n, 3),
                this.decompose(t, this.length, n, 1),
                a.from(n, this.length - (t - e) + O.length)
            }
            append(e) {
                return this.replace(this.length, this.length, e)
            }
            slice(e, t=this.length) {
                let O = [];
                return this.decompose(e, t, O, 0),
                a.from(O, t - e)
            }
            eq(e) {
                if (e == this)
                    return !0;
                if (e.length != this.length || e.lines != this.lines)
                    return !1;
                let t = this.scanIdentical(e, 1)
                  , O = this.length - this.scanIdentical(e, -1)
                  , n = new s(this)
                  , r = new s(e);
                for (let e = t, i = t; ; ) {
                    if (n.next(e),
                    r.next(e),
                    e = 0,
                    n.lineBreak != r.lineBreak || n.done != r.done || n.value != r.value)
                        return !1;
                    if (i += n.value.length,
                    n.done || i >= O)
                        return !0
                }
            }
            iter(e=1) {
                return new s(this,e)
            }
            iterRange(e, t=this.length) {
                return new l(this,e,t)
            }
            iterLines(e, t) {
                let O;
                if (null == e)
                    O = this.iter();
                else {
                    null == t && (t = this.lines + 1);
                    let n = this.line(e).from;
                    O = this.iterRange(n, Math.max(n, t == this.lines + 1 ? this.length : t <= 1 ? 0 : this.line(t - 1).to))
                }
                return new c(O)
            }
            toString() {
                return this.sliceString(0)
            }
            toJSON() {
                let e = [];
                return this.flatten(e),
                e
            }
            static of(e) {
                if (0 == e.length)
                    throw RangeError("A document must have at least one line");
                return 1 != e.length || e[0] ? e.length <= 32 ? new i(e) : a.from(i.split(e, [])) : r.empty
            }
        }
        class i extends r {
            constructor(e, t=function(e) {
                let t = -1;
                for (let O of e)
                    t += O.length + 1;
                return t
            }(e)) {
                super(),
                this.text = e,
                this.length = t
            }
            get lines() {
                return this.text.length
            }
            get children() {
                return null
            }
            lineInner(e, t, O, n) {
                for (let r = 0; ; r++) {
                    let i = this.text[r]
                      , a = n + i.length;
                    if ((t ? O : a) >= e)
                        return new u(n,a,O,i);
                    n = a + 1,
                    O++
                }
            }
            decompose(e, t, O, n) {
                let r = e <= 0 && t >= this.length ? this : new i(o(this.text, [""], e, t),Math.min(t, this.length) - Math.max(0, e));
                if (1 & n) {
                    let e = O.pop()
                      , t = o(r.text, e.text.slice(), 0, r.length);
                    if (t.length <= 32)
                        O.push(new i(t,e.length + r.length));
                    else {
                        let e = t.length >> 1;
                        O.push(new i(t.slice(0, e)), new i(t.slice(e)))
                    }
                } else
                    O.push(r)
            }
            replace(e, t, O) {
                if (!(O instanceof i))
                    return super.replace(e, t, O);
                let n = o(this.text, o(O.text, o(this.text, [""], 0, e)), t)
                  , r = this.length + O.length - (t - e);
                return n.length <= 32 ? new i(n,r) : a.from(i.split(n, []), r)
            }
            sliceString(e, t=this.length, O="\n") {
                let n = "";
                for (let r = 0, i = 0; r <= t && i < this.text.length; i++) {
                    let a = this.text[i]
                      , o = r + a.length;
                    r > e && i && (n += O),
                    e < o && t > r && (n += a.slice(Math.max(0, e - r), t - r)),
                    r = o + 1
                }
                return n
            }
            flatten(e) {
                for (let t of this.text)
                    e.push(t)
            }
            scanIdentical() {
                return 0
            }
            static split(e, t) {
                let O = []
                  , n = -1;
                for (let r of e)
                    O.push(r),
                    n += r.length + 1,
                    32 == O.length && (t.push(new i(O,n)),
                    O = [],
                    n = -1);
                return n > -1 && t.push(new i(O,n)),
                t
            }
        }
        class a extends r {
            constructor(e, t) {
                for (let O of (super(),
                this.children = e,
                this.length = t,
                this.lines = 0,
                e))
                    this.lines += O.lines
            }
            lineInner(e, t, O, n) {
                for (let r = 0; ; r++) {
                    let i = this.children[r]
                      , a = n + i.length
                      , o = O + i.lines - 1;
                    if ((t ? o : a) >= e)
                        return i.lineInner(e, t, O, n);
                    n = a + 1,
                    O = o + 1
                }
            }
            decompose(e, t, O, n) {
                for (let r = 0, i = 0; i <= t && r < this.children.length; r++) {
                    let a = this.children[r]
                      , o = i + a.length;
                    if (e <= o && t >= i) {
                        let r = n & ((i <= e ? 1 : 0) | (o >= t ? 2 : 0));
                        i >= e && o <= t && !r ? O.push(a) : a.decompose(e - i, t - i, O, r)
                    }
                    i = o + 1
                }
            }
            replace(e, t, O) {
                if (O.lines < this.lines)
                    for (let n = 0, r = 0; n < this.children.length; n++) {
                        let i = this.children[n]
                          , o = r + i.length;
                        if (e >= r && t <= o) {
                            let s = i.replace(e - r, t - r, O)
                              , l = this.lines - i.lines + s.lines;
                            if (s.lines < l >> 4 && s.lines > l >> 6) {
                                let r = this.children.slice();
                                return r[n] = s,
                                new a(r,this.length - (t - e) + O.length)
                            }
                            return super.replace(r, o, s)
                        }
                        r = o + 1
                    }
                return super.replace(e, t, O)
            }
            sliceString(e, t=this.length, O="\n") {
                let n = "";
                for (let r = 0, i = 0; r < this.children.length && i <= t; r++) {
                    let a = this.children[r]
                      , o = i + a.length;
                    i > e && r && (n += O),
                    e < o && t > i && (n += a.sliceString(e - i, t - i, O)),
                    i = o + 1
                }
                return n
            }
            flatten(e) {
                for (let t of this.children)
                    t.flatten(e)
            }
            scanIdentical(e, t) {
                if (!(e instanceof a))
                    return 0;
                let O = 0
                  , [n,r,i,o] = t > 0 ? [0, 0, this.children.length, e.children.length] : [this.children.length - 1, e.children.length - 1, -1, -1];
                for (; ; n += t,
                r += t) {
                    if (n == i || r == o)
                        return O;
                    let a = this.children[n]
                      , s = e.children[r];
                    if (a != s)
                        return O + a.scanIdentical(s, t);
                    O += a.length + 1
                }
            }
            static from(e, t=e.reduce((e,t)=>e + t.length + 1, -1)) {
                let O = 0;
                for (let t of e)
                    O += t.lines;
                if (O < 32) {
                    let O = [];
                    for (let t of e)
                        t.flatten(O);
                    return new i(O,t)
                }
                let n = Math.max(32, O >> 5)
                  , r = n << 1
                  , o = n >> 1
                  , s = []
                  , l = 0
                  , c = -1
                  , u = [];
                function p() {
                    0 != l && (s.push(1 == u.length ? u[0] : a.from(u, c)),
                    c = -1,
                    l = u.length = 0)
                }
                for (let t of e)
                    !function e(t) {
                        let O;
                        if (t.lines > r && t instanceof a)
                            for (let O of t.children)
                                e(O);
                        else
                            t.lines > o && (l > o || !l) ? (p(),
                            s.push(t)) : t instanceof i && l && (O = u[u.length - 1])instanceof i && t.lines + O.lines <= 32 ? (l += t.lines,
                            c += t.length + 1,
                            u[u.length - 1] = new i(O.text.concat(t.text),O.length + 1 + t.length)) : (l + t.lines > n && p(),
                            l += t.lines,
                            c += t.length + 1,
                            u.push(t))
                    }(t);
                return p(),
                1 == s.length ? s[0] : new a(s,t)
            }
        }
        function o(e, t, O=0, n=1e9) {
            for (let r = 0, i = 0, a = !0; i < e.length && r <= n; i++) {
                let o = e[i]
                  , s = r + o.length;
                s >= O && (s > n && (o = o.slice(0, n - r)),
                r < O && (o = o.slice(O - r)),
                a ? (t[t.length - 1] += o,
                a = !1) : t.push(o)),
                r = s + 1
            }
            return t
        }
        r.empty = new i([""],0);
        class s {
            constructor(e, t=1) {
                this.dir = t,
                this.done = !1,
                this.lineBreak = !1,
                this.value = "",
                this.nodes = [e],
                this.offsets = [t > 0 ? 1 : (e instanceof i ? e.text.length : e.children.length) << 1]
            }
            nextInner(e, t) {
                for (this.done = this.lineBreak = !1; ; ) {
                    let O = this.nodes.length - 1
                      , n = this.nodes[O]
                      , r = this.offsets[O]
                      , a = r >> 1
                      , o = n instanceof i ? n.text.length : n.children.length;
                    if (a == (t > 0 ? o : 0)) {
                        if (0 == O)
                            return this.done = !0,
                            this.value = "",
                            this;
                        t > 0 && this.offsets[O - 1]++,
                        this.nodes.pop(),
                        this.offsets.pop()
                    } else if ((1 & r) == (t > 0 ? 0 : 1)) {
                        if (this.offsets[O] += t,
                        0 == e)
                            return this.lineBreak = !0,
                            this.value = "\n",
                            this;
                        e--
                    } else if (n instanceof i) {
                        let r = n.text[a + (t < 0 ? -1 : 0)];
                        if (this.offsets[O] += t,
                        r.length > Math.max(0, e))
                            return this.value = 0 == e ? r : t > 0 ? r.slice(e) : r.slice(0, r.length - e),
                            this;
                        e -= r.length
                    } else {
                        let r = n.children[a + (t < 0 ? -1 : 0)];
                        e > r.length ? (e -= r.length,
                        this.offsets[O] += t) : (t < 0 && this.offsets[O]--,
                        this.nodes.push(r),
                        this.offsets.push(t > 0 ? 1 : (r instanceof i ? r.text.length : r.children.length) << 1))
                    }
                }
            }
            next(e=0) {
                return e < 0 && (this.nextInner(-e, -this.dir),
                e = this.value.length),
                this.nextInner(e, this.dir)
            }
        }
        class l {
            constructor(e, t, O) {
                this.value = "",
                this.done = !1,
                this.cursor = new s(e,t > O ? -1 : 1),
                this.pos = t > O ? e.length : 0,
                this.from = Math.min(t, O),
                this.to = Math.max(t, O)
            }
            nextInner(e, t) {
                if (t < 0 ? this.pos <= this.from : this.pos >= this.to)
                    return this.value = "",
                    this.done = !0,
                    this;
                e += Math.max(0, t < 0 ? this.pos - this.to : this.from - this.pos);
                let O = t < 0 ? this.pos - this.from : this.to - this.pos;
                e > O && (e = O),
                O -= e;
                let {value: n} = this.cursor.next(e);
                return this.pos += (n.length + e) * t,
                this.value = n.length <= O ? n : t < 0 ? n.slice(n.length - O) : n.slice(0, O),
                this.done = !this.value,
                this
            }
            next(e=0) {
                return e < 0 ? e = Math.max(e, this.from - this.pos) : e > 0 && (e = Math.min(e, this.to - this.pos)),
                this.nextInner(e, this.cursor.dir)
            }
            get lineBreak() {
                return this.cursor.lineBreak && "" != this.value
            }
        }
        class c {
            constructor(e) {
                this.inner = e,
                this.afterBreak = !0,
                this.value = "",
                this.done = !1
            }
            next(e=0) {
                let {done: t, lineBreak: O, value: n} = this.inner.next(e);
                return t ? (this.done = !0,
                this.value = "") : O ? this.afterBreak ? this.value = "" : (this.afterBreak = !0,
                this.next()) : (this.value = n,
                this.afterBreak = !1),
                this
            }
            get lineBreak() {
                return !1
            }
        }
        "undefined" != typeof Symbol && (r.prototype[Symbol.iterator] = function() {
            return this.iter()
        }
        ,
        s.prototype[Symbol.iterator] = l.prototype[Symbol.iterator] = c.prototype[Symbol.iterator] = function() {
            return this
        }
        );
        class u {
            constructor(e, t, O, n) {
                this.from = e,
                this.to = t,
                this.number = O,
                this.text = n
            }
            get length() {
                return this.to - this.from
            }
        }
        let p = "lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map(e=>e ? parseInt(e, 36) : 1);
        for (let e = 1; e < p.length; e++)
            p[e] += p[e - 1];
        function d(e) {
            return e >= 127462 && e <= 127487
        }
        function f(e, t, O=!0, n=!0) {
            return (O ? h : m)(e, t, n)
        }
        function h(e, t, O) {
            if (t == e.length)
                return t;
            t && Q(e.charCodeAt(t)) && $(e.charCodeAt(t - 1)) && t--;
            let n = g(e, t);
            for (t += S(n); t < e.length; ) {
                let r = g(e, t);
                if (8205 == n || 8205 == r || O && function(e) {
                    for (let t = 1; t < p.length; t += 2)
                        if (p[t] > e)
                            return p[t - 1] <= e;
                    return !1
                }(r))
                    t += S(r),
                    n = r;
                else if (d(r)) {
                    let O = 0
                      , n = t - 2;
                    for (; n >= 0 && d(g(e, n)); )
                        O++,
                        n -= 2;
                    if (O % 2 == 0)
                        break;
                    t += 2
                } else
                    break
            }
            return t
        }
        function m(e, t, O) {
            for (; t > 0; ) {
                let n = h(e, t - 2, O);
                if (n < t)
                    return n;
                t--
            }
            return 0
        }
        function Q(e) {
            return e >= 56320 && e < 57344
        }
        function $(e) {
            return e >= 55296 && e < 56320
        }
        function g(e, t) {
            let O = e.charCodeAt(t);
            if (!$(O) || t + 1 == e.length)
                return O;
            let n = e.charCodeAt(t + 1);
            return Q(n) ? (O - 55296 << 10) + (n - 56320) + 65536 : O
        }
        function P(e) {
            return e <= 65535 ? String.fromCharCode(e) : String.fromCharCode(((e -= 65536) >> 10) + 55296, (1023 & e) + 56320)
        }
        function S(e) {
            return e < 65536 ? 1 : 2
        }
        let b = /\r\n?|\n/;
        var y, x, X = ((y = X || (X = {}))[y.Simple = 0] = "Simple",
        y[y.TrackDel = 1] = "TrackDel",
        y[y.TrackBefore = 2] = "TrackBefore",
        y[y.TrackAfter = 3] = "TrackAfter",
        y);
        class v {
            constructor(e) {
                this.sections = e
            }
            get length() {
                let e = 0;
                for (let t = 0; t < this.sections.length; t += 2)
                    e += this.sections[t];
                return e
            }
            get newLength() {
                let e = 0;
                for (let t = 0; t < this.sections.length; t += 2) {
                    let O = this.sections[t + 1];
                    e += O < 0 ? this.sections[t] : O
                }
                return e
            }
            get empty() {
                return 0 == this.sections.length || 2 == this.sections.length && this.sections[1] < 0
            }
            iterGaps(e) {
                for (let t = 0, O = 0, n = 0; t < this.sections.length; ) {
                    let r = this.sections[t++]
                      , i = this.sections[t++];
                    i < 0 ? (e(O, n, r),
                    n += r) : n += i,
                    O += r
                }
            }
            iterChangedRanges(e, t=!1) {
                _(this, e, t)
            }
            get invertedDesc() {
                let e = [];
                for (let t = 0; t < this.sections.length; ) {
                    let O = this.sections[t++]
                      , n = this.sections[t++];
                    n < 0 ? e.push(O, n) : e.push(n, O)
                }
                return new v(e)
            }
            composeDesc(e) {
                return this.empty ? e : e.empty ? this : Z(this, e)
            }
            mapDesc(e, t=!1) {
                return e.empty ? this : W(this, e, t)
            }
            mapPos(e, t=-1, O=X.Simple) {
                let n = 0
                  , r = 0;
                for (let i = 0; i < this.sections.length; ) {
                    let a = this.sections[i++]
                      , o = this.sections[i++]
                      , s = n + a;
                    if (o < 0) {
                        if (s > e)
                            return r + (e - n);
                        r += a
                    } else {
                        if (O != X.Simple && s >= e && (O == X.TrackDel && n < e && s > e || O == X.TrackBefore && n < e || O == X.TrackAfter && s > e))
                            return null;
                        if (s > e || s == e && t < 0 && !a)
                            return e == n || t < 0 ? r : r + o;
                        r += o
                    }
                    n = s
                }
                if (e > n)
                    throw RangeError(`Position ${e} is out of range for changeset of length ${n}`);
                return r
            }
            touchesRange(e, t=e) {
                for (let O = 0, n = 0; O < this.sections.length && n <= t; ) {
                    let r = this.sections[O++]
                      , i = this.sections[O++]
                      , a = n + r;
                    if (i >= 0 && n <= t && a >= e)
                        return !(n < e) || !(a > t) || "cover";
                    n = a
                }
                return !1
            }
            toString() {
                let e = "";
                for (let t = 0; t < this.sections.length; ) {
                    let O = this.sections[t++]
                      , n = this.sections[t++];
                    e += (e ? " " : "") + O + (n >= 0 ? ":" + n : "")
                }
                return e
            }
            toJSON() {
                return this.sections
            }
            static fromJSON(e) {
                if (!Array.isArray(e) || e.length % 2 || e.some(e=>"number" != typeof e))
                    throw RangeError("Invalid JSON representation of ChangeDesc");
                return new v(e)
            }
            static create(e) {
                return new v(e)
            }
        }
        class k extends v {
            constructor(e, t) {
                super(e),
                this.inserted = t
            }
            apply(e) {
                if (this.length != e.length)
                    throw RangeError("Applying change set to a document with the wrong length");
                return _(this, (t,O,n,r,i)=>e = e.replace(n, n + (O - t), i), !1),
                e
            }
            mapDesc(e, t=!1) {
                return W(this, e, t, !0)
            }
            invert(e) {
                let t = this.sections.slice()
                  , O = [];
                for (let n = 0, i = 0; n < t.length; n += 2) {
                    let a = t[n]
                      , o = t[n + 1];
                    if (o >= 0) {
                        t[n] = o,
                        t[n + 1] = a;
                        let s = n >> 1;
                        for (; O.length < s; )
                            O.push(r.empty);
                        O.push(a ? e.slice(i, i + a) : r.empty)
                    }
                    i += a
                }
                return new k(t,O)
            }
            compose(e) {
                return this.empty ? e : e.empty ? this : Z(this, e, !0)
            }
            map(e, t=!1) {
                return e.empty ? this : W(this, e, t, !0)
            }
            iterChanges(e, t=!1) {
                _(this, e, t)
            }
            get desc() {
                return v.create(this.sections)
            }
            filter(e) {
                let t = []
                  , O = []
                  , n = []
                  , r = new z(this);
                a: for (let i = 0, a = 0; ; ) {
                    let o = i == e.length ? 1e9 : e[i++];
                    for (; a < o || a == o && 0 == r.len; ) {
                        if (r.done)
                            break a;
                        let e = Math.min(r.len, o - a);
                        w(n, e, -1);
                        let i = -1 == r.ins ? -1 : 0 == r.off ? r.ins : 0;
                        w(t, e, i),
                        i > 0 && T(O, t, r.text),
                        r.forward(e),
                        a += e
                    }
                    let s = e[i++];
                    for (; a < s; ) {
                        if (r.done)
                            break a;
                        let e = Math.min(r.len, s - a);
                        w(t, e, -1),
                        w(n, e, -1 == r.ins ? -1 : 0 == r.off ? r.ins : 0),
                        r.forward(e),
                        a += e
                    }
                }
                return {
                    changes: new k(t,O),
                    filtered: v.create(n)
                }
            }
            toJSON() {
                let e = [];
                for (let t = 0; t < this.sections.length; t += 2) {
                    let O = this.sections[t]
                      , n = this.sections[t + 1];
                    n < 0 ? e.push(O) : 0 == n ? e.push([O]) : e.push([O].concat(this.inserted[t >> 1].toJSON()))
                }
                return e
            }
            static of(e, t, O) {
                let n = []
                  , i = []
                  , a = 0
                  , o = null;
                function s(e=!1) {
                    if (!e && !n.length)
                        return;
                    a < t && w(n, t - a, -1);
                    let O = new k(n,i);
                    o = o ? o.compose(O.map(o)) : O,
                    n = [],
                    i = [],
                    a = 0
                }
                return !function e(l) {
                    if (Array.isArray(l))
                        for (let t of l)
                            e(t);
                    else if (l instanceof k) {
                        if (l.length != t)
                            throw RangeError(`Mismatched change set length (got ${l.length}, expected ${t})`);
                        s(),
                        o = o ? o.compose(l.map(o)) : l
                    } else {
                        let {from: e, to: o=e, insert: c} = l;
                        if (e > o || e < 0 || o > t)
                            throw RangeError(`Invalid change range ${e} to ${o} (in doc of length ${t})`);
                        let u = c ? "string" == typeof c ? r.of(c.split(O || b)) : c : r.empty
                          , p = u.length;
                        if (e == o && 0 == p)
                            return;
                        e < a && s(),
                        e > a && w(n, e - a, -1),
                        w(n, o - e, p),
                        T(i, n, u),
                        a = o
                    }
                }(e),
                s(!o),
                o
            }
            static empty(e) {
                return new k(e ? [e, -1] : [],[])
            }
            static fromJSON(e) {
                if (!Array.isArray(e))
                    throw RangeError("Invalid JSON representation of ChangeSet");
                let t = []
                  , O = [];
                for (let n = 0; n < e.length; n++) {
                    let i = e[n];
                    if ("number" == typeof i)
                        t.push(i, -1);
                    else if (!Array.isArray(i) || "number" != typeof i[0] || i.some((e,t)=>t && "string" != typeof e))
                        throw RangeError("Invalid JSON representation of ChangeSet");
                    else if (1 == i.length)
                        t.push(i[0], 0);
                    else {
                        for (; O.length < n; )
                            O.push(r.empty);
                        O[n] = r.of(i.slice(1)),
                        t.push(i[0], O[n].length)
                    }
                }
                return new k(t,O)
            }
            static createSet(e, t) {
                return new k(e,t)
            }
        }
        function w(e, t, O, n=!1) {
            if (0 == t && O <= 0)
                return;
            let r = e.length - 2;
            r >= 0 && O <= 0 && O == e[r + 1] ? e[r] += t : 0 == t && 0 == e[r] ? e[r + 1] += O : n ? (e[r] += t,
            e[r + 1] += O) : e.push(t, O)
        }
        function T(e, t, O) {
            if (0 == O.length)
                return;
            let n = t.length - 2 >> 1;
            if (n < e.length)
                e[e.length - 1] = e[e.length - 1].append(O);
            else {
                for (; e.length < n; )
                    e.push(r.empty);
                e.push(O)
            }
        }
        function _(e, t, O) {
            let n = e.inserted;
            for (let i = 0, a = 0, o = 0; o < e.sections.length; ) {
                let s = e.sections[o++]
                  , l = e.sections[o++];
                if (l < 0)
                    i += s,
                    a += s;
                else {
                    let c = i
                      , u = a
                      , p = r.empty;
                    for (; c += s,
                    u += l,
                    l && n && (p = p.append(n[o - 2 >> 1])),
                    !O && o != e.sections.length && !(e.sections[o + 1] < 0); )
                        s = e.sections[o++],
                        l = e.sections[o++];
                    t(i, c, a, u, p),
                    i = c,
                    a = u
                }
            }
        }
        function W(e, t, O, n=!1) {
            let r = []
              , i = n ? [] : null
              , a = new z(e)
              , o = new z(t);
            for (let e = -1; ; )
                if (-1 == a.ins && -1 == o.ins) {
                    let e = Math.min(a.len, o.len);
                    w(r, e, -1),
                    a.forward(e),
                    o.forward(e)
                } else if (o.ins >= 0 && (a.ins < 0 || e == a.i || 0 == a.off && (o.len < a.len || o.len == a.len && !O))) {
                    let t = o.len;
                    for (w(r, o.ins, -1); t; ) {
                        let O = Math.min(a.len, t);
                        a.ins >= 0 && e < a.i && a.len <= O && (w(r, 0, a.ins),
                        i && T(i, r, a.text),
                        e = a.i),
                        a.forward(O),
                        t -= O
                    }
                    o.next()
                } else if (a.ins >= 0) {
                    let t = 0
                      , O = a.len;
                    for (; O; )
                        if (-1 == o.ins) {
                            let e = Math.min(O, o.len);
                            t += e,
                            O -= e,
                            o.forward(e)
                        } else if (0 == o.ins && o.len < O)
                            O -= o.len,
                            o.next();
                        else
                            break;
                    w(r, t, e < a.i ? a.ins : 0),
                    i && e < a.i && T(i, r, a.text),
                    e = a.i,
                    a.forward(a.len - O)
                } else if (a.done && o.done)
                    return i ? k.createSet(r, i) : v.create(r);
                else
                    throw Error("Mismatched change set lengths")
        }
        function Z(e, t, O=!1) {
            let n = []
              , r = O ? [] : null
              , i = new z(e)
              , a = new z(t);
            for (let e = !1; ; ) {
                if (i.done && a.done)
                    return r ? k.createSet(n, r) : v.create(n);
                if (0 == i.ins)
                    w(n, i.len, 0, e),
                    i.next();
                else if (0 != a.len || a.done) {
                    if (i.done || a.done)
                        throw Error("Mismatched change set lengths");
                    {
                        let t = Math.min(i.len2, a.len)
                          , O = n.length;
                        if (-1 == i.ins) {
                            let O = -1 == a.ins ? -1 : a.off ? 0 : a.ins;
                            w(n, t, O, e),
                            r && O && T(r, n, a.text)
                        } else
                            -1 == a.ins ? (w(n, i.off ? 0 : i.len, t, e),
                            r && T(r, n, i.textBit(t))) : (w(n, i.off ? 0 : i.len, a.off ? 0 : a.ins, e),
                            r && !a.off && T(r, n, a.text));
                        e = (i.ins > t || a.ins >= 0 && a.len > t) && (e || n.length > O),
                        i.forward2(t),
                        a.forward(t)
                    }
                } else
                    w(n, 0, a.ins, e),
                    r && T(r, n, a.text),
                    a.next()
            }
        }
        class z {
            constructor(e) {
                this.set = e,
                this.i = 0,
                this.next()
            }
            next() {
                let {sections: e} = this.set;
                this.i < e.length ? (this.len = e[this.i++],
                this.ins = e[this.i++]) : (this.len = 0,
                this.ins = -2),
                this.off = 0
            }
            get done() {
                return -2 == this.ins
            }
            get len2() {
                return this.ins < 0 ? this.len : this.ins
            }
            get text() {
                let {inserted: e} = this.set
                  , t = this.i - 2 >> 1;
                return t >= e.length ? r.empty : e[t]
            }
            textBit(e) {
                let {inserted: t} = this.set
                  , O = this.i - 2 >> 1;
                return O >= t.length && !e ? r.empty : t[O].slice(this.off, null == e ? void 0 : this.off + e)
            }
            forward(e) {
                e == this.len ? this.next() : (this.len -= e,
                this.off += e)
            }
            forward2(e) {
                -1 == this.ins ? this.forward(e) : e == this.ins ? this.next() : (this.ins -= e,
                this.off += e)
            }
        }
        class q {
            constructor(e, t, O) {
                this.from = e,
                this.to = t,
                this.flags = O
            }
            get anchor() {
                return 16 & this.flags ? this.to : this.from
            }
            get head() {
                return 16 & this.flags ? this.from : this.to
            }
            get empty() {
                return this.from == this.to
            }
            get assoc() {
                return 4 & this.flags ? -1 : 8 & this.flags ? 1 : 0
            }
            get bidiLevel() {
                let e = 3 & this.flags;
                return 3 == e ? null : e
            }
            get goalColumn() {
                let e = this.flags >> 5;
                return 33554431 == e ? void 0 : e
            }
            map(e, t=-1) {
                let O, n;
                return this.empty ? O = n = e.mapPos(this.from, t) : (O = e.mapPos(this.from, 1),
                n = e.mapPos(this.to, -1)),
                O == this.from && n == this.to ? this : new q(O,n,this.flags)
            }
            extend(e, t=e) {
                if (e <= this.anchor && t >= this.anchor)
                    return Y.range(e, t);
                let O = Math.abs(e - this.anchor) > Math.abs(t - this.anchor) ? e : t;
                return Y.range(this.anchor, O)
            }
            eq(e) {
                return this.anchor == e.anchor && this.head == e.head
            }
            toJSON() {
                return {
                    anchor: this.anchor,
                    head: this.head
                }
            }
            static fromJSON(e) {
                if (!e || "number" != typeof e.anchor || "number" != typeof e.head)
                    throw RangeError("Invalid JSON representation for SelectionRange");
                return Y.range(e.anchor, e.head)
            }
            static create(e, t, O) {
                return new q(e,t,O)
            }
        }
        class Y {
            constructor(e, t) {
                this.ranges = e,
                this.mainIndex = t
            }
            map(e, t=-1) {
                return e.empty ? this : Y.create(this.ranges.map(O=>O.map(e, t)), this.mainIndex)
            }
            eq(e) {
                if (this.ranges.length != e.ranges.length || this.mainIndex != e.mainIndex)
                    return !1;
                for (let t = 0; t < this.ranges.length; t++)
                    if (!this.ranges[t].eq(e.ranges[t]))
                        return !1;
                return !0
            }
            get main() {
                return this.ranges[this.mainIndex]
            }
            asSingle() {
                return 1 == this.ranges.length ? this : new Y([this.main],0)
            }
            addRange(e, t=!0) {
                return Y.create([e].concat(this.ranges), t ? 0 : this.mainIndex + 1)
            }
            replaceRange(e, t=this.mainIndex) {
                let O = this.ranges.slice();
                return O[t] = e,
                Y.create(O, this.mainIndex)
            }
            toJSON() {
                return {
                    ranges: this.ranges.map(e=>e.toJSON()),
                    main: this.mainIndex
                }
            }
            static fromJSON(e) {
                if (!e || !Array.isArray(e.ranges) || "number" != typeof e.main || e.main >= e.ranges.length)
                    throw RangeError("Invalid JSON representation for EditorSelection");
                return new Y(e.ranges.map(e=>q.fromJSON(e)),e.main)
            }
            static single(e, t=e) {
                return new Y([Y.range(e, t)],0)
            }
            static create(e, t=0) {
                if (0 == e.length)
                    throw RangeError("A selection needs at least one range");
                for (let O = 0, n = 0; n < e.length; n++) {
                    let r = e[n];
                    if (r.empty ? r.from <= O : r.from < O)
                        return Y.normalized(e.slice(), t);
                    O = r.to
                }
                return new Y(e,t)
            }
            static cursor(e, t=0, O, n) {
                return q.create(e, e, (0 == t ? 0 : t < 0 ? 4 : 8) | (null == O ? 3 : Math.min(2, O)) | (null != n ? n : 33554431) << 5)
            }
            static range(e, t, O, n) {
                let r = (null != O ? O : 33554431) << 5 | (null == n ? 3 : Math.min(2, n));
                return t < e ? q.create(t, e, 24 | r) : q.create(e, t, (t > e ? 4 : 0) | r)
            }
            static normalized(e, t=0) {
                let O = e[t];
                e.sort((e,t)=>e.from - t.from),
                t = e.indexOf(O);
                for (let O = 1; O < e.length; O++) {
                    let n = e[O]
                      , r = e[O - 1];
                    if (n.empty ? n.from <= r.to : n.from < r.to) {
                        let i = r.from
                          , a = Math.max(n.to, r.to);
                        O <= t && t--,
                        e.splice(--O, 2, n.anchor > n.head ? Y.range(a, i) : Y.range(i, a))
                    }
                }
                return new Y(e,t)
            }
        }
        function R(e, t) {
            for (let O of e.ranges)
                if (O.to > t)
                    throw RangeError("Selection points outside of document")
        }
        let U = 0;
        class V {
            constructor(e, t, O, n, r) {
                this.combine = e,
                this.compareInput = t,
                this.compare = O,
                this.isStatic = n,
                this.id = U++,
                this.default = e([]),
                this.extensions = "function" == typeof r ? r(this) : r
            }
            static define(e={}) {
                return new V(e.combine || (e=>e),e.compareInput || ((e,t)=>e === t),e.compare || (e.combine ? (e,t)=>e === t : E),!!e.static,e.enables)
            }
            of(e) {
                return new j([],this,0,e)
            }
            compute(e, t) {
                if (this.isStatic)
                    throw Error("Can't compute a static facet");
                return new j(e,this,1,t)
            }
            computeN(e, t) {
                if (this.isStatic)
                    throw Error("Can't compute a static facet");
                return new j(e,this,2,t)
            }
            from(e, t) {
                return t || (t = e=>e),
                this.compute([e], O=>t(O.field(e)))
            }
        }
        function E(e, t) {
            return e == t || e.length == t.length && e.every((e,O)=>e === t[O])
        }
        class j {
            constructor(e, t, O, n) {
                this.dependencies = e,
                this.facet = t,
                this.type = O,
                this.value = n,
                this.id = U++
            }
            dynamicSlot(e) {
                var t;
                let O = this.value
                  , n = this.facet.compareInput
                  , r = this.id
                  , i = e[r] >> 1
                  , a = 2 == this.type
                  , o = !1
                  , s = !1
                  , l = [];
                for (let O of this.dependencies)
                    "doc" == O ? o = !0 : "selection" == O ? s = !0 : ((null !== (t = e[O.id]) && void 0 !== t ? t : 1) & 1) == 0 && l.push(e[O.id]);
                return {
                    create: e=>(e.values[i] = O(e),
                    1),
                    update(e, t) {
                        if (o && t.docChanged || s && (t.docChanged || t.selection) || C(e, l)) {
                            let t = O(e);
                            if (a ? !G(t, e.values[i], n) : !n(t, e.values[i]))
                                return e.values[i] = t,
                                1
                        }
                        return 0
                    },
                    reconfigure: (e,t)=>{
                        let o, s = t.config.address[r];
                        if (null != s) {
                            let r = K(t, s);
                            if (this.dependencies.every(O=>O instanceof V ? t.facet(O) === e.facet(O) : !(O instanceof I) || t.field(O, !1) == e.field(O, !1)) || (a ? G(o = O(e), r, n) : n(o = O(e), r)))
                                return e.values[i] = r,
                                0
                        } else
                            o = O(e);
                        return e.values[i] = o,
                        1
                    }
                }
            }
        }
        function G(e, t, O) {
            if (e.length != t.length)
                return !1;
            for (let n = 0; n < e.length; n++)
                if (!O(e[n], t[n]))
                    return !1;
            return !0
        }
        function C(e, t) {
            let O = !1;
            for (let n of t)
                1 & H(e, n) && (O = !0);
            return O
        }
        let A = V.define({
            static: !0
        });
        class I {
            constructor(e, t, O, n, r) {
                this.id = e,
                this.createF = t,
                this.updateF = O,
                this.compareF = n,
                this.spec = r,
                this.provides = void 0
            }
            static define(e) {
                let t = new I(U++,e.create,e.update,e.compare || ((e,t)=>e === t),e);
                return e.provide && (t.provides = e.provide(t)),
                t
            }
            create(e) {
                let t = e.facet(A).find(e=>e.field == this);
                return ((null == t ? void 0 : t.create) || this.createF)(e)
            }
            slot(e) {
                let t = e[this.id] >> 1;
                return {
                    create: e=>(e.values[t] = this.create(e),
                    1),
                    update: (e,O)=>{
                        let n = e.values[t]
                          , r = this.updateF(n, O);
                        return this.compareF(n, r) ? 0 : (e.values[t] = r,
                        1)
                    }
                    ,
                    reconfigure: (e,O)=>null != O.config.address[this.id] ? (e.values[t] = O.field(this),
                    0) : (e.values[t] = this.create(e),
                    1)
                }
            }
            init(e) {
                return [this, A.of({
                    field: this,
                    create: e
                })]
            }
            get extension() {
                return this
            }
        }
        let J = {
            lowest: 4,
            low: 3,
            default: 2,
            high: 1,
            highest: 0
        };
        function N(e) {
            return t=>new L(t,e)
        }
        let D = {
            highest: N(J.highest),
            high: N(J.high),
            default: N(J.default),
            low: N(J.low),
            lowest: N(J.lowest)
        };
        class L {
            constructor(e, t) {
                this.inner = e,
                this.prec = t
            }
        }
        class F {
            of(e) {
                return new M(this,e)
            }
            reconfigure(e) {
                return F.reconfigure.of({
                    compartment: this,
                    extension: e
                })
            }
            get(e) {
                return e.config.compartments.get(this)
            }
        }
        class M {
            constructor(e, t) {
                this.compartment = e,
                this.inner = t
            }
        }
        class B {
            constructor(e, t, O, n, r, i) {
                for (this.base = e,
                this.compartments = t,
                this.dynamicSlots = O,
                this.address = n,
                this.staticValues = r,
                this.facets = i,
                this.statusTemplate = []; this.statusTemplate.length < O.length; )
                    this.statusTemplate.push(0)
            }
            staticFacet(e) {
                let t = this.address[e.id];
                return null == t ? e.default : this.staticValues[t >> 1]
            }
            static resolve(e, t, O) {
                let n, r, i = [], a = Object.create(null), o = new Map;
                for (let O of (n = [[], [], [], [], []],
                r = new Map,
                !function e(O, i) {
                    let a = r.get(O);
                    if (null != a) {
                        if (a <= i)
                            return;
                        let e = n[a].indexOf(O);
                        e > -1 && n[a].splice(e, 1),
                        O instanceof M && o.delete(O.compartment)
                    }
                    if (r.set(O, i),
                    Array.isArray(O))
                        for (let t of O)
                            e(t, i);
                    else if (O instanceof M) {
                        if (o.has(O.compartment))
                            throw RangeError("Duplicate use of compartment in extensions");
                        let n = t.get(O.compartment) || O.inner;
                        o.set(O.compartment, n),
                        e(n, i)
                    } else if (O instanceof L)
                        e(O.inner, O.prec);
                    else if (O instanceof I)
                        n[i].push(O),
                        O.provides && e(O.provides, i);
                    else if (O instanceof j)
                        n[i].push(O),
                        O.facet.extensions && e(O.facet.extensions, J.default);
                    else {
                        let t = O.extension;
                        if (!t)
                            throw Error(`Unrecognized extension value in extension set (${O}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);
                        e(t, i)
                    }
                }(e, J.default),
                n.reduce((e,t)=>e.concat(t))))
                    O instanceof I ? i.push(O) : (a[O.facet.id] || (a[O.facet.id] = [])).push(O);
                let s = Object.create(null)
                  , l = []
                  , c = [];
                for (let e of i)
                    s[e.id] = c.length << 1,
                    c.push(t=>e.slot(t));
                let u = null == O ? void 0 : O.config.facets;
                for (let e in a) {
                    let t = a[e]
                      , n = t[0].facet
                      , r = u && u[e] || [];
                    if (t.every(e=>0 == e.type)) {
                        if (s[n.id] = l.length << 1 | 1,
                        E(r, t))
                            l.push(O.facet(n));
                        else {
                            let e = n.combine(t.map(e=>e.value));
                            l.push(O && n.compare(e, O.facet(n)) ? O.facet(n) : e)
                        }
                    } else {
                        for (let e of t)
                            0 == e.type ? (s[e.id] = l.length << 1 | 1,
                            l.push(e.value)) : (s[e.id] = c.length << 1,
                            c.push(t=>e.dynamicSlot(t)));
                        s[n.id] = c.length << 1,
                        c.push(e=>(function(e, t, O) {
                            let n = O.map(t=>e[t.id])
                              , r = O.map(e=>e.type)
                              , i = n.filter(e=>!(1 & e))
                              , a = e[t.id] >> 1;
                            function o(e) {
                                let O = [];
                                for (let t = 0; t < n.length; t++) {
                                    let i = K(e, n[t]);
                                    if (2 == r[t])
                                        for (let e of i)
                                            O.push(e);
                                    else
                                        O.push(i)
                                }
                                return t.combine(O)
                            }
                            return {
                                create(e) {
                                    for (let t of n)
                                        H(e, t);
                                    return e.values[a] = o(e),
                                    1
                                },
                                update(e, O) {
                                    if (!C(e, i))
                                        return 0;
                                    let n = o(e);
                                    return t.compare(n, e.values[a]) ? 0 : (e.values[a] = n,
                                    1)
                                },
                                reconfigure(e, r) {
                                    let i = C(e, n)
                                      , s = r.config.facets[t.id]
                                      , l = r.facet(t);
                                    if (s && !i && E(O, s))
                                        return e.values[a] = l,
                                        0;
                                    let c = o(e);
                                    return t.compare(c, l) ? (e.values[a] = l,
                                    0) : (e.values[a] = c,
                                    1)
                                }
                            }
                        }
                        )(e, n, t))
                    }
                }
                let p = c.map(e=>e(s));
                return new B(e,o,p,s,l,a)
            }
        }
        function H(e, t) {
            if (1 & t)
                return 2;
            let O = t >> 1
              , n = e.status[O];
            if (4 == n)
                throw Error("Cyclic dependency between fields and/or facets");
            if (2 & n)
                return n;
            e.status[O] = 4;
            let r = e.computeSlot(e, e.config.dynamicSlots[O]);
            return e.status[O] = 2 | r
        }
        function K(e, t) {
            return 1 & t ? e.config.staticValues[t >> 1] : e.values[t >> 1]
        }
        let ee = V.define()
          , et = V.define({
            combine: e=>e.some(e=>e),
            static: !0
        })
          , eO = V.define({
            combine: e=>e.length ? e[0] : void 0,
            static: !0
        })
          , en = V.define()
          , er = V.define()
          , ei = V.define()
          , ea = V.define({
            combine: e=>!!e.length && e[0]
        });
        class eo {
            constructor(e, t) {
                this.type = e,
                this.value = t
            }
            static define() {
                return new es
            }
        }
        class es {
            of(e) {
                return new eo(this,e)
            }
        }
        class el {
            constructor(e) {
                this.map = e
            }
            of(e) {
                return new ec(this,e)
            }
        }
        class ec {
            constructor(e, t) {
                this.type = e,
                this.value = t
            }
            map(e) {
                let t = this.type.map(this.value, e);
                return void 0 === t ? void 0 : t == this.value ? this : new ec(this.type,t)
            }
            is(e) {
                return this.type == e
            }
            static define(e={}) {
                return new el(e.map || (e=>e))
            }
            static mapEffects(e, t) {
                if (!e.length)
                    return e;
                let O = [];
                for (let n of e) {
                    let e = n.map(t);
                    e && O.push(e)
                }
                return O
            }
        }
        ec.reconfigure = ec.define(),
        ec.appendConfig = ec.define();
        class eu {
            constructor(e, t, O, n, r, i) {
                this.startState = e,
                this.changes = t,
                this.selection = O,
                this.effects = n,
                this.annotations = r,
                this.scrollIntoView = i,
                this._doc = null,
                this._state = null,
                O && R(O, t.newLength),
                r.some(e=>e.type == eu.time) || (this.annotations = r.concat(eu.time.of(Date.now())))
            }
            static create(e, t, O, n, r, i) {
                return new eu(e,t,O,n,r,i)
            }
            get newDoc() {
                return this._doc || (this._doc = this.changes.apply(this.startState.doc))
            }
            get newSelection() {
                return this.selection || this.startState.selection.map(this.changes)
            }
            get state() {
                return this._state || this.startState.applyTransaction(this),
                this._state
            }
            annotation(e) {
                for (let t of this.annotations)
                    if (t.type == e)
                        return t.value
            }
            get docChanged() {
                return !this.changes.empty
            }
            get reconfigured() {
                return this.startState.config != this.state.config
            }
            isUserEvent(e) {
                let t = this.annotation(eu.userEvent);
                return !!(t && (t == e || t.length > e.length && t.slice(0, e.length) == e && "." == t[e.length]))
            }
        }
        function ep(e, t, O) {
            var n;
            let r, i, a;
            return O ? (r = t.changes,
            i = k.empty(t.changes.length),
            a = e.changes.compose(t.changes)) : (r = t.changes.map(e.changes),
            i = e.changes.mapDesc(t.changes, !0),
            a = e.changes.compose(r)),
            {
                changes: a,
                selection: t.selection ? t.selection.map(i) : null === (n = e.selection) || void 0 === n ? void 0 : n.map(r),
                effects: ec.mapEffects(e.effects, r).concat(ec.mapEffects(t.effects, i)),
                annotations: e.annotations.length ? e.annotations.concat(t.annotations) : t.annotations,
                scrollIntoView: e.scrollIntoView || t.scrollIntoView
            }
        }
        function ed(e, t, O) {
            let n = t.selection
              , r = eh(t.annotations);
            return t.userEvent && (r = r.concat(eu.userEvent.of(t.userEvent))),
            {
                changes: t.changes instanceof k ? t.changes : k.of(t.changes || [], O, e.facet(eO)),
                selection: n && (n instanceof Y ? n : Y.single(n.anchor, n.head)),
                effects: eh(t.effects),
                annotations: r,
                scrollIntoView: !!t.scrollIntoView
            }
        }
        eu.time = eo.define(),
        eu.userEvent = eo.define(),
        eu.addToHistory = eo.define(),
        eu.remote = eo.define();
        let ef = [];
        function eh(e) {
            return null == e ? ef : Array.isArray(e) ? e : [e]
        }
        var em = ((x = em || (em = {}))[x.Word = 0] = "Word",
        x[x.Space = 1] = "Space",
        x[x.Other = 2] = "Other",
        x);
        let eQ = /[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;
        try {
            n = RegExp("[\\p{Alphabetic}\\p{Number}_]", "u")
        } catch (e) {}
        class e$ {
            constructor(e, t, O, n, r, i) {
                this.config = e,
                this.doc = t,
                this.selection = O,
                this.values = n,
                this.status = e.statusTemplate.slice(),
                this.computeSlot = r,
                i && (i._state = this);
                for (let e = 0; e < this.config.dynamicSlots.length; e++)
                    H(this, e << 1);
                this.computeSlot = null
            }
            field(e, t=!0) {
                let O = this.config.address[e.id];
                if (null == O) {
                    if (t)
                        throw RangeError("Field is not present in this state");
                    return
                }
                return H(this, O),
                K(this, O)
            }
            update(...e) {
                return function e(t, O, n) {
                    let r = ed(t, O.length ? O[0] : {}, t.doc.length);
                    O.length && !1 === O[0].filter && (n = !1);
                    for (let e = 1; e < O.length; e++) {
                        !1 === O[e].filter && (n = !1);
                        let i = !!O[e].sequential;
                        r = ep(r, ed(t, O[e], i ? r.changes.newLength : t.doc.length), i)
                    }
                    let i = eu.create(t, r.changes, r.selection, r.effects, r.annotations, r.scrollIntoView);
                    return function(e) {
                        let t = e.startState
                          , O = t.facet(ei)
                          , n = e;
                        for (let r = O.length - 1; r >= 0; r--) {
                            let i = O[r](e);
                            i && Object.keys(i).length && (n = ep(n, ed(t, i, e.changes.newLength), !0))
                        }
                        return n == e ? e : eu.create(t, e.changes, e.selection, n.effects, n.annotations, n.scrollIntoView)
                    }(n ? function(t) {
                        let O = t.startState
                          , n = !0;
                        for (let e of O.facet(en)) {
                            let O = e(t);
                            if (!1 === O) {
                                n = !1;
                                break
                            }
                            Array.isArray(O) && (n = !0 === n ? O : function(e, t) {
                                let O = [];
                                for (let n = 0, r = 0; ; ) {
                                    let i, a;
                                    if (n < e.length && (r == t.length || t[r] >= e[n]))
                                        i = e[n++],
                                        a = e[n++];
                                    else {
                                        if (!(r < t.length))
                                            return O;
                                        i = t[r++],
                                        a = t[r++]
                                    }
                                    !O.length || O[O.length - 1] < i ? O.push(i, a) : O[O.length - 1] < a && (O[O.length - 1] = a)
                                }
                            }(n, O))
                        }
                        if (!0 !== n) {
                            let e, r;
                            if (!1 === n)
                                r = t.changes.invertedDesc,
                                e = k.empty(O.doc.length);
                            else {
                                let O = t.changes.filter(n);
                                e = O.changes,
                                r = O.filtered.mapDesc(O.changes).invertedDesc
                            }
                            t = eu.create(O, e, t.selection && t.selection.map(r), ec.mapEffects(t.effects, r), t.annotations, t.scrollIntoView)
                        }
                        let r = O.facet(er);
                        for (let n = r.length - 1; n >= 0; n--) {
                            let i = r[n](t);
                            t = i instanceof eu ? i : Array.isArray(i) && 1 == i.length && i[0]instanceof eu ? i[0] : e(O, eh(i), !1)
                        }
                        return t
                    }(i) : i)
                }(this, e, !0)
            }
            applyTransaction(e) {
                let t, O = this.config, {base: n, compartments: r} = O;
                for (let t of e.effects)
                    t.is(F.reconfigure) ? (O && (r = new Map,
                    O.compartments.forEach((e,t)=>r.set(t, e)),
                    O = null),
                    r.set(t.value.compartment, t.value.extension)) : t.is(ec.reconfigure) ? (O = null,
                    n = t.value) : t.is(ec.appendConfig) && (O = null,
                    n = eh(n).concat(t.value));
                O ? t = e.startState.values.slice() : (O = B.resolve(n, r, this),
                t = new e$(O,this.doc,this.selection,O.dynamicSlots.map(()=>null),(e,t)=>t.reconfigure(e, this),null).values),
                new e$(O,e.newDoc,e.newSelection,t,(t,O)=>O.update(t, e),e)
            }
            replaceSelection(e) {
                return "string" == typeof e && (e = this.toText(e)),
                this.changeByRange(t=>({
                    changes: {
                        from: t.from,
                        to: t.to,
                        insert: e
                    },
                    range: Y.cursor(t.from + e.length)
                }))
            }
            changeByRange(e) {
                let t = this.selection
                  , O = e(t.ranges[0])
                  , n = this.changes(O.changes)
                  , r = [O.range]
                  , i = eh(O.effects);
                for (let O = 1; O < t.ranges.length; O++) {
                    let a = e(t.ranges[O])
                      , o = this.changes(a.changes)
                      , s = o.map(n);
                    for (let e = 0; e < O; e++)
                        r[e] = r[e].map(s);
                    let l = n.mapDesc(o, !0);
                    r.push(a.range.map(l)),
                    n = n.compose(s),
                    i = ec.mapEffects(i, s).concat(ec.mapEffects(eh(a.effects), l))
                }
                return {
                    changes: n,
                    selection: Y.create(r, t.mainIndex),
                    effects: i
                }
            }
            changes(e=[]) {
                return e instanceof k ? e : k.of(e, this.doc.length, this.facet(e$.lineSeparator))
            }
            toText(e) {
                return r.of(e.split(this.facet(e$.lineSeparator) || b))
            }
            sliceDoc(e=0, t=this.doc.length) {
                return this.doc.sliceString(e, t, this.lineBreak)
            }
            facet(e) {
                let t = this.config.address[e.id];
                return null == t ? e.default : (H(this, t),
                K(this, t))
            }
            toJSON(e) {
                let t = {
                    doc: this.sliceDoc(),
                    selection: this.selection.toJSON()
                };
                if (e)
                    for (let O in e) {
                        let n = e[O];
                        n instanceof I && null != this.config.address[n.id] && (t[O] = n.spec.toJSON(this.field(e[O]), this))
                    }
                return t
            }
            static fromJSON(e, t={}, O) {
                if (!e || "string" != typeof e.doc)
                    throw RangeError("Invalid JSON representation for EditorState");
                let n = [];
                if (O) {
                    for (let t in O)
                        if (Object.prototype.hasOwnProperty.call(e, t)) {
                            let r = O[t]
                              , i = e[t];
                            n.push(r.init(e=>r.spec.fromJSON(i, e)))
                        }
                }
                return e$.create({
                    doc: e.doc,
                    selection: Y.fromJSON(e.selection),
                    extensions: t.extensions ? n.concat([t.extensions]) : n
                })
            }
            static create(e={}) {
                let t = B.resolve(e.extensions || [], new Map)
                  , O = e.doc instanceof r ? e.doc : r.of((e.doc || "").split(t.staticFacet(e$.lineSeparator) || b))
                  , n = e.selection ? e.selection instanceof Y ? e.selection : Y.single(e.selection.anchor, e.selection.head) : Y.single(0);
                return R(n, O.length),
                t.staticFacet(et) || (n = n.asSingle()),
                new e$(t,O,n,t.dynamicSlots.map(()=>null),(e,t)=>t.create(e),null)
            }
            get tabSize() {
                return this.facet(e$.tabSize)
            }
            get lineBreak() {
                return this.facet(e$.lineSeparator) || "\n"
            }
            get readOnly() {
                return this.facet(ea)
            }
            phrase(e, ...t) {
                for (let t of this.facet(e$.phrases))
                    if (Object.prototype.hasOwnProperty.call(t, e)) {
                        e = t[e];
                        break
                    }
                return t.length && (e = e.replace(/\$(\$|\d*)/g, (e,O)=>{
                    if ("$" == O)
                        return "$";
                    let n = +(O || 1);
                    return !n || n > t.length ? e : t[n - 1]
                }
                )),
                e
            }
            languageDataAt(e, t, O=-1) {
                let n = [];
                for (let r of this.facet(ee))
                    for (let i of r(this, t, O))
                        Object.prototype.hasOwnProperty.call(i, e) && n.push(i[e]);
                return n
            }
            charCategorizer(e) {
                var t;
                return t = this.languageDataAt("wordChars", e).join(""),
                e=>{
                    if (!/\S/.test(e))
                        return em.Space;
                    if (function(e) {
                        if (n)
                            return n.test(e);
                        for (let t = 0; t < e.length; t++) {
                            let O = e[t];
                            if (/\w/.test(O) || O > "\x80" && (O.toUpperCase() != O.toLowerCase() || eQ.test(O)))
                                return !0
                        }
                        return !1
                    }(e))
                        return em.Word;
                    for (let O = 0; O < t.length; O++)
                        if (e.indexOf(t[O]) > -1)
                            return em.Word;
                    return em.Other
                }
            }
            wordAt(e) {
                let {text: t, from: O, length: n} = this.doc.lineAt(e)
                  , r = this.charCategorizer(e)
                  , i = e - O
                  , a = e - O;
                for (; i > 0; ) {
                    let e = f(t, i, !1);
                    if (r(t.slice(e, i)) != em.Word)
                        break;
                    i = e
                }
                for (; a < n; ) {
                    let e = f(t, a);
                    if (r(t.slice(a, e)) != em.Word)
                        break;
                    a = e
                }
                return i == a ? null : Y.range(i + O, a + O)
            }
        }
        function eg(e, t, O={}) {
            let n = {};
            for (let t of e)
                for (let e of Object.keys(t)) {
                    let r = t[e]
                      , i = n[e];
                    if (void 0 === i)
                        n[e] = r;
                    else if (i === r || void 0 === r)
                        ;
                    else if (Object.hasOwnProperty.call(O, e))
                        n[e] = O[e](i, r);
                    else
                        throw Error("Config merge conflict for field " + e)
                }
            for (let e in t)
                void 0 === n[e] && (n[e] = t[e]);
            return n
        }
        e$.allowMultipleSelections = et,
        e$.tabSize = V.define({
            combine: e=>e.length ? e[0] : 4
        }),
        e$.lineSeparator = eO,
        e$.readOnly = ea,
        e$.phrases = V.define({
            compare(e, t) {
                let O = Object.keys(e)
                  , n = Object.keys(t);
                return O.length == n.length && O.every(O=>e[O] == t[O])
            }
        }),
        e$.languageData = ee,
        e$.changeFilter = en,
        e$.transactionFilter = er,
        e$.transactionExtender = ei,
        F.reconfigure = ec.define();
        class eP {
            eq(e) {
                return this == e
            }
            range(e, t=e) {
                return eS.create(e, t, this)
            }
        }
        eP.prototype.startSide = eP.prototype.endSide = 0,
        eP.prototype.point = !1,
        eP.prototype.mapMode = X.TrackDel;
        class eS {
            constructor(e, t, O) {
                this.from = e,
                this.to = t,
                this.value = O
            }
            static create(e, t, O) {
                return new eS(e,t,O)
            }
        }
        function eb(e, t) {
            return e.from - t.from || e.value.startSide - t.value.startSide
        }
        class ey {
            constructor(e, t, O, n) {
                this.from = e,
                this.to = t,
                this.value = O,
                this.maxPoint = n
            }
            get length() {
                return this.to[this.to.length - 1]
            }
            findIndex(e, t, O, n=0) {
                let r = O ? this.to : this.from;
                for (let i = n, a = r.length; ; ) {
                    if (i == a)
                        return i;
                    let n = i + a >> 1
                      , o = r[n] - e || (O ? this.value[n].endSide : this.value[n].startSide) - t;
                    if (n == i)
                        return o >= 0 ? i : a;
                    o >= 0 ? a = n : i = n + 1
                }
            }
            between(e, t, O, n) {
                for (let r = this.findIndex(t, -1e9, !0), i = this.findIndex(O, 1e9, !1, r); r < i; r++)
                    if (!1 === n(this.from[r] + e, this.to[r] + e, this.value[r]))
                        return !1
            }
            map(e, t) {
                let O = []
                  , n = []
                  , r = []
                  , i = -1
                  , a = -1;
                for (let o = 0; o < this.value.length; o++) {
                    let s = this.value[o], l = this.from[o] + e, c = this.to[o] + e, u, p;
                    if (l == c) {
                        let e = t.mapPos(l, s.startSide, s.mapMode);
                        if (null == e || (u = p = e,
                        s.startSide != s.endSide && (p = t.mapPos(l, s.endSide)) < u))
                            continue
                    } else if ((u = t.mapPos(l, s.startSide)) > (p = t.mapPos(c, s.endSide)) || u == p && s.startSide > 0 && s.endSide <= 0)
                        continue;
                    0 > (p - u || s.endSide - s.startSide) || (i < 0 && (i = u),
                    s.point && (a = Math.max(a, p - u)),
                    O.push(s),
                    n.push(u - i),
                    r.push(p - i))
                }
                return {
                    mapped: O.length ? new ey(n,r,O,a) : null,
                    pos: i
                }
            }
        }
        class ex {
            constructor(e, t, O, n) {
                this.chunkPos = e,
                this.chunk = t,
                this.nextLayer = O,
                this.maxPoint = n
            }
            static create(e, t, O, n) {
                return new ex(e,t,O,n)
            }
            get length() {
                let e = this.chunk.length - 1;
                return e < 0 ? 0 : Math.max(this.chunkEnd(e), this.nextLayer.length)
            }
            get size() {
                if (this.isEmpty)
                    return 0;
                let e = this.nextLayer.size;
                for (let t of this.chunk)
                    e += t.value.length;
                return e
            }
            chunkEnd(e) {
                return this.chunkPos[e] + this.chunk[e].length
            }
            update(e) {
                let {add: t=[], sort: O=!1, filterFrom: n=0, filterTo: r=this.length} = e
                  , i = e.filter;
                if (0 == t.length && !i)
                    return this;
                if (O && (t = t.slice().sort(eb)),
                this.isEmpty)
                    return t.length ? ex.of(t) : this;
                let a = new ek(this,null,-1).goto(0)
                  , o = 0
                  , s = []
                  , l = new eX;
                for (; a.value || o < t.length; )
                    if (o < t.length && (a.from - t[o].from || a.startSide - t[o].value.startSide) >= 0) {
                        let e = t[o++];
                        l.addInner(e.from, e.to, e.value) || s.push(e)
                    } else
                        1 == a.rangeIndex && a.chunkIndex < this.chunk.length && (o == t.length || this.chunkEnd(a.chunkIndex) < t[o].from) && (!i || n > this.chunkEnd(a.chunkIndex) || r < this.chunkPos[a.chunkIndex]) && l.addChunk(this.chunkPos[a.chunkIndex], this.chunk[a.chunkIndex]) ? a.nextChunk() : ((!i || n > a.to || r < a.from || i(a.from, a.to, a.value)) && !l.addInner(a.from, a.to, a.value) && s.push(eS.create(a.from, a.to, a.value)),
                        a.next());
                return l.finishInner(this.nextLayer.isEmpty && !s.length ? ex.empty : this.nextLayer.update({
                    add: s,
                    filter: i,
                    filterFrom: n,
                    filterTo: r
                }))
            }
            map(e) {
                if (e.empty || this.isEmpty)
                    return this;
                let t = []
                  , O = []
                  , n = -1;
                for (let r = 0; r < this.chunk.length; r++) {
                    let i = this.chunkPos[r]
                      , a = this.chunk[r]
                      , o = e.touchesRange(i, i + a.length);
                    if (!1 === o)
                        n = Math.max(n, a.maxPoint),
                        t.push(a),
                        O.push(e.mapPos(i));
                    else if (!0 === o) {
                        let {mapped: r, pos: o} = a.map(i, e);
                        r && (n = Math.max(n, r.maxPoint),
                        t.push(r),
                        O.push(o))
                    }
                }
                let r = this.nextLayer.map(e);
                return 0 == t.length ? r : new ex(O,t,r || ex.empty,n)
            }
            between(e, t, O) {
                if (!this.isEmpty) {
                    for (let n = 0; n < this.chunk.length; n++) {
                        let r = this.chunkPos[n]
                          , i = this.chunk[n];
                        if (t >= r && e <= r + i.length && !1 === i.between(r, e - r, t - r, O))
                            return
                    }
                    this.nextLayer.between(e, t, O)
                }
            }
            iter(e=0) {
                return ew.from([this]).goto(e)
            }
            get isEmpty() {
                return this.nextLayer == this
            }
            static iter(e, t=0) {
                return ew.from(e).goto(t)
            }
            static compare(e, t, O, n, r=-1) {
                let i = e.filter(e=>e.maxPoint > 0 || !e.isEmpty && e.maxPoint >= r)
                  , a = t.filter(e=>e.maxPoint > 0 || !e.isEmpty && e.maxPoint >= r)
                  , o = ev(i, a, O)
                  , s = new e_(i,o,r)
                  , l = new e_(a,o,r);
                O.iterGaps((e,t,O)=>eW(s, e, l, t, O, n)),
                O.empty && 0 == O.length && eW(s, 0, l, 0, 0, n)
            }
            static eq(e, t, O=0, n) {
                null == n && (n = 999999999);
                let r = e.filter(e=>!e.isEmpty && 0 > t.indexOf(e))
                  , i = t.filter(t=>!t.isEmpty && 0 > e.indexOf(t));
                if (r.length != i.length)
                    return !1;
                if (!r.length)
                    return !0;
                let a = ev(r, i)
                  , o = new e_(r,a,0).goto(O)
                  , s = new e_(i,a,0).goto(O);
                for (; ; ) {
                    if (o.to != s.to || !eZ(o.active, s.active) || o.point && (!s.point || !o.point.eq(s.point)))
                        return !1;
                    if (o.to > n)
                        return !0;
                    o.next(),
                    s.next()
                }
            }
            static spans(e, t, O, n, r=-1) {
                let i = new e_(e,null,r).goto(t)
                  , a = t
                  , o = i.openStart;
                for (; ; ) {
                    let e = Math.min(i.to, O);
                    if (i.point) {
                        let O = i.activeForPoint(i.to)
                          , r = i.pointFrom < t ? O.length + 1 : Math.min(O.length, o);
                        n.point(a, e, i.point, O, r, i.pointRank),
                        o = Math.min(i.openEnd(e), O.length)
                    } else
                        e > a && (n.span(a, e, i.active, o),
                        o = i.openEnd(e));
                    if (i.to > O)
                        return o + (i.point && i.to > O ? 1 : 0);
                    a = i.to,
                    i.next()
                }
            }
            static of(e, t=!1) {
                let O = new eX;
                for (let n of e instanceof eS ? [e] : t ? function(e) {
                    if (e.length > 1)
                        for (let t = e[0], O = 1; O < e.length; O++) {
                            let n = e[O];
                            if (eb(t, n) > 0)
                                return e.slice().sort(eb);
                            t = n
                        }
                    return e
                }(e) : e)
                    O.add(n.from, n.to, n.value);
                return O.finish()
            }
        }
        ex.empty = new ex([],[],null,-1),
        ex.empty.nextLayer = ex.empty;
        class eX {
            constructor() {
                this.chunks = [],
                this.chunkPos = [],
                this.chunkStart = -1,
                this.last = null,
                this.lastFrom = -1e9,
                this.lastTo = -1e9,
                this.from = [],
                this.to = [],
                this.value = [],
                this.maxPoint = -1,
                this.setMaxPoint = -1,
                this.nextLayer = null
            }
            finishChunk(e) {
                this.chunks.push(new ey(this.from,this.to,this.value,this.maxPoint)),
                this.chunkPos.push(this.chunkStart),
                this.chunkStart = -1,
                this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint),
                this.maxPoint = -1,
                e && (this.from = [],
                this.to = [],
                this.value = [])
            }
            add(e, t, O) {
                this.addInner(e, t, O) || (this.nextLayer || (this.nextLayer = new eX)).add(e, t, O)
            }
            addInner(e, t, O) {
                let n = e - this.lastTo || O.startSide - this.last.endSide;
                if (n <= 0 && 0 > (e - this.lastFrom || O.startSide - this.last.startSide))
                    throw Error("Ranges must be added sorted by `from` position and `startSide`");
                return !(n < 0) && (250 == this.from.length && this.finishChunk(!0),
                this.chunkStart < 0 && (this.chunkStart = e),
                this.from.push(e - this.chunkStart),
                this.to.push(t - this.chunkStart),
                this.last = O,
                this.lastFrom = e,
                this.lastTo = t,
                this.value.push(O),
                O.point && (this.maxPoint = Math.max(this.maxPoint, t - e)),
                !0)
            }
            addChunk(e, t) {
                if (0 > (e - this.lastTo || t.value[0].startSide - this.last.endSide))
                    return !1;
                this.from.length && this.finishChunk(!0),
                this.setMaxPoint = Math.max(this.setMaxPoint, t.maxPoint),
                this.chunks.push(t),
                this.chunkPos.push(e);
                let O = t.value.length - 1;
                return this.last = t.value[O],
                this.lastFrom = t.from[O] + e,
                this.lastTo = t.to[O] + e,
                !0
            }
            finish() {
                return this.finishInner(ex.empty)
            }
            finishInner(e) {
                if (this.from.length && this.finishChunk(!1),
                0 == this.chunks.length)
                    return e;
                let t = ex.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(e) : e, this.setMaxPoint);
                return this.from = null,
                t
            }
        }
        function ev(e, t, O) {
            let n = new Map;
            for (let t of e)
                for (let e = 0; e < t.chunk.length; e++)
                    t.chunk[e].maxPoint <= 0 && n.set(t.chunk[e], t.chunkPos[e]);
            let r = new Set;
            for (let e of t)
                for (let t = 0; t < e.chunk.length; t++) {
                    let i = n.get(e.chunk[t]);
                    null == i || (O ? O.mapPos(i) : i) != e.chunkPos[t] || (null == O ? void 0 : O.touchesRange(i, i + e.chunk[t].length)) || r.add(e.chunk[t])
                }
            return r
        }
        class ek {
            constructor(e, t, O, n=0) {
                this.layer = e,
                this.skip = t,
                this.minPoint = O,
                this.rank = n
            }
            get startSide() {
                return this.value ? this.value.startSide : 0
            }
            get endSide() {
                return this.value ? this.value.endSide : 0
            }
            goto(e, t=-1e9) {
                return this.chunkIndex = this.rangeIndex = 0,
                this.gotoInner(e, t, !1),
                this
            }
            gotoInner(e, t, O) {
                for (; this.chunkIndex < this.layer.chunk.length; ) {
                    let t = this.layer.chunk[this.chunkIndex];
                    if (!(this.skip && this.skip.has(t) || this.layer.chunkEnd(this.chunkIndex) < e || t.maxPoint < this.minPoint))
                        break;
                    this.chunkIndex++,
                    O = !1
                }
                if (this.chunkIndex < this.layer.chunk.length) {
                    let n = this.layer.chunk[this.chunkIndex].findIndex(e - this.layer.chunkPos[this.chunkIndex], t, !0);
                    (!O || this.rangeIndex < n) && this.setRangeIndex(n)
                }
                this.next()
            }
            forward(e, t) {
                0 > (this.to - e || this.endSide - t) && this.gotoInner(e, t, !0)
            }
            next() {
                for (; ; ) {
                    if (this.chunkIndex == this.layer.chunk.length) {
                        this.from = this.to = 1e9,
                        this.value = null;
                        break
                    }
                    {
                        let e = this.layer.chunkPos[this.chunkIndex]
                          , t = this.layer.chunk[this.chunkIndex]
                          , O = e + t.from[this.rangeIndex];
                        if (this.from = O,
                        this.to = e + t.to[this.rangeIndex],
                        this.value = t.value[this.rangeIndex],
                        this.setRangeIndex(this.rangeIndex + 1),
                        this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)
                            break
                    }
                }
            }
            setRangeIndex(e) {
                if (e == this.layer.chunk[this.chunkIndex].value.length) {
                    if (this.chunkIndex++,
                    this.skip)
                        for (; this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]); )
                            this.chunkIndex++;
                    this.rangeIndex = 0
                } else
                    this.rangeIndex = e
            }
            nextChunk() {
                this.chunkIndex++,
                this.rangeIndex = 0,
                this.next()
            }
            compare(e) {
                return this.from - e.from || this.startSide - e.startSide || this.rank - e.rank || this.to - e.to || this.endSide - e.endSide
            }
        }
        class ew {
            constructor(e) {
                this.heap = e
            }
            static from(e, t=null, O=-1) {
                let n = [];
                for (let r = 0; r < e.length; r++)
                    for (let i = e[r]; !i.isEmpty; i = i.nextLayer)
                        i.maxPoint >= O && n.push(new ek(i,t,O,r));
                return 1 == n.length ? n[0] : new ew(n)
            }
            get startSide() {
                return this.value ? this.value.startSide : 0
            }
            goto(e, t=-1e9) {
                for (let O of this.heap)
                    O.goto(e, t);
                for (let e = this.heap.length >> 1; e >= 0; e--)
                    eT(this.heap, e);
                return this.next(),
                this
            }
            forward(e, t) {
                for (let O of this.heap)
                    O.forward(e, t);
                for (let e = this.heap.length >> 1; e >= 0; e--)
                    eT(this.heap, e);
                0 > (this.to - e || this.value.endSide - t) && this.next()
            }
            next() {
                if (0 == this.heap.length)
                    this.from = this.to = 1e9,
                    this.value = null,
                    this.rank = -1;
                else {
                    let e = this.heap[0];
                    this.from = e.from,
                    this.to = e.to,
                    this.value = e.value,
                    this.rank = e.rank,
                    e.value && e.next(),
                    eT(this.heap, 0)
                }
            }
        }
        function eT(e, t) {
            for (let O = e[t]; ; ) {
                let n = (t << 1) + 1;
                if (n >= e.length)
                    break;
                let r = e[n];
                if (n + 1 < e.length && r.compare(e[n + 1]) >= 0 && (r = e[n + 1],
                n++),
                0 > O.compare(r))
                    break;
                e[n] = O,
                e[t] = r,
                t = n
            }
        }
        class e_ {
            constructor(e, t, O) {
                this.minPoint = O,
                this.active = [],
                this.activeTo = [],
                this.activeRank = [],
                this.minActive = -1,
                this.point = null,
                this.pointFrom = 0,
                this.pointRank = 0,
                this.to = -1e9,
                this.endSide = 0,
                this.openStart = -1,
                this.cursor = ew.from(e, t, O)
            }
            goto(e, t=-1e9) {
                return this.cursor.goto(e, t),
                this.active.length = this.activeTo.length = this.activeRank.length = 0,
                this.minActive = -1,
                this.to = e,
                this.endSide = t,
                this.openStart = -1,
                this.next(),
                this
            }
            forward(e, t) {
                for (; this.minActive > -1 && 0 > (this.activeTo[this.minActive] - e || this.active[this.minActive].endSide - t); )
                    this.removeActive(this.minActive);
                this.cursor.forward(e, t)
            }
            removeActive(e) {
                ez(this.active, e),
                ez(this.activeTo, e),
                ez(this.activeRank, e),
                this.minActive = eY(this.active, this.activeTo)
            }
            addActive(e) {
                let t = 0
                  , {value: O, to: n, rank: r} = this.cursor;
                for (; t < this.activeRank.length && this.activeRank[t] <= r; )
                    t++;
                eq(this.active, t, O),
                eq(this.activeTo, t, n),
                eq(this.activeRank, t, r),
                e && eq(e, t, this.cursor.from),
                this.minActive = eY(this.active, this.activeTo)
            }
            next() {
                let e = this.to
                  , t = this.point;
                this.point = null;
                let O = this.openStart < 0 ? [] : null;
                for (; ; ) {
                    let n = this.minActive;
                    if (n > -1 && 0 > (this.activeTo[n] - this.cursor.from || this.active[n].endSide - this.cursor.startSide)) {
                        if (this.activeTo[n] > e) {
                            this.to = this.activeTo[n],
                            this.endSide = this.active[n].endSide;
                            break
                        }
                        this.removeActive(n),
                        O && ez(O, n)
                    } else if (this.cursor.value) {
                        if (this.cursor.from > e) {
                            this.to = this.cursor.from,
                            this.endSide = this.cursor.startSide;
                            break
                        }
                        {
                            let e = this.cursor.value;
                            if (e.point) {
                                if (t && this.cursor.to == this.to && this.cursor.from < this.cursor.to)
                                    this.cursor.next();
                                else {
                                    this.point = e,
                                    this.pointFrom = this.cursor.from,
                                    this.pointRank = this.cursor.rank,
                                    this.to = this.cursor.to,
                                    this.endSide = e.endSide,
                                    this.cursor.next(),
                                    this.forward(this.to, this.endSide);
                                    break
                                }
                            } else
                                this.addActive(O),
                                this.cursor.next()
                        }
                    } else {
                        this.to = this.endSide = 1e9;
                        break
                    }
                }
                if (O) {
                    this.openStart = 0;
                    for (let t = O.length - 1; t >= 0 && O[t] < e; t--)
                        this.openStart++
                }
            }
            activeForPoint(e) {
                if (!this.active.length)
                    return this.active;
                let t = [];
                for (let O = this.active.length - 1; O >= 0 && !(this.activeRank[O] < this.pointRank); O--)
                    (this.activeTo[O] > e || this.activeTo[O] == e && this.active[O].endSide >= this.point.endSide) && t.push(this.active[O]);
                return t.reverse()
            }
            openEnd(e) {
                let t = 0;
                for (let O = this.activeTo.length - 1; O >= 0 && this.activeTo[O] > e; O--)
                    t++;
                return t
            }
        }
        function eW(e, t, O, n, r, i) {
            e.goto(t),
            O.goto(n);
            let a = n + r
              , o = n
              , s = n - t;
            for (; ; ) {
                let t = e.to + s - O.to || e.endSide - O.endSide
                  , n = t < 0 ? e.to + s : O.to
                  , r = Math.min(n, a);
                if (e.point || O.point ? e.point && O.point && (e.point == O.point || e.point.eq(O.point)) && eZ(e.activeForPoint(e.to + s), O.activeForPoint(O.to)) || i.comparePoint(o, r, e.point, O.point) : r > o && !eZ(e.active, O.active) && i.compareRange(o, r, e.active, O.active),
                n > a)
                    break;
                o = n,
                t <= 0 && e.next(),
                t >= 0 && O.next()
            }
        }
        function eZ(e, t) {
            if (e.length != t.length)
                return !1;
            for (let O = 0; O < e.length; O++)
                if (e[O] != t[O] && !e[O].eq(t[O]))
                    return !1;
            return !0
        }
        function ez(e, t) {
            for (let O = t, n = e.length - 1; O < n; O++)
                e[O] = e[O + 1];
            e.pop()
        }
        function eq(e, t, O) {
            for (let O = e.length - 1; O >= t; O--)
                e[O + 1] = e[O];
            e[t] = O
        }
        function eY(e, t) {
            let O = -1
              , n = 1e9;
            for (let r = 0; r < t.length; r++)
                0 > (t[r] - n || e[r].endSide - e[O].endSide) && (O = r,
                n = t[r]);
            return O
        }
        function eR(e, t, O=e.length) {
            let n = 0;
            for (let r = 0; r < O; )
                9 == e.charCodeAt(r) ? (n += t - n % t,
                r++) : (n++,
                r = f(e, r));
            return n
        }
        function eU(e, t, O, n) {
            for (let n = 0, r = 0; ; ) {
                if (r >= t)
                    return n;
                if (n == e.length)
                    break;
                r += 9 == e.charCodeAt(n) ? O - r % O : 1,
                n = f(e, n)
            }
            return !0 === n ? -1 : e.length
        }
    },
    770: function(e, t, O) {
        "use strict";
        var n, r;
        O.d(t, {
            FE: function() {
                return Y
            },
            Jq: function() {
                return u
            },
            L3: function() {
                return i
            },
            Lj: function() {
                return p
            },
            _b: function() {
                return z
            },
            hr: function() {
                return W
            },
            i9: function() {
                return Z
            },
            md: function() {
                return s
            },
            mp: function() {
                return h
            },
            vj: function() {
                return n
            }
        });
        let i = 1024
          , a = 0;
        class o {
            constructor(e, t) {
                this.from = e,
                this.to = t
            }
        }
        class s {
            constructor(e={}) {
                this.id = a++,
                this.perNode = !!e.perNode,
                this.deserialize = e.deserialize || (()=>{
                    throw Error("This node type doesn't define a deserialize function")
                }
                )
            }
            add(e) {
                if (this.perNode)
                    throw RangeError("Can't add per-node props to node types");
                return "function" != typeof e && (e = u.match(e)),
                t=>{
                    let O = e(t);
                    return void 0 === O ? null : [this, O]
                }
            }
        }
        s.closedBy = new s({
            deserialize: e=>e.split(" ")
        }),
        s.openedBy = new s({
            deserialize: e=>e.split(" ")
        }),
        s.group = new s({
            deserialize: e=>e.split(" ")
        }),
        s.contextHash = new s({
            perNode: !0
        }),
        s.lookAhead = new s({
            perNode: !0
        }),
        s.mounted = new s({
            perNode: !0
        });
        class l {
            constructor(e, t, O) {
                this.tree = e,
                this.overlay = t,
                this.parser = O
            }
        }
        let c = Object.create(null);
        class u {
            constructor(e, t, O, n=0) {
                this.name = e,
                this.props = t,
                this.id = O,
                this.flags = n
            }
            static define(e) {
                let t = e.props && e.props.length ? Object.create(null) : c
                  , O = (e.top ? 1 : 0) | (e.skipped ? 2 : 0) | (e.error ? 4 : 0) | (null == e.name ? 8 : 0)
                  , n = new u(e.name || "",t,e.id,O);
                if (e.props) {
                    for (let O of e.props)
                        if (Array.isArray(O) || (O = O(n)),
                        O) {
                            if (O[0].perNode)
                                throw RangeError("Can't store a per-node prop on a node type");
                            t[O[0].id] = O[1]
                        }
                }
                return n
            }
            prop(e) {
                return this.props[e.id]
            }
            get isTop() {
                return (1 & this.flags) > 0
            }
            get isSkipped() {
                return (2 & this.flags) > 0
            }
            get isError() {
                return (4 & this.flags) > 0
            }
            get isAnonymous() {
                return (8 & this.flags) > 0
            }
            is(e) {
                if ("string" == typeof e) {
                    if (this.name == e)
                        return !0;
                    let t = this.prop(s.group);
                    return !!t && t.indexOf(e) > -1
                }
                return this.id == e
            }
            static match(e) {
                let t = Object.create(null);
                for (let O in e)
                    for (let n of O.split(" "))
                        t[n] = e[O];
                return e=>{
                    for (let O = e.prop(s.group), n = -1; n < (O ? O.length : 0); n++) {
                        let r = t[n < 0 ? e.name : O[n]];
                        if (r)
                            return r
                    }
                }
            }
        }
        u.none = new u("",Object.create(null),0,8);
        class p {
            constructor(e) {
                this.types = e;
                for (let t = 0; t < e.length; t++)
                    if (e[t].id != t)
                        throw RangeError("Node type ids should correspond to array positions when creating a node set")
            }
            extend(...e) {
                let t = [];
                for (let O of this.types) {
                    let n = null;
                    for (let t of e) {
                        let e = t(O);
                        e && (n || (n = Object.assign({}, O.props)),
                        n[e[0].id] = e[1])
                    }
                    t.push(n ? new u(O.name,n,O.id,O.flags) : O)
                }
                return new p(t)
            }
        }
        let d = new WeakMap
          , f = new WeakMap;
        (r = n || (n = {}))[r.ExcludeBuffers = 1] = "ExcludeBuffers",
        r[r.IncludeAnonymous = 2] = "IncludeAnonymous",
        r[r.IgnoreMounts = 4] = "IgnoreMounts",
        r[r.IgnoreOverlays = 8] = "IgnoreOverlays";
        class h {
            constructor(e, t, O, n, r) {
                if (this.type = e,
                this.children = t,
                this.positions = O,
                this.length = n,
                this.props = null,
                r && r.length)
                    for (let[e,t] of (this.props = Object.create(null),
                    r))
                        this.props["number" == typeof e ? e : e.id] = t
            }
            toString() {
                let e = this.prop(s.mounted);
                if (e && !e.overlay)
                    return e.tree.toString();
                let t = "";
                for (let e of this.children) {
                    let O = e.toString();
                    O && (t && (t += ","),
                    t += O)
                }
                return this.type.name ? (/\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) + (t.length ? "(" + t + ")" : "") : t
            }
            cursor(e=0) {
                return new v(this.topNode,e)
            }
            cursorAt(e, t=0, O=0) {
                let n = d.get(this) || this.topNode
                  , r = new v(n);
                return r.moveTo(e, t),
                d.set(this, r._tree),
                r
            }
            get topNode() {
                return new S(this,0,0,null)
            }
            resolve(e, t=0) {
                let O = P(d.get(this) || this.topNode, e, t, !1);
                return d.set(this, O),
                O
            }
            resolveInner(e, t=0) {
                let O = P(f.get(this) || this.topNode, e, t, !0);
                return f.set(this, O),
                O
            }
            iterate(e) {
                let {enter: t, leave: O, from: r=0, to: i=this.length} = e;
                for (let a = this.cursor((e.mode || 0) | n.IncludeAnonymous); ; ) {
                    let e = !1;
                    if (a.from <= i && a.to >= r && (a.type.isAnonymous || !1 !== t(a))) {
                        if (a.firstChild())
                            continue;
                        e = !0
                    }
                    for (; e && O && !a.type.isAnonymous && O(a),
                    !a.nextSibling(); ) {
                        if (!a.parent())
                            return;
                        e = !0
                    }
                }
            }
            prop(e) {
                return e.perNode ? this.props ? this.props[e.id] : void 0 : this.type.prop(e)
            }
            get propValues() {
                let e = [];
                if (this.props)
                    for (let t in this.props)
                        e.push([+t, this.props[t]]);
                return e
            }
            balance(e={}) {
                return this.children.length <= 8 ? this : _(u.none, this.children, this.positions, 0, this.children.length, 0, this.length, (e,t,O)=>new h(this.type,e,t,O,this.propValues), e.makeTree || ((e,t,O)=>new h(u.none,e,t,O)))
            }
            static build(e) {
                return function(e) {
                    var t;
                    let {buffer: O, nodeSet: n, maxBufferLength: r=i, reused: a=[], minRepeatType: o=n.types.length} = e
                      , l = Array.isArray(O) ? new m(O,O.length) : O
                      , c = n.types
                      , u = 0
                      , p = 0;
                    function d(e, t, O, r, i, a, o, s) {
                        let l = []
                          , c = [];
                        for (; e.length > r; )
                            l.push(e.pop()),
                            c.push(t.pop() + O - i);
                        e.push(f(n.types[o], l, c, a - i, s - a)),
                        t.push(i - O)
                    }
                    function f(e, t, O, n, r=0, i) {
                        if (u) {
                            let e = [s.contextHash, u];
                            i = i ? [e].concat(i) : [e]
                        }
                        if (r > 25) {
                            let e = [s.lookAhead, r];
                            i = i ? [e].concat(i) : [e]
                        }
                        return new h(e,t,O,n,i)
                    }
                    let $ = []
                      , g = [];
                    for (; l.pos > 0; )
                        !function e(t, O, i, m, $) {
                            let {id: g, start: P, end: S, size: b} = l
                              , y = p;
                            for (; b < 0; ) {
                                if (l.next(),
                                -1 == b) {
                                    let e = a[g];
                                    i.push(e),
                                    m.push(P - t);
                                    return
                                }
                                if (-3 == b) {
                                    u = g;
                                    return
                                }
                                if (-4 == b) {
                                    p = g;
                                    return
                                }
                                throw RangeError(`Unrecognized record size: ${b}`)
                            }
                            let x = c[g], X, v, k = P - t;
                            if (S - P <= r && (v = function(e, t) {
                                let O = l.fork()
                                  , n = 0
                                  , i = 0
                                  , a = 0
                                  , s = O.end - r
                                  , c = {
                                    size: 0,
                                    start: 0,
                                    skip: 0
                                };
                                i: for (let r = O.pos - e; O.pos > r; ) {
                                    let e = O.size;
                                    if (O.id == t && e >= 0) {
                                        c.size = n,
                                        c.start = i,
                                        c.skip = a,
                                        a += 4,
                                        n += 4,
                                        O.next();
                                        continue
                                    }
                                    let l = O.pos - e;
                                    if (e < 0 || l < r || O.start < s)
                                        break;
                                    let u = O.id >= o ? 4 : 0
                                      , p = O.start;
                                    for (O.next(); O.pos > l; ) {
                                        if (O.size < 0) {
                                            if (-3 == O.size)
                                                u += 4;
                                            else
                                                break i
                                        } else
                                            O.id >= o && (u += 4);
                                        O.next()
                                    }
                                    i = p,
                                    n += e,
                                    a += u
                                }
                                return (t < 0 || n == e) && (c.size = n,
                                c.start = i,
                                c.skip = a),
                                c.size > 4 ? c : void 0
                            }(l.pos - O, $))) {
                                let e = new Uint16Array(v.size - v.skip)
                                  , O = l.pos - v.size
                                  , r = e.length;
                                for (; l.pos > O; )
                                    r = function e(t, O, n) {
                                        let {id: r, start: i, end: a, size: s} = l;
                                        if (l.next(),
                                        s >= 0 && r < o) {
                                            let o = n;
                                            if (s > 4) {
                                                let r = l.pos - (s - 4);
                                                for (; l.pos > r; )
                                                    n = e(t, O, n)
                                            }
                                            O[--n] = o,
                                            O[--n] = a - t,
                                            O[--n] = i - t,
                                            O[--n] = r
                                        } else
                                            -3 == s ? u = r : -4 == s && (p = r);
                                        return n
                                    }(v.start, e, r);
                                X = new Q(e,S - v.start,n),
                                k = v.start - t
                            } else {
                                let t = l.pos - b;
                                l.next();
                                let O = []
                                  , n = []
                                  , i = g >= o ? g : -1
                                  , a = 0
                                  , c = S;
                                for (; l.pos > t; )
                                    i >= 0 && l.id == i && l.size >= 0 ? (l.end <= c - r && (d(O, n, P, a, l.end, c, i, y),
                                    a = O.length,
                                    c = l.end),
                                    l.next()) : e(P, t, O, n, i);
                                if (i >= 0 && a > 0 && a < O.length && d(O, n, P, a, P, c, i, y),
                                O.reverse(),
                                n.reverse(),
                                i > -1 && a > 0) {
                                    let e = function(e) {
                                        return (t,O,n)=>{
                                            let r = 0, i = t.length - 1, a, o;
                                            if (i >= 0 && (a = t[i])instanceof h) {
                                                if (!i && a.type == e && a.length == n)
                                                    return a;
                                                (o = a.prop(s.lookAhead)) && (r = O[i] + a.length + o)
                                            }
                                            return f(e, t, O, n, r)
                                        }
                                    }(x);
                                    X = _(x, O, n, 0, O.length, 0, S - P, e, e)
                                } else
                                    X = f(x, O, n, S - P, y - S)
                            }
                            i.push(X),
                            m.push(k)
                        }(e.start || 0, e.bufferStart || 0, $, g, -1);
                    let P = null !== (t = e.length) && void 0 !== t ? t : $.length ? g[0] + $[0].length : 0;
                    return new h(c[e.topID],$.reverse(),g.reverse(),P)
                }(e)
            }
        }
        h.empty = new h(u.none,[],[],0);
        class m {
            constructor(e, t) {
                this.buffer = e,
                this.index = t
            }
            get id() {
                return this.buffer[this.index - 4]
            }
            get start() {
                return this.buffer[this.index - 3]
            }
            get end() {
                return this.buffer[this.index - 2]
            }
            get size() {
                return this.buffer[this.index - 1]
            }
            get pos() {
                return this.index
            }
            next() {
                this.index -= 4
            }
            fork() {
                return new m(this.buffer,this.index)
            }
        }
        class Q {
            constructor(e, t, O) {
                this.buffer = e,
                this.length = t,
                this.set = O
            }
            get type() {
                return u.none
            }
            toString() {
                let e = [];
                for (let t = 0; t < this.buffer.length; )
                    e.push(this.childString(t)),
                    t = this.buffer[t + 3];
                return e.join(",")
            }
            childString(e) {
                let t = this.buffer[e]
                  , O = this.buffer[e + 3]
                  , n = this.set.types[t]
                  , r = n.name;
                if (/\W/.test(r) && !n.isError && (r = JSON.stringify(r)),
                O == (e += 4))
                    return r;
                let i = [];
                for (; e < O; )
                    i.push(this.childString(e)),
                    e = this.buffer[e + 3];
                return r + "(" + i.join(",") + ")"
            }
            findChild(e, t, O, n, r) {
                let {buffer: i} = this
                  , a = -1;
                for (let o = e; o != t && (!$(r, n, i[o + 1], i[o + 2]) || (a = o,
                !(O > 0))); o = i[o + 3])
                    ;
                return a
            }
            slice(e, t, O) {
                let n = this.buffer
                  , r = new Uint16Array(t - e)
                  , i = 0;
                for (let a = e, o = 0; a < t; ) {
                    r[o++] = n[a++],
                    r[o++] = n[a++] - O;
                    let t = r[o++] = n[a++] - O;
                    r[o++] = n[a++] - e,
                    i = Math.max(i, t)
                }
                return new Q(r,i,this.set)
            }
        }
        function $(e, t, O, n) {
            switch (e) {
            case -2:
                return O < t;
            case -1:
                return n >= t && O < t;
            case 0:
                return O < t && n > t;
            case 1:
                return O <= t && n > t;
            case 2:
                return n > t;
            case 4:
                return !0
            }
        }
        function g(e, t) {
            let O = e.childBefore(t);
            for (; O; ) {
                let t = O.lastChild;
                if (!t || t.to != O.to)
                    break;
                t.type.isError && t.from == t.to ? (e = O,
                O = t.prevSibling) : O = t
            }
            return e
        }
        function P(e, t, O, r) {
            for (var i; e.from == e.to || (O < 1 ? e.from >= t : e.from > t) || (O > -1 ? e.to <= t : e.to < t); ) {
                let t = !r && e instanceof S && e.index < 0 ? null : e.parent;
                if (!t)
                    return e;
                e = t
            }
            let a = r ? 0 : n.IgnoreOverlays;
            if (r)
                for (let n = e, r = n.parent; r; r = (n = r).parent)
                    n instanceof S && n.index < 0 && (null === (i = r.enter(t, O, a)) || void 0 === i ? void 0 : i.from) != n.from && (e = r);
            for (; ; ) {
                let n = e.enter(t, O, a);
                if (!n)
                    return e;
                e = n
            }
        }
        class S {
            constructor(e, t, O, n) {
                this._tree = e,
                this.from = t,
                this.index = O,
                this._parent = n
            }
            get type() {
                return this._tree.type
            }
            get name() {
                return this._tree.type.name
            }
            get to() {
                return this.from + this._tree.length
            }
            nextChild(e, t, O, r, i=0) {
                for (let a = this; ; ) {
                    for (let {children: o, positions: l} = a._tree, c = t > 0 ? o.length : -1; e != c; e += t) {
                        let c = o[e]
                          , u = l[e] + a.from;
                        if ($(r, O, u, u + c.length)) {
                            if (c instanceof Q) {
                                if (i & n.ExcludeBuffers)
                                    continue;
                                let o = c.findChild(0, c.buffer.length, t, O - u, r);
                                if (o > -1)
                                    return new X(new x(a,c,e,u),null,o)
                            } else if (i & n.IncludeAnonymous || !c.type.isAnonymous || k(c)) {
                                let o;
                                if (!(i & n.IgnoreMounts) && c.props && (o = c.prop(s.mounted)) && !o.overlay)
                                    return new S(o.tree,u,e,a);
                                let l = new S(c,u,e,a);
                                return i & n.IncludeAnonymous || !l.type.isAnonymous ? l : l.nextChild(t < 0 ? c.children.length - 1 : 0, t, O, r)
                            }
                        }
                    }
                    if (i & n.IncludeAnonymous || !a.type.isAnonymous || (e = a.index >= 0 ? a.index + t : t < 0 ? -1 : a._parent._tree.children.length,
                    !(a = a._parent)))
                        return null
                }
            }
            get firstChild() {
                return this.nextChild(0, 1, 0, 4)
            }
            get lastChild() {
                return this.nextChild(this._tree.children.length - 1, -1, 0, 4)
            }
            childAfter(e) {
                return this.nextChild(0, 1, e, 2)
            }
            childBefore(e) {
                return this.nextChild(this._tree.children.length - 1, -1, e, -2)
            }
            enter(e, t, O=0) {
                let r;
                if (!(O & n.IgnoreOverlays) && (r = this._tree.prop(s.mounted)) && r.overlay) {
                    let O = e - this.from;
                    for (let {from: e, to: n} of r.overlay)
                        if ((t > 0 ? e <= O : e < O) && (t < 0 ? n >= O : n > O))
                            return new S(r.tree,r.overlay[0].from + this.from,-1,this)
                }
                return this.nextChild(0, 1, e, t, O)
            }
            nextSignificantParent() {
                let e = this;
                for (; e.type.isAnonymous && e._parent; )
                    e = e._parent;
                return e
            }
            get parent() {
                return this._parent ? this._parent.nextSignificantParent() : null
            }
            get nextSibling() {
                return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4) : null
            }
            get prevSibling() {
                return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4) : null
            }
            cursor(e=0) {
                return new v(this,e)
            }
            get tree() {
                return this._tree
            }
            toTree() {
                return this._tree
            }
            resolve(e, t=0) {
                return P(this, e, t, !1)
            }
            resolveInner(e, t=0) {
                return P(this, e, t, !0)
            }
            enterUnfinishedNodesBefore(e) {
                return g(this, e)
            }
            getChild(e, t=null, O=null) {
                let n = b(this, e, t, O);
                return n.length ? n[0] : null
            }
            getChildren(e, t=null, O=null) {
                return b(this, e, t, O)
            }
            toString() {
                return this._tree.toString()
            }
            get node() {
                return this
            }
            matchContext(e) {
                return y(this, e)
            }
        }
        function b(e, t, O, n) {
            let r = e.cursor()
              , i = [];
            if (!r.firstChild())
                return i;
            if (null != O) {
                for (; !r.type.is(O); )
                    if (!r.nextSibling())
                        return i
            }
            for (; ; ) {
                if (null != n && r.type.is(n))
                    return i;
                if (r.type.is(t) && i.push(r.node),
                !r.nextSibling())
                    return null == n ? i : []
            }
        }
        function y(e, t, O=t.length - 1) {
            for (let n = e.parent; O >= 0; n = n.parent) {
                if (!n)
                    return !1;
                if (!n.type.isAnonymous) {
                    if (t[O] && t[O] != n.name)
                        return !1;
                    O--
                }
            }
            return !0
        }
        class x {
            constructor(e, t, O, n) {
                this.parent = e,
                this.buffer = t,
                this.index = O,
                this.start = n
            }
        }
        class X {
            get name() {
                return this.type.name
            }
            get from() {
                return this.context.start + this.context.buffer.buffer[this.index + 1]
            }
            get to() {
                return this.context.start + this.context.buffer.buffer[this.index + 2]
            }
            constructor(e, t, O) {
                this.context = e,
                this._parent = t,
                this.index = O,
                this.type = e.buffer.set.types[e.buffer.buffer[O]]
            }
            child(e, t, O) {
                let {buffer: n} = this.context
                  , r = n.findChild(this.index + 4, n.buffer[this.index + 3], e, t - this.context.start, O);
                return r < 0 ? null : new X(this.context,this,r)
            }
            get firstChild() {
                return this.child(1, 0, 4)
            }
            get lastChild() {
                return this.child(-1, 0, 4)
            }
            childAfter(e) {
                return this.child(1, e, 2)
            }
            childBefore(e) {
                return this.child(-1, e, -2)
            }
            enter(e, t, O=0) {
                if (O & n.ExcludeBuffers)
                    return null;
                let {buffer: r} = this.context
                  , i = r.findChild(this.index + 4, r.buffer[this.index + 3], t > 0 ? 1 : -1, e - this.context.start, t);
                return i < 0 ? null : new X(this.context,this,i)
            }
            get parent() {
                return this._parent || this.context.parent.nextSignificantParent()
            }
            externalSibling(e) {
                return this._parent ? null : this.context.parent.nextChild(this.context.index + e, e, 0, 4)
            }
            get nextSibling() {
                let {buffer: e} = this.context
                  , t = e.buffer[this.index + 3];
                return t < (this._parent ? e.buffer[this._parent.index + 3] : e.buffer.length) ? new X(this.context,this._parent,t) : this.externalSibling(1)
            }
            get prevSibling() {
                let {buffer: e} = this.context
                  , t = this._parent ? this._parent.index + 4 : 0;
                return this.index == t ? this.externalSibling(-1) : new X(this.context,this._parent,e.findChild(t, this.index, -1, 0, 4))
            }
            cursor(e=0) {
                return new v(this,e)
            }
            get tree() {
                return null
            }
            toTree() {
                let e = []
                  , t = []
                  , {buffer: O} = this.context
                  , n = this.index + 4
                  , r = O.buffer[this.index + 3];
                if (r > n) {
                    let i = O.buffer[this.index + 1];
                    e.push(O.slice(n, r, i)),
                    t.push(0)
                }
                return new h(this.type,e,t,this.to - this.from)
            }
            resolve(e, t=0) {
                return P(this, e, t, !1)
            }
            resolveInner(e, t=0) {
                return P(this, e, t, !0)
            }
            enterUnfinishedNodesBefore(e) {
                return g(this, e)
            }
            toString() {
                return this.context.buffer.childString(this.index)
            }
            getChild(e, t=null, O=null) {
                let n = b(this, e, t, O);
                return n.length ? n[0] : null
            }
            getChildren(e, t=null, O=null) {
                return b(this, e, t, O)
            }
            get node() {
                return this
            }
            matchContext(e) {
                return y(this, e)
            }
        }
        class v {
            get name() {
                return this.type.name
            }
            constructor(e, t=0) {
                if (this.mode = t,
                this.buffer = null,
                this.stack = [],
                this.index = 0,
                this.bufferNode = null,
                e instanceof S)
                    this.yieldNode(e);
                else {
                    this._tree = e.context.parent,
                    this.buffer = e.context;
                    for (let t = e._parent; t; t = t._parent)
                        this.stack.unshift(t.index);
                    this.bufferNode = e,
                    this.yieldBuf(e.index)
                }
            }
            yieldNode(e) {
                return !!e && (this._tree = e,
                this.type = e.type,
                this.from = e.from,
                this.to = e.to,
                !0)
            }
            yieldBuf(e, t) {
                this.index = e;
                let {start: O, buffer: n} = this.buffer;
                return this.type = t || n.set.types[n.buffer[e]],
                this.from = O + n.buffer[e + 1],
                this.to = O + n.buffer[e + 2],
                !0
            }
            yield(e) {
                return !!e && (e instanceof S ? (this.buffer = null,
                this.yieldNode(e)) : (this.buffer = e.context,
                this.yieldBuf(e.index, e.type)))
            }
            toString() {
                return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString()
            }
            enterChild(e, t, O) {
                if (!this.buffer)
                    return this.yield(this._tree.nextChild(e < 0 ? this._tree._tree.children.length - 1 : 0, e, t, O, this.mode));
                let {buffer: n} = this.buffer
                  , r = n.findChild(this.index + 4, n.buffer[this.index + 3], e, t - this.buffer.start, O);
                return !(r < 0) && (this.stack.push(this.index),
                this.yieldBuf(r))
            }
            firstChild() {
                return this.enterChild(1, 0, 4)
            }
            lastChild() {
                return this.enterChild(-1, 0, 4)
            }
            childAfter(e) {
                return this.enterChild(1, e, 2)
            }
            childBefore(e) {
                return this.enterChild(-1, e, -2)
            }
            enter(e, t, O=this.mode) {
                return this.buffer ? !(O & n.ExcludeBuffers) && this.enterChild(1, e, t) : this.yield(this._tree.enter(e, t, O))
            }
            parent() {
                if (!this.buffer)
                    return this.yieldNode(this.mode & n.IncludeAnonymous ? this._tree._parent : this._tree.parent);
                if (this.stack.length)
                    return this.yieldBuf(this.stack.pop());
                let e = this.mode & n.IncludeAnonymous ? this.buffer.parent : this.buffer.parent.nextSignificantParent();
                return this.buffer = null,
                this.yieldNode(e)
            }
            sibling(e) {
                if (!this.buffer)
                    return !!this._tree._parent && this.yield(this._tree.index < 0 ? null : this._tree._parent.nextChild(this._tree.index + e, e, 0, 4, this.mode));
                let {buffer: t} = this.buffer
                  , O = this.stack.length - 1;
                if (e < 0) {
                    let e = O < 0 ? 0 : this.stack[O] + 4;
                    if (this.index != e)
                        return this.yieldBuf(t.findChild(e, this.index, -1, 0, 4))
                } else {
                    let e = t.buffer[this.index + 3];
                    if (e < (O < 0 ? t.buffer.length : t.buffer[this.stack[O] + 3]))
                        return this.yieldBuf(e)
                }
                return O < 0 && this.yield(this.buffer.parent.nextChild(this.buffer.index + e, e, 0, 4, this.mode))
            }
            nextSibling() {
                return this.sibling(1)
            }
            prevSibling() {
                return this.sibling(-1)
            }
            atLastNode(e) {
                let t, O, {buffer: r} = this;
                if (r) {
                    if (e > 0) {
                        if (this.index < r.buffer.buffer.length)
                            return !1
                    } else
                        for (let e = 0; e < this.index; e++)
                            if (r.buffer.buffer[e + 3] < this.index)
                                return !1;
                    ({index: t, parent: O} = r)
                } else
                    ({index: t, _parent: O} = this._tree);
                for (; O; {index: t, _parent: O} = O)
                    if (t > -1)
                        for (let r = t + e, i = e < 0 ? -1 : O._tree.children.length; r != i; r += e) {
                            let e = O._tree.children[r];
                            if (this.mode & n.IncludeAnonymous || e instanceof Q || !e.type.isAnonymous || k(e))
                                return !1
                        }
                return !0
            }
            move(e, t) {
                if (t && this.enterChild(e, 0, 4))
                    return !0;
                for (; ; ) {
                    if (this.sibling(e))
                        return !0;
                    if (this.atLastNode(e) || !this.parent())
                        return !1
                }
            }
            next(e=!0) {
                return this.move(1, e)
            }
            prev(e=!0) {
                return this.move(-1, e)
            }
            moveTo(e, t=0) {
                for (; (this.from == this.to || (t < 1 ? this.from >= e : this.from > e) || (t > -1 ? this.to <= e : this.to < e)) && this.parent(); )
                    ;
                for (; this.enterChild(1, e, t); )
                    ;
                return this
            }
            get node() {
                if (!this.buffer)
                    return this._tree;
                let e = this.bufferNode
                  , t = null
                  , O = 0;
                if (e && e.context == this.buffer)
                    i: for (let n = this.index, r = this.stack.length; r >= 0; ) {
                        for (let i = e; i; i = i._parent)
                            if (i.index == n) {
                                if (n == this.index)
                                    return i;
                                t = i,
                                O = r + 1;
                                break i
                            }
                        n = this.stack[--r]
                    }
                for (let e = O; e < this.stack.length; e++)
                    t = new X(this.buffer,t,this.stack[e]);
                return this.bufferNode = new X(this.buffer,t,this.index)
            }
            get tree() {
                return this.buffer ? null : this._tree._tree
            }
            iterate(e, t) {
                for (let O = 0; ; ) {
                    let n = !1;
                    if (this.type.isAnonymous || !1 !== e(this)) {
                        if (this.firstChild()) {
                            O++;
                            continue
                        }
                        this.type.isAnonymous || (n = !0)
                    }
                    for (; n && t && t(this),
                    n = this.type.isAnonymous,
                    !this.nextSibling(); ) {
                        if (!O)
                            return;
                        this.parent(),
                        O--,
                        n = !0
                    }
                }
            }
            matchContext(e) {
                if (!this.buffer)
                    return y(this.node, e);
                let {buffer: t} = this.buffer
                  , {types: O} = t.set;
                for (let n = e.length - 1, r = this.stack.length - 1; n >= 0; r--) {
                    if (r < 0)
                        return y(this.node, e, n);
                    let i = O[t.buffer[this.stack[r]]];
                    if (!i.isAnonymous) {
                        if (e[n] && e[n] != i.name)
                            return !1;
                        n--
                    }
                }
                return !0
            }
        }
        function k(e) {
            return e.children.some(e=>e instanceof Q || !e.type.isAnonymous || k(e))
        }
        let w = new WeakMap;
        function T(e, t) {
            if (!e.isAnonymous || t instanceof Q || t.type != e)
                return 1;
            let O = w.get(t);
            if (null == O) {
                for (let n of (O = 1,
                t.children)) {
                    if (n.type != e || !(n instanceof h)) {
                        O = 1;
                        break
                    }
                    O += T(e, n)
                }
                w.set(t, O)
            }
            return O
        }
        function _(e, t, O, n, r, i, a, o, s) {
            let l = 0;
            for (let O = n; O < r; O++)
                l += T(e, t[O]);
            let c = Math.ceil(1.5 * l / 8)
              , u = []
              , p = [];
            return !function t(O, n, r, a, o) {
                for (let l = r; l < a; ) {
                    let r = l
                      , d = n[l]
                      , f = T(e, O[l]);
                    for (l++; l < a; l++) {
                        let t = T(e, O[l]);
                        if (f + t >= c)
                            break;
                        f += t
                    }
                    if (l == r + 1) {
                        if (f > c) {
                            let e = O[r];
                            t(e.children, e.positions, 0, e.children.length, n[r] + o);
                            continue
                        }
                        u.push(O[r])
                    } else {
                        let t = n[l - 1] + O[l - 1].length - d;
                        u.push(_(e, O, n, r, l, d, t, null, s))
                    }
                    p.push(d + o - i)
                }
            }(t, O, n, r, 0),
            (o || s)(u, p, a)
        }
        class W {
            constructor() {
                this.map = new WeakMap
            }
            setBuffer(e, t, O) {
                let n = this.map.get(e);
                n || this.map.set(e, n = new Map),
                n.set(t, O)
            }
            getBuffer(e, t) {
                let O = this.map.get(e);
                return O && O.get(t)
            }
            set(e, t) {
                e instanceof X ? this.setBuffer(e.context.buffer, e.index, t) : e instanceof S && this.map.set(e.tree, t)
            }
            get(e) {
                return e instanceof X ? this.getBuffer(e.context.buffer, e.index) : e instanceof S ? this.map.get(e.tree) : void 0
            }
            cursorSet(e, t) {
                e.buffer ? this.setBuffer(e.buffer.buffer, e.index, t) : this.map.set(e.tree, t)
            }
            cursorGet(e) {
                return e.buffer ? this.getBuffer(e.buffer.buffer, e.index) : this.map.get(e.tree)
            }
        }
        class Z {
            constructor(e, t, O, n, r=!1, i=!1) {
                this.from = e,
                this.to = t,
                this.tree = O,
                this.offset = n,
                this.open = (r ? 1 : 0) | (i ? 2 : 0)
            }
            get openStart() {
                return (1 & this.open) > 0
            }
            get openEnd() {
                return (2 & this.open) > 0
            }
            static addTree(e, t=[], O=!1) {
                let n = [new Z(0,e.length,e,0,!1,O)];
                for (let O of t)
                    O.to > e.length && n.push(O);
                return n
            }
            static applyChanges(e, t, O=128) {
                if (!t.length)
                    return e;
                let n = []
                  , r = 1
                  , i = e.length ? e[0] : null;
                for (let a = 0, o = 0, s = 0; ; a++) {
                    let l = a < t.length ? t[a] : null
                      , c = l ? l.fromA : 1e9;
                    if (c - o >= O)
                        for (; i && i.from < c; ) {
                            let t = i;
                            if (o >= t.from || c <= t.to || s) {
                                let e = Math.max(t.from, o) - s
                                  , O = Math.min(t.to, c) - s;
                                t = e >= O ? null : new Z(e,O,t.tree,t.offset + s,a > 0,!!l)
                            }
                            if (t && n.push(t),
                            i.to > c)
                                break;
                            i = r < e.length ? e[r++] : null
                        }
                    if (!l)
                        break;
                    o = l.toA,
                    s = l.toA - l.toB
                }
                return n
            }
        }
        class z {
            startParse(e, t, O) {
                return "string" == typeof e && (e = new q(e)),
                O = O ? O.length ? O.map(e=>new o(e.from,e.to)) : [new o(0,0)] : [new o(0,e.length)],
                this.createParse(e, t || [], O)
            }
            parse(e, t, O) {
                let n = this.startParse(e, t, O);
                for (; ; ) {
                    let e = n.advance();
                    if (e)
                        return e
                }
            }
        }
        class q {
            constructor(e) {
                this.string = e
            }
            get length() {
                return this.string.length
            }
            chunk(e) {
                return this.string.slice(e)
            }
            get lineChunks() {
                return !1
            }
            read(e, t) {
                return this.string.slice(e, t)
            }
        }
        function Y(e) {
            return (t,O,n,r)=>new E(t,e,O,n,r)
        }
        class R {
            constructor(e, t, O, n, r) {
                this.parser = e,
                this.parse = t,
                this.overlay = O,
                this.target = n,
                this.ranges = r
            }
        }
        class U {
            constructor(e, t, O, n, r, i, a) {
                this.parser = e,
                this.predicate = t,
                this.mounts = O,
                this.index = n,
                this.start = r,
                this.target = i,
                this.prev = a,
                this.depth = 0,
                this.ranges = []
            }
        }
        let V = new s({
            perNode: !0
        });
        class E {
            constructor(e, t, O, n, r) {
                this.nest = t,
                this.input = O,
                this.fragments = n,
                this.ranges = r,
                this.inner = [],
                this.innerDone = 0,
                this.baseTree = null,
                this.stoppedAt = null,
                this.baseParse = e
            }
            advance() {
                if (this.baseParse) {
                    let e = this.baseParse.advance();
                    if (!e)
                        return null;
                    if (this.baseParse = null,
                    this.baseTree = e,
                    this.startInner(),
                    null != this.stoppedAt)
                        for (let e of this.inner)
                            e.parse.stopAt(this.stoppedAt)
                }
                if (this.innerDone == this.inner.length) {
                    let e = this.baseTree;
                    return null != this.stoppedAt && (e = new h(e.type,e.children,e.positions,e.length,e.propValues.concat([[V, this.stoppedAt]]))),
                    e
                }
                let e = this.inner[this.innerDone]
                  , t = e.parse.advance();
                if (t) {
                    this.innerDone++;
                    let O = Object.assign(Object.create(null), e.target.props);
                    O[s.mounted.id] = new l(t,e.overlay,e.parser),
                    e.target.props = O
                }
                return null
            }
            get parsedPos() {
                if (this.baseParse)
                    return 0;
                let e = this.input.length;
                for (let t = this.innerDone; t < this.inner.length; t++)
                    this.inner[t].ranges[0].from < e && (e = Math.min(e, this.inner[t].parse.parsedPos));
                return e
            }
            stopAt(e) {
                if (this.stoppedAt = e,
                this.baseParse)
                    this.baseParse.stopAt(e);
                else
                    for (let t = this.innerDone; t < this.inner.length; t++)
                        this.inner[t].parse.stopAt(e)
            }
            startInner() {
                let e = new C(this.fragments)
                  , t = null
                  , O = null
                  , r = new v(new S(this.baseTree,this.ranges[0].from,0,null),n.IncludeAnonymous | n.IgnoreMounts);
                i: for (let n, i; null == this.stoppedAt || r.from < this.stoppedAt; ) {
                    let a = !0, s;
                    if (e.hasNode(r)) {
                        if (t) {
                            let e = t.mounts.find(e=>e.frag.from <= r.from && e.frag.to >= r.to && e.mount.overlay);
                            if (e)
                                for (let O of e.mount.overlay) {
                                    let n = O.from + e.pos
                                      , i = O.to + e.pos;
                                    n >= r.from && i <= r.to && !t.ranges.some(e=>e.from < i && e.to > n) && t.ranges.push({
                                        from: n,
                                        to: i
                                    })
                                }
                        }
                        a = !1
                    } else if (O && (i = function(e, t, O) {
                        for (let n of e) {
                            if (n.from >= O)
                                break;
                            if (n.to > t)
                                return n.from <= t && n.to >= O ? 2 : 1
                        }
                        return 0
                    }(O.ranges, r.from, r.to)))
                        a = 2 != i;
                    else if (!r.type.isAnonymous && r.from < r.to && (n = this.nest(r, this.input))) {
                        r.tree || function(e) {
                            let {node: t} = e
                              , O = 0;
                            do
                                e.parent(),
                                O++;
                            while (!e.tree);
                            let n = 0
                              , r = e.tree
                              , i = 0;
                            for (; !((i = r.positions[n] + e.from) <= t.from) || !(i + r.children[n].length >= t.to); n++)
                                ;
                            let a = r.children[n]
                              , o = a.buffer;
                            r.children[n] = function e(O, n, r, s, l) {
                                let c = O;
                                for (; o[c + 2] + i <= t.from; )
                                    c = o[c + 3];
                                let u = []
                                  , p = [];
                                j(a, O, c, u, p, s);
                                let d = o[c + 1]
                                  , f = o[c + 2]
                                  , m = d + i == t.from && f + i == t.to && o[c] == t.type.id;
                                return u.push(m ? t.toTree() : e(c + 4, o[c + 3], a.set.types[o[c]], d, f - d)),
                                p.push(d - s),
                                j(a, o[c + 3], n, u, p, s),
                                new h(r,u,p,l)
                            }(0, o.length, u.none, 0, a.length);
                            for (let n = 0; n <= O; n++)
                                e.childAfter(t.from)
                        }(r);
                        let i = e.findMounts(r.from, n.parser);
                        if ("function" == typeof n.overlay)
                            t = new U(n.parser,n.overlay,i,this.inner.length,r.from,r.tree,t);
                        else {
                            let e = A(this.ranges, n.overlay || [new o(r.from,r.to)]);
                            e.length && this.inner.push(new R(n.parser,n.parser.startParse(this.input, I(i, e), e),n.overlay ? n.overlay.map(e=>new o(e.from - r.from,e.to - r.from)) : null,r.tree,e)),
                            n.overlay ? e.length && (O = {
                                ranges: e,
                                depth: 0,
                                prev: O
                            }) : a = !1
                        }
                    } else
                        t && (s = t.predicate(r)) && (!0 === s && (s = new o(r.from,r.to)),
                        s.from < s.to && t.ranges.push(s));
                    if (a && r.firstChild())
                        t && t.depth++,
                        O && O.depth++;
                    else
                        for (; !r.nextSibling(); ) {
                            if (!r.parent())
                                break i;
                            if (t && !--t.depth) {
                                let e = A(this.ranges, t.ranges);
                                e.length && this.inner.splice(t.index, 0, new R(t.parser,t.parser.startParse(this.input, I(t.mounts, e), e),t.ranges.map(e=>new o(e.from - t.start,e.to - t.start)),t.target,e)),
                                t = t.prev
                            }
                            !O || --O.depth || (O = O.prev)
                        }
                }
            }
        }
        function j(e, t, O, n, r, i) {
            if (t < O) {
                let a = e.buffer[t + 1];
                n.push(e.slice(t, O, a)),
                r.push(a - i)
            }
        }
        class G {
            constructor(e, t) {
                this.offset = t,
                this.done = !1,
                this.cursor = e.cursor(n.IncludeAnonymous | n.IgnoreMounts)
            }
            moveTo(e) {
                let {cursor: t} = this
                  , O = e - this.offset;
                for (; !this.done && t.from < O; )
                    t.to >= e && t.enter(O, 1, n.IgnoreOverlays | n.ExcludeBuffers) || t.next(!1) || (this.done = !0)
            }
            hasNode(e) {
                if (this.moveTo(e.from),
                !this.done && this.cursor.from + this.offset == e.from && this.cursor.tree)
                    for (let t = this.cursor.tree; ; ) {
                        if (t == e.tree)
                            return !0;
                        if (t.children.length && 0 == t.positions[0] && t.children[0]instanceof h)
                            t = t.children[0];
                        else
                            break
                    }
                return !1
            }
        }
        class C {
            constructor(e) {
                var t;
                if (this.fragments = e,
                this.curTo = 0,
                this.fragI = 0,
                e.length) {
                    let O = this.curFrag = e[0];
                    this.curTo = null !== (t = O.tree.prop(V)) && void 0 !== t ? t : O.to,
                    this.inner = new G(O.tree,-O.offset)
                } else
                    this.curFrag = this.inner = null
            }
            hasNode(e) {
                for (; this.curFrag && e.from >= this.curTo; )
                    this.nextFrag();
                return this.curFrag && this.curFrag.from <= e.from && this.curTo >= e.to && this.inner.hasNode(e)
            }
            nextFrag() {
                var e;
                if (this.fragI++,
                this.fragI == this.fragments.length)
                    this.curFrag = this.inner = null;
                else {
                    let t = this.curFrag = this.fragments[this.fragI];
                    this.curTo = null !== (e = t.tree.prop(V)) && void 0 !== e ? e : t.to,
                    this.inner = new G(t.tree,-t.offset)
                }
            }
            findMounts(e, t) {
                var O;
                let n = [];
                if (this.inner) {
                    this.inner.cursor.moveTo(e, 1);
                    for (let e = this.inner.cursor.node; e; e = e.parent) {
                        let r = null === (O = e.tree) || void 0 === O ? void 0 : O.prop(s.mounted);
                        if (r && r.parser == t)
                            for (let t = this.fragI; t < this.fragments.length; t++) {
                                let O = this.fragments[t];
                                if (O.from >= e.to)
                                    break;
                                O.tree == this.curFrag.tree && n.push({
                                    frag: O,
                                    pos: e.from - O.offset,
                                    mount: r
                                })
                            }
                    }
                }
                return n
            }
        }
        function A(e, t) {
            let O = null
              , n = t;
            for (let r = 1, i = 0; r < e.length; r++) {
                let a = e[r - 1].to
                  , s = e[r].from;
                for (; i < n.length; i++) {
                    let e = n[i];
                    if (e.from >= s)
                        break;
                    !(e.to <= a) && (O || (n = O = t.slice()),
                    e.from < a ? (O[i] = new o(e.from,a),
                    e.to > s && O.splice(i + 1, 0, new o(s,e.to))) : e.to > s ? O[i--] = new o(s,e.to) : O.splice(i--, 1))
                }
            }
            return n
        }
        function I(e, t) {
            let O = [];
            for (let {pos: n, mount: r, frag: i} of e) {
                let e = n + (r.overlay ? r.overlay[0].from : 0)
                  , a = e + r.tree.length
                  , s = Math.max(i.from, e)
                  , l = Math.min(i.to, a);
                if (r.overlay) {
                    let a = function(e, t, O, n) {
                        let r = 0
                          , i = 0
                          , a = !1
                          , s = !1
                          , l = -1e9
                          , c = [];
                        for (; ; ) {
                            let u = r == e.length ? 1e9 : a ? e[r].to : e[r].from
                              , p = i == t.length ? 1e9 : s ? t[i].to : t[i].from;
                            if (a != s) {
                                let e = Math.max(l, O)
                                  , t = Math.min(u, p, n);
                                e < t && c.push(new o(e,t))
                            }
                            if (1e9 == (l = Math.min(u, p)))
                                break;
                            u == l && (a ? (a = !1,
                            r++) : a = !0),
                            p == l && (s ? (s = !1,
                            i++) : s = !0)
                        }
                        return c
                    }(t, r.overlay.map(e=>new o(e.from + n,e.to + n)), s, l);
                    for (let t = 0, n = s; ; t++) {
                        let o = t == a.length
                          , s = o ? l : a[t].from;
                        if (s > n && O.push(new Z(n,s,r.tree,-e,i.from >= n || i.openStart,i.to <= s || i.openEnd)),
                        o)
                            break;
                        n = a[t].to
                    }
                } else
                    O.push(new Z(s,l,r.tree,-e,i.from >= e || i.openStart,i.to <= a || i.openEnd))
            }
            return O
        }
    },
    5306: function(e, t, O) {
        "use strict";
        O.d(t, {
            Gv: function() {
                return s
            },
            QR: function() {
                return u
            },
            Vp: function() {
                return i
            },
            bW: function() {
                return p
            },
            pJ: function() {
                return T
            }
        });
        var n = O(770);
        let r = 0;
        class i {
            constructor(e, t, O) {
                this.set = e,
                this.base = t,
                this.modified = O,
                this.id = r++
            }
            static define(e) {
                if (null == e ? void 0 : e.base)
                    throw Error("Can not derive from a modified tag");
                let t = new i([],null,[]);
                if (t.set.push(t),
                e)
                    for (let O of e.set)
                        t.set.push(O);
                return t
            }
            static defineModifier() {
                let e = new o;
                return t=>t.modified.indexOf(e) > -1 ? t : o.get(t.base || t, t.modified.concat(e).sort((e,t)=>e.id - t.id))
            }
        }
        let a = 0;
        class o {
            constructor() {
                this.instances = [],
                this.id = a++
            }
            static get(e, t) {
                if (!t.length)
                    return e;
                let O = t[0].instances.find(O=>{
                    var n;
                    return O.base == e && (n = O.modified,
                    t.length == n.length && t.every((e,t)=>e == n[t]))
                }
                );
                if (O)
                    return O;
                let n = []
                  , r = new i(n,e,t);
                for (let e of t)
                    e.instances.push(r);
                let a = function(e) {
                    let t = [[]];
                    for (let O = 0; O < e.length; O++)
                        for (let n = 0, r = t.length; n < r; n++)
                            t.push(t[n].concat(e[O]));
                    return t.sort((e,t)=>t.length - e.length)
                }(t);
                for (let t of e.set)
                    if (!t.modified.length)
                        for (let e of a)
                            n.push(o.get(t, e));
                return r
            }
        }
        function s(e) {
            let t = Object.create(null);
            for (let O in e) {
                let n = e[O];
                for (let e of (Array.isArray(n) || (n = [n]),
                O.split(" ")))
                    if (e) {
                        let O = []
                          , r = 2
                          , i = e;
                        for (let t = 0; ; ) {
                            if ("..." == i && t > 0 && t + 3 == e.length) {
                                r = 1;
                                break
                            }
                            let n = /^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(i);
                            if (!n)
                                throw RangeError("Invalid path: " + e);
                            if (O.push("*" == n[0] ? "" : '"' == n[0][0] ? JSON.parse(n[0]) : n[0]),
                            (t += n[0].length) == e.length)
                                break;
                            let a = e[t++];
                            if (t == e.length && "!" == a) {
                                r = 0;
                                break
                            }
                            if ("/" != a)
                                throw RangeError("Invalid path: " + e);
                            i = e.slice(t)
                        }
                        let a = O.length - 1
                          , o = O[a];
                        if (!o)
                            throw RangeError("Invalid path: " + e);
                        let s = new c(n,r,a > 0 ? O.slice(0, a) : null);
                        t[o] = s.sort(t[o])
                    }
            }
            return l.add(t)
        }
        let l = new n.md;
        class c {
            constructor(e, t, O, n) {
                this.tags = e,
                this.mode = t,
                this.context = O,
                this.next = n
            }
            get opaque() {
                return 0 == this.mode
            }
            get inherit() {
                return 1 == this.mode
            }
            sort(e) {
                return !e || e.depth < this.depth ? (this.next = e,
                this) : (e.next = this.sort(e.next),
                e)
            }
            get depth() {
                return this.context ? this.context.length : 0
            }
        }
        function u(e, t) {
            let O = Object.create(null);
            for (let t of e)
                if (Array.isArray(t.tag))
                    for (let e of t.tag)
                        O[e.id] = t.class;
                else
                    O[t.tag.id] = t.class;
            let {scope: n, all: r=null} = t || {};
            return {
                style: e=>{
                    let t = r;
                    for (let n of e)
                        for (let e of n.set) {
                            let n = O[e.id];
                            if (n) {
                                t = t ? t + " " + n : n;
                                break
                            }
                        }
                    return t
                }
                ,
                scope: n
            }
        }
        function p(e, t, O, n=0, r=e.length) {
            let i = new d(n,Array.isArray(t) ? t : [t],O);
            i.highlightRange(e.cursor(), n, r, "", i.highlighters),
            i.flush(r)
        }
        c.empty = new c([],2,null);
        class d {
            constructor(e, t, O) {
                this.at = e,
                this.highlighters = t,
                this.span = O,
                this.class = ""
            }
            startSpan(e, t) {
                t != this.class && (this.flush(e),
                e > this.at && (this.at = e),
                this.class = t)
            }
            flush(e) {
                e > this.at && this.class && this.span(this.at, e, this.class)
            }
            highlightRange(e, t, O, r, i) {
                let {type: a, from: o, to: s} = e;
                if (o >= O || s <= t)
                    return;
                a.isTop && (i = this.highlighters.filter(e=>!e.scope || e.scope(a)));
                let u = r
                  , p = function(e) {
                    let t = e.type.prop(l);
                    for (; t && t.context && !e.matchContext(t.context); )
                        t = t.next;
                    return t || null
                }(e) || c.empty
                  , d = function(e, t) {
                    let O = null;
                    for (let n of e) {
                        let e = n.style(t);
                        e && (O = O ? O + " " + e : e)
                    }
                    return O
                }(i, p.tags);
                if (d && (u && (u += " "),
                u += d,
                1 == p.mode && (r += (r ? " " : "") + d)),
                this.startSpan(e.from, u),
                p.opaque)
                    return;
                let f = e.tree && e.tree.prop(n.md.mounted);
                if (f && f.overlay) {
                    let n = e.node.enter(f.overlay[0].from + o, 1)
                      , a = this.highlighters.filter(e=>!e.scope || e.scope(f.tree.type))
                      , l = e.firstChild();
                    for (let c = 0, p = o; ; c++) {
                        let d = c < f.overlay.length ? f.overlay[c] : null
                          , h = d ? d.from + o : s
                          , m = Math.max(t, p)
                          , Q = Math.min(O, h);
                        if (m < Q && l)
                            for (; e.from < Q && (this.highlightRange(e, m, Q, r, i),
                            this.startSpan(Math.min(Q, e.to), u),
                            !(e.to >= h) && e.nextSibling()); )
                                ;
                        if (!d || h > O)
                            break;
                        (p = d.to + o) > t && (this.highlightRange(n.cursor(), Math.max(t, d.from + o), Math.min(O, p), r, a),
                        this.startSpan(p, u))
                    }
                    l && e.parent()
                } else if (e.firstChild()) {
                    do {
                        if (e.to <= t)
                            continue;
                        if (e.from >= O)
                            break;
                        this.highlightRange(e, t, O, r, i),
                        this.startSpan(Math.min(O, e.to), u)
                    } while (e.nextSibling());
                    e.parent()
                }
            }
        }
        let f = i.define
          , h = f()
          , m = f()
          , Q = f(m)
          , $ = f(m)
          , g = f()
          , P = f(g)
          , S = f(g)
          , b = f()
          , y = f(b)
          , x = f()
          , X = f()
          , v = f()
          , k = f(v)
          , w = f()
          , T = {
            comment: h,
            lineComment: f(h),
            blockComment: f(h),
            docComment: f(h),
            name: m,
            variableName: f(m),
            typeName: Q,
            tagName: f(Q),
            propertyName: $,
            attributeName: f($),
            className: f(m),
            labelName: f(m),
            namespace: f(m),
            macroName: f(m),
            literal: g,
            string: P,
            docString: f(P),
            character: f(P),
            attributeValue: f(P),
            number: S,
            integer: f(S),
            float: f(S),
            bool: f(g),
            regexp: f(g),
            escape: f(g),
            color: f(g),
            url: f(g),
            keyword: x,
            self: f(x),
            null: f(x),
            atom: f(x),
            unit: f(x),
            modifier: f(x),
            operatorKeyword: f(x),
            controlKeyword: f(x),
            definitionKeyword: f(x),
            moduleKeyword: f(x),
            operator: X,
            derefOperator: f(X),
            arithmeticOperator: f(X),
            logicOperator: f(X),
            bitwiseOperator: f(X),
            compareOperator: f(X),
            updateOperator: f(X),
            definitionOperator: f(X),
            typeOperator: f(X),
            controlOperator: f(X),
            punctuation: v,
            separator: f(v),
            bracket: k,
            angleBracket: f(k),
            squareBracket: f(k),
            paren: f(k),
            brace: f(k),
            content: b,
            heading: y,
            heading1: f(y),
            heading2: f(y),
            heading3: f(y),
            heading4: f(y),
            heading5: f(y),
            heading6: f(y),
            contentSeparator: f(b),
            list: f(b),
            quote: f(b),
            emphasis: f(b),
            strong: f(b),
            link: f(b),
            monospace: f(b),
            strikethrough: f(b),
            inserted: f(),
            deleted: f(),
            changed: f(),
            invalid: f(),
            meta: w,
            documentMeta: f(w),
            annotation: f(w),
            processingInstruction: f(w),
            definition: i.defineModifier(),
            constant: i.defineModifier(),
            function: i.defineModifier(),
            standard: i.defineModifier(),
            local: i.defineModifier(),
            special: i.defineModifier()
        };
        u([{
            tag: T.link,
            class: "tok-link"
        }, {
            tag: T.heading,
            class: "tok-heading"
        }, {
            tag: T.emphasis,
            class: "tok-emphasis"
        }, {
            tag: T.strong,
            class: "tok-strong"
        }, {
            tag: T.keyword,
            class: "tok-keyword"
        }, {
            tag: T.atom,
            class: "tok-atom"
        }, {
            tag: T.bool,
            class: "tok-bool"
        }, {
            tag: T.url,
            class: "tok-url"
        }, {
            tag: T.labelName,
            class: "tok-labelName"
        }, {
            tag: T.inserted,
            class: "tok-inserted"
        }, {
            tag: T.deleted,
            class: "tok-deleted"
        }, {
            tag: T.literal,
            class: "tok-literal"
        }, {
            tag: T.string,
            class: "tok-string"
        }, {
            tag: T.number,
            class: "tok-number"
        }, {
            tag: [T.regexp, T.escape, T.special(T.string)],
            class: "tok-string2"
        }, {
            tag: T.variableName,
            class: "tok-variableName"
        }, {
            tag: T.local(T.variableName),
            class: "tok-variableName tok-local"
        }, {
            tag: T.definition(T.variableName),
            class: "tok-variableName tok-definition"
        }, {
            tag: T.special(T.variableName),
            class: "tok-variableName2"
        }, {
            tag: T.definition(T.propertyName),
            class: "tok-propertyName tok-definition"
        }, {
            tag: T.typeName,
            class: "tok-typeName"
        }, {
            tag: T.namespace,
            class: "tok-namespace"
        }, {
            tag: T.className,
            class: "tok-className"
        }, {
            tag: T.macroName,
            class: "tok-macroName"
        }, {
            tag: T.propertyName,
            class: "tok-propertyName"
        }, {
            tag: T.operator,
            class: "tok-operator"
        }, {
            tag: T.comment,
            class: "tok-comment"
        }, {
            tag: T.meta,
            class: "tok-meta"
        }, {
            tag: T.invalid,
            class: "tok-invalid"
        }, {
            tag: T.punctuation,
            class: "tok-punctuation"
        }])
    },
    2679: function(e, t, O) {
        "use strict";
        O.d(t, {
            IK: function() {
                return z
            },
            Jq: function() {
                return S
            },
            RA: function() {
                return P
            },
            WQ: function() {
                return q
            }
        });
        var n, r, i, a, o, s, l = O(770), c = O(253);
        class u {
            constructor(e, t, O, n, r, i, a, o, s, l=0, c) {
                this.p = e,
                this.stack = t,
                this.state = O,
                this.reducePos = n,
                this.pos = r,
                this.score = i,
                this.buffer = a,
                this.bufferBase = o,
                this.curContext = s,
                this.lookAhead = l,
                this.parent = c
            }
            toString() {
                return `[${this.stack.filter((e,t)=>t % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? "!" + this.score : ""}`
            }
            static start(e, t, O=0) {
                let n = e.parser.context;
                return new u(e,[],t,O,O,0,[],0,n ? new p(n,n.start) : null,0,null)
            }
            get context() {
                return this.curContext ? this.curContext.context : null
            }
            pushState(e, t) {
                this.stack.push(this.state, t, this.bufferBase + this.buffer.length),
                this.state = e
            }
            reduce(e) {
                var t;
                let O = e >> 19
                  , n = 65535 & e
                  , {parser: r} = this.p
                  , i = r.dynamicPrecedence(n);
                if (i && (this.score += i),
                0 == O) {
                    this.pushState(r.getGoto(this.state, n, !0), this.reducePos),
                    n < r.minRepeatTerm && this.storeNode(n, this.reducePos, this.reducePos, 4, !0),
                    this.reduceContext(n, this.reducePos);
                    return
                }
                let a = this.stack.length - (O - 1) * 3 - (262144 & e ? 6 : 0)
                  , o = a ? this.stack[a - 2] : this.p.ranges[0].from
                  , s = this.reducePos - o;
                s >= 2e3 && !(null === (t = this.p.parser.nodeSet.types[n]) || void 0 === t ? void 0 : t.isAnonymous) && (o == this.p.lastBigReductionStart ? (this.p.bigReductionCount++,
                this.p.lastBigReductionSize = s) : this.p.lastBigReductionSize < s && (this.p.bigReductionCount = 1,
                this.p.lastBigReductionStart = o,
                this.p.lastBigReductionSize = s));
                let l = a ? this.stack[a - 1] : 0
                  , c = this.bufferBase + this.buffer.length - l;
                if (n < r.minRepeatTerm || 131072 & e) {
                    let e = r.stateFlag(this.state, 1) ? this.pos : this.reducePos;
                    this.storeNode(n, o, e, c + 4, !0)
                }
                if (262144 & e)
                    this.state = this.stack[a];
                else {
                    let e = this.stack[a - 3];
                    this.state = r.getGoto(e, n, !0)
                }
                for (; this.stack.length > a; )
                    this.stack.pop();
                this.reduceContext(n, o)
            }
            storeNode(e, t, O, n=4, r=!1) {
                if (0 == e && (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {
                    let e = this
                      , n = this.buffer.length;
                    if (0 == n && e.parent && (n = e.bufferBase - e.parent.bufferBase,
                    e = e.parent),
                    n > 0 && 0 == e.buffer[n - 4] && e.buffer[n - 1] > -1) {
                        if (t == O)
                            return;
                        if (e.buffer[n - 2] >= t) {
                            e.buffer[n - 2] = O;
                            return
                        }
                    }
                }
                if (r && this.pos != O) {
                    let r = this.buffer.length;
                    if (r > 0 && 0 != this.buffer[r - 4])
                        for (; r > 0 && this.buffer[r - 2] > O; )
                            this.buffer[r] = this.buffer[r - 4],
                            this.buffer[r + 1] = this.buffer[r - 3],
                            this.buffer[r + 2] = this.buffer[r - 2],
                            this.buffer[r + 3] = this.buffer[r - 1],
                            r -= 4,
                            n > 4 && (n -= 4);
                    this.buffer[r] = e,
                    this.buffer[r + 1] = t,
                    this.buffer[r + 2] = O,
                    this.buffer[r + 3] = n
                } else
                    this.buffer.push(e, t, O, n)
            }
            shift(e, t, O) {
                let n = this.pos;
                if (131072 & e)
                    this.pushState(65535 & e, this.pos);
                else if ((262144 & e) == 0) {
                    let {parser: r} = this.p;
                    (O > this.pos || t <= r.maxNode) && (this.pos = O,
                    r.stateFlag(e, 1) || (this.reducePos = O)),
                    this.pushState(e, n),
                    this.shiftContext(t, n),
                    t <= r.maxNode && this.buffer.push(t, n, O, 4)
                } else
                    this.pos = O,
                    this.shiftContext(t, n),
                    t <= this.p.parser.maxNode && this.buffer.push(t, n, O, 4)
            }
            apply(e, t, O) {
                65536 & e ? this.reduce(e) : this.shift(e, t, O)
            }
            useNode(e, t) {
                let O = this.p.reused.length - 1;
                (O < 0 || this.p.reused[O] != e) && (this.p.reused.push(e),
                O++);
                let n = this.pos;
                this.reducePos = this.pos = n + e.length,
                this.pushState(t, n),
                this.buffer.push(O, n, this.reducePos, -1),
                this.curContext && this.updateContext(this.curContext.tracker.reuse(this.curContext.context, e, this, this.p.stream.reset(this.pos - e.length)))
            }
            split() {
                let e = this
                  , t = e.buffer.length;
                for (; t > 0 && e.buffer[t - 2] > e.reducePos; )
                    t -= 4;
                let O = e.buffer.slice(t)
                  , n = e.bufferBase + t;
                for (; e && n == e.bufferBase; )
                    e = e.parent;
                return new u(this.p,this.stack.slice(),this.state,this.reducePos,this.pos,this.score,O,n,this.curContext,this.lookAhead,e)
            }
            recoverByDelete(e, t) {
                let O = e <= this.p.parser.maxNode;
                O && this.storeNode(e, this.pos, t, 4),
                this.storeNode(0, this.pos, t, O ? 8 : 4),
                this.pos = this.reducePos = t,
                this.score -= 190
            }
            canShift(e) {
                for (let t = new d(this); ; ) {
                    let O = this.p.parser.stateSlot(t.state, 4) || this.p.parser.hasAction(t.state, e);
                    if (0 == O)
                        return !1;
                    if ((65536 & O) == 0)
                        return !0;
                    t.reduce(O)
                }
            }
            recoverByInsert(e) {
                if (this.stack.length >= 300)
                    return [];
                let t = this.p.parser.nextStates(this.state);
                if (t.length > 8 || this.stack.length >= 120) {
                    let O = [];
                    for (let n = 0, r; n < t.length; n += 2)
                        (r = t[n + 1]) != this.state && this.p.parser.hasAction(r, e) && O.push(t[n], r);
                    if (this.stack.length < 120)
                        for (let e = 0; O.length < 8 && e < t.length; e += 2) {
                            let n = t[e + 1];
                            O.some((e,t)=>1 & t && e == n) || O.push(t[e], n)
                        }
                    t = O
                }
                let O = [];
                for (let e = 0; e < t.length && O.length < 4; e += 2) {
                    let n = t[e + 1];
                    if (n == this.state)
                        continue;
                    let r = this.split();
                    r.pushState(n, this.pos),
                    r.storeNode(0, r.pos, r.pos, 4, !0),
                    r.shiftContext(t[e], this.pos),
                    r.score -= 200,
                    O.push(r)
                }
                return O
            }
            forceReduce() {
                let e = this.p.parser.stateSlot(this.state, 5);
                if ((65536 & e) == 0)
                    return !1;
                let {parser: t} = this.p;
                if (!t.validAction(this.state, e)) {
                    let O = this.stack.length - 3 * (e >> 19);
                    if (O < 0 || 0 > t.getGoto(this.stack[O], 65535 & e, !1))
                        return !1;
                    this.storeNode(0, this.reducePos, this.reducePos, 4, !0),
                    this.score -= 100
                }
                return this.reducePos = this.pos,
                this.reduce(e),
                !0
            }
            forceAll() {
                for (; !this.p.parser.stateFlag(this.state, 2); )
                    if (!this.forceReduce()) {
                        this.storeNode(0, this.pos, this.pos, 4, !0);
                        break
                    }
                return this
            }
            get deadEnd() {
                if (3 != this.stack.length)
                    return !1;
                let {parser: e} = this.p;
                return 65535 == e.data[e.stateSlot(this.state, 1)] && !e.stateSlot(this.state, 4)
            }
            restart() {
                this.state = this.stack[0],
                this.stack.length = 0
            }
            sameState(e) {
                if (this.state != e.state || this.stack.length != e.stack.length)
                    return !1;
                for (let t = 0; t < this.stack.length; t += 3)
                    if (this.stack[t] != e.stack[t])
                        return !1;
                return !0
            }
            get parser() {
                return this.p.parser
            }
            dialectEnabled(e) {
                return this.p.parser.dialect.flags[e]
            }
            shiftContext(e, t) {
                this.curContext && this.updateContext(this.curContext.tracker.shift(this.curContext.context, e, this, this.p.stream.reset(t)))
            }
            reduceContext(e, t) {
                this.curContext && this.updateContext(this.curContext.tracker.reduce(this.curContext.context, e, this, this.p.stream.reset(t)))
            }
            emitContext() {
                let e = this.buffer.length - 1;
                (e < 0 || -3 != this.buffer[e]) && this.buffer.push(this.curContext.hash, this.reducePos, this.reducePos, -3)
            }
            emitLookAhead() {
                let e = this.buffer.length - 1;
                (e < 0 || -4 != this.buffer[e]) && this.buffer.push(this.lookAhead, this.reducePos, this.reducePos, -4)
            }
            updateContext(e) {
                if (e != this.curContext.context) {
                    let t = new p(this.curContext.tracker,e);
                    t.hash != this.curContext.hash && this.emitContext(),
                    this.curContext = t
                }
            }
            setLookAhead(e) {
                e > this.lookAhead && (this.emitLookAhead(),
                this.lookAhead = e)
            }
            close() {
                this.curContext && this.curContext.tracker.strict && this.emitContext(),
                this.lookAhead > 0 && this.emitLookAhead()
            }
        }
        class p {
            constructor(e, t) {
                this.tracker = e,
                this.context = t,
                this.hash = e.strict ? e.hash(t) : 0
            }
        }
        (n = a || (a = {}))[n.Insert = 200] = "Insert",
        n[n.Delete = 190] = "Delete",
        n[n.Reduce = 100] = "Reduce",
        n[n.MaxNext = 4] = "MaxNext",
        n[n.MaxInsertStackDepth = 300] = "MaxInsertStackDepth",
        n[n.DampenInsertStackDepth = 120] = "DampenInsertStackDepth",
        n[n.MinBigReduction = 2e3] = "MinBigReduction";
        class d {
            constructor(e) {
                this.start = e,
                this.state = e.state,
                this.stack = e.stack,
                this.base = this.stack.length
            }
            reduce(e) {
                let t = e >> 19;
                0 == t ? (this.stack == this.start.stack && (this.stack = this.stack.slice()),
                this.stack.push(this.state, 0, 0),
                this.base += 3) : this.base -= (t - 1) * 3;
                let O = this.start.p.parser.getGoto(this.stack[this.base - 3], 65535 & e, !0);
                this.state = O
            }
        }
        class f {
            constructor(e, t, O) {
                this.stack = e,
                this.pos = t,
                this.index = O,
                this.buffer = e.buffer,
                0 == this.index && this.maybeNext()
            }
            static create(e, t=e.bufferBase + e.buffer.length) {
                return new f(e,t,t - e.bufferBase)
            }
            maybeNext() {
                let e = this.stack.parent;
                null != e && (this.index = this.stack.bufferBase - e.bufferBase,
                this.stack = e,
                this.buffer = e.buffer)
            }
            get id() {
                return this.buffer[this.index - 4]
            }
            get start() {
                return this.buffer[this.index - 3]
            }
            get end() {
                return this.buffer[this.index - 2]
            }
            get size() {
                return this.buffer[this.index - 1]
            }
            next() {
                this.index -= 4,
                this.pos -= 4,
                0 == this.index && this.maybeNext()
            }
            fork() {
                return new f(this.stack,this.pos,this.index)
            }
        }
        function h(e, t=Uint16Array) {
            if ("string" != typeof e)
                return e;
            let O = null;
            for (let n = 0, r = 0; n < e.length; ) {
                let i = 0;
                for (; ; ) {
                    let t = e.charCodeAt(n++)
                      , O = !1;
                    if (126 == t) {
                        i = 65535;
                        break
                    }
                    t >= 92 && t--,
                    t >= 34 && t--;
                    let r = t - 32;
                    if (r >= 46 && (r -= 46,
                    O = !0),
                    i += r,
                    O)
                        break;
                    i *= 46
                }
                O ? O[r++] = i : O = new t(i)
            }
            return O
        }
        class m {
            constructor() {
                this.start = -1,
                this.value = -1,
                this.end = -1,
                this.extended = -1,
                this.lookAhead = 0,
                this.mask = 0,
                this.context = 0
            }
        }
        let Q = new m;
        class $ {
            constructor(e, t) {
                this.input = e,
                this.ranges = t,
                this.chunk = "",
                this.chunkOff = 0,
                this.chunk2 = "",
                this.chunk2Pos = 0,
                this.next = -1,
                this.token = Q,
                this.rangeIndex = 0,
                this.pos = this.chunkPos = t[0].from,
                this.range = t[0],
                this.end = t[t.length - 1].to,
                this.readNext()
            }
            resolveOffset(e, t) {
                let O = this.range
                  , n = this.rangeIndex
                  , r = this.pos + e;
                for (; r < O.from; ) {
                    if (!n)
                        return null;
                    let e = this.ranges[--n];
                    r -= O.from - e.to,
                    O = e
                }
                for (; t < 0 ? r > O.to : r >= O.to; ) {
                    if (n == this.ranges.length - 1)
                        return null;
                    let e = this.ranges[++n];
                    r += e.from - O.to,
                    O = e
                }
                return r
            }
            clipPos(e) {
                if (e >= this.range.from && e < this.range.to)
                    return e;
                for (let t of this.ranges)
                    if (t.to > e)
                        return Math.max(e, t.from);
                return this.end
            }
            peek(e) {
                let t = this.chunkOff + e, O, n;
                if (t >= 0 && t < this.chunk.length)
                    O = this.pos + e,
                    n = this.chunk.charCodeAt(t);
                else {
                    let t = this.resolveOffset(e, 1);
                    if (null == t)
                        return -1;
                    if ((O = t) >= this.chunk2Pos && O < this.chunk2Pos + this.chunk2.length)
                        n = this.chunk2.charCodeAt(O - this.chunk2Pos);
                    else {
                        let e = this.rangeIndex
                          , t = this.range;
                        for (; t.to <= O; )
                            t = this.ranges[++e];
                        this.chunk2 = this.input.chunk(this.chunk2Pos = O),
                        O + this.chunk2.length > t.to && (this.chunk2 = this.chunk2.slice(0, t.to - O)),
                        n = this.chunk2.charCodeAt(0)
                    }
                }
                return O >= this.token.lookAhead && (this.token.lookAhead = O + 1),
                n
            }
            acceptToken(e, t=0) {
                let O = t ? this.resolveOffset(t, -1) : this.pos;
                if (null == O || O < this.token.start)
                    throw RangeError("Token end out of bounds");
                this.token.value = e,
                this.token.end = O
            }
            getChunk() {
                if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {
                    let {chunk: e, chunkPos: t} = this;
                    this.chunk = this.chunk2,
                    this.chunkPos = this.chunk2Pos,
                    this.chunk2 = e,
                    this.chunk2Pos = t,
                    this.chunkOff = this.pos - this.chunkPos
                } else {
                    this.chunk2 = this.chunk,
                    this.chunk2Pos = this.chunkPos;
                    let e = this.input.chunk(this.pos)
                      , t = this.pos + e.length;
                    this.chunk = t > this.range.to ? e.slice(0, this.range.to - this.pos) : e,
                    this.chunkPos = this.pos,
                    this.chunkOff = 0
                }
            }
            readNext() {
                return this.chunkOff >= this.chunk.length && (this.getChunk(),
                this.chunkOff == this.chunk.length) ? this.next = -1 : this.next = this.chunk.charCodeAt(this.chunkOff)
            }
            advance(e=1) {
                for (this.chunkOff += e; this.pos + e >= this.range.to; ) {
                    if (this.rangeIndex == this.ranges.length - 1)
                        return this.setDone();
                    e -= this.range.to - this.pos,
                    this.range = this.ranges[++this.rangeIndex],
                    this.pos = this.range.from
                }
                return this.pos += e,
                this.pos >= this.token.lookAhead && (this.token.lookAhead = this.pos + 1),
                this.readNext()
            }
            setDone() {
                return this.pos = this.chunkPos = this.end,
                this.range = this.ranges[this.rangeIndex = this.ranges.length - 1],
                this.chunk = "",
                this.next = -1
            }
            reset(e, t) {
                if (t ? (this.token = t,
                t.start = e,
                t.lookAhead = e + 1,
                t.value = t.extended = -1) : this.token = Q,
                this.pos != e) {
                    if (this.pos = e,
                    e == this.end)
                        return this.setDone(),
                        this;
                    for (; e < this.range.from; )
                        this.range = this.ranges[--this.rangeIndex];
                    for (; e >= this.range.to; )
                        this.range = this.ranges[++this.rangeIndex];
                    e >= this.chunkPos && e < this.chunkPos + this.chunk.length ? this.chunkOff = e - this.chunkPos : (this.chunk = "",
                    this.chunkOff = 0),
                    this.readNext()
                }
                return this
            }
            read(e, t) {
                if (e >= this.chunkPos && t <= this.chunkPos + this.chunk.length)
                    return this.chunk.slice(e - this.chunkPos, t - this.chunkPos);
                if (e >= this.chunk2Pos && t <= this.chunk2Pos + this.chunk2.length)
                    return this.chunk2.slice(e - this.chunk2Pos, t - this.chunk2Pos);
                if (e >= this.range.from && t <= this.range.to)
                    return this.input.read(e, t);
                let O = "";
                for (let n of this.ranges) {
                    if (n.from >= t)
                        break;
                    n.to > e && (O += this.input.read(Math.max(n.from, e), Math.min(n.to, t)))
                }
                return O
            }
        }
        class g {
            constructor(e, t) {
                this.data = e,
                this.id = t
            }
            token(e, t) {
                let {parser: O} = t.p;
                b(this.data, e, t, this.id, O.data, O.tokenPrecTable)
            }
        }
        g.prototype.contextual = g.prototype.fallback = g.prototype.extend = !1;
        class P {
            constructor(e, t, O) {
                this.precTable = t,
                this.elseToken = O,
                this.data = "string" == typeof e ? h(e) : e
            }
            token(e, t) {
                let O = e.pos
                  , n = 0;
                for (; b(this.data, e, t, 0, this.data, this.precTable),
                !(e.token.value > -1); ) {
                    if (null == this.elseToken)
                        return;
                    if (e.next < 0)
                        break;
                    e.advance(),
                    e.reset(e.pos, e.token),
                    n++
                }
                n && (e.reset(O, e.token),
                e.acceptToken(this.elseToken, n))
            }
        }
        P.prototype.contextual = g.prototype.fallback = g.prototype.extend = !1;
        class S {
            constructor(e, t={}) {
                this.token = e,
                this.contextual = !!t.contextual,
                this.fallback = !!t.fallback,
                this.extend = !!t.extend
            }
        }
        function b(e, t, O, n, r, i) {
            let a = 0
              , o = 1 << n
              , {dialect: s} = O.p.parser;
            i: for (; (o & e[a]) != 0; ) {
                let O = e[a + 1];
                for (let n = a + 3; n < O; n += 2)
                    if ((e[n + 1] & o) > 0) {
                        let O = e[n];
                        if (s.allows(O) && (-1 == t.token.value || t.token.value == O || function(e, t, O, n) {
                            let r = y(O, n, t);
                            return r < 0 || y(O, n, e) < r
                        }(O, t.token.value, r, i))) {
                            t.acceptToken(O);
                            break
                        }
                    }
                let n = t.next
                  , l = 0
                  , c = e[a + 2];
                if (t.next < 0 && c > l && 65535 == e[O + 3 * c - 3] && 65535 == e[O + 3 * c - 3]) {
                    a = e[O + 3 * c - 1];
                    continue i
                }
                for (; l < c; ) {
                    let r = l + c >> 1
                      , i = O + r + (r << 1)
                      , o = e[i]
                      , s = e[i + 1] || 65536;
                    if (n < o)
                        c = r;
                    else if (n >= s)
                        l = r + 1;
                    else {
                        a = e[i + 2],
                        t.advance();
                        continue i
                    }
                }
                break
            }
        }
        function y(e, t, O) {
            for (let n = t, r; 65535 != (r = e[n]); n++)
                if (r == O)
                    return n - t;
            return -1
        }
        let x = void 0 !== c && c.env && /\bparse\b/.test(c.env.LOG)
          , X = null;
        function v(e, t, O) {
            let n = e.cursor(l.vj.IncludeAnonymous);
            for (n.moveTo(t); ; )
                if (!(O < 0 ? n.childBefore(t) : n.childAfter(t)))
                    for (; ; ) {
                        if ((O < 0 ? n.to < t : n.from > t) && !n.type.isError)
                            return O < 0 ? Math.max(0, Math.min(n.to - 1, t - 25)) : Math.min(e.length, Math.max(n.from + 1, t + 25));
                        if (O < 0 ? n.prevSibling() : n.nextSibling())
                            break;
                        if (!n.parent())
                            return O < 0 ? 0 : e.length
                    }
        }
        (r = o || (o = {}))[r.Margin = 25] = "Margin";
        class k {
            constructor(e, t) {
                this.fragments = e,
                this.nodeSet = t,
                this.i = 0,
                this.fragment = null,
                this.safeFrom = -1,
                this.safeTo = -1,
                this.trees = [],
                this.start = [],
                this.index = [],
                this.nextFragment()
            }
            nextFragment() {
                let e = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];
                if (e) {
                    for (this.safeFrom = e.openStart ? v(e.tree, e.from + e.offset, 1) - e.offset : e.from,
                    this.safeTo = e.openEnd ? v(e.tree, e.to + e.offset, -1) - e.offset : e.to; this.trees.length; )
                        this.trees.pop(),
                        this.start.pop(),
                        this.index.pop();
                    this.trees.push(e.tree),
                    this.start.push(-e.offset),
                    this.index.push(0),
                    this.nextStart = this.safeFrom
                } else
                    this.nextStart = 1e9
            }
            nodeAt(e) {
                if (e < this.nextStart)
                    return null;
                for (; this.fragment && this.safeTo <= e; )
                    this.nextFragment();
                if (!this.fragment)
                    return null;
                for (; ; ) {
                    let t = this.trees.length - 1;
                    if (t < 0)
                        return this.nextFragment(),
                        null;
                    let O = this.trees[t]
                      , n = this.index[t];
                    if (n == O.children.length) {
                        this.trees.pop(),
                        this.start.pop(),
                        this.index.pop();
                        continue
                    }
                    let r = O.children[n]
                      , i = this.start[t] + O.positions[n];
                    if (i > e)
                        return this.nextStart = i,
                        null;
                    if (r instanceof l.mp) {
                        if (i == e) {
                            if (i < this.safeFrom)
                                return null;
                            let e = i + r.length;
                            if (e <= this.safeTo) {
                                let t = r.prop(l.md.lookAhead);
                                if (!t || e + t < this.fragment.to)
                                    return r
                            }
                        }
                        this.index[t]++,
                        i + r.length >= Math.max(this.safeFrom, e) && (this.trees.push(r),
                        this.start.push(i),
                        this.index.push(0))
                    } else
                        this.index[t]++,
                        this.nextStart = i + r.length
                }
            }
        }
        class w {
            constructor(e, t) {
                this.stream = t,
                this.tokens = [],
                this.mainToken = null,
                this.actions = [],
                this.tokens = e.tokenizers.map(e=>new m)
            }
            getActions(e) {
                let t = 0
                  , O = null
                  , {parser: n} = e.p
                  , {tokenizers: r} = n
                  , i = n.stateSlot(e.state, 3)
                  , a = e.curContext ? e.curContext.hash : 0
                  , o = 0;
                for (let n = 0; n < r.length; n++) {
                    if ((1 << n & i) == 0)
                        continue;
                    let s = r[n]
                      , l = this.tokens[n];
                    if ((!O || s.fallback) && ((s.contextual || l.start != e.pos || l.mask != i || l.context != a) && (this.updateCachedToken(l, s, e),
                    l.mask = i,
                    l.context = a),
                    l.lookAhead > l.end + 25 && (o = Math.max(l.lookAhead, o)),
                    0 != l.value)) {
                        let n = t;
                        if (l.extended > -1 && (t = this.addActions(e, l.extended, l.end, t)),
                        t = this.addActions(e, l.value, l.end, t),
                        !s.extend && (O = l,
                        t > n))
                            break
                    }
                }
                for (; this.actions.length > t; )
                    this.actions.pop();
                return o && e.setLookAhead(o),
                O || e.pos != this.stream.end || ((O = new m).value = e.p.parser.eofTerm,
                O.start = O.end = e.pos,
                t = this.addActions(e, O.value, O.end, t)),
                this.mainToken = O,
                this.actions
            }
            getMainToken(e) {
                if (this.mainToken)
                    return this.mainToken;
                let t = new m
                  , {pos: O, p: n} = e;
                return t.start = O,
                t.end = Math.min(O + 1, n.stream.end),
                t.value = O == n.stream.end ? n.parser.eofTerm : 0,
                t
            }
            updateCachedToken(e, t, O) {
                let n = this.stream.clipPos(O.pos);
                if (t.token(this.stream.reset(n, e), O),
                e.value > -1) {
                    let {parser: t} = O.p;
                    for (let n = 0; n < t.specialized.length; n++)
                        if (t.specialized[n] == e.value) {
                            let r = t.specializers[n](this.stream.read(e.start, e.end), O);
                            if (r >= 0 && O.p.parser.dialect.allows(r >> 1)) {
                                (1 & r) == 0 ? e.value = r >> 1 : e.extended = r >> 1;
                                break
                            }
                        }
                } else
                    e.value = 0,
                    e.end = this.stream.clipPos(n + 1)
            }
            putAction(e, t, O, n) {
                for (let t = 0; t < n; t += 3)
                    if (this.actions[t] == e)
                        return n;
                return this.actions[n++] = e,
                this.actions[n++] = t,
                this.actions[n++] = O,
                n
            }
            addActions(e, t, O, n) {
                let {state: r} = e
                  , {parser: i} = e.p
                  , {data: a} = i;
                for (let e = 0; e < 2; e++)
                    for (let o = i.stateSlot(r, e ? 2 : 1); ; o += 3) {
                        if (65535 == a[o]) {
                            if (1 == a[o + 1])
                                o = Y(a, o + 2);
                            else {
                                0 == n && 2 == a[o + 1] && (n = this.putAction(Y(a, o + 2), t, O, n));
                                break
                            }
                        }
                        a[o] == t && (n = this.putAction(Y(a, o + 1), t, O, n))
                    }
                return n
            }
        }
        (i = s || (s = {}))[i.Distance = 5] = "Distance",
        i[i.MaxRemainingPerStep = 3] = "MaxRemainingPerStep",
        i[i.MinBufferLengthPrune = 500] = "MinBufferLengthPrune",
        i[i.ForceReduceLimit = 10] = "ForceReduceLimit",
        i[i.CutDepth = 15e3] = "CutDepth",
        i[i.CutTo = 9e3] = "CutTo",
        i[i.MaxLeftAssociativeReductionCount = 300] = "MaxLeftAssociativeReductionCount",
        i[i.MaxStackCount = 12] = "MaxStackCount";
        class T {
            constructor(e, t, O, n) {
                this.parser = e,
                this.input = t,
                this.ranges = n,
                this.recovering = 0,
                this.nextStackID = 9812,
                this.minStackPos = 0,
                this.reused = [],
                this.stoppedAt = null,
                this.lastBigReductionStart = -1,
                this.lastBigReductionSize = 0,
                this.bigReductionCount = 0,
                this.stream = new $(t,n),
                this.tokens = new w(e,this.stream),
                this.topTerm = e.top[1];
                let {from: r} = n[0];
                this.stacks = [u.start(this, e.top[0], r)],
                this.fragments = O.length && this.stream.end - r > 4 * e.bufferLength ? new k(O,e.nodeSet) : null
            }
            get parsedPos() {
                return this.minStackPos
            }
            advance() {
                let e, t, O = this.stacks, n = this.minStackPos, r = this.stacks = [];
                if (this.bigReductionCount > 300 && 1 == O.length) {
                    let[e] = O;
                    for (; e.forceReduce() && e.stack.length && e.stack[e.stack.length - 2] >= this.lastBigReductionStart; )
                        ;
                    this.bigReductionCount = this.lastBigReductionSize = 0
                }
                for (let i = 0; i < O.length; i++) {
                    let a = O[i];
                    for (; ; ) {
                        if (this.tokens.mainToken = null,
                        a.pos > n)
                            r.push(a);
                        else {
                            if (this.advanceStack(a, r, O))
                                continue;
                            e || (e = [],
                            t = []),
                            e.push(a);
                            let n = this.tokens.getMainToken(a);
                            t.push(n.value, n.end)
                        }
                        break
                    }
                }
                if (!r.length) {
                    let t = e && function(e) {
                        let t = null;
                        for (let O of e) {
                            let e = O.p.stoppedAt;
                            (O.pos == O.p.stream.end || null != e && O.pos > e) && O.p.parser.stateFlag(O.state, 2) && (!t || t.score < O.score) && (t = O)
                        }
                        return t
                    }(e);
                    if (t)
                        return this.stackToTree(t);
                    if (this.parser.strict)
                        throw x && e && console.log("Stuck with token " + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : "none")),
                        SyntaxError("No parse at " + n);
                    this.recovering || (this.recovering = 5)
                }
                if (this.recovering && e) {
                    let O = null != this.stoppedAt && e[0].pos > this.stoppedAt ? e[0] : this.runRecovery(e, t, r);
                    if (O)
                        return this.stackToTree(O.forceAll())
                }
                if (this.recovering) {
                    let e = 1 == this.recovering ? 1 : 3 * this.recovering;
                    if (r.length > e)
                        for (r.sort((e,t)=>t.score - e.score); r.length > e; )
                            r.pop();
                    r.some(e=>e.reducePos > n) && this.recovering--
                } else if (r.length > 1) {
                    n: for (let e = 0; e < r.length - 1; e++) {
                        let t = r[e];
                        for (let O = e + 1; O < r.length; O++) {
                            let n = r[O];
                            if (t.sameState(n) || t.buffer.length > 500 && n.buffer.length > 500) {
                                if ((t.score - n.score || t.buffer.length - n.buffer.length) > 0)
                                    r.splice(O--, 1);
                                else {
                                    r.splice(e--, 1);
                                    continue n
                                }
                            }
                        }
                    }
                    r.length > 12 && r.splice(12, r.length - 12)
                }
                this.minStackPos = r[0].pos;
                for (let e = 1; e < r.length; e++)
                    r[e].pos < this.minStackPos && (this.minStackPos = r[e].pos);
                return null
            }
            stopAt(e) {
                if (null != this.stoppedAt && this.stoppedAt < e)
                    throw RangeError("Can't move stoppedAt forward");
                this.stoppedAt = e
            }
            advanceStack(e, t, O) {
                let n = e.pos
                  , {parser: r} = this
                  , i = x ? this.stackID(e) + " -> " : "";
                if (null != this.stoppedAt && n > this.stoppedAt)
                    return e.forceReduce() ? e : null;
                if (this.fragments) {
                    let t = e.curContext && e.curContext.tracker.strict
                      , O = t ? e.curContext.hash : 0;
                    for (let a = this.fragments.nodeAt(n); a; ) {
                        let n = this.parser.nodeSet.types[a.type.id] == a.type ? r.getGoto(e.state, a.type.id) : -1;
                        if (n > -1 && a.length && (!t || (a.prop(l.md.contextHash) || 0) == O))
                            return e.useNode(a, n),
                            x && console.log(i + this.stackID(e) + ` (via reuse of ${r.getName(a.type.id)})`),
                            !0;
                        if (!(a instanceof l.mp) || 0 == a.children.length || a.positions[0] > 0)
                            break;
                        let o = a.children[0];
                        if (o instanceof l.mp && 0 == a.positions[0])
                            a = o;
                        else
                            break
                    }
                }
                let a = r.stateSlot(e.state, 4);
                if (a > 0)
                    return e.reduce(a),
                    x && console.log(i + this.stackID(e) + ` (via always-reduce ${r.getName(65535 & a)})`),
                    !0;
                if (e.stack.length >= 15e3)
                    for (; e.stack.length > 9e3 && e.forceReduce(); )
                        ;
                let o = this.tokens.getActions(e);
                for (let a = 0; a < o.length; ) {
                    let s = o[a++]
                      , l = o[a++]
                      , c = o[a++]
                      , u = a == o.length || !O
                      , p = u ? e : e.split();
                    if (p.apply(s, l, c),
                    x && console.log(i + this.stackID(p) + ` (via ${(65536 & s) == 0 ? "shift" : `reduce of ${r.getName(65535 & s)}`} for ${r.getName(l)} @ ${n}${p == e ? "" : ", split"})`),
                    u)
                        return !0;
                    p.pos > n ? t.push(p) : O.push(p)
                }
                return !1
            }
            advanceFully(e, t) {
                let O = e.pos;
                for (; ; ) {
                    if (!this.advanceStack(e, null, null))
                        return !1;
                    if (e.pos > O)
                        return _(e, t),
                        !0
                }
            }
            runRecovery(e, t, O) {
                let n = null
                  , r = !1;
                for (let i = 0; i < e.length; i++) {
                    let a = e[i]
                      , o = t[i << 1]
                      , s = t[(i << 1) + 1]
                      , l = x ? this.stackID(a) + " -> " : "";
                    if (a.deadEnd && (r || (r = !0,
                    a.restart(),
                    x && console.log(l + this.stackID(a) + " (restarted)"),
                    this.advanceFully(a, O))))
                        continue;
                    let c = a.split()
                      , u = l;
                    for (let e = 0; c.forceReduce() && e < 10 && (x && console.log(u + this.stackID(c) + " (via force-reduce)"),
                    !this.advanceFully(c, O)); e++)
                        x && (u = this.stackID(c) + " -> ");
                    for (let e of a.recoverByInsert(o))
                        x && console.log(l + this.stackID(e) + " (via recover-insert)"),
                        this.advanceFully(e, O);
                    this.stream.end > a.pos ? (s == a.pos && (s++,
                    o = 0),
                    a.recoverByDelete(o, s),
                    x && console.log(l + this.stackID(a) + ` (via recover-delete ${this.parser.getName(o)})`),
                    _(a, O)) : (!n || n.score < a.score) && (n = a)
                }
                return n
            }
            stackToTree(e) {
                return e.close(),
                l.mp.build({
                    buffer: f.create(e),
                    nodeSet: this.parser.nodeSet,
                    topID: this.topTerm,
                    maxBufferLength: this.parser.bufferLength,
                    reused: this.reused,
                    start: this.ranges[0].from,
                    length: e.pos - this.ranges[0].from,
                    minRepeatType: this.parser.minRepeatTerm
                })
            }
            stackID(e) {
                let t = (X || (X = new WeakMap)).get(e);
                return t || X.set(e, t = String.fromCodePoint(this.nextStackID++)),
                t + e
            }
        }
        function _(e, t) {
            for (let O = 0; O < t.length; O++) {
                let n = t[O];
                if (n.pos == e.pos && n.sameState(e)) {
                    t[O].score < e.score && (t[O] = e);
                    return
                }
            }
            t.push(e)
        }
        class W {
            constructor(e, t, O) {
                this.source = e,
                this.flags = t,
                this.disabled = O
            }
            allows(e) {
                return !this.disabled || 0 == this.disabled[e]
            }
        }
        let Z = e=>e;
        class z {
            constructor(e) {
                this.start = e.start,
                this.shift = e.shift || Z,
                this.reduce = e.reduce || Z,
                this.reuse = e.reuse || Z,
                this.hash = e.hash || (()=>0),
                this.strict = !1 !== e.strict
            }
        }
        class q extends l._b {
            constructor(e) {
                if (super(),
                this.wrappers = [],
                14 != e.version)
                    throw RangeError(`Parser version (${e.version}) doesn't match runtime version (14)`);
                let t = e.nodeNames.split(" ");
                this.minRepeatTerm = t.length;
                for (let O = 0; O < e.repeatNodeCount; O++)
                    t.push("");
                let O = Object.keys(e.topRules).map(t=>e.topRules[t][1])
                  , n = [];
                for (let e = 0; e < t.length; e++)
                    n.push([]);
                function r(e, t, O) {
                    n[e].push([t, t.deserialize(String(O))])
                }
                if (e.nodeProps)
                    for (let t of e.nodeProps) {
                        let e = t[0];
                        "string" == typeof e && (e = l.md[e]);
                        for (let O = 1; O < t.length; ) {
                            let n = t[O++];
                            if (n >= 0)
                                r(n, e, t[O++]);
                            else {
                                let i = t[O + -n];
                                for (let a = -n; a > 0; a--)
                                    r(t[O++], e, i);
                                O++
                            }
                        }
                    }
                this.nodeSet = new l.Lj(t.map((t,r)=>l.Jq.define({
                    name: r >= this.minRepeatTerm ? void 0 : t,
                    id: r,
                    props: n[r],
                    top: O.indexOf(r) > -1,
                    error: 0 == r,
                    skipped: e.skippedNodes && e.skippedNodes.indexOf(r) > -1
                }))),
                e.propSources && (this.nodeSet = this.nodeSet.extend(...e.propSources)),
                this.strict = !1,
                this.bufferLength = l.L3;
                let i = h(e.tokenData);
                this.context = e.context,
                this.specializerSpecs = e.specialized || [],
                this.specialized = new Uint16Array(this.specializerSpecs.length);
                for (let e = 0; e < this.specializerSpecs.length; e++)
                    this.specialized[e] = this.specializerSpecs[e].term;
                this.specializers = this.specializerSpecs.map(R),
                this.states = h(e.states, Uint32Array),
                this.data = h(e.stateData),
                this.goto = h(e.goto),
                this.maxTerm = e.maxTerm,
                this.tokenizers = e.tokenizers.map(e=>"number" == typeof e ? new g(i,e) : e),
                this.topRules = e.topRules,
                this.dialects = e.dialects || {},
                this.dynamicPrecedences = e.dynamicPrecedences || null,
                this.tokenPrecTable = e.tokenPrec,
                this.termNames = e.termNames || null,
                this.maxNode = this.nodeSet.types.length - 1,
                this.dialect = this.parseDialect(),
                this.top = this.topRules[Object.keys(this.topRules)[0]]
            }
            createParse(e, t, O) {
                let n = new T(this,e,t,O);
                for (let r of this.wrappers)
                    n = r(n, e, t, O);
                return n
            }
            getGoto(e, t, O=!1) {
                let n = this.goto;
                if (t >= n[0])
                    return -1;
                for (let r = n[t + 1]; ; ) {
                    let t = n[r++]
                      , i = 1 & t
                      , a = n[r++];
                    if (i && O)
                        return a;
                    for (let O = r + (t >> 1); r < O; r++)
                        if (n[r] == e)
                            return a;
                    if (i)
                        return -1
                }
            }
            hasAction(e, t) {
                let O = this.data;
                for (let n = 0; n < 2; n++)
                    for (let r = this.stateSlot(e, n ? 2 : 1), i; ; r += 3) {
                        if (65535 == (i = O[r])) {
                            if (1 == O[r + 1])
                                i = O[r = Y(O, r + 2)];
                            else if (2 == O[r + 1])
                                return Y(O, r + 2);
                            else
                                break
                        }
                        if (i == t || 0 == i)
                            return Y(O, r + 1)
                    }
                return 0
            }
            stateSlot(e, t) {
                return this.states[6 * e + t]
            }
            stateFlag(e, t) {
                return (this.stateSlot(e, 0) & t) > 0
            }
            validAction(e, t) {
                if (t == this.stateSlot(e, 4))
                    return !0;
                for (let O = this.stateSlot(e, 1); ; O += 3) {
                    if (65535 == this.data[O]) {
                        if (1 != this.data[O + 1])
                            return !1;
                        O = Y(this.data, O + 2)
                    }
                    if (t == Y(this.data, O + 1))
                        return !0
                }
            }
            nextStates(e) {
                let t = [];
                for (let O = this.stateSlot(e, 1); ; O += 3) {
                    if (65535 == this.data[O]) {
                        if (1 == this.data[O + 1])
                            O = Y(this.data, O + 2);
                        else
                            break
                    }
                    if ((1 & this.data[O + 2]) == 0) {
                        let e = this.data[O + 1];
                        t.some((t,O)=>1 & O && t == e) || t.push(this.data[O], e)
                    }
                }
                return t
            }
            configure(e) {
                let t = Object.assign(Object.create(q.prototype), this);
                if (e.props && (t.nodeSet = this.nodeSet.extend(...e.props)),
                e.top) {
                    let O = this.topRules[e.top];
                    if (!O)
                        throw RangeError(`Invalid top rule name ${e.top}`);
                    t.top = O
                }
                return e.tokenizers && (t.tokenizers = this.tokenizers.map(t=>{
                    let O = e.tokenizers.find(e=>e.from == t);
                    return O ? O.to : t
                }
                )),
                e.specializers && (t.specializers = this.specializers.slice(),
                t.specializerSpecs = this.specializerSpecs.map((O,n)=>{
                    let r = e.specializers.find(e=>e.from == O.external);
                    if (!r)
                        return O;
                    let i = Object.assign(Object.assign({}, O), {
                        external: r.to
                    });
                    return t.specializers[n] = R(i),
                    i
                }
                )),
                e.contextTracker && (t.context = e.contextTracker),
                e.dialect && (t.dialect = this.parseDialect(e.dialect)),
                null != e.strict && (t.strict = e.strict),
                e.wrap && (t.wrappers = t.wrappers.concat(e.wrap)),
                null != e.bufferLength && (t.bufferLength = e.bufferLength),
                t
            }
            hasWrappers() {
                return this.wrappers.length > 0
            }
            getName(e) {
                return this.termNames ? this.termNames[e] : String(e <= this.maxNode && this.nodeSet.types[e].name || e)
            }
            get eofTerm() {
                return this.maxNode + 1
            }
            get topNode() {
                return this.nodeSet.types[this.top[1]]
            }
            dynamicPrecedence(e) {
                let t = this.dynamicPrecedences;
                return null == t ? 0 : t[e] || 0
            }
            parseDialect(e) {
                let t = Object.keys(this.dialects)
                  , O = t.map(()=>!1);
                if (e)
                    for (let n of e.split(" ")) {
                        let e = t.indexOf(n);
                        e >= 0 && (O[e] = !0)
                    }
                let n = null;
                for (let e = 0; e < t.length; e++)
                    if (!O[e])
                        for (let O = this.dialects[t[e]], r; 65535 != (r = this.data[O++]); )
                            (n || (n = new Uint8Array(this.maxTerm + 1)))[r] = 1;
                return new W(e,O,n)
            }
            static deserialize(e) {
                return new q(e)
            }
        }
        function Y(e, t) {
            return e[t] | e[t + 1] << 16
        }
        function R(e) {
            if (e.external) {
                let t = e.extend ? 1 : 0;
                return (O,n)=>e.external(O, n) << 1 | t
            }
            return e.get
        }
    },
    5227: function(e, t, O) {
        "use strict";
        O.d(t, {
            V: function() {
                return a
            }
        });
        let n = "undefined" == typeof Symbol ? "__ͼ" : Symbol.for("ͼ")
          , r = "undefined" == typeof Symbol ? "__styleSet" + Math.floor(1e8 * Math.random()) : Symbol("styleSet")
          , i = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : {};
        class a {
            constructor(e, t) {
                this.rules = [];
                let {finish: O} = t || {};
                function n(e) {
                    return /^@/.test(e) ? [e] : e.split(/,\s*/)
                }
                for (let t in e)
                    !function e(t, r, i, a) {
                        let o = []
                          , s = /^@(\w+)\b/.exec(t[0])
                          , l = s && "keyframes" == s[1];
                        if (s && null == r)
                            return i.push(t[0] + ";");
                        for (let O in r) {
                            let a = r[O];
                            if (/&/.test(O))
                                e(O.split(/,\s*/).map(e=>t.map(t=>e.replace(/&/, t))).reduce((e,t)=>e.concat(t)), a, i);
                            else if (a && "object" == typeof a) {
                                if (!s)
                                    throw RangeError("The value of a property (" + O + ") should be a primitive value.");
                                e(n(O), a, o, l)
                            } else
                                null != a && o.push(O.replace(/_.*/, "").replace(/[A-Z]/g, e=>"-" + e.toLowerCase()) + ": " + a + ";")
                        }
                        (o.length || l) && i.push((!O || s || a ? t : t.map(O)).join(", ") + " {" + o.join(" ") + "}")
                    }(n(t), e[t], this.rules)
            }
            getRules() {
                return this.rules.join("\n")
            }
            static newName() {
                let e = i[n] || 1;
                return i[n] = e + 1,
                "ͼ" + e.toString(36)
            }
            static mount(e, t) {
                (e[r] || new s(e)).mount(Array.isArray(t) ? t : [t])
            }
        }
        let o = new Map;
        class s {
            constructor(e) {
                let t = e.ownerDocument || e
                  , O = t.defaultView;
                if (!e.head && e.adoptedStyleSheets && O.CSSStyleSheet) {
                    let n = o.get(t);
                    if (n)
                        return e.adoptedStyleSheets = [n.sheet, ...e.adoptedStyleSheets],
                        e[r] = n;
                    this.sheet = new O.CSSStyleSheet,
                    e.adoptedStyleSheets = [this.sheet, ...e.adoptedStyleSheets],
                    o.set(t, this)
                } else {
                    this.styleTag = t.createElement("style");
                    let O = e.head || e;
                    O.insertBefore(this.styleTag, O.firstChild)
                }
                this.modules = [],
                e[r] = this
            }
            mount(e) {
                let t = this.sheet
                  , O = 0
                  , n = 0;
                for (let r = 0; r < e.length; r++) {
                    let i = e[r]
                      , a = this.modules.indexOf(i);
                    if (a < n && a > -1 && (this.modules.splice(a, 1),
                    n--,
                    a = -1),
                    -1 == a) {
                        if (this.modules.splice(n++, 0, i),
                        t)
                            for (let e = 0; e < i.rules.length; e++)
                                t.insertRule(i.rules[e], O++)
                    } else {
                        for (; n < a; )
                            O += this.modules[n++].rules.length;
                        O += i.rules.length,
                        n++
                    }
                }
                if (!t) {
                    let e = "";
                    for (let t = 0; t < this.modules.length; t++)
                        e += this.modules[t].getRules() + "\n";
                    this.styleTag.textContent = e
                }
            }
        }
    },
    9372: function(e, t, O) {
        "use strict";
        O.d(t, {
            YG: function() {
                return u
            },
            uY: function() {
                return r
            },
            ue: function() {
                return n
            }
        });
        var n = {
            8: "Backspace",
            9: "Tab",
            10: "Enter",
            12: "NumLock",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            20: "CapsLock",
            27: "Escape",
            32: " ",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "ArrowLeft",
            38: "ArrowUp",
            39: "ArrowRight",
            40: "ArrowDown",
            44: "PrintScreen",
            45: "Insert",
            46: "Delete",
            59: ";",
            61: "=",
            91: "Meta",
            92: "Meta",
            106: "*",
            107: "+",
            108: ",",
            109: "-",
            110: ".",
            111: "/",
            144: "NumLock",
            145: "ScrollLock",
            160: "Shift",
            161: "Shift",
            162: "Control",
            163: "Control",
            164: "Alt",
            165: "Alt",
            173: "-",
            186: ";",
            187: "=",
            188: ",",
            189: "-",
            190: ".",
            191: "/",
            192: "`",
            219: "[",
            220: "\\",
            221: "]",
            222: "'"
        }
          , r = {
            48: ")",
            49: "!",
            50: "@",
            51: "#",
            52: "$",
            53: "%",
            54: "^",
            55: "&",
            56: "*",
            57: "(",
            59: ":",
            61: "+",
            173: "_",
            186: ":",
            187: "+",
            188: "<",
            189: "_",
            190: ">",
            191: "?",
            192: "~",
            219: "{",
            220: "|",
            221: "}",
            222: '"'
        }
          , i = "undefined" != typeof navigator && /Chrome\/(\d+)/.exec(navigator.userAgent);
        "undefined" != typeof navigator && /Gecko\/\d+/.test(navigator.userAgent);
        for (var a = "undefined" != typeof navigator && /Mac/.test(navigator.platform), o = "undefined" != typeof navigator && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent), s = a || i && 57 > +i[1], l = 0; l < 10; l++)
            n[48 + l] = n[96 + l] = String(l);
        for (var l = 1; l <= 24; l++)
            n[l + 111] = "F" + l;
        for (var l = 65; l <= 90; l++)
            n[l] = String.fromCharCode(l + 32),
            r[l] = String.fromCharCode(l);
        for (var c in n)
            r.hasOwnProperty(c) || (r[c] = n[c]);
        function u(e) {
            var t = !(s && (e.ctrlKey || e.altKey || e.metaKey) || o && e.shiftKey && e.key && 1 == e.key.length || "Unidentified" == e.key) && e.key || (e.shiftKey ? r : n)[e.keyCode] || e.key || "Unidentified";
            return "Esc" == t && (t = "Escape"),
            "Del" == t && (t = "Delete"),
            "Left" == t && (t = "ArrowLeft"),
            "Up" == t && (t = "ArrowUp"),
            "Right" == t && (t = "ArrowRight"),
            "Down" == t && (t = "ArrowDown"),
            t
        }
    }
}]);
